<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="630" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="613.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="613.00"> </text><svg id="frames" x="10" width="1180"><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (177 samples, 0.11%)</title><rect x="0.1083%" y="373" width="0.1134%" height="15" fill="rgb(227,0,7)"/><text x="0.3583%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (170 samples, 0.11%)</title><rect x="0.1128%" y="357" width="0.1090%" height="15" fill="rgb(217,0,24)"/><text x="0.3628%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (44 samples, 0.03%)</title><rect x="0.1936%" y="341" width="0.0282%" height="15" fill="rgb(221,193,54)"/><text x="0.4436%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (190 samples, 0.12%)</title><rect x="0.1025%" y="389" width="0.1218%" height="15" fill="rgb(248,212,6)"/><text x="0.3525%" y="399.50"></text></g><g><title>group-b073d76844680b0b`&lt;T as openmls::extensions::ExtensionHelper&gt;::clone_it (242 samples, 0.16%)</title><rect x="0.0833%" y="405" width="0.1551%" height="15" fill="rgb(208,68,35)"/><text x="0.3333%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (20 samples, 0.01%)</title><rect x="0.2256%" y="389" width="0.0128%" height="15" fill="rgb(232,128,0)"/><text x="0.4756%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (29 samples, 0.02%)</title><rect x="0.2448%" y="405" width="0.0186%" height="15" fill="rgb(207,160,47)"/><text x="0.4948%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (27 samples, 0.02%)</title><rect x="0.2461%" y="389" width="0.0173%" height="15" fill="rgb(228,23,34)"/><text x="0.4961%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (25 samples, 0.02%)</title><rect x="0.2474%" y="373" width="0.0160%" height="15" fill="rgb(218,30,26)"/><text x="0.4974%" y="383.50"></text></g><g><title>group-b073d76844680b0b`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (287 samples, 0.18%)</title><rect x="0.0814%" y="421" width="0.1839%" height="15" fill="rgb(220,122,19)"/><text x="0.3314%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (24 samples, 0.02%)</title><rect x="0.3628%" y="373" width="0.0154%" height="15" fill="rgb(250,228,42)"/><text x="0.6128%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (189 samples, 0.12%)</title><rect x="0.2762%" y="405" width="0.1211%" height="15" fill="rgb(240,193,28)"/><text x="0.5262%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (183 samples, 0.12%)</title><rect x="0.2801%" y="389" width="0.1173%" height="15" fill="rgb(216,20,37)"/><text x="0.5301%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (30 samples, 0.02%)</title><rect x="0.3781%" y="373" width="0.0192%" height="15" fill="rgb(206,188,39)"/><text x="0.6281%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (209 samples, 0.13%)</title><rect x="0.2666%" y="421" width="0.1340%" height="15" fill="rgb(217,207,13)"/><text x="0.5166%" y="431.50"></text></g><g><title>group-b073d76844680b0b`&lt;openmls::key_packages::KeyPackage as core::clone::Clone&gt;::clone (578 samples, 0.37%)</title><rect x="0.0628%" y="437" width="0.3705%" height="15" fill="rgb(231,73,38)"/><text x="0.3128%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (45 samples, 0.03%)</title><rect x="0.4044%" y="421" width="0.0288%" height="15" fill="rgb(225,20,46)"/><text x="0.6544%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (24 samples, 0.02%)</title><rect x="0.4865%" y="389" width="0.0154%" height="15" fill="rgb(210,31,41)"/><text x="0.7365%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (142 samples, 0.09%)</title><rect x="0.4339%" y="437" width="0.0910%" height="15" fill="rgb(221,200,47)"/><text x="0.6839%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (139 samples, 0.09%)</title><rect x="0.4358%" y="421" width="0.0891%" height="15" fill="rgb(226,26,5)"/><text x="0.6858%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (131 samples, 0.08%)</title><rect x="0.4410%" y="405" width="0.0840%" height="15" fill="rgb(249,33,26)"/><text x="0.6910%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (36 samples, 0.02%)</title><rect x="0.5018%" y="389" width="0.0231%" height="15" fill="rgb(235,183,28)"/><text x="0.7518%" y="399.50"></text></g><g><title>group-b073d76844680b0b`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (848 samples, 0.54%)</title><rect x="0.0231%" y="453" width="0.5435%" height="15" fill="rgb(221,5,38)"/><text x="0.2731%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (61 samples, 0.04%)</title><rect x="0.5275%" y="437" width="0.0391%" height="15" fill="rgb(247,18,42)"/><text x="0.7775%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (123 samples, 0.08%)</title><rect x="0.8492%" y="373" width="0.0788%" height="15" fill="rgb(241,131,45)"/><text x="1.0992%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1,033 samples, 0.66%)</title><rect x="0.6319%" y="405" width="0.6621%" height="15" fill="rgb(249,31,29)"/><text x="0.8819%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1,000 samples, 0.64%)</title><rect x="0.6531%" y="389" width="0.6409%" height="15" fill="rgb(225,111,53)"/><text x="0.9031%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (571 samples, 0.37%)</title><rect x="0.9281%" y="373" width="0.3660%" height="15" fill="rgb(238,160,17)"/><text x="1.1781%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (98 samples, 0.06%)</title><rect x="1.2312%" y="357" width="0.0628%" height="15" fill="rgb(214,148,48)"/><text x="1.4812%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,068 samples, 0.68%)</title><rect x="0.6153%" y="421" width="0.6845%" height="15" fill="rgb(232,36,49)"/><text x="0.8653%" y="431.50"></text></g><g><title>group-b073d76844680b0b`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,580 samples, 1.01%)</title><rect x="0.5794%" y="437" width="1.0127%" height="15" fill="rgb(209,103,24)"/><text x="0.8294%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (450 samples, 0.29%)</title><rect x="1.3036%" y="421" width="0.2884%" height="15" fill="rgb(229,88,8)"/><text x="1.5536%" y="431.50"></text></g><g><title>group-b073d76844680b0b`&lt;T as openmls::extensions::ExtensionHelper&gt;::clone_it (19 samples, 0.01%)</title><rect x="1.5965%" y="421" width="0.0122%" height="15" fill="rgb(213,181,19)"/><text x="1.8465%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (61 samples, 0.04%)</title><rect x="1.6234%" y="389" width="0.0391%" height="15" fill="rgb(254,191,54)"/><text x="1.8734%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (59 samples, 0.04%)</title><rect x="1.6247%" y="373" width="0.0378%" height="15" fill="rgb(241,83,37)"/><text x="1.8747%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (59 samples, 0.04%)</title><rect x="1.6247%" y="357" width="0.0378%" height="15" fill="rgb(233,36,39)"/><text x="1.8747%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (43 samples, 0.03%)</title><rect x="1.6350%" y="341" width="0.0276%" height="15" fill="rgb(226,3,54)"/><text x="1.8850%" y="351.50"></text></g><g><title>group-b073d76844680b0b`&lt;T as openmls::extensions::ExtensionHelper&gt;::clone_it (119 samples, 0.08%)</title><rect x="1.6100%" y="405" width="0.0763%" height="15" fill="rgb(245,192,40)"/><text x="1.8600%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (36 samples, 0.02%)</title><rect x="1.6632%" y="389" width="0.0231%" height="15" fill="rgb(238,167,29)"/><text x="1.9132%" y="399.50"></text></g><g><title>group-b073d76844680b0b`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (149 samples, 0.10%)</title><rect x="1.6087%" y="421" width="0.0955%" height="15" fill="rgb(232,182,51)"/><text x="1.8587%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (52 samples, 0.03%)</title><rect x="1.7061%" y="421" width="0.0333%" height="15" fill="rgb(231,60,39)"/><text x="1.9561%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (50 samples, 0.03%)</title><rect x="1.7074%" y="405" width="0.0320%" height="15" fill="rgb(208,69,12)"/><text x="1.9574%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (50 samples, 0.03%)</title><rect x="1.7074%" y="389" width="0.0320%" height="15" fill="rgb(235,93,37)"/><text x="1.9574%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (29 samples, 0.02%)</title><rect x="1.7209%" y="373" width="0.0186%" height="15" fill="rgb(213,116,39)"/><text x="1.9709%" y="383.50"></text></g><g><title>group-b073d76844680b0b`&lt;openmls::key_packages::KeyPackage as core::clone::Clone&gt;::clone (304 samples, 0.19%)</title><rect x="1.5920%" y="437" width="0.1948%" height="15" fill="rgb(222,207,29)"/><text x="1.8420%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (73 samples, 0.05%)</title><rect x="1.7401%" y="421" width="0.0468%" height="15" fill="rgb(206,96,30)"/><text x="1.9901%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (31 samples, 0.02%)</title><rect x="1.7907%" y="437" width="0.0199%" height="15" fill="rgb(218,138,4)"/><text x="2.0407%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (28 samples, 0.02%)</title><rect x="1.7926%" y="421" width="0.0179%" height="15" fill="rgb(250,191,14)"/><text x="2.0426%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (27 samples, 0.02%)</title><rect x="1.7933%" y="405" width="0.0173%" height="15" fill="rgb(239,60,40)"/><text x="2.0433%" y="415.50"></text></g><g><title>group-b073d76844680b0b`&lt;openmls::framing::plaintext::MlsPlaintext as core::clone::Clone&gt;::clone (2,013 samples, 1.29%)</title><rect x="0.5672%" y="453" width="1.2902%" height="15" fill="rgb(206,27,48)"/><text x="0.8172%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (68 samples, 0.04%)</title><rect x="1.8138%" y="437" width="0.0436%" height="15" fill="rgb(225,35,8)"/><text x="2.0638%" y="447.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fmul (45 samples, 0.03%)</title><rect x="1.8926%" y="293" width="0.0288%" height="15" fill="rgb(250,213,24)"/><text x="2.1426%" y="303.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fsqr (23 samples, 0.01%)</title><rect x="1.9298%" y="293" width="0.0147%" height="15" fill="rgb(247,123,22)"/><text x="2.1798%" y="303.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fmul (88 samples, 0.06%)</title><rect x="1.9561%" y="277" width="0.0564%" height="15" fill="rgb(231,138,38)"/><text x="2.2061%" y="287.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Ed25519_Ladder_point_mul (218 samples, 0.14%)</title><rect x="1.8785%" y="309" width="0.1397%" height="15" fill="rgb(231,145,46)"/><text x="2.1285%" y="319.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Ed25519_PointAdd_point_add (109 samples, 0.07%)</title><rect x="1.9484%" y="293" width="0.0699%" height="15" fill="rgb(251,118,11)"/><text x="2.1984%" y="303.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Ed25519_secret_to_public (229 samples, 0.15%)</title><rect x="1.8747%" y="325" width="0.1468%" height="15" fill="rgb(217,147,25)"/><text x="2.1247%" y="335.50"></text></g><g><title>group-b073d76844680b0b`openmls::credentials::CredentialBundle::new (232 samples, 0.15%)</title><rect x="1.8734%" y="373" width="0.1487%" height="15" fill="rgb(247,81,37)"/><text x="2.1234%" y="383.50"></text></g><g><title>group-b073d76844680b0b`openmls::ciphersuite::SignatureScheme::new_keypair (232 samples, 0.15%)</title><rect x="1.8734%" y="357" width="0.1487%" height="15" fill="rgb(209,12,38)"/><text x="2.1234%" y="367.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::signature::key_gen (230 samples, 0.15%)</title><rect x="1.8747%" y="341" width="0.1474%" height="15" fill="rgb(227,1,9)"/><text x="2.1247%" y="351.50"></text></g><g><title>group-b073d76844680b0b`fmul20 (16 samples, 0.01%)</title><rect x="2.0375%" y="229" width="0.0103%" height="15" fill="rgb(248,47,43)"/><text x="2.2875%" y="239.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_51_secret_to_public (43 samples, 0.03%)</title><rect x="2.0279%" y="277" width="0.0276%" height="15" fill="rgb(221,10,30)"/><text x="2.2779%" y="287.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_51_scalarmult (43 samples, 0.03%)</title><rect x="2.0279%" y="261" width="0.0276%" height="15" fill="rgb(210,229,1)"/><text x="2.2779%" y="271.50"></text></g><g><title>group-b073d76844680b0b`point_add_and_double (39 samples, 0.02%)</title><rect x="2.0304%" y="245" width="0.0250%" height="15" fill="rgb(222,148,37)"/><text x="2.2804%" y="255.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_secret_to_public (33 samples, 0.02%)</title><rect x="2.0554%" y="277" width="0.0212%" height="15" fill="rgb(234,67,33)"/><text x="2.3054%" y="287.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_scalarmult (33 samples, 0.02%)</title><rect x="2.0554%" y="261" width="0.0212%" height="15" fill="rgb(247,98,35)"/><text x="2.3054%" y="271.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::dh_kem::DhKem::dh_base (77 samples, 0.05%)</title><rect x="2.0279%" y="309" width="0.0494%" height="15" fill="rgb(247,138,52)"/><text x="2.2779%" y="319.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::ecdh::derive_base (77 samples, 0.05%)</title><rect x="2.0279%" y="293" width="0.0494%" height="15" fill="rgb(213,79,30)"/><text x="2.2779%" y="303.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::Hpke::derive_key_pair (86 samples, 0.06%)</title><rect x="2.0253%" y="341" width="0.0551%" height="15" fill="rgb(246,177,23)"/><text x="2.2753%" y="351.50"></text></g><g><title>group-b073d76844680b0b`&lt;hpke_rs::dh_kem::DhKem as hpke_rs::kem::KemTrait&gt;::derive_key_pair (86 samples, 0.06%)</title><rect x="2.0253%" y="325" width="0.0551%" height="15" fill="rgb(230,62,27)"/><text x="2.2753%" y="335.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fmul (68 samples, 0.04%)</title><rect x="2.1182%" y="261" width="0.0436%" height="15" fill="rgb(216,154,8)"/><text x="2.3682%" y="271.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fsqr (42 samples, 0.03%)</title><rect x="2.1689%" y="261" width="0.0269%" height="15" fill="rgb(244,35,45)"/><text x="2.4189%" y="271.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fmul (171 samples, 0.11%)</title><rect x="2.2092%" y="245" width="0.1096%" height="15" fill="rgb(251,115,12)"/><text x="2.4592%" y="255.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Ed25519_Ladder_point_mul (374 samples, 0.24%)</title><rect x="2.0926%" y="277" width="0.2397%" height="15" fill="rgb(240,54,50)"/><text x="2.3426%" y="287.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Ed25519_PointAdd_point_add (211 samples, 0.14%)</title><rect x="2.1971%" y="261" width="0.1352%" height="15" fill="rgb(233,84,52)"/><text x="2.4471%" y="271.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fsub (21 samples, 0.01%)</title><rect x="2.3188%" y="245" width="0.0135%" height="15" fill="rgb(207,117,47)"/><text x="2.5688%" y="255.50"></text></g><g><title>group-b073d76844680b0b`openmls::ciphersuite::SignaturePrivateKey::sign (399 samples, 0.26%)</title><rect x="2.0849%" y="325" width="0.2557%" height="15" fill="rgb(249,43,39)"/><text x="2.3349%" y="335.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::signature::sign (399 samples, 0.26%)</title><rect x="2.0849%" y="309" width="0.2557%" height="15" fill="rgb(209,38,44)"/><text x="2.3349%" y="319.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Ed25519_sign (399 samples, 0.26%)</title><rect x="2.0849%" y="293" width="0.2557%" height="15" fill="rgb(236,212,23)"/><text x="2.3349%" y="303.50"></text></g><g><title>group-b073d76844680b0b`group::create_users (734 samples, 0.47%)</title><rect x="1.8728%" y="389" width="0.4704%" height="15" fill="rgb(242,79,21)"/><text x="2.1228%" y="399.50"></text></g><g><title>group-b073d76844680b0b`openmls::key_packages::KeyPackageBundle::new (501 samples, 0.32%)</title><rect x="2.0221%" y="373" width="0.3211%" height="15" fill="rgb(211,96,35)"/><text x="2.2721%" y="383.50"></text></g><g><title>group-b073d76844680b0b`openmls::key_packages::KeyPackageBundle::new_with_version (501 samples, 0.32%)</title><rect x="2.0221%" y="357" width="0.3211%" height="15" fill="rgb(253,215,40)"/><text x="2.2721%" y="367.50"></text></g><g><title>group-b073d76844680b0b`openmls::key_packages::KeyPackageBundle::new_with_keypair (404 samples, 0.26%)</title><rect x="2.0843%" y="341" width="0.2589%" height="15" fill="rgb(211,81,21)"/><text x="2.3343%" y="351.50"></text></g><g><title>group-b073d76844680b0b`openmls::group::mls_group::MlsGroup::apply_commit (18 samples, 0.01%)</title><rect x="2.3502%" y="373" width="0.0115%" height="15" fill="rgb(208,190,38)"/><text x="2.6002%" y="383.50"></text></g><g><title>group-b073d76844680b0b`openmls::framing::plaintext::MlsPlaintext::add_membership_tag (21 samples, 0.01%)</title><rect x="2.3618%" y="357" width="0.0135%" height="15" fill="rgb(235,213,38)"/><text x="2.6118%" y="367.50"></text></g><g><title>group-b073d76844680b0b`openmls::schedule::MembershipKey::tag (16 samples, 0.01%)</title><rect x="2.3650%" y="341" width="0.0103%" height="15" fill="rgb(237,122,38)"/><text x="2.6150%" y="351.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fmul (70 samples, 0.04%)</title><rect x="2.4028%" y="261" width="0.0449%" height="15" fill="rgb(244,218,35)"/><text x="2.6528%" y="271.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fsqr (50 samples, 0.03%)</title><rect x="2.4547%" y="261" width="0.0320%" height="15" fill="rgb(240,68,47)"/><text x="2.7047%" y="271.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fmul (149 samples, 0.10%)</title><rect x="2.5111%" y="245" width="0.0955%" height="15" fill="rgb(210,16,53)"/><text x="2.7611%" y="255.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Ed25519_Ladder_point_mul (369 samples, 0.24%)</title><rect x="2.3778%" y="277" width="0.2365%" height="15" fill="rgb(235,124,12)"/><text x="2.6278%" y="287.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Ed25519_PointAdd_point_add (188 samples, 0.12%)</title><rect x="2.4938%" y="261" width="0.1205%" height="15" fill="rgb(224,169,11)"/><text x="2.7438%" y="271.50"></text></g><g><title>group-b073d76844680b0b`openmls::ciphersuite::SignaturePrivateKey::sign (399 samples, 0.26%)</title><rect x="2.3752%" y="325" width="0.2557%" height="15" fill="rgb(250,166,2)"/><text x="2.6252%" y="335.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::signature::sign (399 samples, 0.26%)</title><rect x="2.3752%" y="309" width="0.2557%" height="15" fill="rgb(242,216,29)"/><text x="2.6252%" y="319.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Ed25519_sign (399 samples, 0.26%)</title><rect x="2.3752%" y="293" width="0.2557%" height="15" fill="rgb(230,116,27)"/><text x="2.6252%" y="303.50"></text></g><g><title>group-b073d76844680b0b`openmls::group::mls_group::MlsGroup::create_add_proposal (425 samples, 0.27%)</title><rect x="2.3618%" y="373" width="0.2724%" height="15" fill="rgb(228,99,48)"/><text x="2.6118%" y="383.50"></text></g><g><title>group-b073d76844680b0b`openmls::framing::plaintext::MlsPlaintext::new_from_member (404 samples, 0.26%)</title><rect x="2.3752%" y="357" width="0.2589%" height="15" fill="rgb(253,11,6)"/><text x="2.6252%" y="367.50"></text></g><g><title>group-b073d76844680b0b`openmls::framing::plaintext::MlsPlaintext::sign_from_member (404 samples, 0.26%)</title><rect x="2.3752%" y="341" width="0.2589%" height="15" fill="rgb(247,143,39)"/><text x="2.6252%" y="351.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::dh_kem::DhKem::dh_base (63 samples, 0.04%)</title><rect x="2.6393%" y="277" width="0.0404%" height="15" fill="rgb(236,97,10)"/><text x="2.8893%" y="287.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::ecdh::derive_base (63 samples, 0.04%)</title><rect x="2.6393%" y="261" width="0.0404%" height="15" fill="rgb(233,208,19)"/><text x="2.8893%" y="271.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_secret_to_public (63 samples, 0.04%)</title><rect x="2.6393%" y="245" width="0.0404%" height="15" fill="rgb(216,164,2)"/><text x="2.8893%" y="255.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_scalarmult (63 samples, 0.04%)</title><rect x="2.6393%" y="229" width="0.0404%" height="15" fill="rgb(220,129,5)"/><text x="2.8893%" y="239.50"></text></g><g><title>group-b073d76844680b0b`&lt;hpke_rs::dh_kem::DhKem as hpke_rs::kem::KemTrait&gt;::derive_key_pair (67 samples, 0.04%)</title><rect x="2.6387%" y="293" width="0.0429%" height="15" fill="rgb(242,17,10)"/><text x="2.8887%" y="303.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::dh_kem::DhKem::dh (63 samples, 0.04%)</title><rect x="2.6816%" y="293" width="0.0404%" height="15" fill="rgb(242,107,0)"/><text x="2.9316%" y="303.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::ecdh::derive (63 samples, 0.04%)</title><rect x="2.6816%" y="277" width="0.0404%" height="15" fill="rgb(251,28,31)"/><text x="2.9316%" y="287.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_ecdh (62 samples, 0.04%)</title><rect x="2.6822%" y="261" width="0.0397%" height="15" fill="rgb(233,223,10)"/><text x="2.9322%" y="271.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_scalarmult (62 samples, 0.04%)</title><rect x="2.6822%" y="245" width="0.0397%" height="15" fill="rgb(215,21,27)"/><text x="2.9322%" y="255.50"></text></g><g><title>group-b073d76844680b0b`&lt;hpke_rs::dh_kem::DhKem as hpke_rs::kem::KemTrait&gt;::encaps (141 samples, 0.09%)</title><rect x="2.6387%" y="309" width="0.0904%" height="15" fill="rgb(232,23,21)"/><text x="2.8887%" y="319.50"></text></g><g><title>group-b073d76844680b0b`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (155 samples, 0.10%)</title><rect x="2.6342%" y="357" width="0.0993%" height="15" fill="rgb(244,5,23)"/><text x="2.8842%" y="367.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::Hpke::seal (155 samples, 0.10%)</title><rect x="2.6342%" y="341" width="0.0993%" height="15" fill="rgb(226,81,46)"/><text x="2.8842%" y="351.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::Hpke::setup_sender (148 samples, 0.09%)</title><rect x="2.6387%" y="325" width="0.0949%" height="15" fill="rgb(247,70,30)"/><text x="2.8887%" y="335.50"></text></g><g><title>group-b073d76844680b0b`openmls::group::mls_group::MlsGroup::create_commit (189 samples, 0.12%)</title><rect x="2.6342%" y="373" width="0.1211%" height="15" fill="rgb(212,68,19)"/><text x="2.8842%" y="383.50"></text></g><g><title>group-b073d76844680b0b`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,385 samples, 0.89%)</title><rect x="1.8702%" y="453" width="0.8877%" height="15" fill="rgb(240,187,13)"/><text x="2.1202%" y="463.50"></text></g><g><title>group-b073d76844680b0b`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,385 samples, 0.89%)</title><rect x="1.8702%" y="437" width="0.8877%" height="15" fill="rgb(223,113,26)"/><text x="2.1202%" y="447.50"></text></g><g><title>group-b073d76844680b0b`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,385 samples, 0.89%)</title><rect x="1.8702%" y="421" width="0.8877%" height="15" fill="rgb(206,192,2)"/><text x="2.1202%" y="431.50"></text></g><g><title>group-b073d76844680b0b`criterion::bencher::Bencher&lt;M&gt;::iter_batched (1,385 samples, 0.89%)</title><rect x="1.8702%" y="405" width="0.8877%" height="15" fill="rgb(241,108,4)"/><text x="2.1202%" y="415.50"></text></g><g><title>group-b073d76844680b0b`group::setup_group (641 samples, 0.41%)</title><rect x="2.3470%" y="389" width="0.4108%" height="15" fill="rgb(247,173,49)"/><text x="2.5970%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (451 samples, 0.29%)</title><rect x="2.8758%" y="373" width="0.2891%" height="15" fill="rgb(224,114,35)"/><text x="3.1258%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (445 samples, 0.29%)</title><rect x="2.8796%" y="357" width="0.2852%" height="15" fill="rgb(245,159,27)"/><text x="3.1296%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (509 samples, 0.33%)</title><rect x="2.8482%" y="389" width="0.3262%" height="15" fill="rgb(245,172,44)"/><text x="3.0982%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (213 samples, 0.14%)</title><rect x="3.8032%" y="357" width="0.1365%" height="15" fill="rgb(236,23,11)"/><text x="4.0532%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1,371 samples, 0.88%)</title><rect x="3.1790%" y="389" width="0.8787%" height="15" fill="rgb(205,117,38)"/><text x="3.4290%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1,143 samples, 0.73%)</title><rect x="3.3251%" y="373" width="0.7326%" height="15" fill="rgb(237,72,25)"/><text x="3.5751%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (184 samples, 0.12%)</title><rect x="3.9397%" y="357" width="0.1179%" height="15" fill="rgb(244,70,9)"/><text x="4.1897%" y="367.50"></text></g><g><title>group-b073d76844680b0b`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,954 samples, 1.25%)</title><rect x="2.8117%" y="405" width="1.2524%" height="15" fill="rgb(217,125,39)"/><text x="3.0617%" y="415.50"></text></g><g><title>group-b073d76844680b0b`core::ptr::drop_in_place&lt;openmls::extensions::capabilities_extension::CapabilitiesExtension&gt; (37 samples, 0.02%)</title><rect x="4.0705%" y="389" width="0.0237%" height="15" fill="rgb(235,36,10)"/><text x="4.3205%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (25 samples, 0.02%)</title><rect x="4.0782%" y="373" width="0.0160%" height="15" fill="rgb(251,123,47)"/><text x="4.3282%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (21 samples, 0.01%)</title><rect x="4.0807%" y="357" width="0.0135%" height="15" fill="rgb(221,13,13)"/><text x="4.3307%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (47 samples, 0.03%)</title><rect x="4.0955%" y="389" width="0.0301%" height="15" fill="rgb(238,131,9)"/><text x="4.3455%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (45 samples, 0.03%)</title><rect x="4.0968%" y="373" width="0.0288%" height="15" fill="rgb(211,50,8)"/><text x="4.3468%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (45 samples, 0.03%)</title><rect x="4.0968%" y="357" width="0.0288%" height="15" fill="rgb(245,182,24)"/><text x="4.3468%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (18 samples, 0.01%)</title><rect x="4.1769%" y="357" width="0.0115%" height="15" fill="rgb(242,14,37)"/><text x="4.4269%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (104 samples, 0.07%)</title><rect x="4.1256%" y="389" width="0.0667%" height="15" fill="rgb(246,228,12)"/><text x="4.3756%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (93 samples, 0.06%)</title><rect x="4.1326%" y="373" width="0.0596%" height="15" fill="rgb(213,55,15)"/><text x="4.3826%" y="383.50"></text></g><g><title>group-b073d76844680b0b`core::ptr::drop_in_place&lt;openmls::key_packages::KeyPackage&gt; (193 samples, 0.12%)</title><rect x="4.0692%" y="405" width="0.1237%" height="15" fill="rgb(209,9,3)"/><text x="4.3192%" y="415.50"></text></g><g><title>group-b073d76844680b0b`core::ptr::drop_in_place&lt;openmls::framing::plaintext::MlsPlaintextContentType&gt; (2,208 samples, 1.42%)</title><rect x="2.8053%" y="421" width="1.4151%" height="15" fill="rgb(230,59,30)"/><text x="3.0553%" y="431.50"></text></g><g><title>group-b073d76844680b0b`core::ptr::drop_in_place&lt;openmls::extensions::capabilities_extension::CapabilitiesExtension&gt; (38 samples, 0.02%)</title><rect x="4.2256%" y="405" width="0.0244%" height="15" fill="rgb(209,121,21)"/><text x="4.4756%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (23 samples, 0.01%)</title><rect x="4.2352%" y="389" width="0.0147%" height="15" fill="rgb(220,109,13)"/><text x="4.4852%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (17 samples, 0.01%)</title><rect x="4.2390%" y="373" width="0.0109%" height="15" fill="rgb(232,18,1)"/><text x="4.4890%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (25 samples, 0.02%)</title><rect x="4.2499%" y="405" width="0.0160%" height="15" fill="rgb(215,41,42)"/><text x="4.4999%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (24 samples, 0.02%)</title><rect x="4.2506%" y="389" width="0.0154%" height="15" fill="rgb(224,123,36)"/><text x="4.5006%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (24 samples, 0.02%)</title><rect x="4.2506%" y="373" width="0.0154%" height="15" fill="rgb(240,125,3)"/><text x="4.5006%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (16 samples, 0.01%)</title><rect x="4.2974%" y="373" width="0.0103%" height="15" fill="rgb(205,98,50)"/><text x="4.5474%" y="383.50"></text></g><g><title>group-b073d76844680b0b`core::ptr::drop_in_place&lt;openmls::key_packages::KeyPackage&gt; (139 samples, 0.09%)</title><rect x="4.2205%" y="421" width="0.0891%" height="15" fill="rgb(205,185,37)"/><text x="4.4705%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (68 samples, 0.04%)</title><rect x="4.2660%" y="405" width="0.0436%" height="15" fill="rgb(238,207,15)"/><text x="4.5160%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (61 samples, 0.04%)</title><rect x="4.2704%" y="389" width="0.0391%" height="15" fill="rgb(213,199,42)"/><text x="4.5204%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (45 samples, 0.03%)</title><rect x="4.3095%" y="421" width="0.0288%" height="15" fill="rgb(235,201,11)"/><text x="4.5595%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (42 samples, 0.03%)</title><rect x="4.3115%" y="405" width="0.0269%" height="15" fill="rgb(207,46,11)"/><text x="4.5615%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (40 samples, 0.03%)</title><rect x="4.3127%" y="389" width="0.0256%" height="15" fill="rgb(241,35,35)"/><text x="4.5627%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (22 samples, 0.01%)</title><rect x="4.3685%" y="389" width="0.0141%" height="15" fill="rgb(243,32,47)"/><text x="4.6185%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (71 samples, 0.05%)</title><rect x="4.3384%" y="421" width="0.0455%" height="15" fill="rgb(247,202,23)"/><text x="4.5884%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (62 samples, 0.04%)</title><rect x="4.3441%" y="405" width="0.0397%" height="15" fill="rgb(219,102,11)"/><text x="4.5941%" y="415.50"></text></g><g><title>group-b073d76844680b0b`core::ptr::drop_in_place&lt;openmls::framing::plaintext::MlsPlaintext&gt; (2,497 samples, 1.60%)</title><rect x="2.7842%" y="437" width="1.6004%" height="15" fill="rgb(243,110,44)"/><text x="3.0342%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (80 samples, 0.05%)</title><rect x="4.7479%" y="341" width="0.0513%" height="15" fill="rgb(222,74,54)"/><text x="4.9979%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (885 samples, 0.57%)</title><rect x="4.5191%" y="373" width="0.5672%" height="15" fill="rgb(216,99,12)"/><text x="4.7691%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (853 samples, 0.55%)</title><rect x="4.5396%" y="357" width="0.5467%" height="15" fill="rgb(226,22,26)"/><text x="4.7896%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (447 samples, 0.29%)</title><rect x="4.7998%" y="341" width="0.2865%" height="15" fill="rgb(217,163,10)"/><text x="5.0498%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (105 samples, 0.07%)</title><rect x="5.0190%" y="325" width="0.0673%" height="15" fill="rgb(213,25,53)"/><text x="5.2690%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (931 samples, 0.60%)</title><rect x="4.4967%" y="389" width="0.5967%" height="15" fill="rgb(252,105,26)"/><text x="4.7467%" y="399.50"></text></g><g><title>group-b073d76844680b0b`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,095 samples, 0.70%)</title><rect x="4.4755%" y="405" width="0.7018%" height="15" fill="rgb(220,39,43)"/><text x="4.7255%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (115 samples, 0.07%)</title><rect x="5.1036%" y="389" width="0.0737%" height="15" fill="rgb(229,68,48)"/><text x="5.3536%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (49 samples, 0.03%)</title><rect x="5.1812%" y="405" width="0.0314%" height="15" fill="rgb(252,8,32)"/><text x="5.4312%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (45 samples, 0.03%)</title><rect x="5.1838%" y="389" width="0.0288%" height="15" fill="rgb(223,20,43)"/><text x="5.4338%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (43 samples, 0.03%)</title><rect x="5.1850%" y="373" width="0.0276%" height="15" fill="rgb(229,81,49)"/><text x="5.4350%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (24 samples, 0.02%)</title><rect x="5.1972%" y="357" width="0.0154%" height="15" fill="rgb(236,28,36)"/><text x="5.4472%" y="367.50"></text></g><g><title>group-b073d76844680b0b`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,179 samples, 0.76%)</title><rect x="4.4640%" y="421" width="0.7556%" height="15" fill="rgb(249,185,26)"/><text x="4.7140%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (197 samples, 0.13%)</title><rect x="5.2600%" y="389" width="0.1263%" height="15" fill="rgb(249,174,33)"/><text x="5.5100%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (189 samples, 0.12%)</title><rect x="5.2651%" y="373" width="0.1211%" height="15" fill="rgb(233,201,37)"/><text x="5.5151%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (259 samples, 0.17%)</title><rect x="5.2280%" y="405" width="0.1660%" height="15" fill="rgb(221,78,26)"/><text x="5.4780%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (209 samples, 0.13%)</title><rect x="5.7369%" y="373" width="0.1340%" height="15" fill="rgb(250,127,30)"/><text x="5.9869%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (854 samples, 0.55%)</title><rect x="5.4004%" y="405" width="0.5473%" height="15" fill="rgb(230,49,44)"/><text x="5.6504%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (678 samples, 0.43%)</title><rect x="5.5132%" y="389" width="0.4345%" height="15" fill="rgb(229,67,23)"/><text x="5.7632%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (120 samples, 0.08%)</title><rect x="5.8708%" y="373" width="0.0769%" height="15" fill="rgb(249,83,47)"/><text x="6.1208%" y="383.50"></text></g><g><title>group-b073d76844680b0b`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,148 samples, 0.74%)</title><rect x="5.2196%" y="421" width="0.7358%" height="15" fill="rgb(215,43,3)"/><text x="5.4696%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (44 samples, 0.03%)</title><rect x="5.9740%" y="373" width="0.0282%" height="15" fill="rgb(238,154,13)"/><text x="6.2240%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (44 samples, 0.03%)</title><rect x="5.9740%" y="357" width="0.0282%" height="15" fill="rgb(219,56,2)"/><text x="6.2240%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (43 samples, 0.03%)</title><rect x="5.9746%" y="341" width="0.0276%" height="15" fill="rgb(233,0,4)"/><text x="6.2246%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (23 samples, 0.01%)</title><rect x="5.9875%" y="325" width="0.0147%" height="15" fill="rgb(235,30,7)"/><text x="6.2375%" y="335.50"></text></g><g><title>group-b073d76844680b0b`&lt;T as openmls::extensions::ExtensionHelper&gt;::clone_it (45 samples, 0.03%)</title><rect x="5.9740%" y="389" width="0.0288%" height="15" fill="rgb(250,79,13)"/><text x="6.2240%" y="399.50"></text></g><g><title>group-b073d76844680b0b`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (50 samples, 0.03%)</title><rect x="5.9734%" y="405" width="0.0320%" height="15" fill="rgb(211,146,34)"/><text x="6.2234%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (29 samples, 0.02%)</title><rect x="6.0061%" y="405" width="0.0186%" height="15" fill="rgb(228,22,38)"/><text x="6.2561%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (28 samples, 0.02%)</title><rect x="6.0067%" y="389" width="0.0179%" height="15" fill="rgb(235,168,5)"/><text x="6.2567%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (28 samples, 0.02%)</title><rect x="6.0067%" y="373" width="0.0179%" height="15" fill="rgb(221,155,16)"/><text x="6.2567%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (18 samples, 0.01%)</title><rect x="6.0131%" y="357" width="0.0115%" height="15" fill="rgb(215,215,53)"/><text x="6.2631%" y="367.50"></text></g><g><title>group-b073d76844680b0b`&lt;openmls::key_packages::KeyPackage as core::clone::Clone&gt;::clone (98 samples, 0.06%)</title><rect x="5.9670%" y="421" width="0.0628%" height="15" fill="rgb(223,4,10)"/><text x="6.2170%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (32 samples, 0.02%)</title><rect x="6.0599%" y="405" width="0.0205%" height="15" fill="rgb(234,103,6)"/><text x="6.3099%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (32 samples, 0.02%)</title><rect x="6.0599%" y="389" width="0.0205%" height="15" fill="rgb(227,97,0)"/><text x="6.3099%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (32 samples, 0.02%)</title><rect x="6.0599%" y="373" width="0.0205%" height="15" fill="rgb(234,150,53)"/><text x="6.3099%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (29 samples, 0.02%)</title><rect x="6.1028%" y="373" width="0.0186%" height="15" fill="rgb(228,201,54)"/><text x="6.3528%" y="383.50"></text></g><g><title>group-b073d76844680b0b`core::ptr::drop_in_place&lt;openmls::group::GroupContext&gt; (101 samples, 0.06%)</title><rect x="6.0586%" y="421" width="0.0647%" height="15" fill="rgb(222,22,37)"/><text x="6.3086%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (67 samples, 0.04%)</title><rect x="6.0804%" y="405" width="0.0429%" height="15" fill="rgb(237,53,32)"/><text x="6.3304%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (60 samples, 0.04%)</title><rect x="6.0849%" y="389" width="0.0385%" height="15" fill="rgb(233,25,53)"/><text x="6.3349%" y="399.50"></text></g><g><title>group-b073d76844680b0b`core::ptr::drop_in_place&lt;openmls::extensions::capabilities_extension::CapabilitiesExtension&gt; (23 samples, 0.01%)</title><rect x="6.1272%" y="405" width="0.0147%" height="15" fill="rgb(210,40,34)"/><text x="6.3772%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (28 samples, 0.02%)</title><rect x="6.1419%" y="405" width="0.0179%" height="15" fill="rgb(241,220,44)"/><text x="6.3919%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (26 samples, 0.02%)</title><rect x="6.1432%" y="389" width="0.0167%" height="15" fill="rgb(235,28,35)"/><text x="6.3932%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (26 samples, 0.02%)</title><rect x="6.1432%" y="373" width="0.0167%" height="15" fill="rgb(210,56,17)"/><text x="6.3932%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (21 samples, 0.01%)</title><rect x="6.1829%" y="373" width="0.0135%" height="15" fill="rgb(224,130,29)"/><text x="6.4329%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (61 samples, 0.04%)</title><rect x="6.1599%" y="405" width="0.0391%" height="15" fill="rgb(235,212,8)"/><text x="6.4099%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (54 samples, 0.03%)</title><rect x="6.1644%" y="389" width="0.0346%" height="15" fill="rgb(223,33,50)"/><text x="6.4144%" y="399.50"></text></g><g><title>group-b073d76844680b0b`core::ptr::drop_in_place&lt;openmls::key_packages::KeyPackage&gt; (119 samples, 0.08%)</title><rect x="6.1233%" y="421" width="0.0763%" height="15" fill="rgb(219,149,13)"/><text x="6.3733%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (33 samples, 0.02%)</title><rect x="6.2002%" y="405" width="0.0212%" height="15" fill="rgb(250,156,29)"/><text x="6.4502%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (32 samples, 0.02%)</title><rect x="6.2009%" y="389" width="0.0205%" height="15" fill="rgb(216,193,19)"/><text x="6.4509%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (32 samples, 0.02%)</title><rect x="6.2009%" y="373" width="0.0205%" height="15" fill="rgb(216,135,14)"/><text x="6.4509%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (24 samples, 0.02%)</title><rect x="6.2509%" y="373" width="0.0154%" height="15" fill="rgb(241,47,5)"/><text x="6.5009%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (79 samples, 0.05%)</title><rect x="6.2214%" y="405" width="0.0506%" height="15" fill="rgb(233,42,35)"/><text x="6.4714%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (69 samples, 0.04%)</title><rect x="6.2278%" y="389" width="0.0442%" height="15" fill="rgb(231,13,6)"/><text x="6.4778%" y="399.50"></text></g><g><title>group-b073d76844680b0b`core::ptr::drop_in_place&lt;openmls::schedule::EpochSecrets&gt; (114 samples, 0.07%)</title><rect x="6.1996%" y="421" width="0.0731%" height="15" fill="rgb(207,181,40)"/><text x="6.4496%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`madvise (186 samples, 0.12%)</title><rect x="6.6034%" y="405" width="0.1192%" height="15" fill="rgb(254,173,49)"/><text x="6.8534%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_size (17 samples, 0.01%)</title><rect x="6.7252%" y="389" width="0.0109%" height="15" fill="rgb(221,1,38)"/><text x="6.9752%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (31 samples, 0.02%)</title><rect x="6.7226%" y="405" width="0.0199%" height="15" fill="rgb(206,124,46)"/><text x="6.9726%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_large (18 samples, 0.01%)</title><rect x="6.7425%" y="405" width="0.0115%" height="15" fill="rgb(249,21,11)"/><text x="6.9925%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_small (25 samples, 0.02%)</title><rect x="6.7540%" y="405" width="0.0160%" height="15" fill="rgb(222,201,40)"/><text x="7.0040%" y="415.50"></text></g><g><title>group-b073d76844680b0b`core::ptr::drop_in_place&lt;openmls::tree::secret_tree::SecretTree&gt; (785 samples, 0.50%)</title><rect x="6.2727%" y="421" width="0.5031%" height="15" fill="rgb(235,61,29)"/><text x="6.5227%" y="431.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_HMAC_compute_sha2_256 (24 samples, 0.02%)</title><rect x="6.7912%" y="389" width="0.0154%" height="15" fill="rgb(219,207,3)"/><text x="7.0412%" y="399.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::hkdf::extract (34 samples, 0.02%)</title><rect x="6.7905%" y="405" width="0.0218%" height="15" fill="rgb(222,56,46)"/><text x="7.0405%" y="415.50"></text></g><g><title>group-b073d76844680b0b`openmls::ciphersuite::Secret::hkdf_extract (64 samples, 0.04%)</title><rect x="6.7816%" y="421" width="0.0410%" height="15" fill="rgb(239,76,54)"/><text x="7.0316%" y="431.50"></text></g><g><title>group-b073d76844680b0b`alloc::fmt::format (26 samples, 0.02%)</title><rect x="6.8258%" y="405" width="0.0167%" height="15" fill="rgb(231,124,27)"/><text x="7.0758%" y="415.50"></text></g><g><title>group-b073d76844680b0b`core::fmt::write (18 samples, 0.01%)</title><rect x="6.8309%" y="389" width="0.0115%" height="15" fill="rgb(249,195,6)"/><text x="7.0809%" y="399.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_HKDF_expand_sha2_256 (24 samples, 0.02%)</title><rect x="6.8450%" y="389" width="0.0154%" height="15" fill="rgb(237,174,47)"/><text x="7.0950%" y="399.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::hkdf::expand (26 samples, 0.02%)</title><rect x="6.8450%" y="405" width="0.0167%" height="15" fill="rgb(206,201,31)"/><text x="7.0950%" y="415.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (22 samples, 0.01%)</title><rect x="6.8642%" y="373" width="0.0141%" height="15" fill="rgb(231,57,52)"/><text x="7.1142%" y="383.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (24 samples, 0.02%)</title><rect x="6.8636%" y="389" width="0.0154%" height="15" fill="rgb(248,177,22)"/><text x="7.1136%" y="399.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (30 samples, 0.02%)</title><rect x="6.8617%" y="405" width="0.0192%" height="15" fill="rgb(215,211,37)"/><text x="7.1117%" y="415.50"></text></g><g><title>group-b073d76844680b0b`openmls::ciphersuite::Secret::kdf_expand_label (106 samples, 0.07%)</title><rect x="6.8226%" y="421" width="0.0679%" height="15" fill="rgb(241,128,51)"/><text x="7.0726%" y="431.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16 samples, 0.01%)</title><rect x="6.9187%" y="389" width="0.0103%" height="15" fill="rgb(227,165,31)"/><text x="7.1687%" y="399.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (16 samples, 0.01%)</title><rect x="6.9187%" y="373" width="0.0103%" height="15" fill="rgb(228,167,24)"/><text x="7.1687%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (16 samples, 0.01%)</title><rect x="6.9335%" y="325" width="0.0103%" height="15" fill="rgb(228,143,12)"/><text x="7.1835%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (16 samples, 0.01%)</title><rect x="6.9335%" y="309" width="0.0103%" height="15" fill="rgb(249,149,8)"/><text x="7.1835%" y="319.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (21 samples, 0.01%)</title><rect x="6.9309%" y="373" width="0.0135%" height="15" fill="rgb(243,35,44)"/><text x="7.1809%" y="383.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (19 samples, 0.01%)</title><rect x="6.9322%" y="357" width="0.0122%" height="15" fill="rgb(246,89,9)"/><text x="7.1822%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`realloc (19 samples, 0.01%)</title><rect x="6.9322%" y="341" width="0.0122%" height="15" fill="rgb(233,213,13)"/><text x="7.1822%" y="351.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (28 samples, 0.02%)</title><rect x="6.9290%" y="389" width="0.0179%" height="15" fill="rgb(233,141,41)"/><text x="7.1790%" y="399.50"></text></g><g><title>group-b073d76844680b0b`&lt;core::option::Option&lt;T&gt; as openmls::codec::Codec&gt;::encode (50 samples, 0.03%)</title><rect x="6.9181%" y="405" width="0.0320%" height="15" fill="rgb(239,167,4)"/><text x="7.1681%" y="415.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fadd (44 samples, 0.03%)</title><rect x="6.9649%" y="357" width="0.0282%" height="15" fill="rgb(209,217,16)"/><text x="7.2149%" y="367.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fmul (51 samples, 0.03%)</title><rect x="6.9931%" y="357" width="0.0327%" height="15" fill="rgb(219,88,35)"/><text x="7.2431%" y="367.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fmul1 (25 samples, 0.02%)</title><rect x="7.0258%" y="357" width="0.0160%" height="15" fill="rgb(220,193,23)"/><text x="7.2758%" y="367.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fsqr (40 samples, 0.03%)</title><rect x="7.0418%" y="357" width="0.0256%" height="15" fill="rgb(230,90,52)"/><text x="7.2918%" y="367.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fsub (28 samples, 0.02%)</title><rect x="7.0674%" y="357" width="0.0179%" height="15" fill="rgb(252,106,19)"/><text x="7.3174%" y="367.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fadd (228 samples, 0.15%)</title><rect x="7.6237%" y="341" width="0.1461%" height="15" fill="rgb(206,74,20)"/><text x="7.8737%" y="351.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fmul (1,875 samples, 1.20%)</title><rect x="7.7699%" y="341" width="1.2017%" height="15" fill="rgb(230,138,44)"/><text x="8.0199%" y="351.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fmul1 (352 samples, 0.23%)</title><rect x="8.9716%" y="341" width="0.2256%" height="15" fill="rgb(235,182,43)"/><text x="9.2216%" y="351.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fsqr (1,182 samples, 0.76%)</title><rect x="9.1972%" y="341" width="0.7576%" height="15" fill="rgb(242,16,51)"/><text x="9.4472%" y="351.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fsub (207 samples, 0.13%)</title><rect x="9.9548%" y="341" width="0.1327%" height="15" fill="rgb(248,9,4)"/><text x="10.2048%" y="351.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fadd (173 samples, 0.11%)</title><rect x="10.3271%" y="325" width="0.1109%" height="15" fill="rgb(210,31,22)"/><text x="10.5771%" y="335.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fmul (4,181 samples, 2.68%)</title><rect x="10.4380%" y="325" width="2.6797%" height="15" fill="rgb(239,54,39)"/><text x="10.6880%" y="335.50">gr..</text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Ed25519_PointAdd_point_add (5,127 samples, 3.29%)</title><rect x="10.0874%" y="341" width="3.2860%" height="15" fill="rgb(230,99,41)"/><text x="10.3374%" y="351.50">gro..</text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fsub (399 samples, 0.26%)</title><rect x="13.1177%" y="325" width="0.2557%" height="15" fill="rgb(253,106,12)"/><text x="13.3677%" y="335.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Ed25519_Ladder_point_mul (9,815 samples, 6.29%)</title><rect x="7.0854%" y="357" width="6.2906%" height="15" fill="rgb(213,46,41)"/><text x="7.3354%" y="367.50">group-b0..</text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Ed25519_PointAdd_point_add (29 samples, 0.02%)</title><rect x="13.3760%" y="357" width="0.0186%" height="15" fill="rgb(215,133,35)"/><text x="13.6260%" y="367.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_51_finv (404 samples, 0.26%)</title><rect x="13.4087%" y="341" width="0.2589%" height="15" fill="rgb(213,28,5)"/><text x="13.6587%" y="351.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_51_fsquare_times (359 samples, 0.23%)</title><rect x="13.4375%" y="325" width="0.2301%" height="15" fill="rgb(215,77,49)"/><text x="13.6875%" y="335.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_51_fsquare_times (400 samples, 0.26%)</title><rect x="13.6676%" y="341" width="0.2564%" height="15" fill="rgb(248,100,22)"/><text x="13.9176%" y="351.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fmul (20 samples, 0.01%)</title><rect x="13.9240%" y="341" width="0.0128%" height="15" fill="rgb(208,67,9)"/><text x="14.1740%" y="351.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Ed25519_PointDecompress_point_decompress (858 samples, 0.55%)</title><rect x="13.3946%" y="357" width="0.5499%" height="15" fill="rgb(219,133,21)"/><text x="13.6446%" y="367.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Hash_Core_SHA2_update_512 (1,935 samples, 1.24%)</title><rect x="13.9624%" y="325" width="1.2402%" height="15" fill="rgb(246,46,29)"/><text x="14.2124%" y="335.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Hash_Core_SHA2_update_512 (28 samples, 0.02%)</title><rect x="15.2032%" y="309" width="0.0179%" height="15" fill="rgb(246,185,52)"/><text x="15.4532%" y="319.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Hash_SHA2_update_last_512 (31 samples, 0.02%)</title><rect x="15.2026%" y="325" width="0.0199%" height="15" fill="rgb(252,136,11)"/><text x="15.4526%" y="335.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Hash_SHA2_hash_512 (1,984 samples, 1.27%)</title><rect x="13.9566%" y="341" width="1.2716%" height="15" fill="rgb(219,138,53)"/><text x="14.2066%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (27 samples, 0.02%)</title><rect x="15.2282%" y="341" width="0.0173%" height="15" fill="rgb(211,51,23)"/><text x="15.4782%" y="351.50"></text></g><g><title>group-b073d76844680b0b`sha512_pre_pre2_msg (2,029 samples, 1.30%)</title><rect x="13.9522%" y="357" width="1.3004%" height="15" fill="rgb(247,221,28)"/><text x="14.2022%" y="367.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Ed25519_verify (12,953 samples, 8.30%)</title><rect x="6.9559%" y="373" width="8.3018%" height="15" fill="rgb(251,222,45)"/><text x="7.2059%" y="383.50">group-b073d7..</text></g><g><title>group-b073d76844680b0b`openmls::ciphersuite::SignaturePublicKey::verify (12,960 samples, 8.31%)</title><rect x="6.9527%" y="405" width="8.3063%" height="15" fill="rgb(217,162,53)"/><text x="7.2027%" y="415.50">group-b073d7..</text></g><g><title>group-b073d76844680b0b`evercrypt::signature::verify (12,959 samples, 8.31%)</title><rect x="6.9533%" y="389" width="8.3057%" height="15" fill="rgb(229,93,14)"/><text x="7.2033%" y="399.50">group-b073d7..</text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (18 samples, 0.01%)</title><rect x="15.2744%" y="341" width="0.0115%" height="15" fill="rgb(209,67,49)"/><text x="15.5244%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (16 samples, 0.01%)</title><rect x="15.2757%" y="325" width="0.0103%" height="15" fill="rgb(213,87,29)"/><text x="15.5257%" y="335.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (28 samples, 0.02%)</title><rect x="15.2725%" y="389" width="0.0179%" height="15" fill="rgb(205,151,52)"/><text x="15.5225%" y="399.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (26 samples, 0.02%)</title><rect x="15.2737%" y="373" width="0.0167%" height="15" fill="rgb(253,215,39)"/><text x="15.5237%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`realloc (26 samples, 0.02%)</title><rect x="15.2737%" y="357" width="0.0167%" height="15" fill="rgb(221,220,41)"/><text x="15.5237%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_small (18 samples, 0.01%)</title><rect x="15.4013%" y="293" width="0.0115%" height="15" fill="rgb(218,133,21)"/><text x="15.6513%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (63 samples, 0.04%)</title><rect x="15.4128%" y="293" width="0.0404%" height="15" fill="rgb(221,193,43)"/><text x="15.6628%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (36 samples, 0.02%)</title><rect x="15.4301%" y="277" width="0.0231%" height="15" fill="rgb(240,128,52)"/><text x="15.6801%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (32 samples, 0.02%)</title><rect x="15.4622%" y="277" width="0.0205%" height="15" fill="rgb(253,114,12)"/><text x="15.7122%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (25 samples, 0.02%)</title><rect x="15.4667%" y="261" width="0.0160%" height="15" fill="rgb(215,223,47)"/><text x="15.7167%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (89 samples, 0.06%)</title><rect x="15.4583%" y="293" width="0.0570%" height="15" fill="rgb(248,225,23)"/><text x="15.7083%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (51 samples, 0.03%)</title><rect x="15.4827%" y="277" width="0.0327%" height="15" fill="rgb(250,108,0)"/><text x="15.7327%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (32 samples, 0.02%)</title><rect x="15.4949%" y="261" width="0.0205%" height="15" fill="rgb(228,208,7)"/><text x="15.7449%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (24 samples, 0.02%)</title><rect x="15.5224%" y="293" width="0.0154%" height="15" fill="rgb(244,45,10)"/><text x="15.7724%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (267 samples, 0.17%)</title><rect x="15.3949%" y="309" width="0.1711%" height="15" fill="rgb(207,125,25)"/><text x="15.6449%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (44 samples, 0.03%)</title><rect x="15.5378%" y="293" width="0.0282%" height="15" fill="rgb(210,195,18)"/><text x="15.7878%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (283 samples, 0.18%)</title><rect x="15.3859%" y="325" width="0.1814%" height="15" fill="rgb(249,80,12)"/><text x="15.6359%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`realloc (307 samples, 0.20%)</title><rect x="15.3840%" y="341" width="0.1968%" height="15" fill="rgb(221,65,9)"/><text x="15.6340%" y="351.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (360 samples, 0.23%)</title><rect x="15.3506%" y="373" width="0.2307%" height="15" fill="rgb(235,49,36)"/><text x="15.6006%" y="383.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (324 samples, 0.21%)</title><rect x="15.3737%" y="357" width="0.2077%" height="15" fill="rgb(225,32,20)"/><text x="15.6237%" y="367.50"></text></g><g><title>group-b073d76844680b0b`__rdl_realloc (23 samples, 0.01%)</title><rect x="16.2242%" y="325" width="0.0147%" height="15" fill="rgb(215,141,46)"/><text x="16.4742%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (399 samples, 0.26%)</title><rect x="16.2627%" y="309" width="0.2557%" height="15" fill="rgb(250,160,47)"/><text x="16.5127%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (385 samples, 0.25%)</title><rect x="16.2716%" y="293" width="0.2468%" height="15" fill="rgb(216,222,40)"/><text x="16.5216%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (100 samples, 0.06%)</title><rect x="16.4543%" y="277" width="0.0641%" height="15" fill="rgb(234,217,39)"/><text x="16.7043%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (442 samples, 0.28%)</title><rect x="16.2390%" y="325" width="0.2833%" height="15" fill="rgb(207,178,40)"/><text x="16.4890%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (32 samples, 0.02%)</title><rect x="16.5838%" y="309" width="0.0205%" height="15" fill="rgb(221,136,13)"/><text x="16.8338%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_free (39 samples, 0.02%)</title><rect x="16.6575%" y="293" width="0.0250%" height="15" fill="rgb(249,199,10)"/><text x="16.9075%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_small (16 samples, 0.01%)</title><rect x="16.7543%" y="277" width="0.0103%" height="15" fill="rgb(249,222,13)"/><text x="17.0043%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (168 samples, 0.11%)</title><rect x="17.0369%" y="245" width="0.1077%" height="15" fill="rgb(244,185,38)"/><text x="17.2869%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (633 samples, 0.41%)</title><rect x="16.7645%" y="277" width="0.4057%" height="15" fill="rgb(236,202,9)"/><text x="17.0145%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (346 samples, 0.22%)</title><rect x="16.9485%" y="261" width="0.2218%" height="15" fill="rgb(250,229,37)"/><text x="17.1985%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (40 samples, 0.03%)</title><rect x="17.1446%" y="245" width="0.0256%" height="15" fill="rgb(206,174,23)"/><text x="17.3946%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (23 samples, 0.01%)</title><rect x="17.1709%" y="277" width="0.0147%" height="15" fill="rgb(211,33,43)"/><text x="17.4209%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (51 samples, 0.03%)</title><rect x="17.2074%" y="261" width="0.0327%" height="15" fill="rgb(245,58,50)"/><text x="17.4574%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (37 samples, 0.02%)</title><rect x="17.2164%" y="245" width="0.0237%" height="15" fill="rgb(244,68,36)"/><text x="17.4664%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (60 samples, 0.04%)</title><rect x="17.5041%" y="245" width="0.0385%" height="15" fill="rgb(232,229,15)"/><text x="17.7541%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (740 samples, 0.47%)</title><rect x="17.1959%" y="277" width="0.4743%" height="15" fill="rgb(254,30,23)"/><text x="17.4459%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (667 samples, 0.43%)</title><rect x="17.2426%" y="261" width="0.4275%" height="15" fill="rgb(235,160,14)"/><text x="17.4926%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (195 samples, 0.12%)</title><rect x="17.5452%" y="245" width="0.1250%" height="15" fill="rgb(212,155,44)"/><text x="17.7952%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (61 samples, 0.04%)</title><rect x="17.6310%" y="229" width="0.0391%" height="15" fill="rgb(226,2,50)"/><text x="17.8810%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (203 samples, 0.13%)</title><rect x="17.6701%" y="277" width="0.1301%" height="15" fill="rgb(234,177,6)"/><text x="17.9201%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (184 samples, 0.12%)</title><rect x="17.6823%" y="261" width="0.1179%" height="15" fill="rgb(217,24,9)"/><text x="17.9323%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (18 samples, 0.01%)</title><rect x="17.8099%" y="277" width="0.0115%" height="15" fill="rgb(220,13,46)"/><text x="18.0599%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (36 samples, 0.02%)</title><rect x="18.0226%" y="261" width="0.0231%" height="15" fill="rgb(239,221,27)"/><text x="18.2726%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (373 samples, 0.24%)</title><rect x="17.8214%" y="277" width="0.2391%" height="15" fill="rgb(222,198,25)"/><text x="18.0714%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (23 samples, 0.01%)</title><rect x="18.0457%" y="261" width="0.0147%" height="15" fill="rgb(211,99,13)"/><text x="18.2957%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2,171 samples, 1.39%)</title><rect x="16.6947%" y="293" width="1.3914%" height="15" fill="rgb(232,111,31)"/><text x="16.9447%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (40 samples, 0.03%)</title><rect x="18.0605%" y="277" width="0.0256%" height="15" fill="rgb(245,82,37)"/><text x="18.3105%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2,340 samples, 1.50%)</title><rect x="16.6043%" y="309" width="1.4998%" height="15" fill="rgb(227,149,46)"/><text x="16.8543%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (193 samples, 0.12%)</title><rect x="18.1072%" y="309" width="0.1237%" height="15" fill="rgb(218,36,50)"/><text x="18.3572%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (177 samples, 0.11%)</title><rect x="18.1175%" y="293" width="0.1134%" height="15" fill="rgb(226,80,48)"/><text x="18.3675%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2,659 samples, 1.70%)</title><rect x="16.5370%" y="325" width="1.7042%" height="15" fill="rgb(238,224,15)"/><text x="16.7870%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (16 samples, 0.01%)</title><rect x="18.2309%" y="309" width="0.0103%" height="15" fill="rgb(241,136,10)"/><text x="18.4809%" y="319.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (3,238 samples, 2.08%)</title><rect x="16.1813%" y="341" width="2.0753%" height="15" fill="rgb(208,32,45)"/><text x="16.4313%" y="351.50">g..</text></g><g><title>libsystem_malloc.dylib`szone_size (20 samples, 0.01%)</title><rect x="18.2438%" y="325" width="0.0128%" height="15" fill="rgb(207,135,9)"/><text x="18.4938%" y="335.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3,372 samples, 2.16%)</title><rect x="16.1044%" y="357" width="2.1612%" height="15" fill="rgb(206,86,44)"/><text x="16.3544%" y="367.50">g..</text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (17 samples, 0.01%)</title><rect x="18.2655%" y="357" width="0.0109%" height="15" fill="rgb(245,177,15)"/><text x="18.5155%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (86 samples, 0.06%)</title><rect x="18.2937%" y="341" width="0.0551%" height="15" fill="rgb(206,64,50)"/><text x="18.5437%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (79 samples, 0.05%)</title><rect x="18.2982%" y="325" width="0.0506%" height="15" fill="rgb(234,36,40)"/><text x="18.5482%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (123 samples, 0.08%)</title><rect x="18.2764%" y="357" width="0.0788%" height="15" fill="rgb(213,64,8)"/><text x="18.5264%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (208 samples, 0.13%)</title><rect x="18.5572%" y="325" width="0.1333%" height="15" fill="rgb(210,75,36)"/><text x="18.8072%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (530 samples, 0.34%)</title><rect x="18.3553%" y="357" width="0.3397%" height="15" fill="rgb(229,88,21)"/><text x="18.6053%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (351 samples, 0.22%)</title><rect x="18.4700%" y="341" width="0.2250%" height="15" fill="rgb(252,204,47)"/><text x="18.7200%" y="351.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (4,903 samples, 3.14%)</title><rect x="15.5814%" y="373" width="3.1424%" height="15" fill="rgb(208,77,27)"/><text x="15.8314%" y="383.50">gro..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (31 samples, 0.02%)</title><rect x="18.7039%" y="357" width="0.0199%" height="15" fill="rgb(221,76,26)"/><text x="18.9539%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (23 samples, 0.01%)</title><rect x="18.7398%" y="373" width="0.0147%" height="15" fill="rgb(225,139,18)"/><text x="18.9898%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (18 samples, 0.01%)</title><rect x="18.7815%" y="341" width="0.0115%" height="15" fill="rgb(230,137,11)"/><text x="19.0315%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (46 samples, 0.03%)</title><rect x="18.7655%" y="373" width="0.0295%" height="15" fill="rgb(212,28,1)"/><text x="19.0155%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (34 samples, 0.02%)</title><rect x="18.7732%" y="357" width="0.0218%" height="15" fill="rgb(248,164,17)"/><text x="19.0232%" y="367.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (5,502 samples, 3.53%)</title><rect x="15.2917%" y="389" width="3.5263%" height="15" fill="rgb(222,171,42)"/><text x="15.5417%" y="399.50">gro..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (25 samples, 0.02%)</title><rect x="18.8020%" y="373" width="0.0160%" height="15" fill="rgb(243,84,45)"/><text x="19.0520%" y="383.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (5,606 samples, 3.59%)</title><rect x="15.2590%" y="405" width="3.5930%" height="15" fill="rgb(252,49,23)"/><text x="15.5090%" y="415.50">grou..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (21 samples, 0.01%)</title><rect x="18.8385%" y="389" width="0.0135%" height="15" fill="rgb(215,19,7)"/><text x="19.0885%" y="399.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16 samples, 0.01%)</title><rect x="18.8533%" y="389" width="0.0103%" height="15" fill="rgb(238,81,41)"/><text x="19.1033%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (27 samples, 0.02%)</title><rect x="18.8751%" y="309" width="0.0173%" height="15" fill="rgb(210,199,37)"/><text x="19.1251%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (33 samples, 0.02%)</title><rect x="18.8725%" y="325" width="0.0212%" height="15" fill="rgb(244,192,49)"/><text x="19.1225%" y="335.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (45 samples, 0.03%)</title><rect x="18.8706%" y="373" width="0.0288%" height="15" fill="rgb(226,211,11)"/><text x="19.1206%" y="383.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (44 samples, 0.03%)</title><rect x="18.8712%" y="357" width="0.0282%" height="15" fill="rgb(236,162,54)"/><text x="19.1212%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`realloc (42 samples, 0.03%)</title><rect x="18.8725%" y="341" width="0.0269%" height="15" fill="rgb(220,229,9)"/><text x="19.1225%" y="351.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (66 samples, 0.04%)</title><rect x="18.8635%" y="389" width="0.0423%" height="15" fill="rgb(250,87,22)"/><text x="19.1135%" y="399.50"></text></g><g><title>group-b073d76844680b0b`openmls::framing::codec::_&lt;impl openmls::codec::Codec for openmls::framing::plaintext::MlsPlaintextTbs&gt;::encode (94 samples, 0.06%)</title><rect x="18.8520%" y="405" width="0.0602%" height="15" fill="rgb(239,43,17)"/><text x="19.1020%" y="415.50"></text></g><g><title>group-b073d76844680b0b`openmls::framing::plaintext::MlsPlaintextTbs::verify (18,751 samples, 12.02%)</title><rect x="6.9142%" y="421" width="12.0179%" height="15" fill="rgb(231,177,25)"/><text x="7.1642%" y="431.50">group-b073d7684468..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (16 samples, 0.01%)</title><rect x="18.9808%" y="293" width="0.0103%" height="15" fill="rgb(219,179,1)"/><text x="19.2308%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (40 samples, 0.03%)</title><rect x="18.9718%" y="325" width="0.0256%" height="15" fill="rgb(238,219,53)"/><text x="19.2218%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (36 samples, 0.02%)</title><rect x="18.9744%" y="309" width="0.0231%" height="15" fill="rgb(232,167,36)"/><text x="19.2244%" y="319.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (59 samples, 0.04%)</title><rect x="18.9629%" y="373" width="0.0378%" height="15" fill="rgb(244,19,51)"/><text x="19.2129%" y="383.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (57 samples, 0.04%)</title><rect x="18.9641%" y="357" width="0.0365%" height="15" fill="rgb(224,6,22)"/><text x="19.2141%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`realloc (46 samples, 0.03%)</title><rect x="18.9712%" y="341" width="0.0295%" height="15" fill="rgb(224,145,5)"/><text x="19.2212%" y="351.50"></text></g><g><title>group-b073d76844680b0b`openmls::group::codec::_&lt;impl openmls::codec::Codec for openmls::group::GroupContext&gt;::encode (95 samples, 0.06%)</title><rect x="18.9513%" y="405" width="0.0609%" height="15" fill="rgb(234,130,49)"/><text x="19.2013%" y="415.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (86 samples, 0.06%)</title><rect x="18.9571%" y="389" width="0.0551%" height="15" fill="rgb(254,6,2)"/><text x="19.2071%" y="399.50"></text></g><g><title>group-b073d76844680b0b`openmls::group::group_context::_&lt;impl openmls::group::GroupContext&gt;::new (131 samples, 0.08%)</title><rect x="18.9353%" y="421" width="0.0840%" height="15" fill="rgb(208,96,46)"/><text x="19.1853%" y="431.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (428 samples, 0.27%)</title><rect x="19.0391%" y="389" width="0.2743%" height="15" fill="rgb(239,3,39)"/><text x="19.2891%" y="399.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (452 samples, 0.29%)</title><rect x="19.0276%" y="405" width="0.2897%" height="15" fill="rgb(233,210,1)"/><text x="19.2776%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (19 samples, 0.01%)</title><rect x="19.3346%" y="309" width="0.0122%" height="15" fill="rgb(244,137,37)"/><text x="19.5846%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (55 samples, 0.04%)</title><rect x="19.3231%" y="341" width="0.0353%" height="15" fill="rgb(240,136,2)"/><text x="19.5731%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (55 samples, 0.04%)</title><rect x="19.3231%" y="325" width="0.0353%" height="15" fill="rgb(239,18,37)"/><text x="19.5731%" y="335.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (64 samples, 0.04%)</title><rect x="19.3192%" y="389" width="0.0410%" height="15" fill="rgb(218,185,22)"/><text x="19.5692%" y="399.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (61 samples, 0.04%)</title><rect x="19.3211%" y="373" width="0.0391%" height="15" fill="rgb(225,218,4)"/><text x="19.5711%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`realloc (59 samples, 0.04%)</title><rect x="19.3224%" y="357" width="0.0378%" height="15" fill="rgb(230,182,32)"/><text x="19.5724%" y="367.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (70 samples, 0.04%)</title><rect x="19.3173%" y="405" width="0.0449%" height="15" fill="rgb(242,56,43)"/><text x="19.5673%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (23 samples, 0.01%)</title><rect x="19.3891%" y="293" width="0.0147%" height="15" fill="rgb(233,99,24)"/><text x="19.6391%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (26 samples, 0.02%)</title><rect x="19.3878%" y="309" width="0.0167%" height="15" fill="rgb(234,209,42)"/><text x="19.6378%" y="319.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (32 samples, 0.02%)</title><rect x="19.3865%" y="357" width="0.0205%" height="15" fill="rgb(227,7,12)"/><text x="19.6365%" y="367.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (32 samples, 0.02%)</title><rect x="19.3865%" y="341" width="0.0205%" height="15" fill="rgb(245,203,43)"/><text x="19.6365%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`realloc (30 samples, 0.02%)</title><rect x="19.3878%" y="325" width="0.0192%" height="15" fill="rgb(238,205,33)"/><text x="19.6378%" y="335.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (46 samples, 0.03%)</title><rect x="19.3807%" y="373" width="0.0295%" height="15" fill="rgb(231,56,7)"/><text x="19.6307%" y="383.50"></text></g><g><title>group-b073d76844680b0b`&lt;core::option::Option&lt;T&gt; as openmls::codec::Codec&gt;::encode (69 samples, 0.04%)</title><rect x="19.3692%" y="389" width="0.0442%" height="15" fill="rgb(244,186,29)"/><text x="19.6192%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (25 samples, 0.02%)</title><rect x="19.4416%" y="325" width="0.0160%" height="15" fill="rgb(234,111,31)"/><text x="19.6916%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (23 samples, 0.01%)</title><rect x="19.4429%" y="309" width="0.0147%" height="15" fill="rgb(241,149,10)"/><text x="19.6929%" y="319.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (35 samples, 0.02%)</title><rect x="19.4365%" y="357" width="0.0224%" height="15" fill="rgb(249,206,44)"/><text x="19.6865%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`realloc (28 samples, 0.02%)</title><rect x="19.4410%" y="341" width="0.0179%" height="15" fill="rgb(251,153,30)"/><text x="19.6910%" y="351.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (39 samples, 0.02%)</title><rect x="19.4346%" y="373" width="0.0250%" height="15" fill="rgb(239,152,38)"/><text x="19.6846%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (18 samples, 0.01%)</title><rect x="19.5711%" y="325" width="0.0115%" height="15" fill="rgb(249,139,47)"/><text x="19.8211%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (18 samples, 0.01%)</title><rect x="19.5711%" y="309" width="0.0115%" height="15" fill="rgb(244,64,35)"/><text x="19.8211%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.01%)</title><rect x="19.5717%" y="293" width="0.0109%" height="15" fill="rgb(216,46,15)"/><text x="19.8217%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (56 samples, 0.04%)</title><rect x="19.6057%" y="277" width="0.0359%" height="15" fill="rgb(250,74,19)"/><text x="19.8557%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (35 samples, 0.02%)</title><rect x="19.6192%" y="261" width="0.0224%" height="15" fill="rgb(249,42,33)"/><text x="19.8692%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (20 samples, 0.01%)</title><rect x="19.6474%" y="261" width="0.0128%" height="15" fill="rgb(242,149,17)"/><text x="19.8974%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (56 samples, 0.04%)</title><rect x="19.6448%" y="277" width="0.0359%" height="15" fill="rgb(244,29,21)"/><text x="19.8948%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (32 samples, 0.02%)</title><rect x="19.6602%" y="261" width="0.0205%" height="15" fill="rgb(220,130,37)"/><text x="19.9102%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (17 samples, 0.01%)</title><rect x="19.6698%" y="245" width="0.0109%" height="15" fill="rgb(211,67,2)"/><text x="19.9198%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (204 samples, 0.13%)</title><rect x="19.5922%" y="293" width="0.1307%" height="15" fill="rgb(235,68,52)"/><text x="19.8422%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (41 samples, 0.03%)</title><rect x="19.6967%" y="277" width="0.0263%" height="15" fill="rgb(246,142,3)"/><text x="19.9467%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (218 samples, 0.14%)</title><rect x="19.5852%" y="309" width="0.1397%" height="15" fill="rgb(241,25,7)"/><text x="19.8352%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`realloc (236 samples, 0.15%)</title><rect x="19.5826%" y="325" width="0.1513%" height="15" fill="rgb(242,119,39)"/><text x="19.8326%" y="335.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (262 samples, 0.17%)</title><rect x="19.5673%" y="341" width="0.1679%" height="15" fill="rgb(241,98,45)"/><text x="19.8173%" y="351.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (306 samples, 0.20%)</title><rect x="19.5397%" y="357" width="0.1961%" height="15" fill="rgb(254,28,30)"/><text x="19.7897%" y="367.50"></text></g><g><title>group-b073d76844680b0b`__rdl_realloc (19 samples, 0.01%)</title><rect x="20.5177%" y="309" width="0.0122%" height="15" fill="rgb(241,142,54)"/><text x="20.7677%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (357 samples, 0.23%)</title><rect x="20.5543%" y="293" width="0.2288%" height="15" fill="rgb(222,85,15)"/><text x="20.8043%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (347 samples, 0.22%)</title><rect x="20.5607%" y="277" width="0.2224%" height="15" fill="rgb(210,85,47)"/><text x="20.8107%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (79 samples, 0.05%)</title><rect x="20.7324%" y="261" width="0.0506%" height="15" fill="rgb(224,206,25)"/><text x="20.9824%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (404 samples, 0.26%)</title><rect x="20.5299%" y="309" width="0.2589%" height="15" fill="rgb(243,201,19)"/><text x="20.7799%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (16 samples, 0.01%)</title><rect x="20.7914%" y="309" width="0.0103%" height="15" fill="rgb(236,59,4)"/><text x="21.0414%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_free (60 samples, 0.04%)</title><rect x="20.9196%" y="277" width="0.0385%" height="15" fill="rgb(254,179,45)"/><text x="21.1696%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (206 samples, 0.13%)</title><rect x="21.3330%" y="229" width="0.1320%" height="15" fill="rgb(226,14,10)"/><text x="21.5830%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (695 samples, 0.45%)</title><rect x="21.0292%" y="261" width="0.4454%" height="15" fill="rgb(244,27,41)"/><text x="21.2792%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (354 samples, 0.23%)</title><rect x="21.2477%" y="245" width="0.2269%" height="15" fill="rgb(235,35,32)"/><text x="21.4977%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (31 samples, 0.02%)</title><rect x="21.5080%" y="245" width="0.0199%" height="15" fill="rgb(218,68,31)"/><text x="21.7580%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (21 samples, 0.01%)</title><rect x="21.5144%" y="229" width="0.0135%" height="15" fill="rgb(207,120,37)"/><text x="21.7644%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (73 samples, 0.05%)</title><rect x="21.8444%" y="229" width="0.0468%" height="15" fill="rgb(227,98,0)"/><text x="22.0944%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (780 samples, 0.50%)</title><rect x="21.4842%" y="261" width="0.4999%" height="15" fill="rgb(207,7,3)"/><text x="21.7342%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (705 samples, 0.45%)</title><rect x="21.5323%" y="245" width="0.4518%" height="15" fill="rgb(206,98,19)"/><text x="21.7823%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (143 samples, 0.09%)</title><rect x="21.8925%" y="229" width="0.0917%" height="15" fill="rgb(217,5,26)"/><text x="22.1425%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (32 samples, 0.02%)</title><rect x="21.9636%" y="213" width="0.0205%" height="15" fill="rgb(235,190,38)"/><text x="22.2136%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (189 samples, 0.12%)</title><rect x="21.9842%" y="261" width="0.1211%" height="15" fill="rgb(247,86,24)"/><text x="22.2342%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (177 samples, 0.11%)</title><rect x="21.9918%" y="245" width="0.1134%" height="15" fill="rgb(205,101,16)"/><text x="22.2418%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (21 samples, 0.01%)</title><rect x="22.1117%" y="261" width="0.0135%" height="15" fill="rgb(246,168,33)"/><text x="22.3617%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (294 samples, 0.19%)</title><rect x="22.1252%" y="261" width="0.1884%" height="15" fill="rgb(231,114,1)"/><text x="22.3752%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2,157 samples, 1.38%)</title><rect x="20.9728%" y="277" width="1.3825%" height="15" fill="rgb(207,184,53)"/><text x="21.2228%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (65 samples, 0.04%)</title><rect x="22.3136%" y="261" width="0.0417%" height="15" fill="rgb(224,95,51)"/><text x="22.5636%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2,351 samples, 1.51%)</title><rect x="20.8677%" y="293" width="1.5068%" height="15" fill="rgb(212,188,45)"/><text x="21.1177%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (213 samples, 0.14%)</title><rect x="22.3783%" y="293" width="0.1365%" height="15" fill="rgb(223,154,38)"/><text x="22.6283%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (198 samples, 0.13%)</title><rect x="22.3879%" y="277" width="0.1269%" height="15" fill="rgb(251,22,52)"/><text x="22.6379%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2,689 samples, 1.72%)</title><rect x="20.8017%" y="309" width="1.7234%" height="15" fill="rgb(229,209,22)"/><text x="21.0517%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (16 samples, 0.01%)</title><rect x="22.5148%" y="293" width="0.0103%" height="15" fill="rgb(234,138,34)"/><text x="22.7648%" y="303.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (3,232 samples, 2.07%)</title><rect x="20.4684%" y="325" width="2.0714%" height="15" fill="rgb(212,95,11)"/><text x="20.7184%" y="335.50">g..</text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3,383 samples, 2.17%)</title><rect x="20.3812%" y="341" width="2.1682%" height="15" fill="rgb(240,179,47)"/><text x="20.6312%" y="351.50">g..</text></g><g><title>libsystem_malloc.dylib`szone_size (84 samples, 0.05%)</title><rect x="22.5776%" y="325" width="0.0538%" height="15" fill="rgb(240,163,11)"/><text x="22.8276%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (79 samples, 0.05%)</title><rect x="22.5809%" y="309" width="0.0506%" height="15" fill="rgb(236,37,12)"/><text x="22.8309%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (129 samples, 0.08%)</title><rect x="22.5552%" y="341" width="0.0827%" height="15" fill="rgb(232,164,16)"/><text x="22.8052%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (191 samples, 0.12%)</title><rect x="22.8167%" y="309" width="0.1224%" height="15" fill="rgb(244,205,15)"/><text x="23.0667%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (474 samples, 0.30%)</title><rect x="22.6379%" y="341" width="0.3038%" height="15" fill="rgb(223,117,47)"/><text x="22.8879%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (293 samples, 0.19%)</title><rect x="22.7539%" y="325" width="0.1878%" height="15" fill="rgb(244,107,35)"/><text x="23.0039%" y="335.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (5,038 samples, 3.23%)</title><rect x="19.7371%" y="357" width="3.2289%" height="15" fill="rgb(205,140,8)"/><text x="19.9871%" y="367.50">gro..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (25 samples, 0.02%)</title><rect x="22.9500%" y="341" width="0.0160%" height="15" fill="rgb(228,84,46)"/><text x="23.2000%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.01%)</title><rect x="22.9763%" y="357" width="0.0141%" height="15" fill="rgb(254,188,9)"/><text x="23.2263%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (18 samples, 0.01%)</title><rect x="23.0154%" y="325" width="0.0115%" height="15" fill="rgb(206,112,54)"/><text x="23.2654%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (51 samples, 0.03%)</title><rect x="22.9962%" y="357" width="0.0327%" height="15" fill="rgb(216,84,49)"/><text x="23.2462%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (41 samples, 0.03%)</title><rect x="23.0026%" y="341" width="0.0263%" height="15" fill="rgb(214,194,35)"/><text x="23.2526%" y="351.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (5,606 samples, 3.59%)</title><rect x="19.4602%" y="373" width="3.5930%" height="15" fill="rgb(249,28,3)"/><text x="19.7102%" y="383.50">grou..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (25 samples, 0.02%)</title><rect x="23.0372%" y="357" width="0.0160%" height="15" fill="rgb(222,56,52)"/><text x="23.2872%" y="367.50"></text></g><g><title>group-b073d76844680b0b`openmls::framing::codec::_&lt;impl openmls::codec::Codec for openmls::framing::plaintext::MlsPlaintextCommitContent&gt;::encode (5,805 samples, 3.72%)</title><rect x="19.3622%" y="405" width="3.7205%" height="15" fill="rgb(245,217,50)"/><text x="19.6122%" y="415.50">grou..</text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (5,713 samples, 3.66%)</title><rect x="19.4211%" y="389" width="3.6616%" height="15" fill="rgb(213,201,24)"/><text x="19.6711%" y="399.50">grou..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (17 samples, 0.01%)</title><rect x="23.0718%" y="373" width="0.0109%" height="15" fill="rgb(248,116,28)"/><text x="23.3218%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`madvise (17 samples, 0.01%)</title><rect x="23.0827%" y="405" width="0.0109%" height="15" fill="rgb(219,72,43)"/><text x="23.3327%" y="415.50"></text></g><g><title>group-b073d76844680b0b`openmls::group::mls_group::update_confirmed_transcript_hash (6,391 samples, 4.10%)</title><rect x="19.0212%" y="421" width="4.0961%" height="15" fill="rgb(209,138,14)"/><text x="19.2712%" y="431.50">grou..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (17 samples, 0.01%)</title><rect x="23.1064%" y="405" width="0.0109%" height="15" fill="rgb(222,18,33)"/><text x="23.3564%" y="415.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (20 samples, 0.01%)</title><rect x="23.1314%" y="389" width="0.0128%" height="15" fill="rgb(213,199,7)"/><text x="23.3814%" y="399.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (18 samples, 0.01%)</title><rect x="23.1327%" y="373" width="0.0115%" height="15" fill="rgb(250,110,10)"/><text x="23.3827%" y="383.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (38 samples, 0.02%)</title><rect x="23.1244%" y="405" width="0.0244%" height="15" fill="rgb(248,123,6)"/><text x="23.3744%" y="415.50"></text></g><g><title>group-b073d76844680b0b`openmls::group::mls_group::update_interim_transcript_hash (61 samples, 0.04%)</title><rect x="23.1173%" y="421" width="0.0391%" height="15" fill="rgb(206,91,31)"/><text x="23.3673%" y="431.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fadd (37 samples, 0.02%)</title><rect x="23.1923%" y="357" width="0.0237%" height="15" fill="rgb(211,154,13)"/><text x="23.4423%" y="367.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fmul (58 samples, 0.04%)</title><rect x="23.2160%" y="357" width="0.0372%" height="15" fill="rgb(225,148,7)"/><text x="23.4660%" y="367.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fmul1 (35 samples, 0.02%)</title><rect x="23.2532%" y="357" width="0.0224%" height="15" fill="rgb(220,160,43)"/><text x="23.5032%" y="367.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fsqr (45 samples, 0.03%)</title><rect x="23.2756%" y="357" width="0.0288%" height="15" fill="rgb(213,52,39)"/><text x="23.5256%" y="367.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fsub (31 samples, 0.02%)</title><rect x="23.3044%" y="357" width="0.0199%" height="15" fill="rgb(243,137,7)"/><text x="23.5544%" y="367.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fadd (209 samples, 0.13%)</title><rect x="23.8845%" y="341" width="0.1340%" height="15" fill="rgb(230,79,13)"/><text x="24.1345%" y="351.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fmul (1,818 samples, 1.17%)</title><rect x="24.0184%" y="341" width="1.1652%" height="15" fill="rgb(247,105,23)"/><text x="24.2684%" y="351.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fmul1 (348 samples, 0.22%)</title><rect x="25.1836%" y="341" width="0.2230%" height="15" fill="rgb(223,179,41)"/><text x="25.4336%" y="351.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fsqr (1,153 samples, 0.74%)</title><rect x="25.4067%" y="341" width="0.7390%" height="15" fill="rgb(218,9,34)"/><text x="25.6567%" y="351.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fsub (242 samples, 0.16%)</title><rect x="26.1456%" y="341" width="0.1551%" height="15" fill="rgb(222,106,8)"/><text x="26.3956%" y="351.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fadd (156 samples, 0.10%)</title><rect x="26.5513%" y="325" width="0.1000%" height="15" fill="rgb(211,220,0)"/><text x="26.8013%" y="335.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fmul (4,235 samples, 2.71%)</title><rect x="26.6513%" y="325" width="2.7143%" height="15" fill="rgb(229,52,16)"/><text x="26.9013%" y="335.50">gr..</text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Ed25519_PointAdd_point_add (5,130 samples, 3.29%)</title><rect x="26.3007%" y="341" width="3.2879%" height="15" fill="rgb(212,155,18)"/><text x="26.5507%" y="351.50">gro..</text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fsub (348 samples, 0.22%)</title><rect x="29.3656%" y="325" width="0.2230%" height="15" fill="rgb(242,21,14)"/><text x="29.6156%" y="335.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Ed25519_Ladder_point_mul (9,778 samples, 6.27%)</title><rect x="23.3243%" y="357" width="6.2669%" height="15" fill="rgb(222,19,48)"/><text x="23.5743%" y="367.50">group-b0..</text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Ed25519_PointAdd_point_add (33 samples, 0.02%)</title><rect x="29.5912%" y="357" width="0.0212%" height="15" fill="rgb(232,45,27)"/><text x="29.8412%" y="367.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_51_finv (468 samples, 0.30%)</title><rect x="29.6431%" y="341" width="0.3000%" height="15" fill="rgb(249,103,42)"/><text x="29.8931%" y="351.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_51_fsquare_times (391 samples, 0.25%)</title><rect x="29.6925%" y="325" width="0.2506%" height="15" fill="rgb(246,81,33)"/><text x="29.9425%" y="335.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_51_fsquare_times (349 samples, 0.22%)</title><rect x="29.9431%" y="341" width="0.2237%" height="15" fill="rgb(252,33,42)"/><text x="30.1931%" y="351.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fmul (35 samples, 0.02%)</title><rect x="30.1680%" y="341" width="0.0224%" height="15" fill="rgb(209,212,41)"/><text x="30.4180%" y="351.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Ed25519_PointDecompress_point_decompress (929 samples, 0.60%)</title><rect x="29.6124%" y="357" width="0.5954%" height="15" fill="rgb(207,154,6)"/><text x="29.8624%" y="367.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Ed25519_PointEqual_point_equal (44 samples, 0.03%)</title><rect x="30.2078%" y="357" width="0.0282%" height="15" fill="rgb(223,64,47)"/><text x="30.4578%" y="367.50"></text></g><g><title>group-b073d76844680b0b`barrett_reduction (18 samples, 0.01%)</title><rect x="30.2360%" y="357" width="0.0115%" height="15" fill="rgb(211,161,38)"/><text x="30.4860%" y="367.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Hash_Core_SHA2_update_512 (40 samples, 0.03%)</title><rect x="30.2514%" y="325" width="0.0256%" height="15" fill="rgb(219,138,40)"/><text x="30.5014%" y="335.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Hash_Core_SHA2_update_512 (23 samples, 0.01%)</title><rect x="30.2796%" y="309" width="0.0147%" height="15" fill="rgb(241,228,46)"/><text x="30.5296%" y="319.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Hash_SHA2_hash_512 (72 samples, 0.05%)</title><rect x="30.2488%" y="341" width="0.0461%" height="15" fill="rgb(223,209,38)"/><text x="30.4988%" y="351.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Hash_SHA2_update_last_512 (28 samples, 0.02%)</title><rect x="30.2770%" y="325" width="0.0179%" height="15" fill="rgb(236,164,45)"/><text x="30.5270%" y="335.50"></text></g><g><title>group-b073d76844680b0b`sha512_pre_pre2_msg (75 samples, 0.05%)</title><rect x="30.2475%" y="357" width="0.0481%" height="15" fill="rgb(231,15,5)"/><text x="30.4975%" y="367.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Ed25519_verify (11,110 samples, 7.12%)</title><rect x="23.1801%" y="373" width="7.1206%" height="15" fill="rgb(252,35,15)"/><text x="23.4301%" y="383.50">group-b073..</text></g><g><title>group-b073d76844680b0b`openmls::ciphersuite::SignaturePublicKey::verify (11,151 samples, 7.15%)</title><rect x="23.1705%" y="405" width="7.1469%" height="15" fill="rgb(248,181,18)"/><text x="23.4205%" y="415.50">group-b073..</text></g><g><title>group-b073d76844680b0b`evercrypt::signature::verify (11,141 samples, 7.14%)</title><rect x="23.1769%" y="389" width="7.1405%" height="15" fill="rgb(233,39,42)"/><text x="23.4269%" y="399.50">group-b073..</text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (36 samples, 0.02%)</title><rect x="30.3360%" y="325" width="0.0231%" height="15" fill="rgb(238,110,33)"/><text x="30.5860%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (35 samples, 0.02%)</title><rect x="30.3366%" y="309" width="0.0224%" height="15" fill="rgb(233,195,10)"/><text x="30.5866%" y="319.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (42 samples, 0.03%)</title><rect x="30.3334%" y="373" width="0.0269%" height="15" fill="rgb(254,105,3)"/><text x="30.5834%" y="383.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (41 samples, 0.03%)</title><rect x="30.3340%" y="357" width="0.0263%" height="15" fill="rgb(221,225,9)"/><text x="30.5840%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`realloc (38 samples, 0.02%)</title><rect x="30.3360%" y="341" width="0.0244%" height="15" fill="rgb(224,227,45)"/><text x="30.5860%" y="351.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (54 samples, 0.03%)</title><rect x="30.3296%" y="389" width="0.0346%" height="15" fill="rgb(229,198,43)"/><text x="30.5796%" y="399.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (33 samples, 0.02%)</title><rect x="30.3738%" y="357" width="0.0212%" height="15" fill="rgb(206,209,35)"/><text x="30.6238%" y="367.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (32 samples, 0.02%)</title><rect x="30.3744%" y="341" width="0.0205%" height="15" fill="rgb(245,195,53)"/><text x="30.6244%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`realloc (23 samples, 0.01%)</title><rect x="30.3802%" y="325" width="0.0147%" height="15" fill="rgb(240,92,26)"/><text x="30.6302%" y="335.50"></text></g><g><title>group-b073d76844680b0b`openmls::credentials::codec::_&lt;impl openmls::codec::Codec for openmls::credentials::Credential&gt;::encode (63 samples, 0.04%)</title><rect x="30.3642%" y="389" width="0.0404%" height="15" fill="rgb(207,40,23)"/><text x="30.6142%" y="399.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (53 samples, 0.03%)</title><rect x="30.3706%" y="373" width="0.0340%" height="15" fill="rgb(223,111,35)"/><text x="30.6206%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.01%)</title><rect x="30.4193%" y="309" width="0.0103%" height="15" fill="rgb(229,147,28)"/><text x="30.6693%" y="319.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (27 samples, 0.02%)</title><rect x="30.4135%" y="341" width="0.0173%" height="15" fill="rgb(211,29,28)"/><text x="30.6635%" y="351.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (21 samples, 0.01%)</title><rect x="30.4174%" y="325" width="0.0135%" height="15" fill="rgb(228,72,33)"/><text x="30.6674%" y="335.50"></text></g><g><title>group-b073d76844680b0b`&lt;openmls::extensions::capabilities_extension::CapabilitiesExtension as openmls::extensions::Extension&gt;::to_extension_struct (45 samples, 0.03%)</title><rect x="30.4078%" y="357" width="0.0288%" height="15" fill="rgb(205,214,31)"/><text x="30.6578%" y="367.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (17 samples, 0.01%)</title><rect x="30.4424%" y="325" width="0.0109%" height="15" fill="rgb(224,111,15)"/><text x="30.6924%" y="335.50"></text></g><g><title>group-b073d76844680b0b`&lt;openmls::extensions::parent_hash_extension::ParentHashExtension as openmls::extensions::Extension&gt;::to_extension_struct (26 samples, 0.02%)</title><rect x="30.4404%" y="357" width="0.0167%" height="15" fill="rgb(253,21,26)"/><text x="30.6904%" y="367.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (25 samples, 0.02%)</title><rect x="30.4411%" y="341" width="0.0160%" height="15" fill="rgb(245,139,43)"/><text x="30.6911%" y="351.50"></text></g><g><title>group-b073d76844680b0b`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (89 samples, 0.06%)</title><rect x="30.4052%" y="373" width="0.0570%" height="15" fill="rgb(252,170,7)"/><text x="30.6552%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (21 samples, 0.01%)</title><rect x="30.4750%" y="309" width="0.0135%" height="15" fill="rgb(231,118,14)"/><text x="30.7250%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (20 samples, 0.01%)</title><rect x="30.4757%" y="293" width="0.0128%" height="15" fill="rgb(238,83,0)"/><text x="30.7257%" y="303.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (31 samples, 0.02%)</title><rect x="30.4706%" y="357" width="0.0199%" height="15" fill="rgb(221,39,39)"/><text x="30.7206%" y="367.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (31 samples, 0.02%)</title><rect x="30.4706%" y="341" width="0.0199%" height="15" fill="rgb(222,119,46)"/><text x="30.7206%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`realloc (24 samples, 0.02%)</title><rect x="30.4750%" y="325" width="0.0154%" height="15" fill="rgb(222,165,49)"/><text x="30.7250%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (33 samples, 0.02%)</title><rect x="30.5103%" y="277" width="0.0212%" height="15" fill="rgb(219,113,52)"/><text x="30.7603%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (37 samples, 0.02%)</title><rect x="30.5090%" y="293" width="0.0237%" height="15" fill="rgb(214,7,15)"/><text x="30.7590%" y="303.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (69 samples, 0.04%)</title><rect x="30.4943%" y="341" width="0.0442%" height="15" fill="rgb(235,32,4)"/><text x="30.7443%" y="351.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (64 samples, 0.04%)</title><rect x="30.4975%" y="325" width="0.0410%" height="15" fill="rgb(238,90,54)"/><text x="30.7475%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`realloc (49 samples, 0.03%)</title><rect x="30.5071%" y="309" width="0.0314%" height="15" fill="rgb(213,208,19)"/><text x="30.7571%" y="319.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (90 samples, 0.06%)</title><rect x="30.4904%" y="357" width="0.0577%" height="15" fill="rgb(233,156,4)"/><text x="30.7404%" y="367.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (133 samples, 0.09%)</title><rect x="30.4686%" y="373" width="0.0852%" height="15" fill="rgb(207,194,5)"/><text x="30.7186%" y="383.50"></text></g><g><title>group-b073d76844680b0b`openmls::key_packages::KeyPackage::unsigned_payload (377 samples, 0.24%)</title><rect x="30.3225%" y="405" width="0.2416%" height="15" fill="rgb(206,111,30)"/><text x="30.5725%" y="415.50"></text></g><g><title>group-b073d76844680b0b`openmls::extensions::encode_extensions (249 samples, 0.16%)</title><rect x="30.4045%" y="389" width="0.1596%" height="15" fill="rgb(243,70,54)"/><text x="30.6545%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (21 samples, 0.01%)</title><rect x="30.5859%" y="405" width="0.0135%" height="15" fill="rgb(242,28,8)"/><text x="30.8359%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (17 samples, 0.01%)</title><rect x="30.5885%" y="389" width="0.0109%" height="15" fill="rgb(219,106,18)"/><text x="30.8385%" y="399.50"></text></g><g><title>group-b073d76844680b0b`openmls::key_packages::KeyPackage::verify (11,614 samples, 7.44%)</title><rect x="23.1590%" y="421" width="7.4436%" height="15" fill="rgb(244,222,10)"/><text x="23.4090%" y="431.50">group-b073..</text></g><g><title>group-b073d76844680b0b`&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.01%)</title><rect x="30.6077%" y="405" width="0.0128%" height="15" fill="rgb(236,179,52)"/><text x="30.8577%" y="415.50"></text></g><g><title>group-b073d76844680b0b`hashbrown::raw::RawTable&lt;T&gt;::insert (28 samples, 0.02%)</title><rect x="30.6308%" y="389" width="0.0179%" height="15" fill="rgb(213,23,39)"/><text x="30.8808%" y="399.50"></text></g><g><title>group-b073d76844680b0b`hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (21 samples, 0.01%)</title><rect x="30.6353%" y="373" width="0.0135%" height="15" fill="rgb(238,48,10)"/><text x="30.8853%" y="383.50"></text></g><g><title>group-b073d76844680b0b`hashbrown::map::HashMap&lt;K,V,S&gt;::insert (51 samples, 0.03%)</title><rect x="30.6218%" y="405" width="0.0327%" height="15" fill="rgb(251,196,23)"/><text x="30.8718%" y="415.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (33 samples, 0.02%)</title><rect x="30.6635%" y="389" width="0.0212%" height="15" fill="rgb(250,152,24)"/><text x="30.9135%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (30 samples, 0.02%)</title><rect x="30.6942%" y="325" width="0.0192%" height="15" fill="rgb(209,150,17)"/><text x="30.9442%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (29 samples, 0.02%)</title><rect x="30.6949%" y="309" width="0.0186%" height="15" fill="rgb(234,202,34)"/><text x="30.9449%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`realloc (34 samples, 0.02%)</title><rect x="30.6942%" y="341" width="0.0218%" height="15" fill="rgb(253,148,53)"/><text x="30.9442%" y="351.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (43 samples, 0.03%)</title><rect x="30.6891%" y="373" width="0.0276%" height="15" fill="rgb(218,129,16)"/><text x="30.9391%" y="383.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (41 samples, 0.03%)</title><rect x="30.6904%" y="357" width="0.0263%" height="15" fill="rgb(216,85,19)"/><text x="30.9404%" y="367.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (60 samples, 0.04%)</title><rect x="30.6846%" y="389" width="0.0385%" height="15" fill="rgb(235,228,7)"/><text x="30.9346%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (17 samples, 0.01%)</title><rect x="30.7314%" y="325" width="0.0109%" height="15" fill="rgb(245,175,0)"/><text x="30.9814%" y="335.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (25 samples, 0.02%)</title><rect x="30.7269%" y="373" width="0.0160%" height="15" fill="rgb(208,168,36)"/><text x="30.9769%" y="383.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (25 samples, 0.02%)</title><rect x="30.7269%" y="357" width="0.0160%" height="15" fill="rgb(246,171,24)"/><text x="30.9769%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`realloc (18 samples, 0.01%)</title><rect x="30.7314%" y="341" width="0.0115%" height="15" fill="rgb(215,142,24)"/><text x="30.9814%" y="351.50"></text></g><g><title>group-b073d76844680b0b`openmls::messages::codec::_&lt;impl openmls::codec::Codec for openmls::messages::proposals::Proposal&gt;::encode (32 samples, 0.02%)</title><rect x="30.7231%" y="389" width="0.0205%" height="15" fill="rgb(250,187,7)"/><text x="30.9731%" y="399.50"></text></g><g><title>group-b073d76844680b0b`openmls::messages::proposals::ProposalReference::from_proposal (141 samples, 0.09%)</title><rect x="30.6596%" y="405" width="0.0904%" height="15" fill="rgb(228,66,33)"/><text x="30.9096%" y="415.50"></text></g><g><title>group-b073d76844680b0b`openmls::messages::proposals::ProposalQueue::from_committed_proposals (248 samples, 0.16%)</title><rect x="30.6026%" y="421" width="0.1589%" height="15" fill="rgb(234,215,21)"/><text x="30.8526%" y="431.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::hkdf::extract (16 samples, 0.01%)</title><rect x="30.7660%" y="389" width="0.0103%" height="15" fill="rgb(222,191,20)"/><text x="31.0160%" y="399.50"></text></g><g><title>group-b073d76844680b0b`openmls::ciphersuite::Secret::hkdf_extract (32 samples, 0.02%)</title><rect x="30.7628%" y="405" width="0.0205%" height="15" fill="rgb(245,79,54)"/><text x="31.0128%" y="415.50"></text></g><g><title>group-b073d76844680b0b`openmls::schedule::ConfirmationKey::tag (43 samples, 0.03%)</title><rect x="30.7622%" y="421" width="0.0276%" height="15" fill="rgb(240,10,37)"/><text x="31.0122%" y="431.50"></text></g><g><title>group-b073d76844680b0b`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (22 samples, 0.01%)</title><rect x="30.8173%" y="357" width="0.0141%" height="15" fill="rgb(214,192,32)"/><text x="31.0673%" y="367.50"></text></g><g><title>group-b073d76844680b0b`&lt;openmls::config::ProtocolVersion as core::fmt::Display&gt;::fmt (22 samples, 0.01%)</title><rect x="30.8314%" y="357" width="0.0141%" height="15" fill="rgb(209,36,54)"/><text x="31.0814%" y="367.50"></text></g><g><title>group-b073d76844680b0b`core::fmt::Formatter::write_fmt (19 samples, 0.01%)</title><rect x="30.8333%" y="341" width="0.0122%" height="15" fill="rgb(220,10,11)"/><text x="31.0833%" y="351.50"></text></g><g><title>group-b073d76844680b0b`core::fmt::write (19 samples, 0.01%)</title><rect x="30.8333%" y="325" width="0.0122%" height="15" fill="rgb(221,106,17)"/><text x="31.0833%" y="335.50"></text></g><g><title>group-b073d76844680b0b`alloc::fmt::format (78 samples, 0.05%)</title><rect x="30.7974%" y="389" width="0.0500%" height="15" fill="rgb(251,142,44)"/><text x="31.0474%" y="399.50"></text></g><g><title>group-b073d76844680b0b`core::fmt::write (52 samples, 0.03%)</title><rect x="30.8141%" y="373" width="0.0333%" height="15" fill="rgb(238,13,15)"/><text x="31.0641%" y="383.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (17 samples, 0.01%)</title><rect x="30.8602%" y="341" width="0.0109%" height="15" fill="rgb(208,107,27)"/><text x="31.1102%" y="351.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_HMAC_compute_sha2_256 (26 samples, 0.02%)</title><rect x="30.8551%" y="357" width="0.0167%" height="15" fill="rgb(205,136,37)"/><text x="31.1051%" y="367.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_HKDF_expand_sha2_256 (33 samples, 0.02%)</title><rect x="30.8538%" y="373" width="0.0212%" height="15" fill="rgb(250,205,27)"/><text x="31.1038%" y="383.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::hkdf::expand (40 samples, 0.03%)</title><rect x="30.8526%" y="389" width="0.0256%" height="15" fill="rgb(210,80,43)"/><text x="31.1026%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.01%)</title><rect x="30.8961%" y="293" width="0.0128%" height="15" fill="rgb(247,160,36)"/><text x="31.1461%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (25 samples, 0.02%)</title><rect x="30.9090%" y="293" width="0.0160%" height="15" fill="rgb(234,13,49)"/><text x="31.1590%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (25 samples, 0.02%)</title><rect x="30.9090%" y="277" width="0.0160%" height="15" fill="rgb(234,122,0)"/><text x="31.1590%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (18 samples, 0.01%)</title><rect x="30.9134%" y="261" width="0.0115%" height="15" fill="rgb(207,146,38)"/><text x="31.1634%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (56 samples, 0.04%)</title><rect x="30.8955%" y="309" width="0.0359%" height="15" fill="rgb(207,177,25)"/><text x="31.1455%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (59 samples, 0.04%)</title><rect x="30.8942%" y="325" width="0.0378%" height="15" fill="rgb(211,178,42)"/><text x="31.1442%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`realloc (64 samples, 0.04%)</title><rect x="30.8929%" y="341" width="0.0410%" height="15" fill="rgb(230,69,54)"/><text x="31.1429%" y="351.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (80 samples, 0.05%)</title><rect x="30.8833%" y="373" width="0.0513%" height="15" fill="rgb(214,135,41)"/><text x="31.1333%" y="383.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (75 samples, 0.05%)</title><rect x="30.8865%" y="357" width="0.0481%" height="15" fill="rgb(237,67,25)"/><text x="31.1365%" y="367.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (99 samples, 0.06%)</title><rect x="30.8782%" y="389" width="0.0635%" height="15" fill="rgb(222,189,50)"/><text x="31.1282%" y="399.50"></text></g><g><title>group-b073d76844680b0b`openmls::ciphersuite::Secret::kdf_expand_label (260 samples, 0.17%)</title><rect x="30.7929%" y="405" width="0.1666%" height="15" fill="rgb(245,148,34)"/><text x="31.0429%" y="415.50"></text></g><g><title>group-b073d76844680b0b`openmls::schedule::KeySchedule::add_context (273 samples, 0.17%)</title><rect x="30.7897%" y="421" width="0.1750%" height="15" fill="rgb(222,29,6)"/><text x="31.0397%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (18 samples, 0.01%)</title><rect x="31.0064%" y="309" width="0.0115%" height="15" fill="rgb(221,189,43)"/><text x="31.2564%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (16 samples, 0.01%)</title><rect x="31.0077%" y="293" width="0.0103%" height="15" fill="rgb(207,36,27)"/><text x="31.2577%" y="303.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (29 samples, 0.02%)</title><rect x="31.0032%" y="341" width="0.0186%" height="15" fill="rgb(217,90,24)"/><text x="31.2532%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`realloc (27 samples, 0.02%)</title><rect x="31.0044%" y="325" width="0.0173%" height="15" fill="rgb(224,66,35)"/><text x="31.2544%" y="335.50"></text></g><g><title>group-b073d76844680b0b`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (52 samples, 0.03%)</title><rect x="31.0006%" y="357" width="0.0333%" height="15" fill="rgb(221,13,50)"/><text x="31.2506%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (19 samples, 0.01%)</title><rect x="31.0218%" y="341" width="0.0122%" height="15" fill="rgb(236,68,49)"/><text x="31.2718%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (19 samples, 0.01%)</title><rect x="31.0403%" y="261" width="0.0122%" height="15" fill="rgb(229,146,28)"/><text x="31.2903%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (16 samples, 0.01%)</title><rect x="31.0423%" y="245" width="0.0103%" height="15" fill="rgb(225,31,38)"/><text x="31.2923%" y="255.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (21 samples, 0.01%)</title><rect x="31.0397%" y="293" width="0.0135%" height="15" fill="rgb(250,208,3)"/><text x="31.2897%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (21 samples, 0.01%)</title><rect x="31.0397%" y="277" width="0.0135%" height="15" fill="rgb(246,54,23)"/><text x="31.2897%" y="287.50"></text></g><g><title>group-b073d76844680b0b`&lt;openmls::config::ProtocolVersion as core::fmt::Display&gt;::fmt (35 samples, 0.02%)</title><rect x="31.0339%" y="357" width="0.0224%" height="15" fill="rgb(243,76,11)"/><text x="31.2839%" y="367.50"></text></g><g><title>group-b073d76844680b0b`core::fmt::Formatter::write_fmt (34 samples, 0.02%)</title><rect x="31.0346%" y="341" width="0.0218%" height="15" fill="rgb(245,21,50)"/><text x="31.2846%" y="351.50"></text></g><g><title>group-b073d76844680b0b`core::fmt::write (33 samples, 0.02%)</title><rect x="31.0352%" y="325" width="0.0212%" height="15" fill="rgb(228,9,43)"/><text x="31.2852%" y="335.50"></text></g><g><title>group-b073d76844680b0b`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (30 samples, 0.02%)</title><rect x="31.0371%" y="309" width="0.0192%" height="15" fill="rgb(208,100,47)"/><text x="31.2871%" y="319.50"></text></g><g><title>group-b073d76844680b0b`alloc::fmt::format (104 samples, 0.07%)</title><rect x="30.9929%" y="389" width="0.0667%" height="15" fill="rgb(232,26,8)"/><text x="31.2429%" y="399.50"></text></g><g><title>group-b073d76844680b0b`core::fmt::write (96 samples, 0.06%)</title><rect x="30.9980%" y="373" width="0.0615%" height="15" fill="rgb(216,166,38)"/><text x="31.2480%" y="383.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (28 samples, 0.02%)</title><rect x="31.0596%" y="389" width="0.0179%" height="15" fill="rgb(251,202,51)"/><text x="31.3096%" y="399.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (25 samples, 0.02%)</title><rect x="31.0615%" y="373" width="0.0160%" height="15" fill="rgb(254,216,34)"/><text x="31.3115%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (25 samples, 0.02%)</title><rect x="31.0615%" y="357" width="0.0160%" height="15" fill="rgb(251,32,27)"/><text x="31.3115%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (24 samples, 0.02%)</title><rect x="31.0621%" y="341" width="0.0154%" height="15" fill="rgb(208,127,28)"/><text x="31.3121%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (23 samples, 0.01%)</title><rect x="31.0628%" y="325" width="0.0147%" height="15" fill="rgb(224,137,22)"/><text x="31.3128%" y="335.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (53 samples, 0.03%)</title><rect x="31.1076%" y="341" width="0.0340%" height="15" fill="rgb(254,70,32)"/><text x="31.3576%" y="351.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_HMAC_compute_sha2_256 (90 samples, 0.06%)</title><rect x="31.0852%" y="357" width="0.0577%" height="15" fill="rgb(229,75,37)"/><text x="31.3352%" y="367.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (50 samples, 0.03%)</title><rect x="31.1435%" y="357" width="0.0320%" height="15" fill="rgb(252,64,23)"/><text x="31.3935%" y="367.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_HKDF_expand_sha2_256 (152 samples, 0.10%)</title><rect x="31.0820%" y="373" width="0.0974%" height="15" fill="rgb(232,162,48)"/><text x="31.3320%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (20 samples, 0.01%)</title><rect x="31.1845%" y="341" width="0.0128%" height="15" fill="rgb(246,160,12)"/><text x="31.4345%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (26 samples, 0.02%)</title><rect x="31.1813%" y="373" width="0.0167%" height="15" fill="rgb(247,166,0)"/><text x="31.4313%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.01%)</title><rect x="31.1845%" y="357" width="0.0135%" height="15" fill="rgb(249,219,21)"/><text x="31.4345%" y="367.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::hkdf::expand (190 samples, 0.12%)</title><rect x="31.0782%" y="389" width="0.1218%" height="15" fill="rgb(205,209,3)"/><text x="31.3282%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.01%)</title><rect x="31.2160%" y="341" width="0.0103%" height="15" fill="rgb(243,44,1)"/><text x="31.4660%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (48 samples, 0.03%)</title><rect x="31.2403%" y="293" width="0.0308%" height="15" fill="rgb(206,159,16)"/><text x="31.4903%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (29 samples, 0.02%)</title><rect x="31.2525%" y="277" width="0.0186%" height="15" fill="rgb(244,77,30)"/><text x="31.5025%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (48 samples, 0.03%)</title><rect x="31.2724%" y="293" width="0.0308%" height="15" fill="rgb(218,69,12)"/><text x="31.5224%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (45 samples, 0.03%)</title><rect x="31.2743%" y="277" width="0.0288%" height="15" fill="rgb(212,87,7)"/><text x="31.5243%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (149 samples, 0.10%)</title><rect x="31.2358%" y="309" width="0.0955%" height="15" fill="rgb(245,114,25)"/><text x="31.4858%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (29 samples, 0.02%)</title><rect x="31.3127%" y="293" width="0.0186%" height="15" fill="rgb(210,61,42)"/><text x="31.5627%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (160 samples, 0.10%)</title><rect x="31.2313%" y="325" width="0.1025%" height="15" fill="rgb(211,52,33)"/><text x="31.4813%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (20 samples, 0.01%)</title><rect x="31.3345%" y="325" width="0.0128%" height="15" fill="rgb(234,58,33)"/><text x="31.5845%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (17 samples, 0.01%)</title><rect x="31.3364%" y="309" width="0.0109%" height="15" fill="rgb(220,115,36)"/><text x="31.5864%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`realloc (185 samples, 0.12%)</title><rect x="31.2294%" y="341" width="0.1186%" height="15" fill="rgb(243,153,54)"/><text x="31.4794%" y="351.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (213 samples, 0.14%)</title><rect x="31.2127%" y="357" width="0.1365%" height="15" fill="rgb(251,47,18)"/><text x="31.4627%" y="367.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (216 samples, 0.14%)</title><rect x="31.2115%" y="373" width="0.1384%" height="15" fill="rgb(242,102,42)"/><text x="31.4615%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (23 samples, 0.01%)</title><rect x="31.3525%" y="373" width="0.0147%" height="15" fill="rgb(234,31,38)"/><text x="31.6025%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (19 samples, 0.01%)</title><rect x="31.3550%" y="357" width="0.0122%" height="15" fill="rgb(221,117,51)"/><text x="31.6050%" y="367.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (263 samples, 0.17%)</title><rect x="31.1999%" y="389" width="0.1686%" height="15" fill="rgb(212,20,18)"/><text x="31.4499%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (46 samples, 0.03%)</title><rect x="31.3768%" y="389" width="0.0295%" height="15" fill="rgb(245,133,36)"/><text x="31.6268%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (33 samples, 0.02%)</title><rect x="31.3852%" y="373" width="0.0212%" height="15" fill="rgb(212,6,19)"/><text x="31.6352%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (18 samples, 0.01%)</title><rect x="31.3948%" y="357" width="0.0115%" height="15" fill="rgb(218,1,36)"/><text x="31.6448%" y="367.50"></text></g><g><title>group-b073d76844680b0b`openmls::ciphersuite::Secret::kdf_expand_label (668 samples, 0.43%)</title><rect x="30.9801%" y="405" width="0.4281%" height="15" fill="rgb(246,84,54)"/><text x="31.2301%" y="415.50"></text></g><g><title>group-b073d76844680b0b`openmls::schedule::KeySchedule::epoch_secrets (701 samples, 0.45%)</title><rect x="30.9647%" y="421" width="0.4493%" height="15" fill="rgb(242,110,6)"/><text x="31.2147%" y="431.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_HMAC_compute_sha2_256 (27 samples, 0.02%)</title><rect x="31.4345%" y="373" width="0.0173%" height="15" fill="rgb(214,47,5)"/><text x="31.6845%" y="383.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::hkdf::extract (51 samples, 0.03%)</title><rect x="31.4307%" y="389" width="0.0327%" height="15" fill="rgb(218,159,25)"/><text x="31.6807%" y="399.50"></text></g><g><title>group-b073d76844680b0b`openmls::ciphersuite::Secret::hkdf_extract (78 samples, 0.05%)</title><rect x="31.4217%" y="405" width="0.0500%" height="15" fill="rgb(215,211,28)"/><text x="31.6717%" y="415.50"></text></g><g><title>group-b073d76844680b0b`openmls::schedule::KeySchedule::init (101 samples, 0.06%)</title><rect x="31.4140%" y="421" width="0.0647%" height="15" fill="rgb(238,59,32)"/><text x="31.6640%" y="431.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::apply_proposals (1,102 samples, 0.71%)</title><rect x="31.4839%" y="421" width="0.7063%" height="15" fill="rgb(226,82,3)"/><text x="31.7339%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (96 samples, 0.06%)</title><rect x="32.5497%" y="341" width="0.0615%" height="15" fill="rgb(240,164,32)"/><text x="32.7997%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (803 samples, 0.51%)</title><rect x="32.3151%" y="373" width="0.5147%" height="15" fill="rgb(232,46,7)"/><text x="32.5651%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (771 samples, 0.49%)</title><rect x="32.3356%" y="357" width="0.4941%" height="15" fill="rgb(229,129,53)"/><text x="32.5856%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (340 samples, 0.22%)</title><rect x="32.6119%" y="341" width="0.2179%" height="15" fill="rgb(234,188,29)"/><text x="32.8619%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (82 samples, 0.05%)</title><rect x="32.7772%" y="325" width="0.0526%" height="15" fill="rgb(246,141,4)"/><text x="33.0272%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (842 samples, 0.54%)</title><rect x="32.2959%" y="389" width="0.5397%" height="15" fill="rgb(229,23,39)"/><text x="32.5459%" y="399.50"></text></g><g><title>group-b073d76844680b0b`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,121 samples, 0.72%)</title><rect x="32.2626%" y="405" width="0.7185%" height="15" fill="rgb(206,12,3)"/><text x="32.5126%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (215 samples, 0.14%)</title><rect x="32.8432%" y="389" width="0.1378%" height="15" fill="rgb(252,226,20)"/><text x="33.0932%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (52 samples, 0.03%)</title><rect x="32.9875%" y="389" width="0.0333%" height="15" fill="rgb(216,123,35)"/><text x="33.2375%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (52 samples, 0.03%)</title><rect x="32.9875%" y="373" width="0.0333%" height="15" fill="rgb(212,68,40)"/><text x="33.2375%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (52 samples, 0.03%)</title><rect x="32.9875%" y="357" width="0.0333%" height="15" fill="rgb(254,125,32)"/><text x="33.2375%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (37 samples, 0.02%)</title><rect x="32.9971%" y="341" width="0.0237%" height="15" fill="rgb(253,97,22)"/><text x="33.2471%" y="351.50"></text></g><g><title>group-b073d76844680b0b`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (83 samples, 0.05%)</title><rect x="32.9810%" y="405" width="0.0532%" height="15" fill="rgb(241,101,14)"/><text x="33.2310%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (20 samples, 0.01%)</title><rect x="33.0214%" y="389" width="0.0128%" height="15" fill="rgb(238,103,29)"/><text x="33.2714%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (22 samples, 0.01%)</title><rect x="33.0477%" y="357" width="0.0141%" height="15" fill="rgb(233,195,47)"/><text x="33.2977%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.01%)</title><rect x="33.0483%" y="341" width="0.0135%" height="15" fill="rgb(246,218,30)"/><text x="33.2983%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (20 samples, 0.01%)</title><rect x="33.0490%" y="325" width="0.0128%" height="15" fill="rgb(219,145,47)"/><text x="33.2990%" y="335.50"></text></g><g><title>group-b073d76844680b0b`&lt;T as openmls::extensions::ExtensionHelper&gt;::clone_it (38 samples, 0.02%)</title><rect x="33.0458%" y="373" width="0.0244%" height="15" fill="rgb(243,12,26)"/><text x="33.2958%" y="383.50"></text></g><g><title>group-b073d76844680b0b`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (45 samples, 0.03%)</title><rect x="33.0445%" y="389" width="0.0288%" height="15" fill="rgb(214,87,16)"/><text x="33.2945%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (21 samples, 0.01%)</title><rect x="33.0733%" y="389" width="0.0135%" height="15" fill="rgb(208,99,42)"/><text x="33.3233%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (20 samples, 0.01%)</title><rect x="33.0740%" y="373" width="0.0128%" height="15" fill="rgb(253,99,2)"/><text x="33.3240%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (20 samples, 0.01%)</title><rect x="33.0740%" y="357" width="0.0128%" height="15" fill="rgb(220,168,23)"/><text x="33.3240%" y="367.50"></text></g><g><title>group-b073d76844680b0b`&lt;openmls::key_packages::KeyPackage as core::clone::Clone&gt;::clone (94 samples, 0.06%)</title><rect x="33.0342%" y="405" width="0.0602%" height="15" fill="rgb(242,38,24)"/><text x="33.2842%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (16 samples, 0.01%)</title><rect x="33.1169%" y="373" width="0.0103%" height="15" fill="rgb(225,182,9)"/><text x="33.3669%" y="383.50"></text></g><g><title>group-b073d76844680b0b`core::ptr::drop_in_place&lt;openmls::extensions::capabilities_extension::CapabilitiesExtension&gt; (21 samples, 0.01%)</title><rect x="33.1144%" y="389" width="0.0135%" height="15" fill="rgb(243,178,37)"/><text x="33.3644%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.01%)</title><rect x="33.1285%" y="389" width="0.0141%" height="15" fill="rgb(232,139,19)"/><text x="33.3785%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (17 samples, 0.01%)</title><rect x="33.1317%" y="373" width="0.0109%" height="15" fill="rgb(225,201,24)"/><text x="33.3817%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (16 samples, 0.01%)</title><rect x="33.1323%" y="357" width="0.0103%" height="15" fill="rgb(221,47,46)"/><text x="33.3823%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (27 samples, 0.02%)</title><rect x="33.1675%" y="357" width="0.0173%" height="15" fill="rgb(249,23,13)"/><text x="33.4175%" y="367.50"></text></g><g><title>group-b073d76844680b0b`core::ptr::drop_in_place&lt;openmls::key_packages::KeyPackage&gt; (120 samples, 0.08%)</title><rect x="33.1131%" y="405" width="0.0769%" height="15" fill="rgb(219,9,5)"/><text x="33.3631%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (74 samples, 0.05%)</title><rect x="33.1426%" y="389" width="0.0474%" height="15" fill="rgb(254,171,16)"/><text x="33.3926%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (66 samples, 0.04%)</title><rect x="33.1477%" y="373" width="0.0423%" height="15" fill="rgb(230,171,20)"/><text x="33.3977%" y="383.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::aead::Aead::decrypt (34 samples, 0.02%)</title><rect x="33.2259%" y="357" width="0.0218%" height="15" fill="rgb(210,71,41)"/><text x="33.4759%" y="367.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_AEAD_create_in (17 samples, 0.01%)</title><rect x="33.2489%" y="341" width="0.0109%" height="15" fill="rgb(206,173,20)"/><text x="33.4989%" y="351.50"></text></g><g><title>group-b073d76844680b0b`aes128_keyhash_init (23 samples, 0.01%)</title><rect x="33.2643%" y="341" width="0.0147%" height="15" fill="rgb(233,88,34)"/><text x="33.5143%" y="351.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::aead::Aead::new (116 samples, 0.07%)</title><rect x="33.2477%" y="357" width="0.0743%" height="15" fill="rgb(223,209,46)"/><text x="33.4977%" y="367.50"></text></g><g><title>group-b073d76844680b0b`&lt;hpke_rs::aead_impl::AesGcm128 as hpke_rs::aead::AeadTrait&gt;::open (184 samples, 0.12%)</title><rect x="33.2086%" y="373" width="0.1179%" height="15" fill="rgb(250,43,18)"/><text x="33.4586%" y="383.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::Context::compute_nonce (35 samples, 0.02%)</title><rect x="33.3361%" y="373" width="0.0224%" height="15" fill="rgb(208,13,10)"/><text x="33.5861%" y="383.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::Context::open (245 samples, 0.16%)</title><rect x="33.2041%" y="389" width="0.1570%" height="15" fill="rgb(212,200,36)"/><text x="33.4541%" y="399.50"></text></g><g><title>group-b073d76844680b0b`&lt;hpke_rs::hkdf::HkdfSha256 as hpke_rs::kdf::KdfTrait&gt;::extract (18 samples, 0.01%)</title><rect x="33.3752%" y="357" width="0.0115%" height="15" fill="rgb(225,90,30)"/><text x="33.6252%" y="367.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_ecdh (2,198 samples, 1.41%)</title><rect x="33.4053%" y="325" width="1.4087%" height="15" fill="rgb(236,182,39)"/><text x="33.6553%" y="335.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_scalarmult (2,194 samples, 1.41%)</title><rect x="33.4079%" y="309" width="1.4062%" height="15" fill="rgb(212,144,35)"/><text x="33.6579%" y="319.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::ecdh::derive (2,214 samples, 1.42%)</title><rect x="33.3989%" y="341" width="1.4190%" height="15" fill="rgb(228,63,44)"/><text x="33.6489%" y="351.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::dh_kem::DhKem::dh (2,218 samples, 1.42%)</title><rect x="33.3976%" y="357" width="1.4216%" height="15" fill="rgb(228,109,6)"/><text x="33.6476%" y="367.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_secret_to_public (1,603 samples, 1.03%)</title><rect x="34.8275%" y="325" width="1.0274%" height="15" fill="rgb(238,117,24)"/><text x="35.0775%" y="335.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_scalarmult (1,602 samples, 1.03%)</title><rect x="34.8282%" y="309" width="1.0268%" height="15" fill="rgb(242,26,26)"/><text x="35.0782%" y="319.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::ecdh::derive_base (1,625 samples, 1.04%)</title><rect x="34.8230%" y="341" width="1.0415%" height="15" fill="rgb(221,92,48)"/><text x="35.0730%" y="351.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::dh_kem::DhKem::dh_base (1,632 samples, 1.05%)</title><rect x="34.8192%" y="357" width="1.0460%" height="15" fill="rgb(209,209,32)"/><text x="35.0692%" y="367.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_HMAC_compute_sha2_256 (27 samples, 0.02%)</title><rect x="35.8703%" y="309" width="0.0173%" height="15" fill="rgb(221,70,22)"/><text x="36.1203%" y="319.50"></text></g><g><title>group-b073d76844680b0b`&lt;hpke_rs::hkdf::HkdfSha256 as hpke_rs::kdf::KdfTrait&gt;::extract (57 samples, 0.04%)</title><rect x="35.8658%" y="341" width="0.0365%" height="15" fill="rgb(248,145,5)"/><text x="36.1158%" y="351.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::hkdf::extract (53 samples, 0.03%)</title><rect x="35.8684%" y="325" width="0.0340%" height="15" fill="rgb(226,116,26)"/><text x="36.1184%" y="335.50"></text></g><g><title>group-b073d76844680b0b`alloc::slice::_&lt;impl [T]&gt;::join (32 samples, 0.02%)</title><rect x="35.9023%" y="341" width="0.0205%" height="15" fill="rgb(244,5,17)"/><text x="36.1523%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (21 samples, 0.01%)</title><rect x="35.9094%" y="325" width="0.0135%" height="15" fill="rgb(252,159,33)"/><text x="36.1594%" y="335.50"></text></g><g><title>group-b073d76844680b0b`&lt;hpke_rs::hkdf::HkdfSha256 as hpke_rs::kdf::KdfTrait&gt;::expand (27 samples, 0.02%)</title><rect x="35.9261%" y="325" width="0.0173%" height="15" fill="rgb(206,71,0)"/><text x="36.1761%" y="335.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::hkdf::expand (25 samples, 0.02%)</title><rect x="35.9273%" y="309" width="0.0160%" height="15" fill="rgb(233,118,54)"/><text x="36.1773%" y="319.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::kdf::Kdf::labeled_expand (51 samples, 0.03%)</title><rect x="35.9254%" y="341" width="0.0327%" height="15" fill="rgb(234,83,48)"/><text x="36.1754%" y="351.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::dh_kem::DhKem::extract_and_expand (163 samples, 0.10%)</title><rect x="35.8652%" y="357" width="0.1045%" height="15" fill="rgb(228,3,54)"/><text x="36.1152%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (26 samples, 0.02%)</title><rect x="35.9857%" y="357" width="0.0167%" height="15" fill="rgb(226,155,13)"/><text x="36.2357%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (19 samples, 0.01%)</title><rect x="35.9902%" y="341" width="0.0122%" height="15" fill="rgb(241,28,37)"/><text x="36.2402%" y="351.50"></text></g><g><title>group-b073d76844680b0b`&lt;hpke_rs::dh_kem::DhKem as hpke_rs::kem::KemTrait&gt;::decaps (4,115 samples, 2.64%)</title><rect x="33.3669%" y="373" width="2.6374%" height="15" fill="rgb(233,93,10)"/><text x="33.6169%" y="383.50">gr..</text></g><g><title>group-b073d76844680b0b`alloc::slice::_&lt;impl [T]&gt;::join (24 samples, 0.02%)</title><rect x="36.0107%" y="373" width="0.0154%" height="15" fill="rgb(225,113,19)"/><text x="36.2607%" y="383.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_HMAC_compute_sha2_256 (32 samples, 0.02%)</title><rect x="36.0344%" y="325" width="0.0205%" height="15" fill="rgb(241,2,18)"/><text x="36.2844%" y="335.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (16 samples, 0.01%)</title><rect x="36.0446%" y="309" width="0.0103%" height="15" fill="rgb(228,207,21)"/><text x="36.2946%" y="319.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (18 samples, 0.01%)</title><rect x="36.0575%" y="325" width="0.0115%" height="15" fill="rgb(213,211,35)"/><text x="36.3075%" y="335.50"></text></g><g><title>group-b073d76844680b0b`&lt;hpke_rs::hkdf::HkdfSha256 as hpke_rs::kdf::KdfTrait&gt;::extract (68 samples, 0.04%)</title><rect x="36.0325%" y="357" width="0.0436%" height="15" fill="rgb(209,83,10)"/><text x="36.2825%" y="367.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::hkdf::extract (67 samples, 0.04%)</title><rect x="36.0331%" y="341" width="0.0429%" height="15" fill="rgb(209,164,1)"/><text x="36.2831%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (26 samples, 0.02%)</title><rect x="36.0824%" y="341" width="0.0167%" height="15" fill="rgb(213,184,43)"/><text x="36.3324%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (26 samples, 0.02%)</title><rect x="36.0824%" y="325" width="0.0167%" height="15" fill="rgb(231,61,34)"/><text x="36.3324%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (25 samples, 0.02%)</title><rect x="36.0831%" y="309" width="0.0160%" height="15" fill="rgb(235,75,3)"/><text x="36.3331%" y="319.50"></text></g><g><title>group-b073d76844680b0b`alloc::slice::_&lt;impl [T]&gt;::join (41 samples, 0.03%)</title><rect x="36.0767%" y="357" width="0.0263%" height="15" fill="rgb(220,106,47)"/><text x="36.3267%" y="367.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_HMAC_compute_sha2_256 (41 samples, 0.03%)</title><rect x="36.1049%" y="293" width="0.0263%" height="15" fill="rgb(210,196,33)"/><text x="36.3549%" y="303.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (35 samples, 0.02%)</title><rect x="36.1087%" y="277" width="0.0224%" height="15" fill="rgb(229,154,42)"/><text x="36.3587%" y="287.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (19 samples, 0.01%)</title><rect x="36.1318%" y="293" width="0.0122%" height="15" fill="rgb(228,114,26)"/><text x="36.3818%" y="303.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_HKDF_expand_sha2_256 (62 samples, 0.04%)</title><rect x="36.1049%" y="309" width="0.0397%" height="15" fill="rgb(208,144,1)"/><text x="36.3549%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (18 samples, 0.01%)</title><rect x="36.1453%" y="309" width="0.0115%" height="15" fill="rgb(239,112,37)"/><text x="36.3953%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (18 samples, 0.01%)</title><rect x="36.1453%" y="293" width="0.0115%" height="15" fill="rgb(210,96,50)"/><text x="36.3953%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.01%)</title><rect x="36.1459%" y="277" width="0.0109%" height="15" fill="rgb(222,178,2)"/><text x="36.3959%" y="287.50"></text></g><g><title>group-b073d76844680b0b`&lt;hpke_rs::hkdf::HkdfSha256 as hpke_rs::kdf::KdfTrait&gt;::expand (82 samples, 0.05%)</title><rect x="36.1049%" y="341" width="0.0526%" height="15" fill="rgb(226,74,18)"/><text x="36.3549%" y="351.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::hkdf::expand (82 samples, 0.05%)</title><rect x="36.1049%" y="325" width="0.0526%" height="15" fill="rgb(225,67,54)"/><text x="36.3549%" y="335.50"></text></g><g><title>group-b073d76844680b0b`alloc::slice::_&lt;impl [T]&gt;::join (16 samples, 0.01%)</title><rect x="36.1587%" y="341" width="0.0103%" height="15" fill="rgb(251,92,32)"/><text x="36.4087%" y="351.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::kdf::Kdf::labeled_expand (109 samples, 0.07%)</title><rect x="36.1036%" y="357" width="0.0699%" height="15" fill="rgb(228,149,22)"/><text x="36.3536%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.01%)</title><rect x="36.1799%" y="357" width="0.0128%" height="15" fill="rgb(243,54,13)"/><text x="36.4299%" y="367.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::Hpke::key_schedule (264 samples, 0.17%)</title><rect x="36.0260%" y="373" width="0.1692%" height="15" fill="rgb(243,180,28)"/><text x="36.2760%" y="383.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::Hpke::setup_receiver (4,439 samples, 2.85%)</title><rect x="33.3611%" y="389" width="2.8450%" height="15" fill="rgb(208,167,24)"/><text x="33.6111%" y="399.50">gr..</text></g><g><title>group-b073d76844680b0b`hpke_rs::Hpke::open (4,714 samples, 3.02%)</title><rect x="33.1951%" y="405" width="3.0213%" height="15" fill="rgb(245,73,45)"/><text x="33.4451%" y="415.50">gro..</text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (41 samples, 0.03%)</title><rect x="36.2933%" y="277" width="0.0263%" height="15" fill="rgb(237,203,48)"/><text x="36.5433%" y="287.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (74 samples, 0.05%)</title><rect x="36.2837%" y="293" width="0.0474%" height="15" fill="rgb(211,197,16)"/><text x="36.5337%" y="303.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (111 samples, 0.07%)</title><rect x="36.2702%" y="309" width="0.0711%" height="15" fill="rgb(243,99,51)"/><text x="36.5202%" y="319.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (135 samples, 0.09%)</title><rect x="36.2625%" y="325" width="0.0865%" height="15" fill="rgb(215,123,29)"/><text x="36.5125%" y="335.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (153 samples, 0.10%)</title><rect x="36.2523%" y="341" width="0.0981%" height="15" fill="rgb(239,186,37)"/><text x="36.5023%" y="351.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (163 samples, 0.10%)</title><rect x="36.2484%" y="357" width="0.1045%" height="15" fill="rgb(252,136,39)"/><text x="36.4984%" y="367.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (179 samples, 0.11%)</title><rect x="36.2401%" y="389" width="0.1147%" height="15" fill="rgb(223,213,32)"/><text x="36.4901%" y="399.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (174 samples, 0.11%)</title><rect x="36.2433%" y="373" width="0.1115%" height="15" fill="rgb(233,115,5)"/><text x="36.4933%" y="383.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (196 samples, 0.13%)</title><rect x="36.2311%" y="405" width="0.1256%" height="15" fill="rgb(207,226,44)"/><text x="36.4811%" y="415.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::ParentHashInput::hash (33 samples, 0.02%)</title><rect x="36.3612%" y="373" width="0.0212%" height="15" fill="rgb(208,126,0)"/><text x="36.6112%" y="383.50"></text></g><g><title>group-b073d76844680b0b`tls_codec::hpke::_&lt;impl tls_codec::Serialize for hpke_rs::HpkePublicKey&gt;::tls_serialize (25 samples, 0.02%)</title><rect x="36.3933%" y="325" width="0.0160%" height="15" fill="rgb(244,66,21)"/><text x="36.6433%" y="335.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::codec::_&lt;impl tls_codec::Serialize for openmls::tree::hashes::ParentHashInput&gt;::tls_serialize (28 samples, 0.02%)</title><rect x="36.3927%" y="341" width="0.0179%" height="15" fill="rgb(222,97,12)"/><text x="36.6427%" y="351.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::ParentHashInput::hash (44 samples, 0.03%)</title><rect x="36.3862%" y="357" width="0.0282%" height="15" fill="rgb(219,213,19)"/><text x="36.6362%" y="367.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::original_child_resolution (16 samples, 0.01%)</title><rect x="36.4144%" y="357" width="0.0103%" height="15" fill="rgb(252,169,30)"/><text x="36.6644%" y="367.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::codec::_&lt;impl tls_codec::Serialize for openmls::tree::hashes::ParentHashInput&gt;::tls_serialize (39 samples, 0.02%)</title><rect x="36.4330%" y="325" width="0.0250%" height="15" fill="rgb(206,32,51)"/><text x="36.6830%" y="335.50"></text></g><g><title>group-b073d76844680b0b`tls_codec::hpke::_&lt;impl tls_codec::Serialize for hpke_rs::HpkePublicKey&gt;::tls_serialize (38 samples, 0.02%)</title><rect x="36.4337%" y="309" width="0.0244%" height="15" fill="rgb(250,172,42)"/><text x="36.6837%" y="319.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::ParentHashInput::hash (59 samples, 0.04%)</title><rect x="36.4253%" y="341" width="0.0378%" height="15" fill="rgb(209,34,43)"/><text x="36.6753%" y="351.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (18 samples, 0.01%)</title><rect x="36.4708%" y="309" width="0.0115%" height="15" fill="rgb(223,11,35)"/><text x="36.7208%" y="319.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (25 samples, 0.02%)</title><rect x="36.4676%" y="325" width="0.0160%" height="15" fill="rgb(251,219,26)"/><text x="36.7176%" y="335.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::original_child_resolution (37 samples, 0.02%)</title><rect x="36.4632%" y="341" width="0.0237%" height="15" fill="rgb(231,119,3)"/><text x="36.7132%" y="351.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (18 samples, 0.01%)</title><rect x="36.4926%" y="309" width="0.0115%" height="15" fill="rgb(216,97,11)"/><text x="36.7426%" y="319.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::codec::_&lt;impl tls_codec::Serialize for openmls::tree::hashes::ParentHashInput&gt;::tls_serialize (57 samples, 0.04%)</title><rect x="36.5042%" y="309" width="0.0365%" height="15" fill="rgb(223,59,9)"/><text x="36.7542%" y="319.50"></text></g><g><title>group-b073d76844680b0b`tls_codec::hpke::_&lt;impl tls_codec::Serialize for hpke_rs::HpkePublicKey&gt;::tls_serialize (55 samples, 0.04%)</title><rect x="36.5055%" y="293" width="0.0353%" height="15" fill="rgb(233,93,31)"/><text x="36.7555%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (21 samples, 0.01%)</title><rect x="36.5272%" y="277" width="0.0135%" height="15" fill="rgb(239,81,33)"/><text x="36.7772%" y="287.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::ParentHashInput::hash (84 samples, 0.05%)</title><rect x="36.4926%" y="325" width="0.0538%" height="15" fill="rgb(213,120,34)"/><text x="36.7426%" y="335.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (23 samples, 0.01%)</title><rect x="36.5651%" y="261" width="0.0147%" height="15" fill="rgb(243,49,53)"/><text x="36.8151%" y="271.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (42 samples, 0.03%)</title><rect x="36.5554%" y="277" width="0.0269%" height="15" fill="rgb(247,216,33)"/><text x="36.8054%" y="287.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (49 samples, 0.03%)</title><rect x="36.5535%" y="293" width="0.0314%" height="15" fill="rgb(226,26,14)"/><text x="36.8035%" y="303.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (60 samples, 0.04%)</title><rect x="36.5490%" y="309" width="0.0385%" height="15" fill="rgb(215,49,53)"/><text x="36.7990%" y="319.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::original_child_resolution (69 samples, 0.04%)</title><rect x="36.5465%" y="325" width="0.0442%" height="15" fill="rgb(245,162,40)"/><text x="36.7965%" y="335.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (25 samples, 0.02%)</title><rect x="36.5933%" y="293" width="0.0160%" height="15" fill="rgb(229,68,17)"/><text x="36.8433%" y="303.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (21 samples, 0.01%)</title><rect x="36.5958%" y="277" width="0.0135%" height="15" fill="rgb(213,182,10)"/><text x="36.8458%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (16 samples, 0.01%)</title><rect x="36.6227%" y="245" width="0.0103%" height="15" fill="rgb(245,125,30)"/><text x="36.8727%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (17 samples, 0.01%)</title><rect x="36.6227%" y="261" width="0.0109%" height="15" fill="rgb(232,202,2)"/><text x="36.8727%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (16 samples, 0.01%)</title><rect x="36.6394%" y="261" width="0.0103%" height="15" fill="rgb(237,140,51)"/><text x="36.8894%" y="271.50"></text></g><g><title>group-b073d76844680b0b`tls_codec::hpke::_&lt;impl tls_codec::Serialize for hpke_rs::HpkePublicKey&gt;::tls_serialize (89 samples, 0.06%)</title><rect x="36.6106%" y="277" width="0.0570%" height="15" fill="rgb(236,157,25)"/><text x="36.8606%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (28 samples, 0.02%)</title><rect x="36.6497%" y="261" width="0.0179%" height="15" fill="rgb(219,209,0)"/><text x="36.8997%" y="271.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::codec::_&lt;impl tls_codec::Serialize for openmls::tree::hashes::ParentHashInput&gt;::tls_serialize (94 samples, 0.06%)</title><rect x="36.6093%" y="293" width="0.0602%" height="15" fill="rgb(240,116,54)"/><text x="36.8593%" y="303.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::ParentHashInput::hash (131 samples, 0.08%)</title><rect x="36.5920%" y="309" width="0.0840%" height="15" fill="rgb(216,10,36)"/><text x="36.8420%" y="319.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (30 samples, 0.02%)</title><rect x="36.7208%" y="229" width="0.0192%" height="15" fill="rgb(222,72,44)"/><text x="36.9708%" y="239.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (66 samples, 0.04%)</title><rect x="36.7067%" y="245" width="0.0423%" height="15" fill="rgb(232,159,9)"/><text x="36.9567%" y="255.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (85 samples, 0.05%)</title><rect x="36.7009%" y="261" width="0.0545%" height="15" fill="rgb(210,39,32)"/><text x="36.9509%" y="271.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (110 samples, 0.07%)</title><rect x="36.6875%" y="277" width="0.0705%" height="15" fill="rgb(216,194,45)"/><text x="36.9375%" y="287.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (131 samples, 0.08%)</title><rect x="36.6785%" y="293" width="0.0840%" height="15" fill="rgb(218,18,35)"/><text x="36.9285%" y="303.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::original_child_resolution (138 samples, 0.09%)</title><rect x="36.6759%" y="309" width="0.0884%" height="15" fill="rgb(207,83,51)"/><text x="36.9259%" y="319.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (22 samples, 0.01%)</title><rect x="36.7689%" y="261" width="0.0141%" height="15" fill="rgb(225,63,43)"/><text x="37.0189%" y="271.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (27 samples, 0.02%)</title><rect x="36.7669%" y="277" width="0.0173%" height="15" fill="rgb(207,57,36)"/><text x="37.0169%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (25 samples, 0.02%)</title><rect x="36.8137%" y="245" width="0.0160%" height="15" fill="rgb(216,99,33)"/><text x="37.0637%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (23 samples, 0.01%)</title><rect x="36.8150%" y="229" width="0.0147%" height="15" fill="rgb(225,42,16)"/><text x="37.0650%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (23 samples, 0.01%)</title><rect x="36.8150%" y="213" width="0.0147%" height="15" fill="rgb(220,201,45)"/><text x="37.0650%" y="223.50"></text></g><g><title>group-b073d76844680b0b`tls_codec::hpke::_&lt;impl tls_codec::Serialize for hpke_rs::HpkePublicKey&gt;::tls_serialize (132 samples, 0.08%)</title><rect x="36.7894%" y="261" width="0.0846%" height="15" fill="rgb(225,33,4)"/><text x="37.0394%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (37 samples, 0.02%)</title><rect x="36.8503%" y="245" width="0.0237%" height="15" fill="rgb(224,33,50)"/><text x="37.1003%" y="255.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::codec::_&lt;impl tls_codec::Serialize for openmls::tree::hashes::ParentHashInput&gt;::tls_serialize (141 samples, 0.09%)</title><rect x="36.7855%" y="277" width="0.0904%" height="15" fill="rgb(246,198,51)"/><text x="37.0355%" y="287.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::ParentHashInput::hash (180 samples, 0.12%)</title><rect x="36.7657%" y="293" width="0.1154%" height="15" fill="rgb(205,22,4)"/><text x="37.0157%" y="303.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (53 samples, 0.03%)</title><rect x="36.9503%" y="197" width="0.0340%" height="15" fill="rgb(206,3,8)"/><text x="37.2003%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (35 samples, 0.02%)</title><rect x="36.9618%" y="181" width="0.0224%" height="15" fill="rgb(251,23,15)"/><text x="37.2118%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (34 samples, 0.02%)</title><rect x="36.9624%" y="165" width="0.0218%" height="15" fill="rgb(252,88,28)"/><text x="37.2124%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (31 samples, 0.02%)</title><rect x="36.9644%" y="149" width="0.0199%" height="15" fill="rgb(212,127,14)"/><text x="37.2144%" y="159.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (93 samples, 0.06%)</title><rect x="36.9304%" y="213" width="0.0596%" height="15" fill="rgb(247,145,37)"/><text x="37.1804%" y="223.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (121 samples, 0.08%)</title><rect x="36.9208%" y="229" width="0.0776%" height="15" fill="rgb(209,117,53)"/><text x="37.1708%" y="239.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (149 samples, 0.10%)</title><rect x="36.9086%" y="245" width="0.0955%" height="15" fill="rgb(212,90,42)"/><text x="37.1586%" y="255.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (173 samples, 0.11%)</title><rect x="36.8977%" y="261" width="0.1109%" height="15" fill="rgb(218,164,37)"/><text x="37.1477%" y="271.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (200 samples, 0.13%)</title><rect x="36.8836%" y="277" width="0.1282%" height="15" fill="rgb(246,65,34)"/><text x="37.1336%" y="287.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::original_child_resolution (211 samples, 0.14%)</title><rect x="36.8810%" y="293" width="0.1352%" height="15" fill="rgb(231,100,33)"/><text x="37.1310%" y="303.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (35 samples, 0.02%)</title><rect x="37.0323%" y="245" width="0.0224%" height="15" fill="rgb(228,126,14)"/><text x="37.2823%" y="255.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (46 samples, 0.03%)</title><rect x="37.0265%" y="261" width="0.0295%" height="15" fill="rgb(215,173,21)"/><text x="37.2765%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (36 samples, 0.02%)</title><rect x="37.0868%" y="213" width="0.0231%" height="15" fill="rgb(210,6,40)"/><text x="37.3368%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (33 samples, 0.02%)</title><rect x="37.0887%" y="197" width="0.0212%" height="15" fill="rgb(212,48,18)"/><text x="37.3387%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (40 samples, 0.03%)</title><rect x="37.0848%" y="229" width="0.0256%" height="15" fill="rgb(230,214,11)"/><text x="37.3348%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (18 samples, 0.01%)</title><rect x="37.1111%" y="229" width="0.0115%" height="15" fill="rgb(254,105,39)"/><text x="37.3611%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (29 samples, 0.02%)</title><rect x="37.1227%" y="229" width="0.0186%" height="15" fill="rgb(245,158,5)"/><text x="37.3727%" y="239.50"></text></g><g><title>group-b073d76844680b0b`tls_codec::hpke::_&lt;impl tls_codec::Serialize for hpke_rs::HpkePublicKey&gt;::tls_serialize (161 samples, 0.10%)</title><rect x="37.0611%" y="245" width="0.1032%" height="15" fill="rgb(249,208,11)"/><text x="37.3111%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (34 samples, 0.02%)</title><rect x="37.1425%" y="229" width="0.0218%" height="15" fill="rgb(210,39,28)"/><text x="37.3925%" y="239.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::codec::_&lt;impl tls_codec::Serialize for openmls::tree::hashes::ParentHashInput&gt;::tls_serialize (175 samples, 0.11%)</title><rect x="37.0566%" y="261" width="0.1122%" height="15" fill="rgb(211,56,53)"/><text x="37.3066%" y="271.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::ParentHashInput::hash (240 samples, 0.15%)</title><rect x="37.0246%" y="277" width="0.1538%" height="15" fill="rgb(226,201,30)"/><text x="37.2746%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (23 samples, 0.01%)</title><rect x="37.2239%" y="149" width="0.0147%" height="15" fill="rgb(239,101,34)"/><text x="37.4739%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (21 samples, 0.01%)</title><rect x="37.2252%" y="133" width="0.0135%" height="15" fill="rgb(226,209,5)"/><text x="37.4752%" y="143.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (26 samples, 0.02%)</title><rect x="37.2239%" y="197" width="0.0167%" height="15" fill="rgb(250,105,47)"/><text x="37.4739%" y="207.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (26 samples, 0.02%)</title><rect x="37.2239%" y="181" width="0.0167%" height="15" fill="rgb(230,72,3)"/><text x="37.4739%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`realloc (26 samples, 0.02%)</title><rect x="37.2239%" y="165" width="0.0167%" height="15" fill="rgb(232,218,39)"/><text x="37.4739%" y="175.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.01%)</title><rect x="37.2739%" y="165" width="0.0115%" height="15" fill="rgb(248,166,6)"/><text x="37.5239%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (36 samples, 0.02%)</title><rect x="37.3092%" y="133" width="0.0231%" height="15" fill="rgb(247,89,20)"/><text x="37.5592%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (33 samples, 0.02%)</title><rect x="37.3111%" y="117" width="0.0212%" height="15" fill="rgb(248,130,54)"/><text x="37.5611%" y="127.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (75 samples, 0.05%)</title><rect x="37.2855%" y="165" width="0.0481%" height="15" fill="rgb(234,196,4)"/><text x="37.5355%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (42 samples, 0.03%)</title><rect x="37.3066%" y="149" width="0.0269%" height="15" fill="rgb(250,143,31)"/><text x="37.5566%" y="159.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (140 samples, 0.09%)</title><rect x="37.2585%" y="181" width="0.0897%" height="15" fill="rgb(211,110,34)"/><text x="37.5085%" y="191.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (188 samples, 0.12%)</title><rect x="37.2406%" y="197" width="0.1205%" height="15" fill="rgb(215,124,48)"/><text x="37.4906%" y="207.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (236 samples, 0.15%)</title><rect x="37.2150%" y="213" width="0.1513%" height="15" fill="rgb(216,46,13)"/><text x="37.4650%" y="223.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (263 samples, 0.17%)</title><rect x="37.1996%" y="229" width="0.1686%" height="15" fill="rgb(205,184,25)"/><text x="37.4496%" y="239.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (278 samples, 0.18%)</title><rect x="37.1932%" y="245" width="0.1782%" height="15" fill="rgb(228,1,10)"/><text x="37.4432%" y="255.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (292 samples, 0.19%)</title><rect x="37.1848%" y="261" width="0.1871%" height="15" fill="rgb(213,116,27)"/><text x="37.4348%" y="271.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::original_child_resolution (305 samples, 0.20%)</title><rect x="37.1784%" y="277" width="0.1955%" height="15" fill="rgb(241,95,50)"/><text x="37.4284%" y="287.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (35 samples, 0.02%)</title><rect x="37.3809%" y="229" width="0.0224%" height="15" fill="rgb(238,48,32)"/><text x="37.6309%" y="239.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (43 samples, 0.03%)</title><rect x="37.3771%" y="245" width="0.0276%" height="15" fill="rgb(235,113,49)"/><text x="37.6271%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (32 samples, 0.02%)</title><rect x="37.4284%" y="197" width="0.0205%" height="15" fill="rgb(205,127,43)"/><text x="37.6784%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (30 samples, 0.02%)</title><rect x="37.4297%" y="181" width="0.0192%" height="15" fill="rgb(250,162,2)"/><text x="37.6797%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (34 samples, 0.02%)</title><rect x="37.4277%" y="213" width="0.0218%" height="15" fill="rgb(220,13,41)"/><text x="37.6777%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (19 samples, 0.01%)</title><rect x="37.4495%" y="213" width="0.0122%" height="15" fill="rgb(249,221,25)"/><text x="37.6995%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.01%)</title><rect x="37.4617%" y="213" width="0.0128%" height="15" fill="rgb(215,208,19)"/><text x="37.7117%" y="223.50"></text></g><g><title>group-b073d76844680b0b`tls_codec::hpke::_&lt;impl tls_codec::Serialize for hpke_rs::HpkePublicKey&gt;::tls_serialize (142 samples, 0.09%)</title><rect x="37.4079%" y="229" width="0.0910%" height="15" fill="rgb(236,175,2)"/><text x="37.6579%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (36 samples, 0.02%)</title><rect x="37.4758%" y="213" width="0.0231%" height="15" fill="rgb(241,52,2)"/><text x="37.7258%" y="223.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::codec::_&lt;impl tls_codec::Serialize for openmls::tree::hashes::ParentHashInput&gt;::tls_serialize (151 samples, 0.10%)</title><rect x="37.4047%" y="245" width="0.0968%" height="15" fill="rgb(248,140,14)"/><text x="37.6547%" y="255.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::ParentHashInput::hash (201 samples, 0.13%)</title><rect x="37.3765%" y="261" width="0.1288%" height="15" fill="rgb(253,22,42)"/><text x="37.6265%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (18 samples, 0.01%)</title><rect x="37.5482%" y="117" width="0.0115%" height="15" fill="rgb(234,61,47)"/><text x="37.7982%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`realloc (20 samples, 0.01%)</title><rect x="37.5482%" y="133" width="0.0128%" height="15" fill="rgb(208,226,15)"/><text x="37.7982%" y="143.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (22 samples, 0.01%)</title><rect x="37.5476%" y="149" width="0.0141%" height="15" fill="rgb(217,221,4)"/><text x="37.7976%" y="159.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (23 samples, 0.01%)</title><rect x="37.5476%" y="165" width="0.0147%" height="15" fill="rgb(212,174,34)"/><text x="37.7976%" y="175.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.01%)</title><rect x="37.5841%" y="133" width="0.0115%" height="15" fill="rgb(253,83,4)"/><text x="37.8341%" y="143.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (16 samples, 0.01%)</title><rect x="37.5854%" y="117" width="0.0103%" height="15" fill="rgb(250,195,49)"/><text x="37.8354%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (31 samples, 0.02%)</title><rect x="37.6142%" y="101" width="0.0199%" height="15" fill="rgb(241,192,25)"/><text x="37.8642%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (28 samples, 0.02%)</title><rect x="37.6162%" y="85" width="0.0179%" height="15" fill="rgb(208,124,10)"/><text x="37.8662%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (33 samples, 0.02%)</title><rect x="37.6136%" y="117" width="0.0212%" height="15" fill="rgb(222,33,0)"/><text x="37.8636%" y="127.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (60 samples, 0.04%)</title><rect x="37.5969%" y="133" width="0.0385%" height="15" fill="rgb(234,209,28)"/><text x="37.8469%" y="143.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (131 samples, 0.08%)</title><rect x="37.5687%" y="149" width="0.0840%" height="15" fill="rgb(224,11,23)"/><text x="37.8187%" y="159.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (164 samples, 0.11%)</title><rect x="37.5623%" y="165" width="0.1051%" height="15" fill="rgb(232,99,1)"/><text x="37.8123%" y="175.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (210 samples, 0.13%)</title><rect x="37.5393%" y="181" width="0.1346%" height="15" fill="rgb(237,95,45)"/><text x="37.7893%" y="191.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (231 samples, 0.15%)</title><rect x="37.5271%" y="197" width="0.1481%" height="15" fill="rgb(208,109,11)"/><text x="37.7771%" y="207.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (248 samples, 0.16%)</title><rect x="37.5207%" y="213" width="0.1589%" height="15" fill="rgb(216,190,48)"/><text x="37.7707%" y="223.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (256 samples, 0.16%)</title><rect x="37.5168%" y="229" width="0.1641%" height="15" fill="rgb(251,171,36)"/><text x="37.7668%" y="239.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (268 samples, 0.17%)</title><rect x="37.5104%" y="245" width="0.1718%" height="15" fill="rgb(230,62,22)"/><text x="37.7604%" y="255.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::original_child_resolution (277 samples, 0.18%)</title><rect x="37.5053%" y="261" width="0.1775%" height="15" fill="rgb(225,114,35)"/><text x="37.7553%" y="271.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (35 samples, 0.02%)</title><rect x="37.6854%" y="229" width="0.0224%" height="15" fill="rgb(215,118,42)"/><text x="37.9354%" y="239.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (28 samples, 0.02%)</title><rect x="37.6899%" y="213" width="0.0179%" height="15" fill="rgb(243,119,21)"/><text x="37.9399%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (19 samples, 0.01%)</title><rect x="37.7251%" y="181" width="0.0122%" height="15" fill="rgb(252,177,53)"/><text x="37.9751%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (19 samples, 0.01%)</title><rect x="37.7251%" y="165" width="0.0122%" height="15" fill="rgb(237,209,29)"/><text x="37.9751%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (20 samples, 0.01%)</title><rect x="37.7251%" y="197" width="0.0128%" height="15" fill="rgb(212,65,23)"/><text x="37.9751%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (21 samples, 0.01%)</title><rect x="37.7450%" y="197" width="0.0135%" height="15" fill="rgb(230,222,46)"/><text x="37.9950%" y="207.50"></text></g><g><title>group-b073d76844680b0b`tls_codec::hpke::_&lt;impl tls_codec::Serialize for hpke_rs::HpkePublicKey&gt;::tls_serialize (110 samples, 0.07%)</title><rect x="37.7117%" y="213" width="0.0705%" height="15" fill="rgb(215,135,32)"/><text x="37.9617%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (36 samples, 0.02%)</title><rect x="37.7591%" y="197" width="0.0231%" height="15" fill="rgb(246,101,22)"/><text x="38.0091%" y="207.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::codec::_&lt;impl tls_codec::Serialize for openmls::tree::hashes::ParentHashInput&gt;::tls_serialize (120 samples, 0.08%)</title><rect x="37.7085%" y="229" width="0.0769%" height="15" fill="rgb(206,107,13)"/><text x="37.9585%" y="239.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::ParentHashInput::hash (170 samples, 0.11%)</title><rect x="37.6841%" y="245" width="0.1090%" height="15" fill="rgb(250,100,44)"/><text x="37.9341%" y="255.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16 samples, 0.01%)</title><rect x="37.8572%" y="101" width="0.0103%" height="15" fill="rgb(231,147,38)"/><text x="38.1072%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (21 samples, 0.01%)</title><rect x="37.8789%" y="85" width="0.0135%" height="15" fill="rgb(229,8,40)"/><text x="38.1289%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.01%)</title><rect x="37.8789%" y="69" width="0.0135%" height="15" fill="rgb(221,135,30)"/><text x="38.1289%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (19 samples, 0.01%)</title><rect x="37.8802%" y="53" width="0.0122%" height="15" fill="rgb(249,193,18)"/><text x="38.1302%" y="63.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (40 samples, 0.03%)</title><rect x="37.8674%" y="101" width="0.0256%" height="15" fill="rgb(209,133,39)"/><text x="38.1174%" y="111.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (84 samples, 0.05%)</title><rect x="37.8431%" y="117" width="0.0538%" height="15" fill="rgb(232,100,14)"/><text x="38.0931%" y="127.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (109 samples, 0.07%)</title><rect x="37.8379%" y="133" width="0.0699%" height="15" fill="rgb(224,185,1)"/><text x="38.0879%" y="143.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (140 samples, 0.09%)</title><rect x="37.8213%" y="149" width="0.0897%" height="15" fill="rgb(223,139,8)"/><text x="38.0713%" y="159.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (156 samples, 0.10%)</title><rect x="37.8129%" y="165" width="0.1000%" height="15" fill="rgb(232,213,38)"/><text x="38.0629%" y="175.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (166 samples, 0.11%)</title><rect x="37.8084%" y="181" width="0.1064%" height="15" fill="rgb(207,94,22)"/><text x="38.0584%" y="191.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (169 samples, 0.11%)</title><rect x="37.8072%" y="197" width="0.1083%" height="15" fill="rgb(219,183,54)"/><text x="38.0572%" y="207.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (172 samples, 0.11%)</title><rect x="37.8065%" y="213" width="0.1102%" height="15" fill="rgb(216,185,54)"/><text x="38.0565%" y="223.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (184 samples, 0.12%)</title><rect x="37.8020%" y="229" width="0.1179%" height="15" fill="rgb(254,217,39)"/><text x="38.0520%" y="239.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::original_child_resolution (200 samples, 0.13%)</title><rect x="37.7931%" y="245" width="0.1282%" height="15" fill="rgb(240,178,23)"/><text x="38.0431%" y="255.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (16 samples, 0.01%)</title><rect x="37.9430%" y="197" width="0.0103%" height="15" fill="rgb(218,11,47)"/><text x="38.1930%" y="207.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (39 samples, 0.02%)</title><rect x="37.9328%" y="213" width="0.0250%" height="15" fill="rgb(218,51,51)"/><text x="38.1828%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.01%)</title><rect x="37.9757%" y="165" width="0.0135%" height="15" fill="rgb(238,126,27)"/><text x="38.2257%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (20 samples, 0.01%)</title><rect x="37.9764%" y="149" width="0.0128%" height="15" fill="rgb(249,202,22)"/><text x="38.2264%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (23 samples, 0.01%)</title><rect x="37.9751%" y="181" width="0.0147%" height="15" fill="rgb(254,195,49)"/><text x="38.2251%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (19 samples, 0.01%)</title><rect x="37.9949%" y="181" width="0.0122%" height="15" fill="rgb(208,123,14)"/><text x="38.2449%" y="191.50"></text></g><g><title>group-b073d76844680b0b`tls_codec::hpke::_&lt;impl tls_codec::Serialize for hpke_rs::HpkePublicKey&gt;::tls_serialize (99 samples, 0.06%)</title><rect x="37.9635%" y="197" width="0.0635%" height="15" fill="rgb(224,200,8)"/><text x="38.2135%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (31 samples, 0.02%)</title><rect x="38.0071%" y="181" width="0.0199%" height="15" fill="rgb(217,61,36)"/><text x="38.2571%" y="191.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::codec::_&lt;impl tls_codec::Serialize for openmls::tree::hashes::ParentHashInput&gt;::tls_serialize (111 samples, 0.07%)</title><rect x="37.9584%" y="213" width="0.0711%" height="15" fill="rgb(206,35,45)"/><text x="38.2084%" y="223.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::ParentHashInput::hash (171 samples, 0.11%)</title><rect x="37.9270%" y="229" width="0.1096%" height="15" fill="rgb(217,65,33)"/><text x="38.1770%" y="239.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (28 samples, 0.02%)</title><rect x="38.0956%" y="69" width="0.0179%" height="15" fill="rgb(222,158,48)"/><text x="38.3456%" y="79.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (53 samples, 0.03%)</title><rect x="38.0828%" y="85" width="0.0340%" height="15" fill="rgb(254,2,54)"/><text x="38.3328%" y="95.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (66 samples, 0.04%)</title><rect x="38.0789%" y="101" width="0.0423%" height="15" fill="rgb(250,143,38)"/><text x="38.3289%" y="111.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (93 samples, 0.06%)</title><rect x="38.0648%" y="133" width="0.0596%" height="15" fill="rgb(248,25,0)"/><text x="38.3148%" y="143.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (85 samples, 0.05%)</title><rect x="38.0699%" y="117" width="0.0545%" height="15" fill="rgb(206,152,27)"/><text x="38.3199%" y="127.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (101 samples, 0.06%)</title><rect x="38.0603%" y="181" width="0.0647%" height="15" fill="rgb(240,77,30)"/><text x="38.3103%" y="191.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (98 samples, 0.06%)</title><rect x="38.0622%" y="165" width="0.0628%" height="15" fill="rgb(231,5,3)"/><text x="38.3122%" y="175.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (97 samples, 0.06%)</title><rect x="38.0629%" y="149" width="0.0622%" height="15" fill="rgb(207,226,32)"/><text x="38.3129%" y="159.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (103 samples, 0.07%)</title><rect x="38.0597%" y="197" width="0.0660%" height="15" fill="rgb(222,207,47)"/><text x="38.3097%" y="207.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (118 samples, 0.08%)</title><rect x="38.0526%" y="213" width="0.0756%" height="15" fill="rgb(229,115,45)"/><text x="38.3026%" y="223.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::original_child_resolution (150 samples, 0.10%)</title><rect x="38.0366%" y="229" width="0.0961%" height="15" fill="rgb(224,191,6)"/><text x="38.2866%" y="239.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::set_parent_hashes::node_parent_hash (338 samples, 0.22%)</title><rect x="37.9212%" y="245" width="0.2166%" height="15" fill="rgb(230,227,24)"/><text x="38.1712%" y="255.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::set_parent_hashes::node_parent_hash (720 samples, 0.46%)</title><rect x="37.6828%" y="261" width="0.4615%" height="15" fill="rgb(228,80,19)"/><text x="37.9328%" y="271.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::set_parent_hashes::node_parent_hash (1,210 samples, 0.78%)</title><rect x="37.3739%" y="277" width="0.7755%" height="15" fill="rgb(247,229,0)"/><text x="37.6239%" y="287.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::set_parent_hashes::node_parent_hash (1,773 samples, 1.14%)</title><rect x="37.0163%" y="293" width="1.1363%" height="15" fill="rgb(237,194,15)"/><text x="37.2663%" y="303.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::set_parent_hashes::node_parent_hash (2,172 samples, 1.39%)</title><rect x="36.7644%" y="309" width="1.3921%" height="15" fill="rgb(219,203,20)"/><text x="37.0144%" y="319.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::set_parent_hashes::node_parent_hash (2,449 samples, 1.57%)</title><rect x="36.5907%" y="325" width="1.5696%" height="15" fill="rgb(234,128,8)"/><text x="36.8407%" y="335.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::set_parent_hashes::node_parent_hash (2,616 samples, 1.68%)</title><rect x="36.4869%" y="341" width="1.6766%" height="15" fill="rgb(248,202,8)"/><text x="36.7369%" y="351.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::set_parent_hashes::node_parent_hash (2,720 samples, 1.74%)</title><rect x="36.4247%" y="357" width="1.7433%" height="15" fill="rgb(206,104,37)"/><text x="36.6747%" y="367.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::set_parent_hashes::node_parent_hash (2,790 samples, 1.79%)</title><rect x="36.3856%" y="373" width="1.7882%" height="15" fill="rgb(223,8,27)"/><text x="36.6356%" y="383.50">g..</text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::set_parent_hashes::node_parent_hash (2,840 samples, 1.82%)</title><rect x="36.3587%" y="389" width="1.8202%" height="15" fill="rgb(216,217,28)"/><text x="36.6087%" y="399.50">g..</text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::set_parent_hashes::node_parent_hash (2,847 samples, 1.82%)</title><rect x="36.3568%" y="405" width="1.8247%" height="15" fill="rgb(249,199,1)"/><text x="36.6068%" y="415.50">g..</text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (30 samples, 0.02%)</title><rect x="38.2020%" y="389" width="0.0192%" height="15" fill="rgb(240,85,17)"/><text x="38.4520%" y="399.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (25 samples, 0.02%)</title><rect x="38.2052%" y="373" width="0.0160%" height="15" fill="rgb(206,108,45)"/><text x="38.4552%" y="383.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_HMAC_compute_sha2_256 (26 samples, 0.02%)</title><rect x="38.2302%" y="325" width="0.0167%" height="15" fill="rgb(245,210,41)"/><text x="38.4802%" y="335.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::hkdf::extract (46 samples, 0.03%)</title><rect x="38.2302%" y="341" width="0.0295%" height="15" fill="rgb(206,13,37)"/><text x="38.4802%" y="351.50"></text></g><g><title>group-b073d76844680b0b`&lt;hpke_rs::hkdf::HkdfSha256 as hpke_rs::kdf::KdfTrait&gt;::extract (47 samples, 0.03%)</title><rect x="38.2302%" y="357" width="0.0301%" height="15" fill="rgb(250,61,18)"/><text x="38.4802%" y="367.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_secret_to_public (3,166 samples, 2.03%)</title><rect x="38.2744%" y="325" width="2.0291%" height="15" fill="rgb(235,172,48)"/><text x="38.5244%" y="335.50">g..</text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_scalarmult (3,166 samples, 2.03%)</title><rect x="38.2744%" y="309" width="2.0291%" height="15" fill="rgb(249,201,17)"/><text x="38.5244%" y="319.50">g..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (26 samples, 0.02%)</title><rect x="40.3035%" y="325" width="0.0167%" height="15" fill="rgb(219,208,6)"/><text x="40.5535%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (24 samples, 0.02%)</title><rect x="40.3048%" y="309" width="0.0154%" height="15" fill="rgb(248,31,23)"/><text x="40.5548%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (24 samples, 0.02%)</title><rect x="40.3048%" y="293" width="0.0154%" height="15" fill="rgb(245,15,42)"/><text x="40.5548%" y="303.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::ecdh::derive_base (3,200 samples, 2.05%)</title><rect x="38.2712%" y="341" width="2.0509%" height="15" fill="rgb(222,217,39)"/><text x="38.5212%" y="351.50">g..</text></g><g><title>group-b073d76844680b0b`hpke_rs::dh_kem::DhKem::dh_base (3,202 samples, 2.05%)</title><rect x="38.2705%" y="357" width="2.0522%" height="15" fill="rgb(210,219,27)"/><text x="38.5205%" y="367.50">g..</text></g><g><title>group-b073d76844680b0b`sha256_update (18 samples, 0.01%)</title><rect x="40.3285%" y="277" width="0.0115%" height="15" fill="rgb(252,166,36)"/><text x="40.5785%" y="287.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_HMAC_compute_sha2_256 (26 samples, 0.02%)</title><rect x="40.3240%" y="293" width="0.0167%" height="15" fill="rgb(245,132,34)"/><text x="40.5740%" y="303.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (18 samples, 0.01%)</title><rect x="40.3420%" y="293" width="0.0115%" height="15" fill="rgb(236,54,3)"/><text x="40.5920%" y="303.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_HKDF_expand_sha2_256 (47 samples, 0.03%)</title><rect x="40.3240%" y="309" width="0.0301%" height="15" fill="rgb(241,173,43)"/><text x="40.5740%" y="319.50"></text></g><g><title>group-b073d76844680b0b`&lt;hpke_rs::hkdf::HkdfSha256 as hpke_rs::kdf::KdfTrait&gt;::expand (57 samples, 0.04%)</title><rect x="40.3240%" y="341" width="0.0365%" height="15" fill="rgb(215,190,9)"/><text x="40.5740%" y="351.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::hkdf::expand (57 samples, 0.04%)</title><rect x="40.3240%" y="325" width="0.0365%" height="15" fill="rgb(242,101,16)"/><text x="40.5740%" y="335.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::kdf::Kdf::labeled_expand (88 samples, 0.06%)</title><rect x="40.3228%" y="357" width="0.0564%" height="15" fill="rgb(223,190,21)"/><text x="40.5728%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (23 samples, 0.01%)</title><rect x="40.3792%" y="357" width="0.0147%" height="15" fill="rgb(215,228,25)"/><text x="40.6292%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (22 samples, 0.01%)</title><rect x="40.3798%" y="341" width="0.0141%" height="15" fill="rgb(225,36,22)"/><text x="40.6298%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (21 samples, 0.01%)</title><rect x="40.3804%" y="325" width="0.0135%" height="15" fill="rgb(251,106,46)"/><text x="40.6304%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.01%)</title><rect x="40.4010%" y="357" width="0.0128%" height="15" fill="rgb(208,90,1)"/><text x="40.6510%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (16 samples, 0.01%)</title><rect x="40.4035%" y="341" width="0.0103%" height="15" fill="rgb(243,10,4)"/><text x="40.6535%" y="351.50"></text></g><g><title>group-b073d76844680b0b`&lt;hpke_rs::dh_kem::DhKem as hpke_rs::kem::KemTrait&gt;::derive_key_pair (3,416 samples, 2.19%)</title><rect x="38.2263%" y="373" width="2.1894%" height="15" fill="rgb(212,137,27)"/><text x="38.4763%" y="383.50">g..</text></g><g><title>group-b073d76844680b0b`hpke_rs::Hpke::derive_key_pair (3,442 samples, 2.21%)</title><rect x="38.2231%" y="389" width="2.2060%" height="15" fill="rgb(231,220,49)"/><text x="38.4731%" y="399.50">g..</text></g><g><title>group-b073d76844680b0b`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (24 samples, 0.02%)</title><rect x="40.4465%" y="341" width="0.0154%" height="15" fill="rgb(237,96,20)"/><text x="40.6965%" y="351.50"></text></g><g><title>group-b073d76844680b0b`&lt;openmls::config::ProtocolVersion as core::fmt::Display&gt;::fmt (18 samples, 0.01%)</title><rect x="40.4618%" y="341" width="0.0115%" height="15" fill="rgb(239,229,30)"/><text x="40.7118%" y="351.50"></text></g><g><title>group-b073d76844680b0b`core::fmt::Formatter::write_fmt (18 samples, 0.01%)</title><rect x="40.4618%" y="325" width="0.0115%" height="15" fill="rgb(219,65,33)"/><text x="40.7118%" y="335.50"></text></g><g><title>group-b073d76844680b0b`core::fmt::write (17 samples, 0.01%)</title><rect x="40.4625%" y="309" width="0.0109%" height="15" fill="rgb(243,134,7)"/><text x="40.7125%" y="319.50"></text></g><g><title>group-b073d76844680b0b`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (16 samples, 0.01%)</title><rect x="40.4631%" y="293" width="0.0103%" height="15" fill="rgb(216,177,54)"/><text x="40.7131%" y="303.50"></text></g><g><title>group-b073d76844680b0b`alloc::fmt::format (68 samples, 0.04%)</title><rect x="40.4336%" y="373" width="0.0436%" height="15" fill="rgb(211,160,20)"/><text x="40.6836%" y="383.50"></text></g><g><title>group-b073d76844680b0b`core::fmt::write (49 samples, 0.03%)</title><rect x="40.4458%" y="357" width="0.0314%" height="15" fill="rgb(239,85,39)"/><text x="40.6958%" y="367.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (19 samples, 0.01%)</title><rect x="40.4772%" y="373" width="0.0122%" height="15" fill="rgb(232,125,22)"/><text x="40.7272%" y="383.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (17 samples, 0.01%)</title><rect x="40.4785%" y="357" width="0.0109%" height="15" fill="rgb(244,57,34)"/><text x="40.7285%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.01%)</title><rect x="40.4792%" y="341" width="0.0103%" height="15" fill="rgb(214,203,32)"/><text x="40.7292%" y="351.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (29 samples, 0.02%)</title><rect x="40.5022%" y="325" width="0.0186%" height="15" fill="rgb(207,58,43)"/><text x="40.7522%" y="335.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_HMAC_compute_sha2_256 (44 samples, 0.03%)</title><rect x="40.4933%" y="341" width="0.0282%" height="15" fill="rgb(215,193,15)"/><text x="40.7433%" y="351.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (20 samples, 0.01%)</title><rect x="40.5215%" y="341" width="0.0128%" height="15" fill="rgb(232,15,44)"/><text x="40.7715%" y="351.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_HKDF_expand_sha2_256 (73 samples, 0.05%)</title><rect x="40.4913%" y="357" width="0.0468%" height="15" fill="rgb(212,3,48)"/><text x="40.7413%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (24 samples, 0.02%)</title><rect x="40.5381%" y="357" width="0.0154%" height="15" fill="rgb(218,128,7)"/><text x="40.7881%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (23 samples, 0.01%)</title><rect x="40.5388%" y="341" width="0.0147%" height="15" fill="rgb(226,216,39)"/><text x="40.7888%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (23 samples, 0.01%)</title><rect x="40.5388%" y="325" width="0.0147%" height="15" fill="rgb(243,47,51)"/><text x="40.7888%" y="335.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::hkdf::expand (100 samples, 0.06%)</title><rect x="40.4907%" y="373" width="0.0641%" height="15" fill="rgb(241,183,40)"/><text x="40.7407%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (39 samples, 0.02%)</title><rect x="40.5753%" y="309" width="0.0250%" height="15" fill="rgb(231,217,32)"/><text x="40.8253%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (37 samples, 0.02%)</title><rect x="40.5766%" y="293" width="0.0237%" height="15" fill="rgb(229,61,38)"/><text x="40.8266%" y="303.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (56 samples, 0.04%)</title><rect x="40.5650%" y="357" width="0.0359%" height="15" fill="rgb(225,210,5)"/><text x="40.8150%" y="367.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (52 samples, 0.03%)</title><rect x="40.5676%" y="341" width="0.0333%" height="15" fill="rgb(231,79,45)"/><text x="40.8176%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`realloc (42 samples, 0.03%)</title><rect x="40.5740%" y="325" width="0.0269%" height="15" fill="rgb(224,100,7)"/><text x="40.8240%" y="335.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (103 samples, 0.07%)</title><rect x="40.5548%" y="373" width="0.0660%" height="15" fill="rgb(241,198,18)"/><text x="40.8048%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (29 samples, 0.02%)</title><rect x="40.6022%" y="357" width="0.0186%" height="15" fill="rgb(252,97,53)"/><text x="40.8522%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (25 samples, 0.02%)</title><rect x="40.6048%" y="341" width="0.0160%" height="15" fill="rgb(220,88,7)"/><text x="40.8548%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (23 samples, 0.01%)</title><rect x="40.6234%" y="373" width="0.0147%" height="15" fill="rgb(213,176,14)"/><text x="40.8734%" y="383.50"></text></g><g><title>group-b073d76844680b0b`openmls::ciphersuite::Secret::kdf_expand_label (327 samples, 0.21%)</title><rect x="40.4298%" y="389" width="0.2096%" height="15" fill="rgb(246,73,7)"/><text x="40.6798%" y="399.50"></text></g><g><title>group-b073d76844680b0b`hashbrown::map::HashMap&lt;K,V,S&gt;::insert (20 samples, 0.01%)</title><rect x="40.6426%" y="373" width="0.0128%" height="15" fill="rgb(245,64,36)"/><text x="40.8926%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.01%)</title><rect x="40.6567%" y="373" width="0.0109%" height="15" fill="rgb(245,80,10)"/><text x="40.9067%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (17 samples, 0.01%)</title><rect x="40.6567%" y="357" width="0.0109%" height="15" fill="rgb(232,107,50)"/><text x="40.9067%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (17 samples, 0.01%)</title><rect x="40.6567%" y="341" width="0.0109%" height="15" fill="rgb(253,3,0)"/><text x="40.9067%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (30 samples, 0.02%)</title><rect x="40.6676%" y="373" width="0.0192%" height="15" fill="rgb(212,99,53)"/><text x="40.9176%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (27 samples, 0.02%)</title><rect x="40.6695%" y="357" width="0.0173%" height="15" fill="rgb(249,111,54)"/><text x="40.9195%" y="367.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::path_keys::PathKeys::add (76 samples, 0.05%)</title><rect x="40.6394%" y="389" width="0.0487%" height="15" fill="rgb(249,55,30)"/><text x="40.8894%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (29 samples, 0.02%)</title><rect x="40.6881%" y="389" width="0.0186%" height="15" fill="rgb(237,47,42)"/><text x="40.9381%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (27 samples, 0.02%)</title><rect x="40.6894%" y="373" width="0.0173%" height="15" fill="rgb(211,20,18)"/><text x="40.9394%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (27 samples, 0.02%)</title><rect x="40.6894%" y="357" width="0.0173%" height="15" fill="rgb(231,203,46)"/><text x="40.9394%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (37 samples, 0.02%)</title><rect x="40.7291%" y="357" width="0.0237%" height="15" fill="rgb(237,142,3)"/><text x="40.9791%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (78 samples, 0.05%)</title><rect x="40.7067%" y="389" width="0.0500%" height="15" fill="rgb(241,107,1)"/><text x="40.9567%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (66 samples, 0.04%)</title><rect x="40.7144%" y="373" width="0.0423%" height="15" fill="rgb(229,83,13)"/><text x="40.9644%" y="383.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::private_tree::PrivateTree::derive_path_secrets (4,016 samples, 2.57%)</title><rect x="38.1853%" y="405" width="2.5739%" height="15" fill="rgb(241,91,40)"/><text x="38.4353%" y="415.50">gr..</text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (23 samples, 0.01%)</title><rect x="40.7733%" y="325" width="0.0147%" height="15" fill="rgb(225,3,45)"/><text x="41.0233%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (23 samples, 0.01%)</title><rect x="40.7733%" y="309" width="0.0147%" height="15" fill="rgb(244,223,14)"/><text x="41.0233%" y="319.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (30 samples, 0.02%)</title><rect x="40.7695%" y="373" width="0.0192%" height="15" fill="rgb(224,124,37)"/><text x="41.0195%" y="383.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (27 samples, 0.02%)</title><rect x="40.7714%" y="357" width="0.0173%" height="15" fill="rgb(251,171,30)"/><text x="41.0214%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`realloc (25 samples, 0.02%)</title><rect x="40.7727%" y="341" width="0.0160%" height="15" fill="rgb(236,46,54)"/><text x="41.0227%" y="351.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::treemath::sibling (23 samples, 0.01%)</title><rect x="40.7887%" y="373" width="0.0147%" height="15" fill="rgb(245,213,5)"/><text x="41.0387%" y="383.50"></text></g><g><title>group-b073d76844680b0b`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (63 samples, 0.04%)</title><rect x="40.7656%" y="389" width="0.0404%" height="15" fill="rgb(230,144,27)"/><text x="41.0156%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (16 samples, 0.01%)</title><rect x="40.8060%" y="341" width="0.0103%" height="15" fill="rgb(220,86,6)"/><text x="41.0560%" y="351.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (17 samples, 0.01%)</title><rect x="40.8060%" y="389" width="0.0109%" height="15" fill="rgb(240,20,13)"/><text x="41.0560%" y="399.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (17 samples, 0.01%)</title><rect x="40.8060%" y="373" width="0.0109%" height="15" fill="rgb(217,89,34)"/><text x="41.0560%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`realloc (17 samples, 0.01%)</title><rect x="40.8060%" y="357" width="0.0109%" height="15" fill="rgb(229,13,5)"/><text x="41.0560%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (21 samples, 0.01%)</title><rect x="40.8304%" y="325" width="0.0135%" height="15" fill="rgb(244,67,35)"/><text x="41.0804%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (20 samples, 0.01%)</title><rect x="40.8310%" y="309" width="0.0128%" height="15" fill="rgb(221,40,2)"/><text x="41.0810%" y="319.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::treemath::leaf_direct_path (43 samples, 0.03%)</title><rect x="40.8169%" y="389" width="0.0276%" height="15" fill="rgb(237,157,21)"/><text x="41.0669%" y="399.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (31 samples, 0.02%)</title><rect x="40.8246%" y="373" width="0.0199%" height="15" fill="rgb(222,94,11)"/><text x="41.0746%" y="383.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (30 samples, 0.02%)</title><rect x="40.8252%" y="357" width="0.0192%" height="15" fill="rgb(249,113,6)"/><text x="41.0752%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`realloc (22 samples, 0.01%)</title><rect x="40.8304%" y="341" width="0.0141%" height="15" fill="rgb(238,137,36)"/><text x="41.0804%" y="351.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::treemath::copath (150 samples, 0.10%)</title><rect x="40.7592%" y="405" width="0.0961%" height="15" fill="rgb(210,102,26)"/><text x="41.0092%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (17 samples, 0.01%)</title><rect x="40.8932%" y="309" width="0.0109%" height="15" fill="rgb(218,30,30)"/><text x="41.1432%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (17 samples, 0.01%)</title><rect x="40.9047%" y="309" width="0.0109%" height="15" fill="rgb(214,67,26)"/><text x="41.1547%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.01%)</title><rect x="40.9047%" y="293" width="0.0109%" height="15" fill="rgb(251,9,53)"/><text x="41.1547%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (44 samples, 0.03%)</title><rect x="40.8919%" y="325" width="0.0282%" height="15" fill="rgb(228,204,25)"/><text x="41.1419%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (50 samples, 0.03%)</title><rect x="40.8906%" y="341" width="0.0320%" height="15" fill="rgb(207,153,8)"/><text x="41.1406%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`realloc (55 samples, 0.04%)</title><rect x="40.8893%" y="357" width="0.0353%" height="15" fill="rgb(242,9,16)"/><text x="41.1393%" y="367.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (71 samples, 0.05%)</title><rect x="40.8797%" y="373" width="0.0455%" height="15" fill="rgb(217,211,10)"/><text x="41.1297%" y="383.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::treemath::leaf_direct_path (111 samples, 0.07%)</title><rect x="40.8554%" y="405" width="0.0711%" height="15" fill="rgb(219,228,52)"/><text x="41.1054%" y="415.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (79 samples, 0.05%)</title><rect x="40.8759%" y="389" width="0.0506%" height="15" fill="rgb(231,92,29)"/><text x="41.1259%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (43 samples, 0.03%)</title><rect x="40.9304%" y="405" width="0.0276%" height="15" fill="rgb(232,8,23)"/><text x="41.1804%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (37 samples, 0.02%)</title><rect x="40.9342%" y="389" width="0.0237%" height="15" fill="rgb(216,211,34)"/><text x="41.1842%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (36 samples, 0.02%)</title><rect x="40.9348%" y="373" width="0.0231%" height="15" fill="rgb(236,151,0)"/><text x="41.1848%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (178 samples, 0.11%)</title><rect x="40.9932%" y="389" width="0.1141%" height="15" fill="rgb(209,168,3)"/><text x="41.2432%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (168 samples, 0.11%)</title><rect x="40.9996%" y="373" width="0.1077%" height="15" fill="rgb(208,129,28)"/><text x="41.2496%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (237 samples, 0.15%)</title><rect x="40.9618%" y="405" width="0.1519%" height="15" fill="rgb(229,78,22)"/><text x="41.2118%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (259 samples, 0.17%)</title><rect x="41.5110%" y="373" width="0.1660%" height="15" fill="rgb(228,187,13)"/><text x="41.7610%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (975 samples, 0.62%)</title><rect x="41.1220%" y="405" width="0.6249%" height="15" fill="rgb(240,119,24)"/><text x="41.3720%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (729 samples, 0.47%)</title><rect x="41.2797%" y="389" width="0.4672%" height="15" fill="rgb(209,194,42)"/><text x="41.5297%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (109 samples, 0.07%)</title><rect x="41.6770%" y="373" width="0.0699%" height="15" fill="rgb(247,200,46)"/><text x="41.9270%" y="383.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::update_path (14,938 samples, 9.57%)</title><rect x="32.1959%" y="421" width="9.5740%" height="15" fill="rgb(218,76,16)"/><text x="32.4459%" y="431.50">group-b073d768..</text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::ParentHashInput::hash (31 samples, 0.02%)</title><rect x="41.7770%" y="389" width="0.0199%" height="15" fill="rgb(225,21,48)"/><text x="42.0270%" y="399.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::codec::_&lt;impl tls_codec::Serialize for openmls::tree::hashes::ParentHashInput&gt;::tls_serialize (16 samples, 0.01%)</title><rect x="41.8123%" y="357" width="0.0103%" height="15" fill="rgb(239,223,50)"/><text x="42.0623%" y="367.50"></text></g><g><title>group-b073d76844680b0b`tls_codec::hpke::_&lt;impl tls_codec::Serialize for hpke_rs::HpkePublicKey&gt;::tls_serialize (16 samples, 0.01%)</title><rect x="41.8123%" y="341" width="0.0103%" height="15" fill="rgb(244,45,21)"/><text x="42.0623%" y="351.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::ParentHashInput::hash (30 samples, 0.02%)</title><rect x="41.8065%" y="373" width="0.0192%" height="15" fill="rgb(232,33,43)"/><text x="42.0565%" y="383.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (19 samples, 0.01%)</title><rect x="41.8296%" y="357" width="0.0122%" height="15" fill="rgb(209,8,3)"/><text x="42.0796%" y="367.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::original_child_resolution (30 samples, 0.02%)</title><rect x="41.8257%" y="373" width="0.0192%" height="15" fill="rgb(214,25,53)"/><text x="42.0757%" y="383.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (17 samples, 0.01%)</title><rect x="41.8520%" y="341" width="0.0109%" height="15" fill="rgb(254,186,54)"/><text x="42.1020%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.01%)</title><rect x="41.8655%" y="309" width="0.0103%" height="15" fill="rgb(208,174,49)"/><text x="42.1155%" y="319.50"></text></g><g><title>group-b073d76844680b0b`tls_codec::hpke::_&lt;impl tls_codec::Serialize for hpke_rs::HpkePublicKey&gt;::tls_serialize (36 samples, 0.02%)</title><rect x="41.8635%" y="325" width="0.0231%" height="15" fill="rgb(233,191,51)"/><text x="42.1135%" y="335.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::codec::_&lt;impl tls_codec::Serialize for openmls::tree::hashes::ParentHashInput&gt;::tls_serialize (38 samples, 0.02%)</title><rect x="41.8629%" y="341" width="0.0244%" height="15" fill="rgb(222,134,10)"/><text x="42.1129%" y="351.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::ParentHashInput::hash (64 samples, 0.04%)</title><rect x="41.8501%" y="357" width="0.0410%" height="15" fill="rgb(230,226,20)"/><text x="42.1001%" y="367.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (24 samples, 0.02%)</title><rect x="41.8975%" y="325" width="0.0154%" height="15" fill="rgb(251,111,25)"/><text x="42.1475%" y="335.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (29 samples, 0.02%)</title><rect x="41.8949%" y="341" width="0.0186%" height="15" fill="rgb(224,40,46)"/><text x="42.1449%" y="351.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::original_child_resolution (41 samples, 0.03%)</title><rect x="41.8911%" y="357" width="0.0263%" height="15" fill="rgb(236,108,47)"/><text x="42.1411%" y="367.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (18 samples, 0.01%)</title><rect x="41.9231%" y="325" width="0.0115%" height="15" fill="rgb(234,93,0)"/><text x="42.1731%" y="335.50"></text></g><g><title>group-b073d76844680b0b`tls_codec::hpke::_&lt;impl tls_codec::Serialize for hpke_rs::HpkePublicKey&gt;::tls_serialize (49 samples, 0.03%)</title><rect x="41.9379%" y="309" width="0.0314%" height="15" fill="rgb(224,213,32)"/><text x="42.1879%" y="319.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::codec::_&lt;impl tls_codec::Serialize for openmls::tree::hashes::ParentHashInput&gt;::tls_serialize (55 samples, 0.04%)</title><rect x="41.9347%" y="325" width="0.0353%" height="15" fill="rgb(251,11,48)"/><text x="42.1847%" y="335.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::ParentHashInput::hash (91 samples, 0.06%)</title><rect x="41.9231%" y="341" width="0.0583%" height="15" fill="rgb(236,173,5)"/><text x="42.1731%" y="351.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (26 samples, 0.02%)</title><rect x="41.9994%" y="277" width="0.0167%" height="15" fill="rgb(230,95,12)"/><text x="42.2494%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (18 samples, 0.01%)</title><rect x="42.0045%" y="261" width="0.0115%" height="15" fill="rgb(232,209,1)"/><text x="42.2545%" y="271.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (47 samples, 0.03%)</title><rect x="41.9917%" y="293" width="0.0301%" height="15" fill="rgb(232,6,1)"/><text x="42.2417%" y="303.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (55 samples, 0.04%)</title><rect x="41.9904%" y="309" width="0.0353%" height="15" fill="rgb(210,224,50)"/><text x="42.2404%" y="319.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (72 samples, 0.05%)</title><rect x="41.9834%" y="325" width="0.0461%" height="15" fill="rgb(228,127,35)"/><text x="42.2334%" y="335.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::original_child_resolution (79 samples, 0.05%)</title><rect x="41.9815%" y="341" width="0.0506%" height="15" fill="rgb(245,102,45)"/><text x="42.2315%" y="351.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (18 samples, 0.01%)</title><rect x="42.0430%" y="293" width="0.0115%" height="15" fill="rgb(214,1,49)"/><text x="42.2930%" y="303.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (28 samples, 0.02%)</title><rect x="42.0391%" y="309" width="0.0179%" height="15" fill="rgb(226,163,40)"/><text x="42.2891%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (21 samples, 0.01%)</title><rect x="42.0635%" y="277" width="0.0135%" height="15" fill="rgb(239,212,28)"/><text x="42.3135%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (19 samples, 0.01%)</title><rect x="42.0648%" y="261" width="0.0122%" height="15" fill="rgb(220,20,13)"/><text x="42.3148%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (19 samples, 0.01%)</title><rect x="42.0648%" y="245" width="0.0122%" height="15" fill="rgb(210,164,35)"/><text x="42.3148%" y="255.50"></text></g><g><title>group-b073d76844680b0b`tls_codec::hpke::_&lt;impl tls_codec::Serialize for hpke_rs::HpkePublicKey&gt;::tls_serialize (63 samples, 0.04%)</title><rect x="42.0577%" y="293" width="0.0404%" height="15" fill="rgb(248,109,41)"/><text x="42.3077%" y="303.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::codec::_&lt;impl tls_codec::Serialize for openmls::tree::hashes::ParentHashInput&gt;::tls_serialize (64 samples, 0.04%)</title><rect x="42.0577%" y="309" width="0.0410%" height="15" fill="rgb(238,23,50)"/><text x="42.3077%" y="319.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::ParentHashInput::hash (108 samples, 0.07%)</title><rect x="42.0391%" y="325" width="0.0692%" height="15" fill="rgb(211,48,49)"/><text x="42.2891%" y="335.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (45 samples, 0.03%)</title><rect x="42.1378%" y="245" width="0.0288%" height="15" fill="rgb(223,36,21)"/><text x="42.3878%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (28 samples, 0.02%)</title><rect x="42.1487%" y="229" width="0.0179%" height="15" fill="rgb(207,123,46)"/><text x="42.3987%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (24 samples, 0.02%)</title><rect x="42.1513%" y="213" width="0.0154%" height="15" fill="rgb(240,218,32)"/><text x="42.4013%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (23 samples, 0.01%)</title><rect x="42.1519%" y="197" width="0.0147%" height="15" fill="rgb(252,5,43)"/><text x="42.4019%" y="207.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (69 samples, 0.04%)</title><rect x="42.1302%" y="261" width="0.0442%" height="15" fill="rgb(252,84,19)"/><text x="42.3802%" y="271.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (79 samples, 0.05%)</title><rect x="42.1270%" y="277" width="0.0506%" height="15" fill="rgb(243,152,39)"/><text x="42.3770%" y="287.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (97 samples, 0.06%)</title><rect x="42.1173%" y="293" width="0.0622%" height="15" fill="rgb(234,160,15)"/><text x="42.3673%" y="303.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (107 samples, 0.07%)</title><rect x="42.1141%" y="309" width="0.0686%" height="15" fill="rgb(237,34,20)"/><text x="42.3641%" y="319.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::original_child_resolution (121 samples, 0.08%)</title><rect x="42.1084%" y="325" width="0.0776%" height="15" fill="rgb(229,97,13)"/><text x="42.3584%" y="335.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (24 samples, 0.02%)</title><rect x="42.1923%" y="293" width="0.0154%" height="15" fill="rgb(234,71,50)"/><text x="42.4423%" y="303.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (19 samples, 0.01%)</title><rect x="42.1955%" y="277" width="0.0122%" height="15" fill="rgb(253,155,4)"/><text x="42.4455%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (19 samples, 0.01%)</title><rect x="42.2250%" y="245" width="0.0122%" height="15" fill="rgb(222,185,37)"/><text x="42.4750%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.01%)</title><rect x="42.2263%" y="229" width="0.0109%" height="15" fill="rgb(251,177,13)"/><text x="42.4763%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (23 samples, 0.01%)</title><rect x="42.2237%" y="261" width="0.0147%" height="15" fill="rgb(250,179,40)"/><text x="42.4737%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (18 samples, 0.01%)</title><rect x="42.2455%" y="261" width="0.0115%" height="15" fill="rgb(242,44,2)"/><text x="42.4955%" y="271.50"></text></g><g><title>group-b073d76844680b0b`tls_codec::hpke::_&lt;impl tls_codec::Serialize for hpke_rs::HpkePublicKey&gt;::tls_serialize (95 samples, 0.06%)</title><rect x="42.2096%" y="277" width="0.0609%" height="15" fill="rgb(216,177,13)"/><text x="42.4596%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (20 samples, 0.01%)</title><rect x="42.2577%" y="261" width="0.0128%" height="15" fill="rgb(216,106,43)"/><text x="42.5077%" y="271.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::codec::_&lt;impl tls_codec::Serialize for openmls::tree::hashes::ParentHashInput&gt;::tls_serialize (102 samples, 0.07%)</title><rect x="42.2077%" y="293" width="0.0654%" height="15" fill="rgb(216,183,2)"/><text x="42.4577%" y="303.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::ParentHashInput::hash (146 samples, 0.09%)</title><rect x="42.1910%" y="309" width="0.0936%" height="15" fill="rgb(249,75,3)"/><text x="42.4410%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (20 samples, 0.01%)</title><rect x="42.3115%" y="197" width="0.0128%" height="15" fill="rgb(219,67,39)"/><text x="42.5615%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (20 samples, 0.01%)</title><rect x="42.3115%" y="181" width="0.0128%" height="15" fill="rgb(253,228,2)"/><text x="42.5615%" y="191.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 0.01%)</title><rect x="42.3109%" y="245" width="0.0141%" height="15" fill="rgb(235,138,27)"/><text x="42.5609%" y="255.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (22 samples, 0.01%)</title><rect x="42.3109%" y="229" width="0.0141%" height="15" fill="rgb(236,97,51)"/><text x="42.5609%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`realloc (21 samples, 0.01%)</title><rect x="42.3115%" y="213" width="0.0135%" height="15" fill="rgb(240,80,30)"/><text x="42.5615%" y="223.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (44 samples, 0.03%)</title><rect x="42.3494%" y="213" width="0.0282%" height="15" fill="rgb(230,178,19)"/><text x="42.5994%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (25 samples, 0.02%)</title><rect x="42.3615%" y="197" width="0.0160%" height="15" fill="rgb(210,190,27)"/><text x="42.6115%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (24 samples, 0.02%)</title><rect x="42.3622%" y="181" width="0.0154%" height="15" fill="rgb(222,107,31)"/><text x="42.6122%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (24 samples, 0.02%)</title><rect x="42.3622%" y="165" width="0.0154%" height="15" fill="rgb(216,127,34)"/><text x="42.6122%" y="175.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (92 samples, 0.06%)</title><rect x="42.3320%" y="229" width="0.0590%" height="15" fill="rgb(234,116,52)"/><text x="42.5820%" y="239.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (114 samples, 0.07%)</title><rect x="42.3250%" y="245" width="0.0731%" height="15" fill="rgb(222,124,15)"/><text x="42.5750%" y="255.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (145 samples, 0.09%)</title><rect x="42.3083%" y="261" width="0.0929%" height="15" fill="rgb(231,179,28)"/><text x="42.5583%" y="271.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (165 samples, 0.11%)</title><rect x="42.2981%" y="277" width="0.1058%" height="15" fill="rgb(226,93,45)"/><text x="42.5481%" y="287.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (182 samples, 0.12%)</title><rect x="42.2910%" y="293" width="0.1166%" height="15" fill="rgb(215,8,51)"/><text x="42.5410%" y="303.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::original_child_resolution (197 samples, 0.13%)</title><rect x="42.2846%" y="309" width="0.1263%" height="15" fill="rgb(223,106,5)"/><text x="42.5346%" y="319.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (31 samples, 0.02%)</title><rect x="42.4173%" y="261" width="0.0199%" height="15" fill="rgb(250,191,5)"/><text x="42.6673%" y="271.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (37 samples, 0.02%)</title><rect x="42.4154%" y="277" width="0.0237%" height="15" fill="rgb(242,132,44)"/><text x="42.6654%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (24 samples, 0.02%)</title><rect x="42.4634%" y="245" width="0.0154%" height="15" fill="rgb(251,152,29)"/><text x="42.7134%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (23 samples, 0.01%)</title><rect x="42.4641%" y="229" width="0.0147%" height="15" fill="rgb(218,179,5)"/><text x="42.7141%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (20 samples, 0.01%)</title><rect x="42.4660%" y="213" width="0.0128%" height="15" fill="rgb(227,67,19)"/><text x="42.7160%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (17 samples, 0.01%)</title><rect x="42.4846%" y="245" width="0.0109%" height="15" fill="rgb(233,119,31)"/><text x="42.7346%" y="255.50"></text></g><g><title>group-b073d76844680b0b`tls_codec::hpke::_&lt;impl tls_codec::Serialize for hpke_rs::HpkePublicKey&gt;::tls_serialize (122 samples, 0.08%)</title><rect x="42.4429%" y="261" width="0.0782%" height="15" fill="rgb(241,120,22)"/><text x="42.6929%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (37 samples, 0.02%)</title><rect x="42.4974%" y="245" width="0.0237%" height="15" fill="rgb(224,102,30)"/><text x="42.7474%" y="255.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::codec::_&lt;impl tls_codec::Serialize for openmls::tree::hashes::ParentHashInput&gt;::tls_serialize (131 samples, 0.08%)</title><rect x="42.4391%" y="277" width="0.0840%" height="15" fill="rgb(210,164,37)"/><text x="42.6891%" y="287.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::ParentHashInput::hash (182 samples, 0.12%)</title><rect x="42.4147%" y="293" width="0.1166%" height="15" fill="rgb(226,191,16)"/><text x="42.6647%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (25 samples, 0.02%)</title><rect x="42.5705%" y="165" width="0.0160%" height="15" fill="rgb(214,40,45)"/><text x="42.8205%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (25 samples, 0.02%)</title><rect x="42.5705%" y="149" width="0.0160%" height="15" fill="rgb(244,29,26)"/><text x="42.8205%" y="159.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (28 samples, 0.02%)</title><rect x="42.5692%" y="213" width="0.0179%" height="15" fill="rgb(216,16,5)"/><text x="42.8192%" y="223.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (26 samples, 0.02%)</title><rect x="42.5705%" y="197" width="0.0167%" height="15" fill="rgb(249,76,35)"/><text x="42.8205%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (26 samples, 0.02%)</title><rect x="42.5705%" y="181" width="0.0167%" height="15" fill="rgb(207,11,44)"/><text x="42.8205%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (50 samples, 0.03%)</title><rect x="42.6371%" y="165" width="0.0320%" height="15" fill="rgb(228,190,49)"/><text x="42.8871%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (45 samples, 0.03%)</title><rect x="42.6403%" y="149" width="0.0288%" height="15" fill="rgb(214,173,12)"/><text x="42.8903%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (44 samples, 0.03%)</title><rect x="42.6410%" y="133" width="0.0282%" height="15" fill="rgb(218,26,35)"/><text x="42.8910%" y="143.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (71 samples, 0.05%)</title><rect x="42.6243%" y="181" width="0.0455%" height="15" fill="rgb(220,200,19)"/><text x="42.8743%" y="191.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (130 samples, 0.08%)</title><rect x="42.5993%" y="197" width="0.0833%" height="15" fill="rgb(239,95,49)"/><text x="42.8493%" y="207.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (160 samples, 0.10%)</title><rect x="42.5871%" y="213" width="0.1025%" height="15" fill="rgb(235,85,53)"/><text x="42.8371%" y="223.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (215 samples, 0.14%)</title><rect x="42.5589%" y="229" width="0.1378%" height="15" fill="rgb(233,133,31)"/><text x="42.8089%" y="239.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (235 samples, 0.15%)</title><rect x="42.5493%" y="245" width="0.1506%" height="15" fill="rgb(218,25,20)"/><text x="42.7993%" y="255.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (249 samples, 0.16%)</title><rect x="42.5416%" y="261" width="0.1596%" height="15" fill="rgb(252,210,38)"/><text x="42.7916%" y="271.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (259 samples, 0.17%)</title><rect x="42.5371%" y="277" width="0.1660%" height="15" fill="rgb(242,134,21)"/><text x="42.7871%" y="287.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::original_child_resolution (273 samples, 0.17%)</title><rect x="42.5314%" y="293" width="0.1750%" height="15" fill="rgb(213,28,48)"/><text x="42.7814%" y="303.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (41 samples, 0.03%)</title><rect x="42.7153%" y="245" width="0.0263%" height="15" fill="rgb(250,196,2)"/><text x="42.9653%" y="255.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (51 samples, 0.03%)</title><rect x="42.7102%" y="261" width="0.0327%" height="15" fill="rgb(227,5,17)"/><text x="42.9602%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (33 samples, 0.02%)</title><rect x="42.7717%" y="213" width="0.0212%" height="15" fill="rgb(221,226,24)"/><text x="43.0217%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (32 samples, 0.02%)</title><rect x="42.7724%" y="197" width="0.0205%" height="15" fill="rgb(211,5,48)"/><text x="43.0224%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (41 samples, 0.03%)</title><rect x="42.7672%" y="229" width="0.0263%" height="15" fill="rgb(219,150,6)"/><text x="43.0172%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.01%)</title><rect x="42.8012%" y="229" width="0.0128%" height="15" fill="rgb(251,46,16)"/><text x="43.0512%" y="239.50"></text></g><g><title>group-b073d76844680b0b`tls_codec::hpke::_&lt;impl tls_codec::Serialize for hpke_rs::HpkePublicKey&gt;::tls_serialize (135 samples, 0.09%)</title><rect x="42.7467%" y="245" width="0.0865%" height="15" fill="rgb(220,204,40)"/><text x="42.9967%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (27 samples, 0.02%)</title><rect x="42.8159%" y="229" width="0.0173%" height="15" fill="rgb(211,85,2)"/><text x="43.0659%" y="239.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::codec::_&lt;impl tls_codec::Serialize for openmls::tree::hashes::ParentHashInput&gt;::tls_serialize (145 samples, 0.09%)</title><rect x="42.7429%" y="261" width="0.0929%" height="15" fill="rgb(229,17,7)"/><text x="42.9929%" y="271.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::ParentHashInput::hash (213 samples, 0.14%)</title><rect x="42.7095%" y="277" width="0.1365%" height="15" fill="rgb(239,72,28)"/><text x="42.9595%" y="287.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16 samples, 0.01%)</title><rect x="42.8890%" y="181" width="0.0103%" height="15" fill="rgb(230,47,54)"/><text x="43.1390%" y="191.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (59 samples, 0.04%)</title><rect x="42.9275%" y="149" width="0.0378%" height="15" fill="rgb(214,50,8)"/><text x="43.1775%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (34 samples, 0.02%)</title><rect x="42.9435%" y="133" width="0.0218%" height="15" fill="rgb(216,198,43)"/><text x="43.1935%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (31 samples, 0.02%)</title><rect x="42.9454%" y="117" width="0.0199%" height="15" fill="rgb(234,20,35)"/><text x="43.1954%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (29 samples, 0.02%)</title><rect x="42.9467%" y="101" width="0.0186%" height="15" fill="rgb(254,45,19)"/><text x="43.1967%" y="111.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (106 samples, 0.07%)</title><rect x="42.9102%" y="165" width="0.0679%" height="15" fill="rgb(219,14,44)"/><text x="43.1602%" y="175.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (133 samples, 0.09%)</title><rect x="42.8993%" y="181" width="0.0852%" height="15" fill="rgb(217,220,26)"/><text x="43.1493%" y="191.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (173 samples, 0.11%)</title><rect x="42.8826%" y="197" width="0.1109%" height="15" fill="rgb(213,158,28)"/><text x="43.1326%" y="207.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (200 samples, 0.13%)</title><rect x="42.8704%" y="213" width="0.1282%" height="15" fill="rgb(252,51,52)"/><text x="43.1204%" y="223.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (213 samples, 0.14%)</title><rect x="42.8634%" y="229" width="0.1365%" height="15" fill="rgb(246,89,16)"/><text x="43.1134%" y="239.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (230 samples, 0.15%)</title><rect x="42.8531%" y="261" width="0.1474%" height="15" fill="rgb(216,158,49)"/><text x="43.1031%" y="271.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (219 samples, 0.14%)</title><rect x="42.8602%" y="245" width="0.1404%" height="15" fill="rgb(236,107,19)"/><text x="43.1102%" y="255.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::original_child_resolution (249 samples, 0.16%)</title><rect x="42.8461%" y="277" width="0.1596%" height="15" fill="rgb(228,185,30)"/><text x="43.0961%" y="287.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (25 samples, 0.02%)</title><rect x="43.0178%" y="229" width="0.0160%" height="15" fill="rgb(246,134,8)"/><text x="43.2678%" y="239.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (36 samples, 0.02%)</title><rect x="43.0114%" y="245" width="0.0231%" height="15" fill="rgb(214,143,50)"/><text x="43.2614%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.01%)</title><rect x="43.0524%" y="197" width="0.0135%" height="15" fill="rgb(228,75,8)"/><text x="43.3024%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (21 samples, 0.01%)</title><rect x="43.0524%" y="181" width="0.0135%" height="15" fill="rgb(207,175,4)"/><text x="43.3024%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (25 samples, 0.02%)</title><rect x="43.0505%" y="213" width="0.0160%" height="15" fill="rgb(205,108,24)"/><text x="43.3005%" y="223.50"></text></g><g><title>group-b073d76844680b0b`tls_codec::hpke::_&lt;impl tls_codec::Serialize for hpke_rs::HpkePublicKey&gt;::tls_serialize (83 samples, 0.05%)</title><rect x="43.0383%" y="229" width="0.0532%" height="15" fill="rgb(244,120,49)"/><text x="43.2883%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (20 samples, 0.01%)</title><rect x="43.0787%" y="213" width="0.0128%" height="15" fill="rgb(223,47,38)"/><text x="43.3287%" y="223.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::codec::_&lt;impl tls_codec::Serialize for openmls::tree::hashes::ParentHashInput&gt;::tls_serialize (92 samples, 0.06%)</title><rect x="43.0351%" y="245" width="0.0590%" height="15" fill="rgb(229,179,11)"/><text x="43.2851%" y="255.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::ParentHashInput::hash (135 samples, 0.09%)</title><rect x="43.0095%" y="261" width="0.0865%" height="15" fill="rgb(231,122,1)"/><text x="43.2595%" y="271.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (20 samples, 0.01%)</title><rect x="43.1191%" y="149" width="0.0128%" height="15" fill="rgb(245,119,9)"/><text x="43.3691%" y="159.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (20 samples, 0.01%)</title><rect x="43.1191%" y="133" width="0.0128%" height="15" fill="rgb(241,163,25)"/><text x="43.3691%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`realloc (18 samples, 0.01%)</title><rect x="43.1204%" y="117" width="0.0115%" height="15" fill="rgb(217,214,3)"/><text x="43.3704%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (18 samples, 0.01%)</title><rect x="43.1204%" y="101" width="0.0115%" height="15" fill="rgb(240,86,28)"/><text x="43.3704%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (18 samples, 0.01%)</title><rect x="43.1204%" y="85" width="0.0115%" height="15" fill="rgb(215,47,9)"/><text x="43.3704%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (19 samples, 0.01%)</title><rect x="43.1640%" y="101" width="0.0122%" height="15" fill="rgb(252,25,45)"/><text x="43.4140%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (18 samples, 0.01%)</title><rect x="43.1646%" y="85" width="0.0115%" height="15" fill="rgb(251,164,9)"/><text x="43.4146%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (18 samples, 0.01%)</title><rect x="43.1646%" y="69" width="0.0115%" height="15" fill="rgb(233,194,0)"/><text x="43.4146%" y="79.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (34 samples, 0.02%)</title><rect x="43.1550%" y="117" width="0.0218%" height="15" fill="rgb(249,111,24)"/><text x="43.4050%" y="127.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (74 samples, 0.05%)</title><rect x="43.1383%" y="133" width="0.0474%" height="15" fill="rgb(250,223,3)"/><text x="43.3883%" y="143.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (100 samples, 0.06%)</title><rect x="43.1319%" y="149" width="0.0641%" height="15" fill="rgb(236,178,37)"/><text x="43.3819%" y="159.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (127 samples, 0.08%)</title><rect x="43.1172%" y="165" width="0.0814%" height="15" fill="rgb(241,158,50)"/><text x="43.3672%" y="175.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (140 samples, 0.09%)</title><rect x="43.1108%" y="181" width="0.0897%" height="15" fill="rgb(213,121,41)"/><text x="43.3608%" y="191.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (145 samples, 0.09%)</title><rect x="43.1088%" y="197" width="0.0929%" height="15" fill="rgb(240,92,3)"/><text x="43.3588%" y="207.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (148 samples, 0.09%)</title><rect x="43.1076%" y="213" width="0.0949%" height="15" fill="rgb(205,123,3)"/><text x="43.3576%" y="223.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (151 samples, 0.10%)</title><rect x="43.1063%" y="229" width="0.0968%" height="15" fill="rgb(205,97,47)"/><text x="43.3563%" y="239.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (158 samples, 0.10%)</title><rect x="43.1037%" y="245" width="0.1013%" height="15" fill="rgb(247,152,14)"/><text x="43.3537%" y="255.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::original_child_resolution (178 samples, 0.11%)</title><rect x="43.0960%" y="261" width="0.1141%" height="15" fill="rgb(248,195,53)"/><text x="43.3460%" y="271.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (18 samples, 0.01%)</title><rect x="43.2210%" y="229" width="0.0115%" height="15" fill="rgb(226,201,16)"/><text x="43.4710%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (17 samples, 0.01%)</title><rect x="43.2575%" y="181" width="0.0109%" height="15" fill="rgb(205,98,0)"/><text x="43.5075%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (16 samples, 0.01%)</title><rect x="43.2582%" y="165" width="0.0103%" height="15" fill="rgb(214,191,48)"/><text x="43.5082%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (22 samples, 0.01%)</title><rect x="43.2556%" y="197" width="0.0141%" height="15" fill="rgb(237,112,39)"/><text x="43.5056%" y="207.50"></text></g><g><title>group-b073d76844680b0b`tls_codec::hpke::_&lt;impl tls_codec::Serialize for hpke_rs::HpkePublicKey&gt;::tls_serialize (88 samples, 0.06%)</title><rect x="43.2351%" y="213" width="0.0564%" height="15" fill="rgb(247,203,27)"/><text x="43.4851%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (16 samples, 0.01%)</title><rect x="43.2812%" y="197" width="0.0103%" height="15" fill="rgb(235,124,28)"/><text x="43.5312%" y="207.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::codec::_&lt;impl tls_codec::Serialize for openmls::tree::hashes::ParentHashInput&gt;::tls_serialize (94 samples, 0.06%)</title><rect x="43.2332%" y="229" width="0.0602%" height="15" fill="rgb(208,207,46)"/><text x="43.4832%" y="239.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::ParentHashInput::hash (125 samples, 0.08%)</title><rect x="43.2178%" y="245" width="0.0801%" height="15" fill="rgb(234,176,4)"/><text x="43.4678%" y="255.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (26 samples, 0.02%)</title><rect x="43.3556%" y="85" width="0.0167%" height="15" fill="rgb(230,133,28)"/><text x="43.6056%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (19 samples, 0.01%)</title><rect x="43.3601%" y="69" width="0.0122%" height="15" fill="rgb(211,137,40)"/><text x="43.6101%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (17 samples, 0.01%)</title><rect x="43.3614%" y="53" width="0.0109%" height="15" fill="rgb(254,35,13)"/><text x="43.6114%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.01%)</title><rect x="43.3614%" y="37" width="0.0109%" height="15" fill="rgb(225,49,51)"/><text x="43.6114%" y="47.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (46 samples, 0.03%)</title><rect x="43.3453%" y="101" width="0.0295%" height="15" fill="rgb(251,10,15)"/><text x="43.5953%" y="111.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (66 samples, 0.04%)</title><rect x="43.3376%" y="117" width="0.0423%" height="15" fill="rgb(228,207,15)"/><text x="43.5876%" y="127.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (81 samples, 0.05%)</title><rect x="43.3312%" y="133" width="0.0519%" height="15" fill="rgb(241,99,19)"/><text x="43.5812%" y="143.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (89 samples, 0.06%)</title><rect x="43.3268%" y="165" width="0.0570%" height="15" fill="rgb(207,104,49)"/><text x="43.5768%" y="175.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (88 samples, 0.06%)</title><rect x="43.3274%" y="149" width="0.0564%" height="15" fill="rgb(234,99,18)"/><text x="43.5774%" y="159.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (94 samples, 0.06%)</title><rect x="43.3242%" y="213" width="0.0602%" height="15" fill="rgb(213,191,49)"/><text x="43.5742%" y="223.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (94 samples, 0.06%)</title><rect x="43.3242%" y="197" width="0.0602%" height="15" fill="rgb(210,226,19)"/><text x="43.5742%" y="207.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (91 samples, 0.06%)</title><rect x="43.3261%" y="181" width="0.0583%" height="15" fill="rgb(229,97,18)"/><text x="43.5761%" y="191.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::resolve (114 samples, 0.07%)</title><rect x="43.3165%" y="229" width="0.0731%" height="15" fill="rgb(211,167,15)"/><text x="43.5665%" y="239.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::original_child_resolution (167 samples, 0.11%)</title><rect x="43.2979%" y="245" width="0.1070%" height="15" fill="rgb(210,169,34)"/><text x="43.5479%" y="255.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::set_parent_hashes::node_parent_hash (312 samples, 0.20%)</title><rect x="43.2101%" y="261" width="0.2000%" height="15" fill="rgb(241,121,31)"/><text x="43.4601%" y="271.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::set_parent_hashes::node_parent_hash (652 samples, 0.42%)</title><rect x="43.0057%" y="277" width="0.4179%" height="15" fill="rgb(232,40,11)"/><text x="43.2557%" y="287.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::set_parent_hashes::node_parent_hash (1,135 samples, 0.73%)</title><rect x="42.7063%" y="293" width="0.7274%" height="15" fill="rgb(205,86,26)"/><text x="42.9563%" y="303.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::set_parent_hashes::node_parent_hash (1,615 samples, 1.04%)</title><rect x="42.4109%" y="309" width="1.0351%" height="15" fill="rgb(231,126,28)"/><text x="42.6609%" y="319.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::set_parent_hashes::node_parent_hash (1,981 samples, 1.27%)</title><rect x="42.1859%" y="325" width="1.2697%" height="15" fill="rgb(219,221,18)"/><text x="42.4359%" y="335.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::set_parent_hashes::node_parent_hash (2,227 samples, 1.43%)</title><rect x="42.0321%" y="341" width="1.4273%" height="15" fill="rgb(211,40,0)"/><text x="42.2821%" y="351.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::set_parent_hashes::node_parent_hash (2,418 samples, 1.55%)</title><rect x="41.9174%" y="357" width="1.5497%" height="15" fill="rgb(239,85,43)"/><text x="42.1674%" y="367.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::set_parent_hashes::node_parent_hash (2,542 samples, 1.63%)</title><rect x="41.8449%" y="373" width="1.6292%" height="15" fill="rgb(231,55,21)"/><text x="42.0949%" y="383.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::set_parent_hashes::node_parent_hash (2,616 samples, 1.68%)</title><rect x="41.8039%" y="389" width="1.6766%" height="15" fill="rgb(225,184,43)"/><text x="42.0539%" y="399.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::set_parent_hashes::node_parent_hash (2,679 samples, 1.72%)</title><rect x="41.7738%" y="405" width="1.7170%" height="15" fill="rgb(251,158,41)"/><text x="42.0238%" y="415.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::set_parent_hashes::node_parent_hash (2,691 samples, 1.72%)</title><rect x="41.7700%" y="421" width="1.7247%" height="15" fill="rgb(234,159,37)"/><text x="42.0200%" y="431.50"></text></g><g><title>group-b073d76844680b0b`&lt;core::option::Option&lt;T&gt; as openmls::codec::Codec&gt;::encode (26 samples, 0.02%)</title><rect x="43.5088%" y="389" width="0.0167%" height="15" fill="rgb(216,204,22)"/><text x="43.7588%" y="399.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (26 samples, 0.02%)</title><rect x="43.5088%" y="373" width="0.0167%" height="15" fill="rgb(214,17,3)"/><text x="43.7588%" y="383.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::codec::_&lt;impl tls_codec::Serialize for openmls::tree::hashes::ParentNodeTreeHashInput&gt;::tls_serialize (30 samples, 0.02%)</title><rect x="43.5088%" y="405" width="0.0192%" height="15" fill="rgb(212,111,17)"/><text x="43.7588%" y="415.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (21 samples, 0.01%)</title><rect x="43.5402%" y="389" width="0.0135%" height="15" fill="rgb(221,157,24)"/><text x="43.7902%" y="399.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (32 samples, 0.02%)</title><rect x="43.5556%" y="357" width="0.0205%" height="15" fill="rgb(252,16,13)"/><text x="43.8056%" y="367.50"></text></g><g><title>group-b073d76844680b0b`&lt;core::option::Option&lt;T&gt; as openmls::codec::Codec&gt;::encode (34 samples, 0.02%)</title><rect x="43.5549%" y="373" width="0.0218%" height="15" fill="rgb(221,62,2)"/><text x="43.8049%" y="383.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 0.01%)</title><rect x="43.5940%" y="357" width="0.0141%" height="15" fill="rgb(247,87,22)"/><text x="43.8440%" y="367.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (22 samples, 0.01%)</title><rect x="43.5940%" y="341" width="0.0141%" height="15" fill="rgb(215,73,9)"/><text x="43.8440%" y="351.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (59 samples, 0.04%)</title><rect x="43.5774%" y="373" width="0.0378%" height="15" fill="rgb(207,175,33)"/><text x="43.8274%" y="383.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::codec::_&lt;impl tls_codec::Serialize for openmls::tree::hashes::ParentNodeTreeHashInput&gt;::tls_serialize (97 samples, 0.06%)</title><rect x="43.5549%" y="389" width="0.0622%" height="15" fill="rgb(243,129,54)"/><text x="43.8049%" y="399.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_Hash_hash_256 (16 samples, 0.01%)</title><rect x="43.6453%" y="357" width="0.0103%" height="15" fill="rgb(227,119,45)"/><text x="43.8953%" y="367.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (35 samples, 0.02%)</title><rect x="43.6453%" y="373" width="0.0224%" height="15" fill="rgb(205,109,36)"/><text x="43.8953%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (16 samples, 0.01%)</title><rect x="43.6953%" y="277" width="0.0103%" height="15" fill="rgb(205,6,39)"/><text x="43.9453%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`realloc (21 samples, 0.01%)</title><rect x="43.6946%" y="293" width="0.0135%" height="15" fill="rgb(221,32,16)"/><text x="43.9446%" y="303.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (36 samples, 0.02%)</title><rect x="43.6857%" y="325" width="0.0231%" height="15" fill="rgb(228,144,50)"/><text x="43.9357%" y="335.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (36 samples, 0.02%)</title><rect x="43.6857%" y="309" width="0.0231%" height="15" fill="rgb(229,201,53)"/><text x="43.9357%" y="319.50"></text></g><g><title>group-b073d76844680b0b`&lt;core::option::Option&lt;T&gt; as openmls::codec::Codec&gt;::encode (67 samples, 0.04%)</title><rect x="43.6703%" y="357" width="0.0429%" height="15" fill="rgb(249,153,27)"/><text x="43.9203%" y="367.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (65 samples, 0.04%)</title><rect x="43.6716%" y="341" width="0.0417%" height="15" fill="rgb(227,106,25)"/><text x="43.9216%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (18 samples, 0.01%)</title><rect x="43.7453%" y="293" width="0.0115%" height="15" fill="rgb(230,65,29)"/><text x="43.9953%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`realloc (21 samples, 0.01%)</title><rect x="43.7440%" y="309" width="0.0135%" height="15" fill="rgb(221,57,46)"/><text x="43.9940%" y="319.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (33 samples, 0.02%)</title><rect x="43.7369%" y="325" width="0.0212%" height="15" fill="rgb(229,161,17)"/><text x="43.9869%" y="335.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (39 samples, 0.02%)</title><rect x="43.7350%" y="341" width="0.0250%" height="15" fill="rgb(222,213,11)"/><text x="43.9850%" y="351.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (80 samples, 0.05%)</title><rect x="43.7139%" y="357" width="0.0513%" height="15" fill="rgb(235,35,13)"/><text x="43.9639%" y="367.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::codec::_&lt;impl tls_codec::Serialize for openmls::tree::hashes::ParentNodeTreeHashInput&gt;::tls_serialize (155 samples, 0.10%)</title><rect x="43.6696%" y="373" width="0.0993%" height="15" fill="rgb(233,158,34)"/><text x="43.9196%" y="383.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (24 samples, 0.02%)</title><rect x="43.8280%" y="325" width="0.0154%" height="15" fill="rgb(215,151,48)"/><text x="44.0780%" y="335.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_Hash_hash_256 (38 samples, 0.02%)</title><rect x="43.8196%" y="341" width="0.0244%" height="15" fill="rgb(229,84,14)"/><text x="44.0696%" y="351.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (41 samples, 0.03%)</title><rect x="43.8440%" y="341" width="0.0263%" height="15" fill="rgb(229,68,14)"/><text x="44.0940%" y="351.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (94 samples, 0.06%)</title><rect x="43.8177%" y="357" width="0.0602%" height="15" fill="rgb(243,106,26)"/><text x="44.0677%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (37 samples, 0.02%)</title><rect x="43.9382%" y="261" width="0.0237%" height="15" fill="rgb(206,45,38)"/><text x="44.1882%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (31 samples, 0.02%)</title><rect x="43.9420%" y="245" width="0.0199%" height="15" fill="rgb(226,6,15)"/><text x="44.1920%" y="255.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (60 samples, 0.04%)</title><rect x="43.9247%" y="293" width="0.0385%" height="15" fill="rgb(232,22,54)"/><text x="44.1747%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`realloc (41 samples, 0.03%)</title><rect x="43.9369%" y="277" width="0.0263%" height="15" fill="rgb(229,222,32)"/><text x="44.1869%" y="287.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (63 samples, 0.04%)</title><rect x="43.9234%" y="309" width="0.0404%" height="15" fill="rgb(228,62,29)"/><text x="44.1734%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (18 samples, 0.01%)</title><rect x="43.9683%" y="309" width="0.0115%" height="15" fill="rgb(251,103,34)"/><text x="44.2183%" y="319.50"></text></g><g><title>group-b073d76844680b0b`&lt;core::option::Option&lt;T&gt; as openmls::codec::Codec&gt;::encode (157 samples, 0.10%)</title><rect x="43.8818%" y="341" width="0.1006%" height="15" fill="rgb(233,12,30)"/><text x="44.1318%" y="351.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (153 samples, 0.10%)</title><rect x="43.8844%" y="325" width="0.0981%" height="15" fill="rgb(238,52,0)"/><text x="44.1344%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (32 samples, 0.02%)</title><rect x="44.0298%" y="277" width="0.0205%" height="15" fill="rgb(223,98,5)"/><text x="44.2798%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (29 samples, 0.02%)</title><rect x="44.0318%" y="261" width="0.0186%" height="15" fill="rgb(228,75,37)"/><text x="44.2818%" y="271.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (58 samples, 0.04%)</title><rect x="44.0170%" y="325" width="0.0372%" height="15" fill="rgb(205,115,49)"/><text x="44.2670%" y="335.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (55 samples, 0.04%)</title><rect x="44.0189%" y="309" width="0.0353%" height="15" fill="rgb(250,154,43)"/><text x="44.2689%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`realloc (39 samples, 0.02%)</title><rect x="44.0292%" y="293" width="0.0250%" height="15" fill="rgb(226,43,29)"/><text x="44.2792%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.01%)</title><rect x="44.0568%" y="325" width="0.0128%" height="15" fill="rgb(249,228,39)"/><text x="44.3068%" y="335.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (140 samples, 0.09%)</title><rect x="43.9837%" y="341" width="0.0897%" height="15" fill="rgb(216,79,43)"/><text x="44.2337%" y="351.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::codec::_&lt;impl tls_codec::Serialize for openmls::tree::hashes::ParentNodeTreeHashInput&gt;::tls_serialize (313 samples, 0.20%)</title><rect x="43.8792%" y="357" width="0.2006%" height="15" fill="rgb(228,95,12)"/><text x="44.1292%" y="367.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (52 samples, 0.03%)</title><rect x="44.1721%" y="309" width="0.0333%" height="15" fill="rgb(249,221,15)"/><text x="44.4221%" y="319.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_Hash_hash_256 (72 samples, 0.05%)</title><rect x="44.1599%" y="325" width="0.0461%" height="15" fill="rgb(233,34,13)"/><text x="44.4099%" y="335.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (76 samples, 0.05%)</title><rect x="44.2061%" y="325" width="0.0487%" height="15" fill="rgb(214,103,39)"/><text x="44.4561%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (29 samples, 0.02%)</title><rect x="44.2574%" y="309" width="0.0186%" height="15" fill="rgb(251,126,39)"/><text x="44.5074%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (29 samples, 0.02%)</title><rect x="44.2574%" y="293" width="0.0186%" height="15" fill="rgb(214,216,36)"/><text x="44.5074%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (34 samples, 0.02%)</title><rect x="44.2548%" y="325" width="0.0218%" height="15" fill="rgb(220,221,8)"/><text x="44.5048%" y="335.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (190 samples, 0.12%)</title><rect x="44.1567%" y="341" width="0.1218%" height="15" fill="rgb(240,216,3)"/><text x="44.4067%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (21 samples, 0.01%)</title><rect x="44.3509%" y="261" width="0.0135%" height="15" fill="rgb(232,218,17)"/><text x="44.6009%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (20 samples, 0.01%)</title><rect x="44.3516%" y="245" width="0.0128%" height="15" fill="rgb(229,163,45)"/><text x="44.6016%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (19 samples, 0.01%)</title><rect x="44.3522%" y="229" width="0.0122%" height="15" fill="rgb(231,110,42)"/><text x="44.6022%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (42 samples, 0.03%)</title><rect x="44.3676%" y="229" width="0.0269%" height="15" fill="rgb(208,170,48)"/><text x="44.6176%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (45 samples, 0.03%)</title><rect x="44.3670%" y="245" width="0.0288%" height="15" fill="rgb(239,116,25)"/><text x="44.6170%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`realloc (57 samples, 0.04%)</title><rect x="44.3650%" y="261" width="0.0365%" height="15" fill="rgb(219,200,50)"/><text x="44.6150%" y="271.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (84 samples, 0.05%)</title><rect x="44.3490%" y="277" width="0.0538%" height="15" fill="rgb(245,200,0)"/><text x="44.5990%" y="287.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (93 samples, 0.06%)</title><rect x="44.3439%" y="293" width="0.0596%" height="15" fill="rgb(245,119,33)"/><text x="44.5939%" y="303.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (219 samples, 0.14%)</title><rect x="44.2856%" y="309" width="0.1404%" height="15" fill="rgb(231,125,12)"/><text x="44.5356%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (31 samples, 0.02%)</title><rect x="44.4061%" y="293" width="0.0199%" height="15" fill="rgb(216,96,41)"/><text x="44.6561%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (23 samples, 0.01%)</title><rect x="44.4112%" y="277" width="0.0147%" height="15" fill="rgb(248,43,45)"/><text x="44.6612%" y="287.50"></text></g><g><title>group-b073d76844680b0b`&lt;core::option::Option&lt;T&gt; as openmls::codec::Codec&gt;::encode (227 samples, 0.15%)</title><rect x="44.2830%" y="325" width="0.1455%" height="15" fill="rgb(217,222,7)"/><text x="44.5330%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (23 samples, 0.01%)</title><rect x="44.4855%" y="277" width="0.0147%" height="15" fill="rgb(233,28,6)"/><text x="44.7355%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (20 samples, 0.01%)</title><rect x="44.4875%" y="261" width="0.0128%" height="15" fill="rgb(231,218,15)"/><text x="44.7375%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (19 samples, 0.01%)</title><rect x="44.4881%" y="245" width="0.0122%" height="15" fill="rgb(226,171,48)"/><text x="44.7381%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (38 samples, 0.02%)</title><rect x="44.5028%" y="245" width="0.0244%" height="15" fill="rgb(235,201,9)"/><text x="44.7528%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (40 samples, 0.03%)</title><rect x="44.5022%" y="261" width="0.0256%" height="15" fill="rgb(217,80,15)"/><text x="44.7522%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`realloc (54 samples, 0.03%)</title><rect x="44.5003%" y="277" width="0.0346%" height="15" fill="rgb(219,152,8)"/><text x="44.7503%" y="287.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (85 samples, 0.05%)</title><rect x="44.4810%" y="309" width="0.0545%" height="15" fill="rgb(243,107,38)"/><text x="44.7310%" y="319.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (81 samples, 0.05%)</title><rect x="44.4836%" y="293" width="0.0519%" height="15" fill="rgb(231,17,5)"/><text x="44.7336%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (34 samples, 0.02%)</title><rect x="44.5413%" y="309" width="0.0218%" height="15" fill="rgb(209,25,54)"/><text x="44.7913%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (24 samples, 0.02%)</title><rect x="44.5477%" y="293" width="0.0154%" height="15" fill="rgb(219,0,2)"/><text x="44.7977%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (17 samples, 0.01%)</title><rect x="44.5522%" y="277" width="0.0109%" height="15" fill="rgb(246,9,5)"/><text x="44.8022%" y="287.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (213 samples, 0.14%)</title><rect x="44.4291%" y="325" width="0.1365%" height="15" fill="rgb(226,159,4)"/><text x="44.6791%" y="335.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::codec::_&lt;impl tls_codec::Serialize for openmls::tree::hashes::ParentNodeTreeHashInput&gt;::tls_serialize (452 samples, 0.29%)</title><rect x="44.2804%" y="341" width="0.2897%" height="15" fill="rgb(219,175,34)"/><text x="44.5304%" y="351.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_Hash_update_last_256 (20 samples, 0.01%)</title><rect x="44.7675%" y="293" width="0.0128%" height="15" fill="rgb(236,10,46)"/><text x="45.0175%" y="303.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (108 samples, 0.07%)</title><rect x="44.7829%" y="293" width="0.0692%" height="15" fill="rgb(240,211,16)"/><text x="45.0329%" y="303.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_Hash_hash_256 (153 samples, 0.10%)</title><rect x="44.7566%" y="309" width="0.0981%" height="15" fill="rgb(205,3,43)"/><text x="45.0066%" y="319.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (131 samples, 0.08%)</title><rect x="44.8566%" y="309" width="0.0840%" height="15" fill="rgb(245,7,22)"/><text x="45.1066%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (38 samples, 0.02%)</title><rect x="44.9432%" y="293" width="0.0244%" height="15" fill="rgb(239,132,32)"/><text x="45.1932%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (37 samples, 0.02%)</title><rect x="44.9438%" y="277" width="0.0237%" height="15" fill="rgb(228,202,34)"/><text x="45.1938%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (43 samples, 0.03%)</title><rect x="44.9406%" y="309" width="0.0276%" height="15" fill="rgb(254,200,22)"/><text x="45.1906%" y="319.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (336 samples, 0.22%)</title><rect x="44.7541%" y="325" width="0.2153%" height="15" fill="rgb(219,10,39)"/><text x="45.0041%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (23 samples, 0.01%)</title><rect x="45.0983%" y="229" width="0.0147%" height="15" fill="rgb(226,210,39)"/><text x="45.3483%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (22 samples, 0.01%)</title><rect x="45.0989%" y="213" width="0.0141%" height="15" fill="rgb(208,219,16)"/><text x="45.3489%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (28 samples, 0.02%)</title><rect x="45.0957%" y="245" width="0.0179%" height="15" fill="rgb(216,158,51)"/><text x="45.3457%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (24 samples, 0.02%)</title><rect x="45.1329%" y="197" width="0.0154%" height="15" fill="rgb(233,14,44)"/><text x="45.3829%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (24 samples, 0.02%)</title><rect x="45.1329%" y="181" width="0.0154%" height="15" fill="rgb(237,97,39)"/><text x="45.3829%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (66 samples, 0.04%)</title><rect x="45.1226%" y="213" width="0.0423%" height="15" fill="rgb(218,198,43)"/><text x="45.3726%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (78 samples, 0.05%)</title><rect x="45.1175%" y="229" width="0.0500%" height="15" fill="rgb(231,104,20)"/><text x="45.3675%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`realloc (95 samples, 0.06%)</title><rect x="45.1136%" y="245" width="0.0609%" height="15" fill="rgb(254,36,13)"/><text x="45.3636%" y="255.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (135 samples, 0.09%)</title><rect x="45.0893%" y="277" width="0.0865%" height="15" fill="rgb(248,14,50)"/><text x="45.3393%" y="287.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (128 samples, 0.08%)</title><rect x="45.0938%" y="261" width="0.0820%" height="15" fill="rgb(217,107,29)"/><text x="45.3438%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (32 samples, 0.02%)</title><rect x="45.1809%" y="277" width="0.0205%" height="15" fill="rgb(251,169,33)"/><text x="45.4309%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (18 samples, 0.01%)</title><rect x="45.1899%" y="261" width="0.0115%" height="15" fill="rgb(217,108,32)"/><text x="45.4399%" y="271.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (345 samples, 0.22%)</title><rect x="44.9829%" y="293" width="0.2211%" height="15" fill="rgb(219,66,42)"/><text x="45.2329%" y="303.50"></text></g><g><title>group-b073d76844680b0b`&lt;core::option::Option&lt;T&gt; as openmls::codec::Codec&gt;::encode (357 samples, 0.23%)</title><rect x="44.9758%" y="309" width="0.2288%" height="15" fill="rgb(206,180,7)"/><text x="45.2258%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (35 samples, 0.02%)</title><rect x="45.3046%" y="245" width="0.0224%" height="15" fill="rgb(208,226,31)"/><text x="45.5546%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (33 samples, 0.02%)</title><rect x="45.3059%" y="229" width="0.0212%" height="15" fill="rgb(218,26,49)"/><text x="45.5559%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (37 samples, 0.02%)</title><rect x="45.3040%" y="261" width="0.0237%" height="15" fill="rgb(233,197,48)"/><text x="45.5540%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.01%)</title><rect x="45.3489%" y="213" width="0.0135%" height="15" fill="rgb(252,181,51)"/><text x="45.5989%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (20 samples, 0.01%)</title><rect x="45.3495%" y="197" width="0.0128%" height="15" fill="rgb(253,90,19)"/><text x="45.5995%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (18 samples, 0.01%)</title><rect x="45.3623%" y="213" width="0.0115%" height="15" fill="rgb(215,171,30)"/><text x="45.6123%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (17 samples, 0.01%)</title><rect x="45.3630%" y="197" width="0.0109%" height="15" fill="rgb(214,222,9)"/><text x="45.6130%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (71 samples, 0.05%)</title><rect x="45.3341%" y="245" width="0.0455%" height="15" fill="rgb(223,3,22)"/><text x="45.5841%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (65 samples, 0.04%)</title><rect x="45.3380%" y="229" width="0.0417%" height="15" fill="rgb(225,196,46)"/><text x="45.5880%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`realloc (88 samples, 0.06%)</title><rect x="45.3290%" y="261" width="0.0564%" height="15" fill="rgb(209,110,37)"/><text x="45.5790%" y="271.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (134 samples, 0.09%)</title><rect x="45.3008%" y="277" width="0.0859%" height="15" fill="rgb(249,89,12)"/><text x="45.5508%" y="287.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (142 samples, 0.09%)</title><rect x="45.2963%" y="293" width="0.0910%" height="15" fill="rgb(226,27,33)"/><text x="45.5463%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (30 samples, 0.02%)</title><rect x="45.3905%" y="293" width="0.0192%" height="15" fill="rgb(213,82,22)"/><text x="45.6405%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (26 samples, 0.02%)</title><rect x="45.3931%" y="277" width="0.0167%" height="15" fill="rgb(248,140,0)"/><text x="45.6431%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (21 samples, 0.01%)</title><rect x="45.3963%" y="261" width="0.0135%" height="15" fill="rgb(228,106,3)"/><text x="45.6463%" y="271.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (319 samples, 0.20%)</title><rect x="45.2078%" y="309" width="0.2045%" height="15" fill="rgb(209,23,37)"/><text x="45.4578%" y="319.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::codec::_&lt;impl tls_codec::Serialize for openmls::tree::hashes::ParentNodeTreeHashInput&gt;::tls_serialize (700 samples, 0.45%)</title><rect x="44.9726%" y="325" width="0.4486%" height="15" fill="rgb(241,93,50)"/><text x="45.2226%" y="335.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Hash_Core_SHA2_pad_256 (18 samples, 0.01%)</title><rect x="45.7936%" y="261" width="0.0115%" height="15" fill="rgb(253,46,43)"/><text x="46.0436%" y="271.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_Hash_update_last_256 (45 samples, 0.03%)</title><rect x="45.7834%" y="277" width="0.0288%" height="15" fill="rgb(226,206,43)"/><text x="46.0334%" y="287.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (183 samples, 0.12%)</title><rect x="45.8186%" y="277" width="0.1173%" height="15" fill="rgb(217,54,7)"/><text x="46.0686%" y="287.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_Hash_hash_256 (273 samples, 0.17%)</title><rect x="45.7674%" y="293" width="0.1750%" height="15" fill="rgb(223,5,52)"/><text x="46.0174%" y="303.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (228 samples, 0.15%)</title><rect x="45.9455%" y="293" width="0.1461%" height="15" fill="rgb(206,52,46)"/><text x="46.1955%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (86 samples, 0.06%)</title><rect x="46.1071%" y="277" width="0.0551%" height="15" fill="rgb(253,136,11)"/><text x="46.3571%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (81 samples, 0.05%)</title><rect x="46.1103%" y="261" width="0.0519%" height="15" fill="rgb(208,106,33)"/><text x="46.3603%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (112 samples, 0.07%)</title><rect x="46.0917%" y="293" width="0.0718%" height="15" fill="rgb(206,54,4)"/><text x="46.3417%" y="303.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (642 samples, 0.41%)</title><rect x="45.7558%" y="309" width="0.4115%" height="15" fill="rgb(213,3,15)"/><text x="46.0058%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (33 samples, 0.02%)</title><rect x="46.3352%" y="229" width="0.0212%" height="15" fill="rgb(252,211,39)"/><text x="46.5852%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (31 samples, 0.02%)</title><rect x="46.3365%" y="213" width="0.0199%" height="15" fill="rgb(223,6,36)"/><text x="46.5865%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (28 samples, 0.02%)</title><rect x="46.3384%" y="197" width="0.0179%" height="15" fill="rgb(252,169,45)"/><text x="46.5884%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.01%)</title><rect x="46.3698%" y="181" width="0.0128%" height="15" fill="rgb(212,48,26)"/><text x="46.6198%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (26 samples, 0.02%)</title><rect x="46.3827%" y="181" width="0.0167%" height="15" fill="rgb(251,102,48)"/><text x="46.6327%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (25 samples, 0.02%)</title><rect x="46.3833%" y="165" width="0.0160%" height="15" fill="rgb(243,208,16)"/><text x="46.6333%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (67 samples, 0.04%)</title><rect x="46.3673%" y="197" width="0.0429%" height="15" fill="rgb(219,96,24)"/><text x="46.6173%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (78 samples, 0.05%)</title><rect x="46.3609%" y="213" width="0.0500%" height="15" fill="rgb(219,33,29)"/><text x="46.6109%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`realloc (98 samples, 0.06%)</title><rect x="46.3564%" y="229" width="0.0628%" height="15" fill="rgb(223,176,5)"/><text x="46.6064%" y="239.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (141 samples, 0.09%)</title><rect x="46.3314%" y="245" width="0.0904%" height="15" fill="rgb(228,140,14)"/><text x="46.5814%" y="255.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (150 samples, 0.10%)</title><rect x="46.3263%" y="261" width="0.0961%" height="15" fill="rgb(217,179,31)"/><text x="46.5763%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (18 samples, 0.01%)</title><rect x="46.4230%" y="261" width="0.0115%" height="15" fill="rgb(230,9,30)"/><text x="46.6730%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (43 samples, 0.03%)</title><rect x="46.4346%" y="261" width="0.0276%" height="15" fill="rgb(230,136,20)"/><text x="46.6846%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (29 samples, 0.02%)</title><rect x="46.4435%" y="245" width="0.0186%" height="15" fill="rgb(215,210,22)"/><text x="46.6935%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (23 samples, 0.01%)</title><rect x="46.4474%" y="229" width="0.0147%" height="15" fill="rgb(218,43,5)"/><text x="46.6974%" y="239.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (431 samples, 0.28%)</title><rect x="46.1904%" y="277" width="0.2762%" height="15" fill="rgb(216,11,5)"/><text x="46.4404%" y="287.50"></text></g><g><title>group-b073d76844680b0b`&lt;core::option::Option&lt;T&gt; as openmls::codec::Codec&gt;::encode (446 samples, 0.29%)</title><rect x="46.1833%" y="293" width="0.2858%" height="15" fill="rgb(209,82,29)"/><text x="46.4333%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (27 samples, 0.02%)</title><rect x="46.6140%" y="245" width="0.0173%" height="15" fill="rgb(244,115,12)"/><text x="46.8640%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (26 samples, 0.02%)</title><rect x="46.6147%" y="229" width="0.0167%" height="15" fill="rgb(222,82,18)"/><text x="46.8647%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (24 samples, 0.02%)</title><rect x="46.6159%" y="213" width="0.0154%" height="15" fill="rgb(249,227,8)"/><text x="46.8659%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (16 samples, 0.01%)</title><rect x="46.6448%" y="197" width="0.0103%" height="15" fill="rgb(253,141,45)"/><text x="46.8948%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (24 samples, 0.02%)</title><rect x="46.6550%" y="197" width="0.0154%" height="15" fill="rgb(234,184,4)"/><text x="46.9050%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (23 samples, 0.01%)</title><rect x="46.6557%" y="181" width="0.0147%" height="15" fill="rgb(218,194,23)"/><text x="46.9057%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (64 samples, 0.04%)</title><rect x="46.6429%" y="213" width="0.0410%" height="15" fill="rgb(235,66,41)"/><text x="46.8929%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (76 samples, 0.05%)</title><rect x="46.6371%" y="229" width="0.0487%" height="15" fill="rgb(245,217,1)"/><text x="46.8871%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`realloc (92 samples, 0.06%)</title><rect x="46.6320%" y="245" width="0.0590%" height="15" fill="rgb(229,91,1)"/><text x="46.8820%" y="255.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (132 samples, 0.08%)</title><rect x="46.6070%" y="277" width="0.0846%" height="15" fill="rgb(207,101,30)"/><text x="46.8570%" y="287.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (128 samples, 0.08%)</title><rect x="46.6095%" y="261" width="0.0820%" height="15" fill="rgb(223,82,49)"/><text x="46.8595%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.01%)</title><rect x="46.6922%" y="277" width="0.0109%" height="15" fill="rgb(218,167,17)"/><text x="46.9422%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (44 samples, 0.03%)</title><rect x="46.7031%" y="277" width="0.0282%" height="15" fill="rgb(208,103,14)"/><text x="46.9531%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (36 samples, 0.02%)</title><rect x="46.7082%" y="261" width="0.0231%" height="15" fill="rgb(238,20,8)"/><text x="46.9582%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (25 samples, 0.02%)</title><rect x="46.7153%" y="245" width="0.0160%" height="15" fill="rgb(218,80,54)"/><text x="46.9653%" y="255.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (411 samples, 0.26%)</title><rect x="46.4756%" y="293" width="0.2634%" height="15" fill="rgb(240,144,17)"/><text x="46.7256%" y="303.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::codec::_&lt;impl tls_codec::Serialize for openmls::tree::hashes::ParentNodeTreeHashInput&gt;::tls_serialize (903 samples, 0.58%)</title><rect x="46.1712%" y="309" width="0.5787%" height="15" fill="rgb(245,27,50)"/><text x="46.4212%" y="319.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Hash_Core_SHA2_pad_256 (34 samples, 0.02%)</title><rect x="47.4248%" y="245" width="0.0218%" height="15" fill="rgb(251,51,7)"/><text x="47.6748%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (19 samples, 0.01%)</title><rect x="47.4344%" y="229" width="0.0122%" height="15" fill="rgb(245,217,29)"/><text x="47.6844%" y="239.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_Hash_update_last_256 (107 samples, 0.07%)</title><rect x="47.3985%" y="261" width="0.0686%" height="15" fill="rgb(221,176,29)"/><text x="47.6485%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (23 samples, 0.01%)</title><rect x="47.4523%" y="245" width="0.0147%" height="15" fill="rgb(212,180,24)"/><text x="47.7023%" y="255.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Hash_Core_SHA2_finish_256 (17 samples, 0.01%)</title><rect x="47.4671%" y="261" width="0.0109%" height="15" fill="rgb(254,24,2)"/><text x="47.7171%" y="271.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (368 samples, 0.24%)</title><rect x="47.4805%" y="261" width="0.2359%" height="15" fill="rgb(230,100,2)"/><text x="47.7305%" y="271.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_Hash_hash_256 (557 samples, 0.36%)</title><rect x="47.3677%" y="277" width="0.3570%" height="15" fill="rgb(219,142,25)"/><text x="47.6177%" y="287.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (428 samples, 0.27%)</title><rect x="47.7279%" y="277" width="0.2743%" height="15" fill="rgb(240,73,43)"/><text x="47.9779%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (190 samples, 0.12%)</title><rect x="48.0369%" y="261" width="0.1218%" height="15" fill="rgb(214,114,15)"/><text x="48.2869%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (184 samples, 0.12%)</title><rect x="48.0407%" y="245" width="0.1179%" height="15" fill="rgb(207,130,4)"/><text x="48.2907%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (251 samples, 0.16%)</title><rect x="48.0023%" y="277" width="0.1609%" height="15" fill="rgb(221,25,40)"/><text x="48.2523%" y="287.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (1,283 samples, 0.82%)</title><rect x="47.3453%" y="293" width="0.8223%" height="15" fill="rgb(241,184,7)"/><text x="47.5953%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (27 samples, 0.02%)</title><rect x="48.3336%" y="213" width="0.0173%" height="15" fill="rgb(235,159,4)"/><text x="48.5836%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (26 samples, 0.02%)</title><rect x="48.3343%" y="197" width="0.0167%" height="15" fill="rgb(214,87,48)"/><text x="48.5843%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (24 samples, 0.02%)</title><rect x="48.3355%" y="181" width="0.0154%" height="15" fill="rgb(246,198,24)"/><text x="48.5855%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (17 samples, 0.01%)</title><rect x="48.3618%" y="165" width="0.0109%" height="15" fill="rgb(209,66,40)"/><text x="48.6118%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (29 samples, 0.02%)</title><rect x="48.3727%" y="165" width="0.0186%" height="15" fill="rgb(233,147,39)"/><text x="48.6227%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (29 samples, 0.02%)</title><rect x="48.3727%" y="149" width="0.0186%" height="15" fill="rgb(231,145,52)"/><text x="48.6227%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (77 samples, 0.05%)</title><rect x="48.3605%" y="181" width="0.0494%" height="15" fill="rgb(206,20,26)"/><text x="48.6105%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (88 samples, 0.06%)</title><rect x="48.3541%" y="197" width="0.0564%" height="15" fill="rgb(238,220,4)"/><text x="48.6041%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (108 samples, 0.07%)</title><rect x="48.3522%" y="213" width="0.0692%" height="15" fill="rgb(252,195,42)"/><text x="48.6022%" y="223.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (143 samples, 0.09%)</title><rect x="48.3304%" y="229" width="0.0917%" height="15" fill="rgb(209,10,6)"/><text x="48.5804%" y="239.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (151 samples, 0.10%)</title><rect x="48.3259%" y="245" width="0.0968%" height="15" fill="rgb(229,3,52)"/><text x="48.5759%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (49 samples, 0.03%)</title><rect x="48.4297%" y="245" width="0.0314%" height="15" fill="rgb(253,49,37)"/><text x="48.6797%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (38 samples, 0.02%)</title><rect x="48.4368%" y="229" width="0.0244%" height="15" fill="rgb(240,103,49)"/><text x="48.6868%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (25 samples, 0.02%)</title><rect x="48.4451%" y="213" width="0.0160%" height="15" fill="rgb(250,182,30)"/><text x="48.6951%" y="223.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (406 samples, 0.26%)</title><rect x="48.2061%" y="261" width="0.2602%" height="15" fill="rgb(248,8,30)"/><text x="48.4561%" y="271.50"></text></g><g><title>group-b073d76844680b0b`&lt;core::option::Option&lt;T&gt; as openmls::codec::Codec&gt;::encode (425 samples, 0.27%)</title><rect x="48.1958%" y="277" width="0.2724%" height="15" fill="rgb(237,120,30)"/><text x="48.4458%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (25 samples, 0.02%)</title><rect x="48.6470%" y="213" width="0.0160%" height="15" fill="rgb(221,146,34)"/><text x="48.8970%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (25 samples, 0.02%)</title><rect x="48.6470%" y="197" width="0.0160%" height="15" fill="rgb(242,55,13)"/><text x="48.8970%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (28 samples, 0.02%)</title><rect x="48.6464%" y="229" width="0.0179%" height="15" fill="rgb(242,112,31)"/><text x="48.8964%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (17 samples, 0.01%)</title><rect x="48.6906%" y="181" width="0.0109%" height="15" fill="rgb(249,192,27)"/><text x="48.9406%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (28 samples, 0.02%)</title><rect x="48.7015%" y="181" width="0.0179%" height="15" fill="rgb(208,204,44)"/><text x="48.9515%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (27 samples, 0.02%)</title><rect x="48.7021%" y="165" width="0.0173%" height="15" fill="rgb(208,93,54)"/><text x="48.9521%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (75 samples, 0.05%)</title><rect x="48.6855%" y="197" width="0.0481%" height="15" fill="rgb(242,1,31)"/><text x="48.9355%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (94 samples, 0.06%)</title><rect x="48.6752%" y="213" width="0.0602%" height="15" fill="rgb(241,83,25)"/><text x="48.9252%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (19 samples, 0.01%)</title><rect x="48.7355%" y="213" width="0.0122%" height="15" fill="rgb(205,169,50)"/><text x="48.9855%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (17 samples, 0.01%)</title><rect x="48.7367%" y="197" width="0.0109%" height="15" fill="rgb(239,186,37)"/><text x="48.9867%" y="207.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (172 samples, 0.11%)</title><rect x="48.6387%" y="261" width="0.1102%" height="15" fill="rgb(205,221,10)"/><text x="48.8887%" y="271.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (163 samples, 0.10%)</title><rect x="48.6445%" y="245" width="0.1045%" height="15" fill="rgb(218,196,15)"/><text x="48.8945%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`realloc (130 samples, 0.08%)</title><rect x="48.6656%" y="229" width="0.0833%" height="15" fill="rgb(218,196,35)"/><text x="48.9156%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (55 samples, 0.04%)</title><rect x="48.7560%" y="261" width="0.0353%" height="15" fill="rgb(233,63,24)"/><text x="49.0060%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (38 samples, 0.02%)</title><rect x="48.7669%" y="245" width="0.0244%" height="15" fill="rgb(225,8,4)"/><text x="49.0169%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (23 samples, 0.01%)</title><rect x="48.7765%" y="229" width="0.0147%" height="15" fill="rgb(234,105,35)"/><text x="49.0265%" y="239.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (503 samples, 0.32%)</title><rect x="48.4727%" y="277" width="0.3224%" height="15" fill="rgb(236,21,32)"/><text x="48.7227%" y="287.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::codec::_&lt;impl tls_codec::Serialize for openmls::tree::hashes::ParentNodeTreeHashInput&gt;::tls_serialize (1,012 samples, 0.65%)</title><rect x="48.1721%" y="293" width="0.6486%" height="15" fill="rgb(228,109,6)"/><text x="48.4221%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (37 samples, 0.02%)</title><rect x="48.7970%" y="277" width="0.0237%" height="15" fill="rgb(229,215,31)"/><text x="49.0470%" y="287.50"></text></g><g><title>group-b073d76844680b0b`__rust_dealloc (24 samples, 0.02%)</title><rect x="49.6488%" y="277" width="0.0154%" height="15" fill="rgb(221,52,54)"/><text x="49.8988%" y="287.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Hash_Core_SHA2_pad_256 (84 samples, 0.05%)</title><rect x="49.8225%" y="229" width="0.0538%" height="15" fill="rgb(252,129,43)"/><text x="50.0725%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (50 samples, 0.03%)</title><rect x="49.8443%" y="213" width="0.0320%" height="15" fill="rgb(248,183,27)"/><text x="50.0943%" y="223.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_Hash_update_last_256 (184 samples, 0.12%)</title><rect x="49.7853%" y="245" width="0.1179%" height="15" fill="rgb(250,0,22)"/><text x="50.0353%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (35 samples, 0.02%)</title><rect x="49.8808%" y="229" width="0.0224%" height="15" fill="rgb(213,166,10)"/><text x="50.1308%" y="239.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Hash_Core_SHA2_finish_256 (44 samples, 0.03%)</title><rect x="49.9032%" y="245" width="0.0282%" height="15" fill="rgb(207,163,36)"/><text x="50.1532%" y="255.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (782 samples, 0.50%)</title><rect x="49.9359%" y="245" width="0.5012%" height="15" fill="rgb(208,122,22)"/><text x="50.1859%" y="255.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_Hash_hash_256 (1,142 samples, 0.73%)</title><rect x="49.7180%" y="261" width="0.7319%" height="15" fill="rgb(207,104,49)"/><text x="49.9680%" y="271.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (775 samples, 0.50%)</title><rect x="50.4615%" y="261" width="0.4967%" height="15" fill="rgb(248,211,50)"/><text x="50.7115%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (388 samples, 0.25%)</title><rect x="51.0107%" y="245" width="0.2487%" height="15" fill="rgb(217,13,45)"/><text x="51.2607%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (374 samples, 0.24%)</title><rect x="51.0197%" y="229" width="0.2397%" height="15" fill="rgb(211,216,49)"/><text x="51.2697%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (478 samples, 0.31%)</title><rect x="50.9582%" y="261" width="0.3064%" height="15" fill="rgb(221,58,53)"/><text x="51.2082%" y="271.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (2,498 samples, 1.60%)</title><rect x="49.6718%" y="277" width="1.6010%" height="15" fill="rgb(220,112,41)"/><text x="49.9218%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (39 samples, 0.02%)</title><rect x="51.4555%" y="197" width="0.0250%" height="15" fill="rgb(236,38,28)"/><text x="51.7055%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (36 samples, 0.02%)</title><rect x="51.4574%" y="181" width="0.0231%" height="15" fill="rgb(227,195,22)"/><text x="51.7074%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (34 samples, 0.02%)</title><rect x="51.4587%" y="165" width="0.0218%" height="15" fill="rgb(214,55,33)"/><text x="51.7087%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (25 samples, 0.02%)</title><rect x="51.4991%" y="149" width="0.0160%" height="15" fill="rgb(248,80,13)"/><text x="51.7491%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (31 samples, 0.02%)</title><rect x="51.5151%" y="149" width="0.0199%" height="15" fill="rgb(238,52,6)"/><text x="51.7651%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (30 samples, 0.02%)</title><rect x="51.5158%" y="133" width="0.0192%" height="15" fill="rgb(224,198,47)"/><text x="51.7658%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (16 samples, 0.01%)</title><rect x="51.5350%" y="149" width="0.0103%" height="15" fill="rgb(233,171,20)"/><text x="51.7850%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (20 samples, 0.01%)</title><rect x="51.5459%" y="149" width="0.0128%" height="15" fill="rgb(241,30,25)"/><text x="51.7959%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (104 samples, 0.07%)</title><rect x="51.4946%" y="165" width="0.0667%" height="15" fill="rgb(207,171,38)"/><text x="51.7446%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (117 samples, 0.07%)</title><rect x="51.4869%" y="181" width="0.0750%" height="15" fill="rgb(234,70,1)"/><text x="51.7369%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`realloc (138 samples, 0.09%)</title><rect x="51.4818%" y="197" width="0.0884%" height="15" fill="rgb(232,178,18)"/><text x="51.7318%" y="207.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (188 samples, 0.12%)</title><rect x="51.4517%" y="213" width="0.1205%" height="15" fill="rgb(241,78,40)"/><text x="51.7017%" y="223.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (206 samples, 0.13%)</title><rect x="51.4414%" y="229" width="0.1320%" height="15" fill="rgb(222,35,25)"/><text x="51.6914%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.01%)</title><rect x="51.5747%" y="229" width="0.0141%" height="15" fill="rgb(207,92,16)"/><text x="51.8247%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (18 samples, 0.01%)</title><rect x="51.5773%" y="213" width="0.0115%" height="15" fill="rgb(216,59,51)"/><text x="51.8273%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (17 samples, 0.01%)</title><rect x="51.5779%" y="197" width="0.0109%" height="15" fill="rgb(213,80,28)"/><text x="51.8279%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (61 samples, 0.04%)</title><rect x="51.5888%" y="229" width="0.0391%" height="15" fill="rgb(220,93,7)"/><text x="51.8388%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (51 samples, 0.03%)</title><rect x="51.5952%" y="213" width="0.0327%" height="15" fill="rgb(225,24,44)"/><text x="51.8452%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (35 samples, 0.02%)</title><rect x="51.6055%" y="197" width="0.0224%" height="15" fill="rgb(243,74,40)"/><text x="51.8555%" y="207.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (454 samples, 0.29%)</title><rect x="51.3427%" y="245" width="0.2910%" height="15" fill="rgb(228,39,7)"/><text x="51.5927%" y="255.50"></text></g><g><title>group-b073d76844680b0b`&lt;core::option::Option&lt;T&gt; as openmls::codec::Codec&gt;::encode (479 samples, 0.31%)</title><rect x="51.3280%" y="261" width="0.3070%" height="15" fill="rgb(227,79,8)"/><text x="51.5780%" y="271.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16 samples, 0.01%)</title><rect x="51.6350%" y="261" width="0.0103%" height="15" fill="rgb(236,58,11)"/><text x="51.8850%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (41 samples, 0.03%)</title><rect x="51.8176%" y="213" width="0.0263%" height="15" fill="rgb(249,63,35)"/><text x="52.0676%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (39 samples, 0.02%)</title><rect x="51.8189%" y="197" width="0.0250%" height="15" fill="rgb(252,114,16)"/><text x="52.0689%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (37 samples, 0.02%)</title><rect x="51.8202%" y="181" width="0.0237%" height="15" fill="rgb(254,151,24)"/><text x="52.0702%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (18 samples, 0.01%)</title><rect x="51.8638%" y="165" width="0.0115%" height="15" fill="rgb(253,54,39)"/><text x="52.1138%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (43 samples, 0.03%)</title><rect x="51.8753%" y="165" width="0.0276%" height="15" fill="rgb(243,25,45)"/><text x="52.1253%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (43 samples, 0.03%)</title><rect x="51.8753%" y="149" width="0.0276%" height="15" fill="rgb(234,134,9)"/><text x="52.1253%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (106 samples, 0.07%)</title><rect x="51.8555%" y="181" width="0.0679%" height="15" fill="rgb(227,166,31)"/><text x="52.1055%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (20 samples, 0.01%)</title><rect x="51.9106%" y="165" width="0.0128%" height="15" fill="rgb(245,143,41)"/><text x="52.1606%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (116 samples, 0.07%)</title><rect x="51.8503%" y="197" width="0.0743%" height="15" fill="rgb(238,181,32)"/><text x="52.1003%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (16 samples, 0.01%)</title><rect x="51.9247%" y="197" width="0.0103%" height="15" fill="rgb(224,113,18)"/><text x="52.1747%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (141 samples, 0.09%)</title><rect x="51.8452%" y="213" width="0.0904%" height="15" fill="rgb(240,229,28)"/><text x="52.0952%" y="223.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (200 samples, 0.13%)</title><rect x="51.8093%" y="245" width="0.1282%" height="15" fill="rgb(250,185,3)"/><text x="52.0593%" y="255.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (191 samples, 0.12%)</title><rect x="51.8151%" y="229" width="0.1224%" height="15" fill="rgb(212,59,25)"/><text x="52.0651%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (51 samples, 0.03%)</title><rect x="51.9465%" y="245" width="0.0327%" height="15" fill="rgb(221,87,20)"/><text x="52.1965%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (34 samples, 0.02%)</title><rect x="51.9574%" y="229" width="0.0218%" height="15" fill="rgb(213,74,28)"/><text x="52.2074%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (24 samples, 0.02%)</title><rect x="51.9638%" y="213" width="0.0154%" height="15" fill="rgb(224,132,34)"/><text x="52.2138%" y="223.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (530 samples, 0.34%)</title><rect x="51.6452%" y="261" width="0.3397%" height="15" fill="rgb(222,101,24)"/><text x="51.8952%" y="271.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::codec::_&lt;impl tls_codec::Serialize for openmls::tree::hashes::ParentNodeTreeHashInput&gt;::tls_serialize (1,148 samples, 0.74%)</title><rect x="51.2793%" y="277" width="0.7358%" height="15" fill="rgb(254,142,4)"/><text x="51.5293%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (44 samples, 0.03%)</title><rect x="51.9868%" y="261" width="0.0282%" height="15" fill="rgb(230,229,49)"/><text x="52.2368%" y="271.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (32 samples, 0.02%)</title><rect x="52.0234%" y="229" width="0.0205%" height="15" fill="rgb(238,70,47)"/><text x="52.2734%" y="239.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_Hash_hash_256 (36 samples, 0.02%)</title><rect x="52.0215%" y="245" width="0.0231%" height="15" fill="rgb(231,160,17)"/><text x="52.2715%" y="255.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (54 samples, 0.03%)</title><rect x="52.0452%" y="245" width="0.0346%" height="15" fill="rgb(218,68,53)"/><text x="52.2952%" y="255.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (111 samples, 0.07%)</title><rect x="52.0202%" y="261" width="0.0711%" height="15" fill="rgb(236,111,10)"/><text x="52.2702%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (18 samples, 0.01%)</title><rect x="52.0798%" y="245" width="0.0115%" height="15" fill="rgb(224,34,41)"/><text x="52.3298%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (32 samples, 0.02%)</title><rect x="52.1343%" y="165" width="0.0205%" height="15" fill="rgb(241,118,19)"/><text x="52.3843%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (31 samples, 0.02%)</title><rect x="52.1548%" y="165" width="0.0199%" height="15" fill="rgb(238,129,25)"/><text x="52.4048%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (31 samples, 0.02%)</title><rect x="52.1548%" y="149" width="0.0199%" height="15" fill="rgb(238,22,31)"/><text x="52.4048%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (88 samples, 0.06%)</title><rect x="52.1304%" y="181" width="0.0564%" height="15" fill="rgb(222,174,48)"/><text x="52.3804%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (101 samples, 0.06%)</title><rect x="52.1240%" y="197" width="0.0647%" height="15" fill="rgb(206,152,40)"/><text x="52.3740%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (115 samples, 0.07%)</title><rect x="52.1227%" y="213" width="0.0737%" height="15" fill="rgb(218,99,54)"/><text x="52.3727%" y="223.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (135 samples, 0.09%)</title><rect x="52.1118%" y="229" width="0.0865%" height="15" fill="rgb(220,174,26)"/><text x="52.3618%" y="239.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (142 samples, 0.09%)</title><rect x="52.1080%" y="245" width="0.0910%" height="15" fill="rgb(245,116,9)"/><text x="52.3580%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (27 samples, 0.02%)</title><rect x="52.2028%" y="245" width="0.0173%" height="15" fill="rgb(209,72,35)"/><text x="52.4528%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (22 samples, 0.01%)</title><rect x="52.2060%" y="229" width="0.0141%" height="15" fill="rgb(226,126,21)"/><text x="52.4560%" y="239.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (203 samples, 0.13%)</title><rect x="52.0913%" y="261" width="0.1301%" height="15" fill="rgb(227,192,1)"/><text x="52.3413%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (18 samples, 0.01%)</title><rect x="52.2214%" y="261" width="0.0115%" height="15" fill="rgb(237,180,29)"/><text x="52.4714%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (17 samples, 0.01%)</title><rect x="52.2221%" y="245" width="0.0109%" height="15" fill="rgb(230,197,35)"/><text x="52.4721%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (16 samples, 0.01%)</title><rect x="52.2227%" y="229" width="0.0103%" height="15" fill="rgb(246,193,31)"/><text x="52.4727%" y="239.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::LeafNodeHashInput::hash (355 samples, 0.23%)</title><rect x="52.0150%" y="277" width="0.2275%" height="15" fill="rgb(241,36,4)"/><text x="52.2650%" y="287.50"></text></g><g><title>group-b073d76844680b0b`DYLD-STUB$$memcpy (23 samples, 0.01%)</title><rect x="53.2072%" y="261" width="0.0147%" height="15" fill="rgb(241,130,17)"/><text x="53.4572%" y="271.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (33 samples, 0.02%)</title><rect x="53.2341%" y="261" width="0.0212%" height="15" fill="rgb(206,137,32)"/><text x="53.4841%" y="271.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_AutoConfig2_has_shaext (45 samples, 0.03%)</title><rect x="53.4174%" y="229" width="0.0288%" height="15" fill="rgb(237,228,51)"/><text x="53.6674%" y="239.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_AutoConfig2_has_sse (34 samples, 0.02%)</title><rect x="53.4462%" y="229" width="0.0218%" height="15" fill="rgb(243,6,42)"/><text x="53.6962%" y="239.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Hash_Core_SHA2_pad_256 (139 samples, 0.09%)</title><rect x="53.5494%" y="213" width="0.0891%" height="15" fill="rgb(251,74,28)"/><text x="53.7994%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (73 samples, 0.05%)</title><rect x="53.5917%" y="197" width="0.0468%" height="15" fill="rgb(218,20,49)"/><text x="53.8417%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (19 samples, 0.01%)</title><rect x="53.6385%" y="213" width="0.0122%" height="15" fill="rgb(238,28,14)"/><text x="53.8885%" y="223.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_Hash_update_last_256 (371 samples, 0.24%)</title><rect x="53.4680%" y="229" width="0.2378%" height="15" fill="rgb(229,40,46)"/><text x="53.7180%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (86 samples, 0.06%)</title><rect x="53.6507%" y="213" width="0.0551%" height="15" fill="rgb(244,195,20)"/><text x="53.9007%" y="223.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Hash_Core_SHA2_finish_256 (59 samples, 0.04%)</title><rect x="53.7058%" y="229" width="0.0378%" height="15" fill="rgb(253,56,35)"/><text x="53.9558%" y="239.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (1,489 samples, 0.95%)</title><rect x="53.7494%" y="229" width="0.9543%" height="15" fill="rgb(210,149,44)"/><text x="53.9994%" y="239.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (16 samples, 0.01%)</title><rect x="54.7069%" y="229" width="0.0103%" height="15" fill="rgb(240,135,12)"/><text x="54.9569%" y="239.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_Hash_hash_256 (2,199 samples, 1.41%)</title><rect x="53.3366%" y="245" width="1.4094%" height="15" fill="rgb(251,24,50)"/><text x="53.5866%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (45 samples, 0.03%)</title><rect x="54.7172%" y="229" width="0.0288%" height="15" fill="rgb(243,200,47)"/><text x="54.9672%" y="239.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_Hash_update_last_256 (18 samples, 0.01%)</title><rect x="54.7460%" y="245" width="0.0115%" height="15" fill="rgb(224,166,26)"/><text x="54.9960%" y="255.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (1,466 samples, 0.94%)</title><rect x="54.7665%" y="245" width="0.9396%" height="15" fill="rgb(233,0,47)"/><text x="55.0165%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (133 samples, 0.09%)</title><rect x="56.2278%" y="197" width="0.0852%" height="15" fill="rgb(253,80,5)"/><text x="56.4778%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1,264 samples, 0.81%)</title><rect x="55.7811%" y="229" width="0.8101%" height="15" fill="rgb(214,133,25)"/><text x="56.0311%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1,224 samples, 0.78%)</title><rect x="55.8067%" y="213" width="0.7845%" height="15" fill="rgb(209,27,14)"/><text x="56.0567%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (433 samples, 0.28%)</title><rect x="56.3137%" y="197" width="0.2775%" height="15" fill="rgb(219,102,51)"/><text x="56.5637%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (93 samples, 0.06%)</title><rect x="56.5316%" y="181" width="0.0596%" height="15" fill="rgb(237,18,16)"/><text x="56.7816%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,395 samples, 0.89%)</title><rect x="55.7061%" y="245" width="0.8941%" height="15" fill="rgb(241,85,17)"/><text x="55.9561%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (21 samples, 0.01%)</title><rect x="56.6002%" y="245" width="0.0135%" height="15" fill="rgb(236,90,42)"/><text x="56.8502%" y="255.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (5,247 samples, 3.36%)</title><rect x="53.2552%" y="261" width="3.3629%" height="15" fill="rgb(249,57,21)"/><text x="53.5052%" y="271.50">gro..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (50 samples, 0.03%)</title><rect x="56.9399%" y="181" width="0.0320%" height="15" fill="rgb(243,12,36)"/><text x="57.1899%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (47 samples, 0.03%)</title><rect x="56.9418%" y="165" width="0.0301%" height="15" fill="rgb(253,128,47)"/><text x="57.1918%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (45 samples, 0.03%)</title><rect x="56.9431%" y="149" width="0.0288%" height="15" fill="rgb(207,33,20)"/><text x="57.1931%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (18 samples, 0.01%)</title><rect x="57.0302%" y="101" width="0.0115%" height="15" fill="rgb(233,215,35)"/><text x="57.2802%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (80 samples, 0.05%)</title><rect x="56.9943%" y="133" width="0.0513%" height="15" fill="rgb(249,188,52)"/><text x="57.2443%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (50 samples, 0.03%)</title><rect x="57.0136%" y="117" width="0.0320%" height="15" fill="rgb(225,12,32)"/><text x="57.2636%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (58 samples, 0.04%)</title><rect x="57.0456%" y="133" width="0.0372%" height="15" fill="rgb(247,98,14)"/><text x="57.2956%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (54 samples, 0.03%)</title><rect x="57.0482%" y="117" width="0.0346%" height="15" fill="rgb(247,219,48)"/><text x="57.2982%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (20 samples, 0.01%)</title><rect x="57.0700%" y="101" width="0.0128%" height="15" fill="rgb(253,60,48)"/><text x="57.3200%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (29 samples, 0.02%)</title><rect x="57.0930%" y="133" width="0.0186%" height="15" fill="rgb(245,15,52)"/><text x="57.3430%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (210 samples, 0.13%)</title><rect x="56.9802%" y="165" width="0.1346%" height="15" fill="rgb(220,133,28)"/><text x="57.2302%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (196 samples, 0.13%)</title><rect x="56.9892%" y="149" width="0.1256%" height="15" fill="rgb(217,180,4)"/><text x="57.2392%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`realloc (238 samples, 0.15%)</title><rect x="56.9732%" y="181" width="0.1525%" height="15" fill="rgb(251,24,1)"/><text x="57.2232%" y="191.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (296 samples, 0.19%)</title><rect x="56.9392%" y="197" width="0.1897%" height="15" fill="rgb(212,185,49)"/><text x="57.1892%" y="207.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (308 samples, 0.20%)</title><rect x="56.9322%" y="213" width="0.1974%" height="15" fill="rgb(215,175,22)"/><text x="57.1822%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (26 samples, 0.02%)</title><rect x="57.1296%" y="213" width="0.0167%" height="15" fill="rgb(250,205,14)"/><text x="57.3796%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (21 samples, 0.01%)</title><rect x="57.1328%" y="197" width="0.0135%" height="15" fill="rgb(225,211,22)"/><text x="57.3828%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (21 samples, 0.01%)</title><rect x="57.1328%" y="181" width="0.0135%" height="15" fill="rgb(251,179,42)"/><text x="57.3828%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (37 samples, 0.02%)</title><rect x="57.1700%" y="181" width="0.0237%" height="15" fill="rgb(208,216,51)"/><text x="57.4200%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (75 samples, 0.05%)</title><rect x="57.1462%" y="213" width="0.0481%" height="15" fill="rgb(235,36,11)"/><text x="57.3962%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (60 samples, 0.04%)</title><rect x="57.1559%" y="197" width="0.0385%" height="15" fill="rgb(213,189,28)"/><text x="57.4059%" y="207.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (732 samples, 0.47%)</title><rect x="56.7290%" y="229" width="0.4692%" height="15" fill="rgb(227,203,42)"/><text x="56.9790%" y="239.50"></text></g><g><title>group-b073d76844680b0b`&lt;core::option::Option&lt;T&gt; as openmls::codec::Codec&gt;::encode (788 samples, 0.51%)</title><rect x="56.6976%" y="245" width="0.5050%" height="15" fill="rgb(244,72,36)"/><text x="56.9476%" y="255.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (24 samples, 0.02%)</title><rect x="57.2033%" y="245" width="0.0154%" height="15" fill="rgb(213,53,17)"/><text x="57.4533%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (44 samples, 0.03%)</title><rect x="57.4263%" y="181" width="0.0282%" height="15" fill="rgb(207,167,3)"/><text x="57.6763%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (42 samples, 0.03%)</title><rect x="57.4276%" y="165" width="0.0269%" height="15" fill="rgb(216,98,30)"/><text x="57.6776%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (47 samples, 0.03%)</title><rect x="57.4257%" y="197" width="0.0301%" height="15" fill="rgb(236,123,15)"/><text x="57.6757%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (21 samples, 0.01%)</title><rect x="57.4693%" y="149" width="0.0135%" height="15" fill="rgb(248,81,50)"/><text x="57.7193%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (34 samples, 0.02%)</title><rect x="57.4827%" y="149" width="0.0218%" height="15" fill="rgb(214,120,4)"/><text x="57.7327%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (32 samples, 0.02%)</title><rect x="57.4840%" y="133" width="0.0205%" height="15" fill="rgb(208,179,34)"/><text x="57.7340%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (19 samples, 0.01%)</title><rect x="57.5045%" y="149" width="0.0122%" height="15" fill="rgb(227,140,7)"/><text x="57.7545%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (98 samples, 0.06%)</title><rect x="57.4661%" y="165" width="0.0628%" height="15" fill="rgb(214,22,6)"/><text x="57.7161%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (18 samples, 0.01%)</title><rect x="57.5173%" y="149" width="0.0115%" height="15" fill="rgb(207,137,27)"/><text x="57.7673%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (109 samples, 0.07%)</title><rect x="57.4603%" y="181" width="0.0699%" height="15" fill="rgb(210,8,46)"/><text x="57.7103%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`realloc (127 samples, 0.08%)</title><rect x="57.4564%" y="197" width="0.0814%" height="15" fill="rgb(240,16,54)"/><text x="57.7064%" y="207.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (197 samples, 0.13%)</title><rect x="57.4148%" y="229" width="0.1263%" height="15" fill="rgb(211,209,29)"/><text x="57.6648%" y="239.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (187 samples, 0.12%)</title><rect x="57.4212%" y="213" width="0.1199%" height="15" fill="rgb(226,228,24)"/><text x="57.6712%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.01%)</title><rect x="57.5411%" y="229" width="0.0109%" height="15" fill="rgb(222,84,9)"/><text x="57.7911%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (50 samples, 0.03%)</title><rect x="57.5519%" y="229" width="0.0320%" height="15" fill="rgb(234,203,30)"/><text x="57.8019%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (31 samples, 0.02%)</title><rect x="57.5641%" y="213" width="0.0199%" height="15" fill="rgb(238,109,14)"/><text x="57.8141%" y="223.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (576 samples, 0.37%)</title><rect x="57.2187%" y="245" width="0.3692%" height="15" fill="rgb(233,206,34)"/><text x="57.4687%" y="255.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::codec::_&lt;impl tls_codec::Serialize for openmls::tree::hashes::ParentNodeTreeHashInput&gt;::tls_serialize (1,622 samples, 1.04%)</title><rect x="56.6181%" y="261" width="1.0396%" height="15" fill="rgb(220,167,47)"/><text x="56.8681%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (104 samples, 0.07%)</title><rect x="57.5910%" y="245" width="0.0667%" height="15" fill="rgb(238,105,10)"/><text x="57.8410%" y="255.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::LeafNodeHashInput::hash (22 samples, 0.01%)</title><rect x="57.6577%" y="261" width="0.0141%" height="15" fill="rgb(213,227,17)"/><text x="57.9077%" y="271.50"></text></g><g><title>group-b073d76844680b0b`&lt;core::option::Option&lt;T&gt; as openmls::codec::Codec&gt;::encode (30 samples, 0.02%)</title><rect x="58.0794%" y="245" width="0.0192%" height="15" fill="rgb(217,132,38)"/><text x="58.3294%" y="255.50"></text></g><g><title>group-b073d76844680b0b`__rust_alloc (29 samples, 0.02%)</title><rect x="58.1128%" y="245" width="0.0186%" height="15" fill="rgb(242,146,4)"/><text x="58.3628%" y="255.50"></text></g><g><title>group-b073d76844680b0b`__rust_dealloc (21 samples, 0.01%)</title><rect x="58.1313%" y="245" width="0.0135%" height="15" fill="rgb(212,61,9)"/><text x="58.3813%" y="255.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (21 samples, 0.01%)</title><rect x="58.1448%" y="245" width="0.0135%" height="15" fill="rgb(247,126,22)"/><text x="58.3948%" y="255.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (16 samples, 0.01%)</title><rect x="58.1583%" y="245" width="0.0103%" height="15" fill="rgb(220,196,2)"/><text x="58.4083%" y="255.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16 samples, 0.01%)</title><rect x="58.5268%" y="213" width="0.0103%" height="15" fill="rgb(208,46,4)"/><text x="58.7768%" y="223.50"></text></g><g><title>group-b073d76844680b0b`&lt;core::option::Option&lt;T&gt; as openmls::codec::Codec&gt;::encode (1,457 samples, 0.93%)</title><rect x="58.4608%" y="229" width="0.9338%" height="15" fill="rgb(252,104,46)"/><text x="58.7108%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1,338 samples, 0.86%)</title><rect x="58.5370%" y="213" width="0.8575%" height="15" fill="rgb(237,152,48)"/><text x="58.7870%" y="223.50"></text></g><g><title>group-b073d76844680b0b`DYLD-STUB$$memcpy (42 samples, 0.03%)</title><rect x="59.3984%" y="229" width="0.0269%" height="15" fill="rgb(221,59,37)"/><text x="59.6484%" y="239.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_Hash_hash (20 samples, 0.01%)</title><rect x="59.4254%" y="229" width="0.0128%" height="15" fill="rgb(209,202,51)"/><text x="59.6754%" y="239.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_Hash_hash_256 (16 samples, 0.01%)</title><rect x="59.4382%" y="229" width="0.0103%" height="15" fill="rgb(228,81,30)"/><text x="59.6882%" y="239.50"></text></g><g><title>group-b073d76844680b0b`__rdl_dealloc (21 samples, 0.01%)</title><rect x="59.4555%" y="229" width="0.0135%" height="15" fill="rgb(227,42,39)"/><text x="59.7055%" y="239.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (208 samples, 0.13%)</title><rect x="59.4811%" y="229" width="0.1333%" height="15" fill="rgb(221,26,2)"/><text x="59.7311%" y="239.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_AutoConfig2_has_sse (31 samples, 0.02%)</title><rect x="59.7452%" y="213" width="0.0199%" height="15" fill="rgb(254,61,31)"/><text x="59.9952%" y="223.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_Hash_hash (28 samples, 0.02%)</title><rect x="59.7650%" y="213" width="0.0179%" height="15" fill="rgb(222,173,38)"/><text x="60.0150%" y="223.50"></text></g><g><title>group-b073d76844680b0b`DYLD-STUB$$__memcpy_chk (16 samples, 0.01%)</title><rect x="59.9387%" y="197" width="0.0103%" height="15" fill="rgb(218,50,12)"/><text x="60.1887%" y="207.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_AutoConfig2_has_shaext (58 samples, 0.04%)</title><rect x="59.9490%" y="197" width="0.0372%" height="15" fill="rgb(223,88,40)"/><text x="60.1990%" y="207.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_AutoConfig2_has_sse (65 samples, 0.04%)</title><rect x="59.9862%" y="197" width="0.0417%" height="15" fill="rgb(237,54,19)"/><text x="60.2362%" y="207.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Hash_Core_SHA2_pad_256 (339 samples, 0.22%)</title><rect x="60.2303%" y="181" width="0.2173%" height="15" fill="rgb(251,129,25)"/><text x="60.4803%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (260 samples, 0.17%)</title><rect x="60.2810%" y="165" width="0.1666%" height="15" fill="rgb(238,97,19)"/><text x="60.5310%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (46 samples, 0.03%)</title><rect x="60.4476%" y="181" width="0.0295%" height="15" fill="rgb(240,169,18)"/><text x="60.6976%" y="191.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_Hash_update_last_256 (791 samples, 0.51%)</title><rect x="60.0278%" y="197" width="0.5070%" height="15" fill="rgb(230,187,49)"/><text x="60.2778%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (90 samples, 0.06%)</title><rect x="60.4771%" y="181" width="0.0577%" height="15" fill="rgb(209,44,26)"/><text x="60.7271%" y="191.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Hash_Core_SHA2_finish_256 (136 samples, 0.09%)</title><rect x="60.5348%" y="197" width="0.0872%" height="15" fill="rgb(244,0,6)"/><text x="60.7848%" y="207.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Hash_Core_SHA2_pad_256 (36 samples, 0.02%)</title><rect x="60.6219%" y="197" width="0.0231%" height="15" fill="rgb(248,18,21)"/><text x="60.8719%" y="207.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (3,216 samples, 2.06%)</title><rect x="60.6450%" y="197" width="2.0612%" height="15" fill="rgb(245,180,19)"/><text x="60.8950%" y="207.50">g..</text></g><g><title>libsystem_c.dylib`__memcpy_chk (20 samples, 0.01%)</title><rect x="62.7094%" y="197" width="0.0128%" height="15" fill="rgb(252,118,36)"/><text x="62.9594%" y="207.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (38 samples, 0.02%)</title><rect x="62.7222%" y="197" width="0.0244%" height="15" fill="rgb(210,224,19)"/><text x="62.9722%" y="207.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_Hash_hash_256 (4,696 samples, 3.01%)</title><rect x="59.7830%" y="213" width="3.0098%" height="15" fill="rgb(218,30,24)"/><text x="60.0330%" y="223.50">gro..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (72 samples, 0.05%)</title><rect x="62.7466%" y="197" width="0.0461%" height="15" fill="rgb(219,75,50)"/><text x="62.9966%" y="207.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_Hash_update_last_256 (30 samples, 0.02%)</title><rect x="62.7927%" y="213" width="0.0192%" height="15" fill="rgb(234,72,50)"/><text x="63.0427%" y="223.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Hash_Core_SHA2_finish_256 (29 samples, 0.02%)</title><rect x="62.8120%" y="213" width="0.0186%" height="15" fill="rgb(219,100,48)"/><text x="63.0620%" y="223.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (7,586 samples, 4.86%)</title><rect x="62.8306%" y="213" width="4.8620%" height="15" fill="rgb(253,5,41)"/><text x="63.0806%" y="223.50">group-..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (16 samples, 0.01%)</title><rect x="67.9861%" y="181" width="0.0103%" height="15" fill="rgb(247,181,11)"/><text x="68.2361%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (294 samples, 0.19%)</title><rect x="68.7039%" y="165" width="0.1884%" height="15" fill="rgb(222,223,25)"/><text x="68.9539%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1,924 samples, 1.23%)</title><rect x="67.9368%" y="197" width="1.2331%" height="15" fill="rgb(214,198,28)"/><text x="68.1868%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1,831 samples, 1.17%)</title><rect x="67.9964%" y="181" width="1.1735%" height="15" fill="rgb(230,46,43)"/><text x="68.2464%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (432 samples, 0.28%)</title><rect x="68.8930%" y="165" width="0.2769%" height="15" fill="rgb(233,65,53)"/><text x="69.1430%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (81 samples, 0.05%)</title><rect x="69.1180%" y="149" width="0.0519%" height="15" fill="rgb(221,121,27)"/><text x="69.3680%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2,329 samples, 1.49%)</title><rect x="67.6926%" y="213" width="1.4927%" height="15" fill="rgb(247,70,47)"/><text x="67.9426%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (24 samples, 0.02%)</title><rect x="69.1699%" y="197" width="0.0154%" height="15" fill="rgb(228,85,35)"/><text x="69.4199%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (54 samples, 0.03%)</title><rect x="69.1853%" y="213" width="0.0346%" height="15" fill="rgb(209,50,18)"/><text x="69.4353%" y="223.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (15,002 samples, 9.62%)</title><rect x="59.6144%" y="229" width="9.6151%" height="15" fill="rgb(250,19,35)"/><text x="59.8644%" y="239.50">group-b073d768..</text></g><g><title>group-b073d76844680b0b`DYLD-STUB$$realloc (29 samples, 0.02%)</title><rect x="72.3373%" y="197" width="0.0186%" height="15" fill="rgb(253,107,29)"/><text x="72.5873%" y="207.50"></text></g><g><title>group-b073d76844680b0b`__rdl_realloc (29 samples, 0.02%)</title><rect x="72.3597%" y="197" width="0.0186%" height="15" fill="rgb(252,179,29)"/><text x="72.6097%" y="207.50"></text></g><g><title>group-b073d76844680b0b`__rust_alloc (18 samples, 0.01%)</title><rect x="72.3783%" y="197" width="0.0115%" height="15" fill="rgb(238,194,6)"/><text x="72.6283%" y="207.50"></text></g><g><title>group-b073d76844680b0b`__rust_realloc (33 samples, 0.02%)</title><rect x="72.3899%" y="197" width="0.0212%" height="15" fill="rgb(238,164,29)"/><text x="72.6399%" y="207.50"></text></g><g><title>group-b073d76844680b0b`__rdl_realloc (124 samples, 0.08%)</title><rect x="72.5783%" y="181" width="0.0795%" height="15" fill="rgb(224,25,9)"/><text x="72.8283%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1,636 samples, 1.05%)</title><rect x="72.7738%" y="165" width="1.0485%" height="15" fill="rgb(244,153,23)"/><text x="73.0238%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1,549 samples, 0.99%)</title><rect x="72.8295%" y="149" width="0.9928%" height="15" fill="rgb(212,203,14)"/><text x="73.0795%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (409 samples, 0.26%)</title><rect x="73.5602%" y="133" width="0.2621%" height="15" fill="rgb(220,164,20)"/><text x="73.8102%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,843 samples, 1.18%)</title><rect x="72.6578%" y="181" width="1.1812%" height="15" fill="rgb(222,203,48)"/><text x="72.9078%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (26 samples, 0.02%)</title><rect x="73.8223%" y="165" width="0.0167%" height="15" fill="rgb(215,159,22)"/><text x="74.0723%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (23 samples, 0.01%)</title><rect x="73.8390%" y="181" width="0.0147%" height="15" fill="rgb(216,183,47)"/><text x="74.0890%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (85 samples, 0.05%)</title><rect x="73.8537%" y="181" width="0.0545%" height="15" fill="rgb(229,195,25)"/><text x="74.1037%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (128 samples, 0.08%)</title><rect x="74.2011%" y="165" width="0.0820%" height="15" fill="rgb(224,132,51)"/><text x="74.4511%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memmove (20 samples, 0.01%)</title><rect x="74.5555%" y="149" width="0.0128%" height="15" fill="rgb(240,63,7)"/><text x="74.8055%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_free (215 samples, 0.14%)</title><rect x="74.5735%" y="149" width="0.1378%" height="15" fill="rgb(249,182,41)"/><text x="74.8235%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_good_size (59 samples, 0.04%)</title><rect x="74.7113%" y="149" width="0.0378%" height="15" fill="rgb(243,47,26)"/><text x="74.9613%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (54 samples, 0.03%)</title><rect x="74.7491%" y="149" width="0.0346%" height="15" fill="rgb(233,48,2)"/><text x="74.9991%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (25 samples, 0.02%)</title><rect x="76.1572%" y="117" width="0.0160%" height="15" fill="rgb(244,165,34)"/><text x="76.4072%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1,025 samples, 0.66%)</title><rect x="76.4988%" y="101" width="0.6569%" height="15" fill="rgb(207,89,7)"/><text x="76.7488%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3,273 samples, 2.10%)</title><rect x="75.0689%" y="133" width="2.0977%" height="15" fill="rgb(244,117,36)"/><text x="75.3189%" y="143.50">l..</text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1,550 samples, 0.99%)</title><rect x="76.1732%" y="117" width="0.9934%" height="15" fill="rgb(226,144,34)"/><text x="76.4232%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (17 samples, 0.01%)</title><rect x="77.1557%" y="101" width="0.0109%" height="15" fill="rgb(213,23,19)"/><text x="77.4057%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (30 samples, 0.02%)</title><rect x="77.1666%" y="133" width="0.0192%" height="15" fill="rgb(217,75,12)"/><text x="77.4166%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (20 samples, 0.01%)</title><rect x="77.2628%" y="117" width="0.0128%" height="15" fill="rgb(224,159,17)"/><text x="77.5128%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (398 samples, 0.26%)</title><rect x="78.8317%" y="101" width="0.2551%" height="15" fill="rgb(217,118,1)"/><text x="79.0817%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3,785 samples, 2.43%)</title><rect x="77.1859%" y="133" width="2.4259%" height="15" fill="rgb(232,180,48)"/><text x="77.4359%" y="143.50">li..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3,645 samples, 2.34%)</title><rect x="77.2756%" y="117" width="2.3361%" height="15" fill="rgb(230,27,33)"/><text x="77.5256%" y="127.50">l..</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (817 samples, 0.52%)</title><rect x="79.0881%" y="101" width="0.5236%" height="15" fill="rgb(205,31,21)"/><text x="79.3381%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (153 samples, 0.10%)</title><rect x="79.5137%" y="85" width="0.0981%" height="15" fill="rgb(253,59,4)"/><text x="79.7637%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (994 samples, 0.64%)</title><rect x="79.6117%" y="133" width="0.6371%" height="15" fill="rgb(224,201,9)"/><text x="79.8617%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (927 samples, 0.59%)</title><rect x="79.6547%" y="117" width="0.5941%" height="15" fill="rgb(229,206,30)"/><text x="79.9047%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (35 samples, 0.02%)</title><rect x="80.2494%" y="133" width="0.0224%" height="15" fill="rgb(212,67,47)"/><text x="80.4994%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (65 samples, 0.04%)</title><rect x="80.2719%" y="133" width="0.0417%" height="15" fill="rgb(211,96,50)"/><text x="80.5219%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (94 samples, 0.06%)</title><rect x="80.3135%" y="133" width="0.0602%" height="15" fill="rgb(252,114,18)"/><text x="80.5635%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (25 samples, 0.02%)</title><rect x="81.3704%" y="117" width="0.0160%" height="15" fill="rgb(223,58,37)"/><text x="81.6204%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (1,636 samples, 1.05%)</title><rect x="80.3738%" y="133" width="1.0485%" height="15" fill="rgb(237,70,4)"/><text x="80.6238%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (56 samples, 0.04%)</title><rect x="81.3864%" y="117" width="0.0359%" height="15" fill="rgb(244,85,46)"/><text x="81.6364%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (10,510 samples, 6.74%)</title><rect x="74.7837%" y="149" width="6.7361%" height="15" fill="rgb(223,39,52)"/><text x="75.0337%" y="159.50">libsystem..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (152 samples, 0.10%)</title><rect x="81.4223%" y="133" width="0.0974%" height="15" fill="rgb(218,200,14)"/><text x="81.6723%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (70 samples, 0.04%)</title><rect x="81.5197%" y="149" width="0.0449%" height="15" fill="rgb(208,171,16)"/><text x="81.7697%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (68 samples, 0.04%)</title><rect x="81.5646%" y="149" width="0.0436%" height="15" fill="rgb(234,200,18)"/><text x="81.8146%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (11,474 samples, 7.35%)</title><rect x="74.2831%" y="165" width="7.3539%" height="15" fill="rgb(228,45,11)"/><text x="74.5331%" y="175.50">libsystem_..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (31 samples, 0.02%)</title><rect x="81.6172%" y="149" width="0.0199%" height="15" fill="rgb(237,182,11)"/><text x="81.8672%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (25 samples, 0.02%)</title><rect x="81.6370%" y="165" width="0.0160%" height="15" fill="rgb(241,175,49)"/><text x="81.8870%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1,035 samples, 0.66%)</title><rect x="81.6531%" y="165" width="0.6634%" height="15" fill="rgb(247,38,35)"/><text x="81.9031%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (941 samples, 0.60%)</title><rect x="81.7133%" y="149" width="0.6031%" height="15" fill="rgb(228,39,49)"/><text x="81.9633%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`realloc (13,215 samples, 8.47%)</title><rect x="73.9082%" y="181" width="8.4697%" height="15" fill="rgb(226,101,26)"/><text x="74.1582%" y="191.50">libsystem_ma..</text></g><g><title>libsystem_malloc.dylib`tiny_size (96 samples, 0.06%)</title><rect x="82.3164%" y="165" width="0.0615%" height="15" fill="rgb(206,141,19)"/><text x="82.5664%" y="175.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (15,689 samples, 10.06%)</title><rect x="72.4110%" y="197" width="10.0554%" height="15" fill="rgb(211,200,13)"/><text x="72.6610%" y="207.50">group-b073d7684..</text></g><g><title>libsystem_malloc.dylib`szone_size (125 samples, 0.08%)</title><rect x="82.3863%" y="181" width="0.0801%" height="15" fill="rgb(241,121,6)"/><text x="82.6363%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (18 samples, 0.01%)</title><rect x="82.4754%" y="197" width="0.0115%" height="15" fill="rgb(234,221,29)"/><text x="82.7254%" y="207.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16,353 samples, 10.48%)</title><rect x="72.0322%" y="213" width="10.4809%" height="15" fill="rgb(229,136,5)"/><text x="72.2822%" y="223.50">group-b073d7684..</text></g><g><title>libsystem_malloc.dylib`realloc (41 samples, 0.03%)</title><rect x="82.4869%" y="197" width="0.0263%" height="15" fill="rgb(238,36,11)"/><text x="82.7369%" y="207.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (81 samples, 0.05%)</title><rect x="82.5132%" y="213" width="0.0519%" height="15" fill="rgb(251,55,41)"/><text x="82.7632%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (391 samples, 0.25%)</title><rect x="82.6696%" y="197" width="0.2506%" height="15" fill="rgb(242,34,40)"/><text x="82.9196%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (366 samples, 0.23%)</title><rect x="82.6856%" y="181" width="0.2346%" height="15" fill="rgb(215,42,17)"/><text x="82.9356%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (579 samples, 0.37%)</title><rect x="82.5651%" y="213" width="0.3711%" height="15" fill="rgb(207,44,46)"/><text x="82.8151%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (25 samples, 0.02%)</title><rect x="82.9202%" y="197" width="0.0160%" height="15" fill="rgb(211,206,28)"/><text x="83.1702%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (22 samples, 0.01%)</title><rect x="83.3688%" y="197" width="0.0141%" height="15" fill="rgb(237,167,16)"/><text x="83.6188%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1,046 samples, 0.67%)</title><rect x="83.9277%" y="181" width="0.6704%" height="15" fill="rgb(233,66,6)"/><text x="84.1777%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2,682 samples, 1.72%)</title><rect x="82.9362%" y="213" width="1.7189%" height="15" fill="rgb(246,123,29)"/><text x="83.1862%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1,982 samples, 1.27%)</title><rect x="83.3848%" y="197" width="1.2703%" height="15" fill="rgb(209,62,40)"/><text x="83.6348%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (89 samples, 0.06%)</title><rect x="84.5981%" y="181" width="0.0570%" height="15" fill="rgb(218,4,25)"/><text x="84.8481%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (62 samples, 0.04%)</title><rect x="84.6551%" y="213" width="0.0397%" height="15" fill="rgb(253,91,49)"/><text x="84.9051%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (34 samples, 0.02%)</title><rect x="84.6949%" y="213" width="0.0218%" height="15" fill="rgb(228,155,29)"/><text x="84.9449%" y="223.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (24,342 samples, 15.60%)</title><rect x="69.2295%" y="229" width="15.6012%" height="15" fill="rgb(243,57,37)"/><text x="69.4795%" y="239.50">group-b073d76844680b0b`o..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (178 samples, 0.11%)</title><rect x="84.7166%" y="213" width="0.1141%" height="15" fill="rgb(244,167,17)"/><text x="84.9666%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (178 samples, 0.11%)</title><rect x="85.7844%" y="181" width="0.1141%" height="15" fill="rgb(207,181,38)"/><text x="86.0344%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2,080 samples, 1.33%)</title><rect x="84.9435%" y="213" width="1.3331%" height="15" fill="rgb(211,8,23)"/><text x="85.1935%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2,011 samples, 1.29%)</title><rect x="84.9878%" y="197" width="1.2889%" height="15" fill="rgb(235,11,44)"/><text x="85.2378%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (586 samples, 0.38%)</title><rect x="85.9011%" y="181" width="0.3756%" height="15" fill="rgb(248,18,52)"/><text x="86.1511%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (176 samples, 0.11%)</title><rect x="86.1638%" y="165" width="0.1128%" height="15" fill="rgb(208,4,7)"/><text x="86.4138%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2,293 samples, 1.47%)</title><rect x="84.8307%" y="229" width="1.4696%" height="15" fill="rgb(240,17,39)"/><text x="85.0807%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (37 samples, 0.02%)</title><rect x="86.2766%" y="213" width="0.0237%" height="15" fill="rgb(207,170,3)"/><text x="86.5266%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (43 samples, 0.03%)</title><rect x="86.3004%" y="229" width="0.0276%" height="15" fill="rgb(236,100,52)"/><text x="86.5504%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (34 samples, 0.02%)</title><rect x="86.3279%" y="229" width="0.0218%" height="15" fill="rgb(246,78,51)"/><text x="86.5779%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (402 samples, 0.26%)</title><rect x="86.4426%" y="213" width="0.2576%" height="15" fill="rgb(211,17,15)"/><text x="86.6926%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (373 samples, 0.24%)</title><rect x="86.4612%" y="197" width="0.2391%" height="15" fill="rgb(209,59,46)"/><text x="86.7112%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (575 samples, 0.37%)</title><rect x="86.3497%" y="229" width="0.3685%" height="15" fill="rgb(210,92,25)"/><text x="86.5997%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (28 samples, 0.02%)</title><rect x="86.7003%" y="213" width="0.0179%" height="15" fill="rgb(238,174,52)"/><text x="86.9503%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (17 samples, 0.01%)</title><rect x="87.1765%" y="213" width="0.0109%" height="15" fill="rgb(230,73,7)"/><text x="87.4265%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (947 samples, 0.61%)</title><rect x="87.5643%" y="197" width="0.6070%" height="15" fill="rgb(243,124,40)"/><text x="87.8143%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2,328 samples, 1.49%)</title><rect x="86.7182%" y="229" width="1.4921%" height="15" fill="rgb(244,170,11)"/><text x="86.9682%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1,591 samples, 1.02%)</title><rect x="87.1906%" y="213" width="1.0197%" height="15" fill="rgb(207,114,54)"/><text x="87.4406%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (61 samples, 0.04%)</title><rect x="88.1712%" y="197" width="0.0391%" height="15" fill="rgb(205,42,20)"/><text x="88.4212%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc (19 samples, 0.01%)</title><rect x="88.2103%" y="229" width="0.0122%" height="15" fill="rgb(230,30,28)"/><text x="88.4603%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (35 samples, 0.02%)</title><rect x="88.2225%" y="229" width="0.0224%" height="15" fill="rgb(205,73,54)"/><text x="88.4725%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (19 samples, 0.01%)</title><rect x="88.2468%" y="229" width="0.0122%" height="15" fill="rgb(254,227,23)"/><text x="88.4968%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (48 samples, 0.03%)</title><rect x="88.2590%" y="229" width="0.0308%" height="15" fill="rgb(228,202,34)"/><text x="88.5090%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (24 samples, 0.02%)</title><rect x="88.2898%" y="229" width="0.0154%" height="15" fill="rgb(222,225,37)"/><text x="88.5398%" y="239.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::LeafNodeHashInput::hash (47,050 samples, 30.16%)</title><rect x="58.1717%" y="245" width="30.1552%" height="15" fill="rgb(221,14,54)"/><text x="58.4217%" y="255.50">group-b073d76844680b0b`openmls::tree::hashes::Lea..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (34 samples, 0.02%)</title><rect x="88.3052%" y="229" width="0.0218%" height="15" fill="rgb(254,102,2)"/><text x="88.5552%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (33 samples, 0.02%)</title><rect x="88.3295%" y="245" width="0.0212%" height="15" fill="rgb(232,104,17)"/><text x="88.5795%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (18 samples, 0.01%)</title><rect x="88.3507%" y="245" width="0.0115%" height="15" fill="rgb(250,220,14)"/><text x="88.6007%" y="255.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (47,953 samples, 30.73%)</title><rect x="57.6718%" y="261" width="30.7340%" height="15" fill="rgb(241,158,9)"/><text x="57.9218%" y="271.50">group-b073d76844680b0b`openmls::tree::hashes::_&lt;im..</text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (40 samples, 0.03%)</title><rect x="88.3801%" y="245" width="0.0256%" height="15" fill="rgb(246,9,43)"/><text x="88.6301%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (114 samples, 0.07%)</title><rect x="88.8813%" y="213" width="0.0731%" height="15" fill="rgb(206,73,33)"/><text x="89.1313%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1,141 samples, 0.73%)</title><rect x="88.4590%" y="245" width="0.7313%" height="15" fill="rgb(222,79,8)"/><text x="88.7090%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1,100 samples, 0.71%)</title><rect x="88.4853%" y="229" width="0.7050%" height="15" fill="rgb(234,8,54)"/><text x="88.7353%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (365 samples, 0.23%)</title><rect x="88.9563%" y="213" width="0.2339%" height="15" fill="rgb(209,134,38)"/><text x="89.2063%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (112 samples, 0.07%)</title><rect x="89.1185%" y="197" width="0.0718%" height="15" fill="rgb(230,127,29)"/><text x="89.3685%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,241 samples, 0.80%)</title><rect x="88.4058%" y="261" width="0.7954%" height="15" fill="rgb(242,44,41)"/><text x="88.6558%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.01%)</title><rect x="89.1903%" y="245" width="0.0109%" height="15" fill="rgb(222,56,43)"/><text x="89.4403%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (546 samples, 0.35%)</title><rect x="89.3434%" y="245" width="0.3499%" height="15" fill="rgb(238,39,47)"/><text x="89.5934%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (500 samples, 0.32%)</title><rect x="89.3729%" y="229" width="0.3205%" height="15" fill="rgb(226,79,43)"/><text x="89.6229%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (806 samples, 0.52%)</title><rect x="89.2101%" y="261" width="0.5166%" height="15" fill="rgb(242,105,53)"/><text x="89.4601%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (52 samples, 0.03%)</title><rect x="89.6934%" y="245" width="0.0333%" height="15" fill="rgb(251,132,46)"/><text x="89.9434%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (34 samples, 0.02%)</title><rect x="90.3747%" y="245" width="0.0218%" height="15" fill="rgb(231,77,14)"/><text x="90.6247%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1,288 samples, 0.83%)</title><rect x="90.9925%" y="229" width="0.8255%" height="15" fill="rgb(240,135,9)"/><text x="91.2425%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3,481 samples, 2.23%)</title><rect x="89.7267%" y="261" width="2.2310%" height="15" fill="rgb(248,109,14)"/><text x="89.9767%" y="271.50">l..</text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2,430 samples, 1.56%)</title><rect x="90.4003%" y="245" width="1.5574%" height="15" fill="rgb(227,146,52)"/><text x="90.6503%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (218 samples, 0.14%)</title><rect x="91.8180%" y="229" width="0.1397%" height="15" fill="rgb(232,54,3)"/><text x="92.0680%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (39 samples, 0.02%)</title><rect x="91.9693%" y="261" width="0.0250%" height="15" fill="rgb(229,201,43)"/><text x="92.2193%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (46 samples, 0.03%)</title><rect x="91.9943%" y="261" width="0.0295%" height="15" fill="rgb(252,161,33)"/><text x="92.2443%" y="271.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (62,096 samples, 39.80%)</title><rect x="52.2426%" y="277" width="39.7985%" height="15" fill="rgb(226,146,40)"/><text x="52.4926%" y="287.50">group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tre..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (27 samples, 0.02%)</title><rect x="92.0238%" y="261" width="0.0173%" height="15" fill="rgb(219,47,25)"/><text x="92.2738%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (81 samples, 0.05%)</title><rect x="92.2833%" y="229" width="0.0519%" height="15" fill="rgb(250,135,13)"/><text x="92.5333%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (564 samples, 0.36%)</title><rect x="92.0706%" y="261" width="0.3615%" height="15" fill="rgb(219,229,18)"/><text x="92.3206%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (545 samples, 0.35%)</title><rect x="92.0827%" y="245" width="0.3493%" height="15" fill="rgb(217,152,27)"/><text x="92.3327%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (151 samples, 0.10%)</title><rect x="92.3353%" y="229" width="0.0968%" height="15" fill="rgb(225,71,47)"/><text x="92.5853%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (48 samples, 0.03%)</title><rect x="92.4013%" y="213" width="0.0308%" height="15" fill="rgb(220,139,14)"/><text x="92.6513%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (616 samples, 0.39%)</title><rect x="92.0411%" y="277" width="0.3948%" height="15" fill="rgb(247,54,32)"/><text x="92.2911%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (69 samples, 0.04%)</title><rect x="92.4359%" y="277" width="0.0442%" height="15" fill="rgb(252,131,39)"/><text x="92.6859%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (182 samples, 0.12%)</title><rect x="92.5628%" y="261" width="0.1166%" height="15" fill="rgb(210,108,39)"/><text x="92.8128%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (165 samples, 0.11%)</title><rect x="92.5737%" y="245" width="0.1058%" height="15" fill="rgb(205,23,29)"/><text x="92.8237%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (332 samples, 0.21%)</title><rect x="92.4839%" y="277" width="0.2128%" height="15" fill="rgb(246,139,46)"/><text x="92.7339%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (27 samples, 0.02%)</title><rect x="92.6794%" y="261" width="0.0173%" height="15" fill="rgb(250,81,26)"/><text x="92.9294%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (399 samples, 0.26%)</title><rect x="93.3184%" y="245" width="0.2557%" height="15" fill="rgb(214,104,7)"/><text x="93.5684%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1,458 samples, 0.93%)</title><rect x="92.6967%" y="277" width="0.9345%" height="15" fill="rgb(233,189,8)"/><text x="92.9467%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (881 samples, 0.56%)</title><rect x="93.0665%" y="261" width="0.5646%" height="15" fill="rgb(228,141,17)"/><text x="93.3165%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (89 samples, 0.06%)</title><rect x="93.5741%" y="245" width="0.0570%" height="15" fill="rgb(247,157,1)"/><text x="93.8241%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (48 samples, 0.03%)</title><rect x="93.6395%" y="277" width="0.0308%" height="15" fill="rgb(249,225,5)"/><text x="93.8895%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (17 samples, 0.01%)</title><rect x="93.6735%" y="277" width="0.0109%" height="15" fill="rgb(242,55,13)"/><text x="93.9235%" y="287.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (70,024 samples, 44.88%)</title><rect x="48.8207%" y="293" width="44.8797%" height="15" fill="rgb(230,49,50)"/><text x="49.0707%" y="303.50">group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::Ratche..</text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (28 samples, 0.02%)</title><rect x="93.8421%" y="245" width="0.0179%" height="15" fill="rgb(241,111,38)"/><text x="94.0921%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (285 samples, 0.18%)</title><rect x="93.7254%" y="277" width="0.1827%" height="15" fill="rgb(252,155,4)"/><text x="93.9754%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (274 samples, 0.18%)</title><rect x="93.7325%" y="261" width="0.1756%" height="15" fill="rgb(212,69,32)"/><text x="93.9825%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (74 samples, 0.05%)</title><rect x="93.8606%" y="245" width="0.0474%" height="15" fill="rgb(243,107,47)"/><text x="94.1106%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (28 samples, 0.02%)</title><rect x="93.8901%" y="229" width="0.0179%" height="15" fill="rgb(247,130,12)"/><text x="94.1401%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (329 samples, 0.21%)</title><rect x="93.7004%" y="293" width="0.2109%" height="15" fill="rgb(233,74,16)"/><text x="93.9504%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (22 samples, 0.01%)</title><rect x="93.9113%" y="293" width="0.0141%" height="15" fill="rgb(208,58,18)"/><text x="94.1613%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (94 samples, 0.06%)</title><rect x="93.9715%" y="277" width="0.0602%" height="15" fill="rgb(242,225,1)"/><text x="94.2215%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (87 samples, 0.06%)</title><rect x="93.9760%" y="261" width="0.0558%" height="15" fill="rgb(249,39,40)"/><text x="94.2260%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (175 samples, 0.11%)</title><rect x="93.9273%" y="293" width="0.1122%" height="15" fill="rgb(207,72,44)"/><text x="94.1773%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (215 samples, 0.14%)</title><rect x="94.3343%" y="261" width="0.1378%" height="15" fill="rgb(215,193,12)"/><text x="94.5843%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (701 samples, 0.45%)</title><rect x="94.0395%" y="293" width="0.4493%" height="15" fill="rgb(248,41,39)"/><text x="94.2895%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (442 samples, 0.28%)</title><rect x="94.2055%" y="277" width="0.2833%" height="15" fill="rgb(253,85,4)"/><text x="94.4555%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (26 samples, 0.02%)</title><rect x="94.4721%" y="261" width="0.0167%" height="15" fill="rgb(243,70,31)"/><text x="94.7221%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (32 samples, 0.02%)</title><rect x="94.4939%" y="293" width="0.0205%" height="15" fill="rgb(253,195,26)"/><text x="94.7439%" y="303.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (74,546 samples, 47.78%)</title><rect x="46.7499%" y="309" width="47.7779%" height="15" fill="rgb(243,42,11)"/><text x="46.9999%" y="319.50">group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTre..</text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (20 samples, 0.01%)</title><rect x="94.5887%" y="261" width="0.0128%" height="15" fill="rgb(239,66,17)"/><text x="94.8387%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (144 samples, 0.09%)</title><rect x="94.5310%" y="293" width="0.0923%" height="15" fill="rgb(217,132,21)"/><text x="94.7810%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (139 samples, 0.09%)</title><rect x="94.5342%" y="277" width="0.0891%" height="15" fill="rgb(252,202,21)"/><text x="94.7842%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (33 samples, 0.02%)</title><rect x="94.6022%" y="261" width="0.0212%" height="15" fill="rgb(233,98,36)"/><text x="94.8522%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (151 samples, 0.10%)</title><rect x="94.5278%" y="309" width="0.0968%" height="15" fill="rgb(216,153,54)"/><text x="94.7778%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (44 samples, 0.03%)</title><rect x="94.6605%" y="293" width="0.0282%" height="15" fill="rgb(250,99,7)"/><text x="94.9105%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (41 samples, 0.03%)</title><rect x="94.6624%" y="277" width="0.0263%" height="15" fill="rgb(207,56,50)"/><text x="94.9124%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (91 samples, 0.06%)</title><rect x="94.6329%" y="309" width="0.0583%" height="15" fill="rgb(244,61,34)"/><text x="94.8829%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (114 samples, 0.07%)</title><rect x="94.8496%" y="277" width="0.0731%" height="15" fill="rgb(241,50,38)"/><text x="95.0996%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (397 samples, 0.25%)</title><rect x="94.6913%" y="309" width="0.2544%" height="15" fill="rgb(212,166,30)"/><text x="94.9413%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (241 samples, 0.15%)</title><rect x="94.7913%" y="293" width="0.1545%" height="15" fill="rgb(249,127,32)"/><text x="95.0413%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (36 samples, 0.02%)</title><rect x="94.9226%" y="277" width="0.0231%" height="15" fill="rgb(209,103,0)"/><text x="95.1726%" y="287.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (77,301 samples, 49.54%)</title><rect x="45.4213%" y="325" width="49.5437%" height="15" fill="rgb(238,209,51)"/><text x="45.6713%" y="335.50">group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;:..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (79 samples, 0.05%)</title><rect x="94.9707%" y="309" width="0.0506%" height="15" fill="rgb(237,56,23)"/><text x="95.2207%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (73 samples, 0.05%)</title><rect x="94.9746%" y="293" width="0.0468%" height="15" fill="rgb(215,153,46)"/><text x="95.2246%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (22 samples, 0.01%)</title><rect x="95.0072%" y="277" width="0.0141%" height="15" fill="rgb(224,49,31)"/><text x="95.2572%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (90 samples, 0.06%)</title><rect x="94.9649%" y="325" width="0.0577%" height="15" fill="rgb(250,18,42)"/><text x="95.2149%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (28 samples, 0.02%)</title><rect x="95.0361%" y="309" width="0.0179%" height="15" fill="rgb(215,176,39)"/><text x="95.2861%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (23 samples, 0.01%)</title><rect x="95.0393%" y="293" width="0.0147%" height="15" fill="rgb(223,77,29)"/><text x="95.2893%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (39 samples, 0.02%)</title><rect x="95.0297%" y="325" width="0.0250%" height="15" fill="rgb(234,94,52)"/><text x="95.2797%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (65 samples, 0.04%)</title><rect x="95.1399%" y="293" width="0.0417%" height="15" fill="rgb(220,154,50)"/><text x="95.3899%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (209 samples, 0.13%)</title><rect x="95.0547%" y="325" width="0.1340%" height="15" fill="rgb(212,11,10)"/><text x="95.3047%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (122 samples, 0.08%)</title><rect x="95.1104%" y="309" width="0.0782%" height="15" fill="rgb(205,166,19)"/><text x="95.3604%" y="319.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (78,994 samples, 50.63%)</title><rect x="44.5701%" y="341" width="50.6287%" height="15" fill="rgb(244,198,16)"/><text x="44.8201%" y="351.50">group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::t..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (41 samples, 0.03%)</title><rect x="95.2014%" y="325" width="0.0263%" height="15" fill="rgb(219,69,12)"/><text x="95.4514%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (39 samples, 0.02%)</title><rect x="95.2027%" y="309" width="0.0250%" height="15" fill="rgb(245,30,7)"/><text x="95.4527%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (46 samples, 0.03%)</title><rect x="95.1989%" y="341" width="0.0295%" height="15" fill="rgb(218,221,48)"/><text x="95.4489%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (31 samples, 0.02%)</title><rect x="95.2296%" y="341" width="0.0199%" height="15" fill="rgb(216,66,15)"/><text x="95.4796%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (35 samples, 0.02%)</title><rect x="95.2867%" y="309" width="0.0224%" height="15" fill="rgb(226,122,50)"/><text x="95.5367%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (104 samples, 0.07%)</title><rect x="95.2495%" y="341" width="0.0667%" height="15" fill="rgb(239,156,16)"/><text x="95.4995%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (77 samples, 0.05%)</title><rect x="95.2668%" y="325" width="0.0494%" height="15" fill="rgb(224,27,38)"/><text x="95.5168%" y="335.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (79,950 samples, 51.24%)</title><rect x="44.0798%" y="357" width="51.2415%" height="15" fill="rgb(224,39,27)"/><text x="44.3298%" y="367.50">group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tr..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (23 samples, 0.01%)</title><rect x="95.3213%" y="357" width="0.0147%" height="15" fill="rgb(215,92,29)"/><text x="95.5713%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.01%)</title><rect x="95.3226%" y="341" width="0.0135%" height="15" fill="rgb(207,159,16)"/><text x="95.5726%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (21 samples, 0.01%)</title><rect x="95.3226%" y="325" width="0.0135%" height="15" fill="rgb(238,163,47)"/><text x="95.5726%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (49 samples, 0.03%)</title><rect x="95.3463%" y="357" width="0.0314%" height="15" fill="rgb(219,91,49)"/><text x="95.5963%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (29 samples, 0.02%)</title><rect x="95.3591%" y="341" width="0.0186%" height="15" fill="rgb(227,167,31)"/><text x="95.6091%" y="351.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (80,526 samples, 51.61%)</title><rect x="43.7690%" y="373" width="51.6106%" height="15" fill="rgb(234,80,54)"/><text x="44.0190%" y="383.50">group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tre..</text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (80,809 samples, 51.79%)</title><rect x="43.6171%" y="389" width="51.7920%" height="15" fill="rgb(212,114,2)"/><text x="43.8671%" y="399.50">group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tre..</text></g><g><title>libsystem_malloc.dylib`free_tiny (27 samples, 0.02%)</title><rect x="95.3918%" y="373" width="0.0173%" height="15" fill="rgb(234,50,24)"/><text x="95.6418%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (18 samples, 0.01%)</title><rect x="95.3976%" y="357" width="0.0115%" height="15" fill="rgb(221,68,8)"/><text x="95.6476%" y="367.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (80,976 samples, 51.90%)</title><rect x="43.5280%" y="405" width="51.8990%" height="15" fill="rgb(254,180,31)"/><text x="43.7780%" y="415.50">group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tre..</text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (81,060 samples, 51.95%)</title><rect x="43.4947%" y="421" width="51.9529%" height="15" fill="rgb(247,130,50)"/><text x="43.7447%" y="431.50">group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree..</text></g><g><title>libsystem_malloc.dylib`large_malloc (20 samples, 0.01%)</title><rect x="95.4623%" y="357" width="0.0128%" height="15" fill="rgb(211,109,4)"/><text x="95.7123%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (78 samples, 0.05%)</title><rect x="95.4565%" y="389" width="0.0500%" height="15" fill="rgb(238,50,21)"/><text x="95.7065%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (75 samples, 0.05%)</title><rect x="95.4584%" y="373" width="0.0481%" height="15" fill="rgb(225,57,45)"/><text x="95.7084%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (47 samples, 0.03%)</title><rect x="95.4764%" y="357" width="0.0301%" height="15" fill="rgb(209,196,50)"/><text x="95.7264%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (41 samples, 0.03%)</title><rect x="95.4802%" y="341" width="0.0263%" height="15" fill="rgb(242,140,13)"/><text x="95.7302%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (19 samples, 0.01%)</title><rect x="95.4943%" y="325" width="0.0122%" height="15" fill="rgb(217,111,7)"/><text x="95.7443%" y="335.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (81 samples, 0.05%)</title><rect x="95.4565%" y="405" width="0.0519%" height="15" fill="rgb(253,193,51)"/><text x="95.7065%" y="415.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::secret_tree::SecretTree::new (748 samples, 0.48%)</title><rect x="95.4488%" y="421" width="0.4794%" height="15" fill="rgb(252,70,29)"/><text x="95.6988%" y="431.50"></text></g><g><title>group-b073d76844680b0b`alloc::vec::Vec&lt;T,A&gt;::extend_with (653 samples, 0.42%)</title><rect x="95.5097%" y="405" width="0.4185%" height="15" fill="rgb(232,127,12)"/><text x="95.7597%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (52 samples, 0.03%)</title><rect x="95.9584%" y="421" width="0.0333%" height="15" fill="rgb(211,180,21)"/><text x="96.2084%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (28 samples, 0.02%)</title><rect x="95.9737%" y="405" width="0.0179%" height="15" fill="rgb(229,72,13)"/><text x="96.2237%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (28 samples, 0.02%)</title><rect x="95.9737%" y="389" width="0.0179%" height="15" fill="rgb(240,211,49)"/><text x="96.2237%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (31 samples, 0.02%)</title><rect x="96.0327%" y="389" width="0.0199%" height="15" fill="rgb(219,149,40)"/><text x="96.2827%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (89 samples, 0.06%)</title><rect x="95.9987%" y="421" width="0.0570%" height="15" fill="rgb(210,127,46)"/><text x="96.2487%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (70 samples, 0.04%)</title><rect x="96.0109%" y="405" width="0.0449%" height="15" fill="rgb(220,106,7)"/><text x="96.2609%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (19 samples, 0.01%)</title><rect x="96.0571%" y="421" width="0.0122%" height="15" fill="rgb(249,31,22)"/><text x="96.3071%" y="431.50"></text></g><g><title>group-b073d76844680b0b`openmls::group::mls_group::MlsGroup::apply_commit (143,059 samples, 91.69%)</title><rect x="4.4018%" y="437" width="91.6892%" height="15" fill="rgb(253,1,49)"/><text x="4.6518%" y="447.50">group-b073d76844680b0b`openmls::group::mls_group::MlsGroup::apply_commit</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (30 samples, 0.02%)</title><rect x="96.0718%" y="421" width="0.0192%" height="15" fill="rgb(227,144,33)"/><text x="96.3218%" y="431.50"></text></g><g><title>group-b073d76844680b0b`group::apply_commit (145,680 samples, 93.37%)</title><rect x="2.7579%" y="453" width="93.3691%" height="15" fill="rgb(249,163,44)"/><text x="3.0079%" y="463.50">group-b073d76844680b0b`group::apply_commit</text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fmul (16 samples, 0.01%)</title><rect x="96.1372%" y="357" width="0.0103%" height="15" fill="rgb(234,15,39)"/><text x="96.3872%" y="367.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fmul (33 samples, 0.02%)</title><rect x="96.1622%" y="341" width="0.0212%" height="15" fill="rgb(207,66,16)"/><text x="96.4122%" y="351.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Ed25519_Ladder_point_mul (83 samples, 0.05%)</title><rect x="96.1333%" y="373" width="0.0532%" height="15" fill="rgb(233,112,24)"/><text x="96.3833%" y="383.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Ed25519_PointAdd_point_add (42 samples, 0.03%)</title><rect x="96.1596%" y="357" width="0.0269%" height="15" fill="rgb(230,90,22)"/><text x="96.4096%" y="367.50"></text></g><g><title>group-b073d76844680b0b`openmls::credentials::CredentialBundle::new (101 samples, 0.06%)</title><rect x="96.1282%" y="437" width="0.0647%" height="15" fill="rgb(229,61,13)"/><text x="96.3782%" y="447.50"></text></g><g><title>group-b073d76844680b0b`openmls::ciphersuite::SignatureScheme::new_keypair (100 samples, 0.06%)</title><rect x="96.1289%" y="421" width="0.0641%" height="15" fill="rgb(225,57,24)"/><text x="96.3789%" y="431.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::signature::key_gen (99 samples, 0.06%)</title><rect x="96.1295%" y="405" width="0.0635%" height="15" fill="rgb(208,169,48)"/><text x="96.3795%" y="415.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Ed25519_secret_to_public (96 samples, 0.06%)</title><rect x="96.1314%" y="389" width="0.0615%" height="15" fill="rgb(244,218,51)"/><text x="96.3814%" y="399.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::dh_kem::DhKem::dh_base (43 samples, 0.03%)</title><rect x="96.1949%" y="373" width="0.0276%" height="15" fill="rgb(214,148,10)"/><text x="96.4449%" y="383.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::ecdh::derive_base (43 samples, 0.03%)</title><rect x="96.1949%" y="357" width="0.0276%" height="15" fill="rgb(225,174,27)"/><text x="96.4449%" y="367.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_secret_to_public (43 samples, 0.03%)</title><rect x="96.1949%" y="341" width="0.0276%" height="15" fill="rgb(230,96,26)"/><text x="96.4449%" y="351.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_scalarmult (43 samples, 0.03%)</title><rect x="96.1949%" y="325" width="0.0276%" height="15" fill="rgb(232,10,30)"/><text x="96.4449%" y="335.50"></text></g><g><title>group-b073d76844680b0b`&lt;hpke_rs::dh_kem::DhKem as hpke_rs::kem::KemTrait&gt;::derive_key_pair (47 samples, 0.03%)</title><rect x="96.1936%" y="389" width="0.0301%" height="15" fill="rgb(222,8,50)"/><text x="96.4436%" y="399.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::Hpke::derive_key_pair (48 samples, 0.03%)</title><rect x="96.1936%" y="405" width="0.0308%" height="15" fill="rgb(213,81,27)"/><text x="96.4436%" y="415.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fmul (41 samples, 0.03%)</title><rect x="96.2359%" y="325" width="0.0263%" height="15" fill="rgb(245,50,10)"/><text x="96.4859%" y="335.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fsqr (19 samples, 0.01%)</title><rect x="96.2666%" y="325" width="0.0122%" height="15" fill="rgb(216,100,18)"/><text x="96.5166%" y="335.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fmul (77 samples, 0.05%)</title><rect x="96.2904%" y="309" width="0.0494%" height="15" fill="rgb(236,147,54)"/><text x="96.5404%" y="319.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Ed25519_Ladder_point_mul (186 samples, 0.12%)</title><rect x="96.2256%" y="341" width="0.1192%" height="15" fill="rgb(205,143,26)"/><text x="96.4756%" y="351.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Ed25519_PointAdd_point_add (96 samples, 0.06%)</title><rect x="96.2833%" y="325" width="0.0615%" height="15" fill="rgb(236,26,9)"/><text x="96.5333%" y="335.50"></text></g><g><title>group-b073d76844680b0b`openmls::ciphersuite::SignaturePrivateKey::sign (200 samples, 0.13%)</title><rect x="96.2256%" y="389" width="0.1282%" height="15" fill="rgb(221,165,53)"/><text x="96.4756%" y="399.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::signature::sign (200 samples, 0.13%)</title><rect x="96.2256%" y="373" width="0.1282%" height="15" fill="rgb(214,110,17)"/><text x="96.4756%" y="383.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Ed25519_sign (200 samples, 0.13%)</title><rect x="96.2256%" y="357" width="0.1282%" height="15" fill="rgb(237,197,12)"/><text x="96.4756%" y="367.50"></text></g><g><title>group-b073d76844680b0b`group::create_users (359 samples, 0.23%)</title><rect x="96.1269%" y="453" width="0.2301%" height="15" fill="rgb(205,84,17)"/><text x="96.3769%" y="463.50"></text></g><g><title>group-b073d76844680b0b`openmls::key_packages::KeyPackageBundle::new (256 samples, 0.16%)</title><rect x="96.1929%" y="437" width="0.1641%" height="15" fill="rgb(237,18,45)"/><text x="96.4429%" y="447.50"></text></g><g><title>group-b073d76844680b0b`openmls::key_packages::KeyPackageBundle::new_with_version (256 samples, 0.16%)</title><rect x="96.1929%" y="421" width="0.1641%" height="15" fill="rgb(221,87,14)"/><text x="96.4429%" y="431.50"></text></g><g><title>group-b073d76844680b0b`openmls::key_packages::KeyPackageBundle::new_with_keypair (207 samples, 0.13%)</title><rect x="96.2243%" y="405" width="0.1327%" height="15" fill="rgb(238,186,15)"/><text x="96.4743%" y="415.50"></text></g><g><title>group-b073d76844680b0b`openmls::ciphersuite::SignaturePublicKey::verify (19 samples, 0.01%)</title><rect x="96.3609%" y="405" width="0.0122%" height="15" fill="rgb(208,115,11)"/><text x="96.6109%" y="415.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::signature::verify (19 samples, 0.01%)</title><rect x="96.3609%" y="389" width="0.0122%" height="15" fill="rgb(254,175,0)"/><text x="96.6109%" y="399.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Ed25519_verify (19 samples, 0.01%)</title><rect x="96.3609%" y="373" width="0.0122%" height="15" fill="rgb(227,24,42)"/><text x="96.6109%" y="383.50"></text></g><g><title>group-b073d76844680b0b`openmls::framing::plaintext::MlsPlaintextTbs::verify (27 samples, 0.02%)</title><rect x="96.3609%" y="421" width="0.0173%" height="15" fill="rgb(223,211,37)"/><text x="96.6109%" y="431.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::replace_private_tree (19 samples, 0.01%)</title><rect x="96.3871%" y="421" width="0.0122%" height="15" fill="rgb(235,49,27)"/><text x="96.6371%" y="431.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::replace_private_tree_ (19 samples, 0.01%)</title><rect x="96.3871%" y="405" width="0.0122%" height="15" fill="rgb(254,97,51)"/><text x="96.6371%" y="415.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (16 samples, 0.01%)</title><rect x="96.4141%" y="229" width="0.0103%" height="15" fill="rgb(249,51,40)"/><text x="96.6641%" y="239.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (30 samples, 0.02%)</title><rect x="96.4243%" y="229" width="0.0192%" height="15" fill="rgb(210,128,45)"/><text x="96.6743%" y="239.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::LeafNodeHashInput::hash (58 samples, 0.04%)</title><rect x="96.4121%" y="245" width="0.0372%" height="15" fill="rgb(224,137,50)"/><text x="96.6621%" y="255.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (59 samples, 0.04%)</title><rect x="96.4121%" y="261" width="0.0378%" height="15" fill="rgb(242,15,9)"/><text x="96.6621%" y="271.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (73 samples, 0.05%)</title><rect x="96.4064%" y="277" width="0.0468%" height="15" fill="rgb(233,187,41)"/><text x="96.6564%" y="287.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (80 samples, 0.05%)</title><rect x="96.4038%" y="293" width="0.0513%" height="15" fill="rgb(227,2,29)"/><text x="96.6538%" y="303.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (89 samples, 0.06%)</title><rect x="96.3993%" y="341" width="0.0570%" height="15" fill="rgb(222,70,3)"/><text x="96.6493%" y="351.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (87 samples, 0.06%)</title><rect x="96.4006%" y="325" width="0.0558%" height="15" fill="rgb(213,11,42)"/><text x="96.6506%" y="335.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (86 samples, 0.06%)</title><rect x="96.4012%" y="309" width="0.0551%" height="15" fill="rgb(225,150,9)"/><text x="96.6512%" y="319.50"></text></g><g><title>group-b073d76844680b0b`openmls::group::mls_group::MlsGroup::apply_commit (154 samples, 0.10%)</title><rect x="96.3583%" y="437" width="0.0987%" height="15" fill="rgb(230,162,45)"/><text x="96.6083%" y="447.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (90 samples, 0.06%)</title><rect x="96.3993%" y="421" width="0.0577%" height="15" fill="rgb(222,14,52)"/><text x="96.6493%" y="431.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (90 samples, 0.06%)</title><rect x="96.3993%" y="405" width="0.0577%" height="15" fill="rgb(254,198,14)"/><text x="96.6493%" y="415.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (90 samples, 0.06%)</title><rect x="96.3993%" y="389" width="0.0577%" height="15" fill="rgb(220,217,30)"/><text x="96.6493%" y="399.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (90 samples, 0.06%)</title><rect x="96.3993%" y="373" width="0.0577%" height="15" fill="rgb(215,146,41)"/><text x="96.6493%" y="383.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (90 samples, 0.06%)</title><rect x="96.3993%" y="357" width="0.0577%" height="15" fill="rgb(217,27,36)"/><text x="96.6493%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.01%)</title><rect x="96.4596%" y="357" width="0.0103%" height="15" fill="rgb(219,218,39)"/><text x="96.7096%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (16 samples, 0.01%)</title><rect x="96.4596%" y="341" width="0.0103%" height="15" fill="rgb(219,4,42)"/><text x="96.7096%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (16 samples, 0.01%)</title><rect x="96.4596%" y="325" width="0.0103%" height="15" fill="rgb(249,119,36)"/><text x="96.7096%" y="335.50"></text></g><g><title>group-b073d76844680b0b`&lt;T as openmls::extensions::ExtensionHelper&gt;::clone_it (22 samples, 0.01%)</title><rect x="96.4576%" y="373" width="0.0141%" height="15" fill="rgb(209,23,33)"/><text x="96.7076%" y="383.50"></text></g><g><title>group-b073d76844680b0b`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (26 samples, 0.02%)</title><rect x="96.4576%" y="389" width="0.0167%" height="15" fill="rgb(211,10,0)"/><text x="96.7076%" y="399.50"></text></g><g><title>group-b073d76844680b0b`&lt;openmls::tree::node::Node as core::clone::Clone&gt;::clone (46 samples, 0.03%)</title><rect x="96.4570%" y="405" width="0.0295%" height="15" fill="rgb(208,99,37)"/><text x="96.7070%" y="415.50"></text></g><g><title>group-b073d76844680b0b`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (48 samples, 0.03%)</title><rect x="96.4570%" y="421" width="0.0308%" height="15" fill="rgb(213,132,31)"/><text x="96.7070%" y="431.50"></text></g><g><title>group-b073d76844680b0b`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::boxed::Box&lt;dyn openmls::extensions::Extension&gt;&gt;&gt; (22 samples, 0.01%)</title><rect x="96.4878%" y="389" width="0.0141%" height="15" fill="rgb(243,129,40)"/><text x="96.7378%" y="399.50"></text></g><g><title>group-b073d76844680b0b`core::ptr::drop_in_place&lt;openmls::key_packages::KeyPackage&gt; (50 samples, 0.03%)</title><rect x="96.4878%" y="405" width="0.0320%" height="15" fill="rgb(210,66,33)"/><text x="96.7378%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (23 samples, 0.01%)</title><rect x="96.5051%" y="389" width="0.0147%" height="15" fill="rgb(209,189,4)"/><text x="96.7551%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (21 samples, 0.01%)</title><rect x="96.5064%" y="373" width="0.0135%" height="15" fill="rgb(214,107,37)"/><text x="96.7564%" y="383.50"></text></g><g><title>group-b073d76844680b0b`core::ptr::drop_in_place&lt;openmls::tree::node::Node&gt; (53 samples, 0.03%)</title><rect x="96.4878%" y="421" width="0.0340%" height="15" fill="rgb(245,88,54)"/><text x="96.7378%" y="431.50"></text></g><g><title>group-b073d76844680b0b`openmls::framing::plaintext::MlsPlaintext::sign_from_member (20 samples, 0.01%)</title><rect x="96.5256%" y="421" width="0.0128%" height="15" fill="rgb(205,146,20)"/><text x="96.7756%" y="431.50"></text></g><g><title>group-b073d76844680b0b`&lt;hpke_rs::aead_impl::AesGcm128 as hpke_rs::aead::AeadTrait&gt;::seal (21 samples, 0.01%)</title><rect x="96.5583%" y="325" width="0.0135%" height="15" fill="rgb(220,161,25)"/><text x="96.8083%" y="335.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::Context::seal (27 samples, 0.02%)</title><rect x="96.5576%" y="341" width="0.0173%" height="15" fill="rgb(215,152,15)"/><text x="96.8076%" y="351.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_secret_to_public (182 samples, 0.12%)</title><rect x="96.5756%" y="261" width="0.1166%" height="15" fill="rgb(233,192,44)"/><text x="96.8256%" y="271.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_scalarmult (181 samples, 0.12%)</title><rect x="96.5762%" y="245" width="0.1160%" height="15" fill="rgb(240,170,46)"/><text x="96.8262%" y="255.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::dh_kem::DhKem::dh_base (183 samples, 0.12%)</title><rect x="96.5756%" y="293" width="0.1173%" height="15" fill="rgb(207,104,33)"/><text x="96.8256%" y="303.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::ecdh::derive_base (183 samples, 0.12%)</title><rect x="96.5756%" y="277" width="0.1173%" height="15" fill="rgb(219,21,39)"/><text x="96.8256%" y="287.50"></text></g><g><title>group-b073d76844680b0b`&lt;hpke_rs::dh_kem::DhKem as hpke_rs::kem::KemTrait&gt;::derive_key_pair (188 samples, 0.12%)</title><rect x="96.5749%" y="309" width="0.1205%" height="15" fill="rgb(214,133,29)"/><text x="96.8249%" y="319.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::dh_kem::DhKem::dh (206 samples, 0.13%)</title><rect x="96.6993%" y="309" width="0.1320%" height="15" fill="rgb(226,93,6)"/><text x="96.9493%" y="319.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::ecdh::derive (206 samples, 0.13%)</title><rect x="96.6993%" y="293" width="0.1320%" height="15" fill="rgb(252,222,34)"/><text x="96.9493%" y="303.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_ecdh (204 samples, 0.13%)</title><rect x="96.7005%" y="277" width="0.1307%" height="15" fill="rgb(252,92,48)"/><text x="96.9505%" y="287.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_scalarmult (204 samples, 0.13%)</title><rect x="96.7005%" y="261" width="0.1307%" height="15" fill="rgb(245,223,24)"/><text x="96.9505%" y="271.50"></text></g><g><title>group-b073d76844680b0b`&lt;hpke_rs::dh_kem::DhKem as hpke_rs::kem::KemTrait&gt;::encaps (419 samples, 0.27%)</title><rect x="96.5749%" y="325" width="0.2685%" height="15" fill="rgb(205,176,3)"/><text x="96.8249%" y="335.50"></text></g><g><title>group-b073d76844680b0b`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (476 samples, 0.31%)</title><rect x="96.5563%" y="373" width="0.3051%" height="15" fill="rgb(235,151,15)"/><text x="96.8063%" y="383.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::Hpke::seal (474 samples, 0.30%)</title><rect x="96.5576%" y="357" width="0.3038%" height="15" fill="rgb(237,209,11)"/><text x="96.8076%" y="367.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::Hpke::setup_sender (447 samples, 0.29%)</title><rect x="96.5749%" y="341" width="0.2865%" height="15" fill="rgb(243,227,24)"/><text x="96.8249%" y="351.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::Hpke::key_schedule (28 samples, 0.02%)</title><rect x="96.8435%" y="325" width="0.0179%" height="15" fill="rgb(239,193,16)"/><text x="97.0935%" y="335.50"></text></g><g><title>group-b073d76844680b0b`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (477 samples, 0.31%)</title><rect x="96.5563%" y="389" width="0.3057%" height="15" fill="rgb(231,27,9)"/><text x="96.8063%" y="399.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::dh_kem::DhKem::dh_base (20 samples, 0.01%)</title><rect x="96.8627%" y="325" width="0.0128%" height="15" fill="rgb(219,169,10)"/><text x="97.1127%" y="335.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::ecdh::derive_base (20 samples, 0.01%)</title><rect x="96.8627%" y="309" width="0.0128%" height="15" fill="rgb(244,229,43)"/><text x="97.1127%" y="319.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_secret_to_public (20 samples, 0.01%)</title><rect x="96.8627%" y="293" width="0.0128%" height="15" fill="rgb(254,38,20)"/><text x="97.1127%" y="303.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_scalarmult (20 samples, 0.01%)</title><rect x="96.8627%" y="277" width="0.0128%" height="15" fill="rgb(250,47,30)"/><text x="97.1127%" y="287.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::Hpke::derive_key_pair (21 samples, 0.01%)</title><rect x="96.8627%" y="357" width="0.0135%" height="15" fill="rgb(224,124,36)"/><text x="97.1127%" y="367.50"></text></g><g><title>group-b073d76844680b0b`&lt;hpke_rs::dh_kem::DhKem as hpke_rs::kem::KemTrait&gt;::derive_key_pair (21 samples, 0.01%)</title><rect x="96.8627%" y="341" width="0.0135%" height="15" fill="rgb(246,68,51)"/><text x="97.1127%" y="351.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::private_tree::PrivateTree::new_with_keys (22 samples, 0.01%)</title><rect x="96.8627%" y="389" width="0.0141%" height="15" fill="rgb(253,43,49)"/><text x="97.1127%" y="399.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::private_tree::PrivateTree::derive_path_secrets (22 samples, 0.01%)</title><rect x="96.8627%" y="373" width="0.0141%" height="15" fill="rgb(219,54,36)"/><text x="97.1127%" y="383.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::replace_private_tree_ (503 samples, 0.32%)</title><rect x="96.5557%" y="405" width="0.3224%" height="15" fill="rgb(227,133,34)"/><text x="96.8057%" y="415.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::refresh_private_tree (526 samples, 0.34%)</title><rect x="96.5429%" y="421" width="0.3371%" height="15" fill="rgb(247,227,15)"/><text x="96.7929%" y="431.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (26 samples, 0.02%)</title><rect x="96.9069%" y="213" width="0.0167%" height="15" fill="rgb(229,96,14)"/><text x="97.1569%" y="223.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (26 samples, 0.02%)</title><rect x="96.9069%" y="197" width="0.0167%" height="15" fill="rgb(220,79,17)"/><text x="97.1569%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (21 samples, 0.01%)</title><rect x="96.9101%" y="181" width="0.0135%" height="15" fill="rgb(205,131,53)"/><text x="97.1601%" y="191.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (32 samples, 0.02%)</title><rect x="96.9050%" y="229" width="0.0205%" height="15" fill="rgb(209,50,29)"/><text x="97.1550%" y="239.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (44 samples, 0.03%)</title><rect x="96.8986%" y="261" width="0.0282%" height="15" fill="rgb(245,86,46)"/><text x="97.1486%" y="271.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::LeafNodeHashInput::hash (43 samples, 0.03%)</title><rect x="96.8992%" y="245" width="0.0276%" height="15" fill="rgb(235,66,46)"/><text x="97.1492%" y="255.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (67 samples, 0.04%)</title><rect x="96.8890%" y="277" width="0.0429%" height="15" fill="rgb(232,148,31)"/><text x="97.1390%" y="287.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (84 samples, 0.05%)</title><rect x="96.8806%" y="373" width="0.0538%" height="15" fill="rgb(217,149,8)"/><text x="97.1306%" y="383.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (84 samples, 0.05%)</title><rect x="96.8806%" y="357" width="0.0538%" height="15" fill="rgb(209,183,11)"/><text x="97.1306%" y="367.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (84 samples, 0.05%)</title><rect x="96.8806%" y="341" width="0.0538%" height="15" fill="rgb(208,55,20)"/><text x="97.1306%" y="351.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (82 samples, 0.05%)</title><rect x="96.8819%" y="325" width="0.0526%" height="15" fill="rgb(218,39,14)"/><text x="97.1319%" y="335.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (80 samples, 0.05%)</title><rect x="96.8832%" y="309" width="0.0513%" height="15" fill="rgb(216,169,33)"/><text x="97.1332%" y="319.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (79 samples, 0.05%)</title><rect x="96.8839%" y="293" width="0.0506%" height="15" fill="rgb(233,80,24)"/><text x="97.1339%" y="303.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (85 samples, 0.05%)</title><rect x="96.8806%" y="405" width="0.0545%" height="15" fill="rgb(213,179,31)"/><text x="97.1306%" y="415.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (85 samples, 0.05%)</title><rect x="96.8806%" y="389" width="0.0545%" height="15" fill="rgb(209,19,5)"/><text x="97.1306%" y="399.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (87 samples, 0.06%)</title><rect x="96.8800%" y="421" width="0.0558%" height="15" fill="rgb(219,18,35)"/><text x="97.1300%" y="431.50"></text></g><g><title>group-b073d76844680b0b`openmls::group::mls_group::MlsGroup::create_commit (749 samples, 0.48%)</title><rect x="96.4570%" y="437" width="0.4800%" height="15" fill="rgb(209,169,16)"/><text x="96.7070%" y="447.50"></text></g><g><title>group-b073d76844680b0b`group::send_update (928 samples, 0.59%)</title><rect x="96.3570%" y="453" width="0.5948%" height="15" fill="rgb(245,90,51)"/><text x="96.6070%" y="463.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fmul (40 samples, 0.03%)</title><rect x="96.9761%" y="325" width="0.0256%" height="15" fill="rgb(220,99,45)"/><text x="97.2261%" y="335.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fsqr (20 samples, 0.01%)</title><rect x="97.0050%" y="325" width="0.0128%" height="15" fill="rgb(249,89,25)"/><text x="97.2550%" y="335.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fmul (91 samples, 0.06%)</title><rect x="97.0229%" y="309" width="0.0583%" height="15" fill="rgb(239,193,0)"/><text x="97.2729%" y="319.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Ed25519_Ladder_point_mul (188 samples, 0.12%)</title><rect x="96.9620%" y="341" width="0.1205%" height="15" fill="rgb(231,126,1)"/><text x="97.2120%" y="351.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Ed25519_PointAdd_point_add (99 samples, 0.06%)</title><rect x="97.0191%" y="325" width="0.0635%" height="15" fill="rgb(243,166,3)"/><text x="97.2691%" y="335.50"></text></g><g><title>group-b073d76844680b0b`openmls::ciphersuite::SignaturePrivateKey::sign (206 samples, 0.13%)</title><rect x="96.9614%" y="389" width="0.1320%" height="15" fill="rgb(223,22,34)"/><text x="97.2114%" y="399.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::signature::sign (206 samples, 0.13%)</title><rect x="96.9614%" y="373" width="0.1320%" height="15" fill="rgb(251,52,51)"/><text x="97.2114%" y="383.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Ed25519_sign (206 samples, 0.13%)</title><rect x="96.9614%" y="357" width="0.1320%" height="15" fill="rgb(221,165,28)"/><text x="97.2114%" y="367.50"></text></g><g><title>group-b073d76844680b0b`openmls::group::mls_group::MlsGroup::create_add_proposal (212 samples, 0.14%)</title><rect x="96.9588%" y="437" width="0.1359%" height="15" fill="rgb(218,121,47)"/><text x="97.2088%" y="447.50"></text></g><g><title>group-b073d76844680b0b`openmls::framing::plaintext::MlsPlaintext::new_from_member (208 samples, 0.13%)</title><rect x="96.9614%" y="421" width="0.1333%" height="15" fill="rgb(209,120,9)"/><text x="97.2114%" y="431.50"></text></g><g><title>group-b073d76844680b0b`openmls::framing::plaintext::MlsPlaintext::sign_from_member (208 samples, 0.13%)</title><rect x="96.9614%" y="405" width="0.1333%" height="15" fill="rgb(236,68,12)"/><text x="97.2114%" y="415.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_secret_to_public (35 samples, 0.02%)</title><rect x="97.0966%" y="309" width="0.0224%" height="15" fill="rgb(225,194,26)"/><text x="97.3466%" y="319.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_scalarmult (35 samples, 0.02%)</title><rect x="97.0966%" y="293" width="0.0224%" height="15" fill="rgb(231,84,39)"/><text x="97.3466%" y="303.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::dh_kem::DhKem::dh_base (37 samples, 0.02%)</title><rect x="97.0966%" y="341" width="0.0237%" height="15" fill="rgb(210,11,45)"/><text x="97.3466%" y="351.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::ecdh::derive_base (37 samples, 0.02%)</title><rect x="97.0966%" y="325" width="0.0237%" height="15" fill="rgb(224,54,52)"/><text x="97.3466%" y="335.50"></text></g><g><title>group-b073d76844680b0b`&lt;hpke_rs::dh_kem::DhKem as hpke_rs::kem::KemTrait&gt;::derive_key_pair (39 samples, 0.02%)</title><rect x="97.0966%" y="357" width="0.0250%" height="15" fill="rgb(238,102,14)"/><text x="97.3466%" y="367.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::dh_kem::DhKem::dh (28 samples, 0.02%)</title><rect x="97.1229%" y="357" width="0.0179%" height="15" fill="rgb(243,160,52)"/><text x="97.3729%" y="367.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::ecdh::derive (28 samples, 0.02%)</title><rect x="97.1229%" y="341" width="0.0179%" height="15" fill="rgb(216,114,19)"/><text x="97.3729%" y="351.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_ecdh (28 samples, 0.02%)</title><rect x="97.1229%" y="325" width="0.0179%" height="15" fill="rgb(244,166,37)"/><text x="97.3729%" y="335.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_scalarmult (28 samples, 0.02%)</title><rect x="97.1229%" y="309" width="0.0179%" height="15" fill="rgb(246,29,44)"/><text x="97.3729%" y="319.50"></text></g><g><title>group-b073d76844680b0b`&lt;hpke_rs::dh_kem::DhKem as hpke_rs::kem::KemTrait&gt;::encaps (72 samples, 0.05%)</title><rect x="97.0966%" y="373" width="0.0461%" height="15" fill="rgb(215,56,53)"/><text x="97.3466%" y="383.50"></text></g><g><title>group-b073d76844680b0b`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (80 samples, 0.05%)</title><rect x="97.0947%" y="421" width="0.0513%" height="15" fill="rgb(217,60,2)"/><text x="97.3447%" y="431.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::Hpke::seal (79 samples, 0.05%)</title><rect x="97.0954%" y="405" width="0.0506%" height="15" fill="rgb(207,26,24)"/><text x="97.3454%" y="415.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::Hpke::setup_sender (77 samples, 0.05%)</title><rect x="97.0966%" y="389" width="0.0494%" height="15" fill="rgb(252,210,15)"/><text x="97.3466%" y="399.50"></text></g><g><title>group-b073d76844680b0b`openmls::group::mls_group::MlsGroup::create_commit (93 samples, 0.06%)</title><rect x="97.0947%" y="437" width="0.0596%" height="15" fill="rgb(253,209,26)"/><text x="97.3447%" y="447.50"></text></g><g><title>group-b073d76844680b0b`group::setup_group (317 samples, 0.20%)</title><rect x="96.9518%" y="453" width="0.2032%" height="15" fill="rgb(238,170,14)"/><text x="97.2018%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (17 samples, 0.01%)</title><rect x="97.2658%" y="341" width="0.0109%" height="15" fill="rgb(216,178,15)"/><text x="97.5158%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (66 samples, 0.04%)</title><rect x="97.2376%" y="373" width="0.0423%" height="15" fill="rgb(250,197,2)"/><text x="97.4876%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (37 samples, 0.02%)</title><rect x="97.2562%" y="357" width="0.0237%" height="15" fill="rgb(212,70,42)"/><text x="97.5062%" y="367.50"></text></g><g><title>group-b073d76844680b0b`core::ptr::drop_in_place&lt;openmls::extensions::capabilities_extension::CapabilitiesExtension&gt; (98 samples, 0.06%)</title><rect x="97.2191%" y="389" width="0.0628%" height="15" fill="rgb(227,213,9)"/><text x="97.4691%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (19 samples, 0.01%)</title><rect x="97.2857%" y="373" width="0.0122%" height="15" fill="rgb(245,99,25)"/><text x="97.5357%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (16 samples, 0.01%)</title><rect x="97.2876%" y="357" width="0.0103%" height="15" fill="rgb(250,82,29)"/><text x="97.5376%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (26 samples, 0.02%)</title><rect x="97.2819%" y="389" width="0.0167%" height="15" fill="rgb(241,226,54)"/><text x="97.5319%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (44 samples, 0.03%)</title><rect x="97.3344%" y="357" width="0.0282%" height="15" fill="rgb(221,99,41)"/><text x="97.5844%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (127 samples, 0.08%)</title><rect x="97.2985%" y="389" width="0.0814%" height="15" fill="rgb(213,90,21)"/><text x="97.5485%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (94 samples, 0.06%)</title><rect x="97.3197%" y="373" width="0.0602%" height="15" fill="rgb(205,208,24)"/><text x="97.5697%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (27 samples, 0.02%)</title><rect x="97.3626%" y="357" width="0.0173%" height="15" fill="rgb(246,31,12)"/><text x="97.6126%" y="367.50"></text></g><g><title>group-b073d76844680b0b`core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::boxed::Box&lt;dyn openmls::extensions::Extension&gt;&gt;&gt; (270 samples, 0.17%)</title><rect x="97.2082%" y="405" width="0.1730%" height="15" fill="rgb(213,154,6)"/><text x="97.4582%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (24 samples, 0.02%)</title><rect x="97.3915%" y="389" width="0.0154%" height="15" fill="rgb(222,163,29)"/><text x="97.6415%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (20 samples, 0.01%)</title><rect x="97.3940%" y="373" width="0.0128%" height="15" fill="rgb(227,201,8)"/><text x="97.6440%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (42 samples, 0.03%)</title><rect x="97.3812%" y="405" width="0.0269%" height="15" fill="rgb(233,9,32)"/><text x="97.6312%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (66 samples, 0.04%)</title><rect x="97.4946%" y="373" width="0.0423%" height="15" fill="rgb(217,54,24)"/><text x="97.7446%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (239 samples, 0.15%)</title><rect x="97.4081%" y="405" width="0.1532%" height="15" fill="rgb(235,192,0)"/><text x="97.6581%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (156 samples, 0.10%)</title><rect x="97.4613%" y="389" width="0.1000%" height="15" fill="rgb(235,45,9)"/><text x="97.7113%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (38 samples, 0.02%)</title><rect x="97.5369%" y="373" width="0.0244%" height="15" fill="rgb(246,42,40)"/><text x="97.7869%" y="383.50"></text></g><g><title>group-b073d76844680b0b`core::ptr::drop_in_place&lt;openmls::key_packages::KeyPackage&gt; (568 samples, 0.36%)</title><rect x="97.2005%" y="421" width="0.3640%" height="15" fill="rgb(248,111,24)"/><text x="97.4505%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (39 samples, 0.02%)</title><rect x="97.5728%" y="421" width="0.0250%" height="15" fill="rgb(249,65,22)"/><text x="97.8228%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (24 samples, 0.02%)</title><rect x="97.5825%" y="405" width="0.0154%" height="15" fill="rgb(238,111,51)"/><text x="97.8325%" y="415.50"></text></g><g><title>group-b073d76844680b0b`core::ptr::drop_in_place&lt;openmls::tree::node::Node&gt; (628 samples, 0.40%)</title><rect x="97.1966%" y="437" width="0.4025%" height="15" fill="rgb(250,118,22)"/><text x="97.4466%" y="447.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_ecdh (42 samples, 0.03%)</title><rect x="97.6068%" y="357" width="0.0269%" height="15" fill="rgb(234,84,26)"/><text x="97.8568%" y="367.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_scalarmult (42 samples, 0.03%)</title><rect x="97.6068%" y="341" width="0.0269%" height="15" fill="rgb(243,172,12)"/><text x="97.8568%" y="351.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::dh_kem::DhKem::dh (43 samples, 0.03%)</title><rect x="97.6068%" y="389" width="0.0276%" height="15" fill="rgb(236,150,49)"/><text x="97.8568%" y="399.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::ecdh::derive (43 samples, 0.03%)</title><rect x="97.6068%" y="373" width="0.0276%" height="15" fill="rgb(225,197,26)"/><text x="97.8568%" y="383.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::dh_kem::DhKem::dh_base (29 samples, 0.02%)</title><rect x="97.6344%" y="389" width="0.0186%" height="15" fill="rgb(214,17,42)"/><text x="97.8844%" y="399.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::ecdh::derive_base (29 samples, 0.02%)</title><rect x="97.6344%" y="373" width="0.0186%" height="15" fill="rgb(224,165,40)"/><text x="97.8844%" y="383.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_secret_to_public (29 samples, 0.02%)</title><rect x="97.6344%" y="357" width="0.0186%" height="15" fill="rgb(246,100,4)"/><text x="97.8844%" y="367.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_scalarmult (29 samples, 0.02%)</title><rect x="97.6344%" y="341" width="0.0186%" height="15" fill="rgb(222,103,0)"/><text x="97.8844%" y="351.50"></text></g><g><title>group-b073d76844680b0b`&lt;hpke_rs::dh_kem::DhKem as hpke_rs::kem::KemTrait&gt;::decaps (76 samples, 0.05%)</title><rect x="97.6068%" y="405" width="0.0487%" height="15" fill="rgb(227,189,26)"/><text x="97.8568%" y="415.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::Hpke::setup_receiver (88 samples, 0.06%)</title><rect x="97.6062%" y="421" width="0.0564%" height="15" fill="rgb(214,202,17)"/><text x="97.8562%" y="431.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::Hpke::open (94 samples, 0.06%)</title><rect x="97.6030%" y="437" width="0.0602%" height="15" fill="rgb(229,111,3)"/><text x="97.8530%" y="447.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fmul (42 samples, 0.03%)</title><rect x="97.6824%" y="373" width="0.0269%" height="15" fill="rgb(229,172,15)"/><text x="97.9324%" y="383.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fsqr (28 samples, 0.02%)</title><rect x="97.7145%" y="373" width="0.0179%" height="15" fill="rgb(230,224,35)"/><text x="97.9645%" y="383.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Curve25519_Field51_fmul (70 samples, 0.04%)</title><rect x="97.7440%" y="357" width="0.0449%" height="15" fill="rgb(251,141,6)"/><text x="97.9940%" y="367.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Ed25519_Ladder_point_mul (197 samples, 0.13%)</title><rect x="97.6690%" y="389" width="0.1263%" height="15" fill="rgb(225,208,6)"/><text x="97.9190%" y="399.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Ed25519_PointAdd_point_add (95 samples, 0.06%)</title><rect x="97.7344%" y="373" width="0.0609%" height="15" fill="rgb(246,181,16)"/><text x="97.9844%" y="383.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Impl_Ed25519_PointDecompress_point_decompress (22 samples, 0.01%)</title><rect x="97.7952%" y="389" width="0.0141%" height="15" fill="rgb(227,129,36)"/><text x="98.0452%" y="399.50"></text></g><g><title>group-b073d76844680b0b`openmls::ciphersuite::SignaturePublicKey::verify (228 samples, 0.15%)</title><rect x="97.6658%" y="437" width="0.1461%" height="15" fill="rgb(248,117,24)"/><text x="97.9158%" y="447.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::signature::verify (228 samples, 0.15%)</title><rect x="97.6658%" y="421" width="0.1461%" height="15" fill="rgb(214,185,35)"/><text x="97.9158%" y="431.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Ed25519_verify (228 samples, 0.15%)</title><rect x="97.6658%" y="405" width="0.1461%" height="15" fill="rgb(236,150,34)"/><text x="97.9158%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (24 samples, 0.02%)</title><rect x="97.8190%" y="389" width="0.0154%" height="15" fill="rgb(243,228,27)"/><text x="98.0690%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (22 samples, 0.01%)</title><rect x="97.8202%" y="373" width="0.0141%" height="15" fill="rgb(245,77,44)"/><text x="98.0702%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (22 samples, 0.01%)</title><rect x="97.8202%" y="357" width="0.0141%" height="15" fill="rgb(235,214,42)"/><text x="98.0702%" y="367.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (25 samples, 0.02%)</title><rect x="97.8190%" y="405" width="0.0160%" height="15" fill="rgb(221,74,3)"/><text x="98.0690%" y="415.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (29 samples, 0.02%)</title><rect x="97.8170%" y="421" width="0.0186%" height="15" fill="rgb(206,121,29)"/><text x="98.0670%" y="431.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (51 samples, 0.03%)</title><rect x="97.8465%" y="389" width="0.0327%" height="15" fill="rgb(249,131,53)"/><text x="98.0965%" y="399.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_Hash_hash_256 (67 samples, 0.04%)</title><rect x="97.8369%" y="405" width="0.0429%" height="15" fill="rgb(236,170,29)"/><text x="98.0869%" y="415.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (53 samples, 0.03%)</title><rect x="97.8805%" y="405" width="0.0340%" height="15" fill="rgb(247,96,15)"/><text x="98.1305%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (23 samples, 0.01%)</title><rect x="97.9164%" y="389" width="0.0147%" height="15" fill="rgb(211,210,7)"/><text x="98.1664%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (22 samples, 0.01%)</title><rect x="97.9170%" y="373" width="0.0141%" height="15" fill="rgb(240,88,50)"/><text x="98.1670%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (27 samples, 0.02%)</title><rect x="97.9145%" y="405" width="0.0173%" height="15" fill="rgb(209,229,26)"/><text x="98.1645%" y="415.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (151 samples, 0.10%)</title><rect x="97.8356%" y="421" width="0.0968%" height="15" fill="rgb(210,68,23)"/><text x="98.0856%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (19 samples, 0.01%)</title><rect x="97.9965%" y="325" width="0.0122%" height="15" fill="rgb(229,180,13)"/><text x="98.2465%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (24 samples, 0.02%)</title><rect x="98.0125%" y="325" width="0.0154%" height="15" fill="rgb(236,53,44)"/><text x="98.2625%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (22 samples, 0.01%)</title><rect x="98.0138%" y="309" width="0.0141%" height="15" fill="rgb(244,214,29)"/><text x="98.2638%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (20 samples, 0.01%)</title><rect x="98.0279%" y="325" width="0.0128%" height="15" fill="rgb(220,75,29)"/><text x="98.2779%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (19 samples, 0.01%)</title><rect x="98.0285%" y="309" width="0.0122%" height="15" fill="rgb(214,183,37)"/><text x="98.2785%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (39 samples, 0.02%)</title><rect x="98.0433%" y="325" width="0.0250%" height="15" fill="rgb(239,117,29)"/><text x="98.2933%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (125 samples, 0.08%)</title><rect x="97.9901%" y="341" width="0.0801%" height="15" fill="rgb(237,171,35)"/><text x="98.2401%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (132 samples, 0.08%)</title><rect x="97.9869%" y="357" width="0.0846%" height="15" fill="rgb(229,178,53)"/><text x="98.2369%" y="367.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (174 samples, 0.11%)</title><rect x="97.9670%" y="389" width="0.1115%" height="15" fill="rgb(210,102,19)"/><text x="98.2170%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`realloc (154 samples, 0.10%)</title><rect x="97.9798%" y="373" width="0.0987%" height="15" fill="rgb(235,127,22)"/><text x="98.2298%" y="383.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (190 samples, 0.12%)</title><rect x="97.9574%" y="405" width="0.1218%" height="15" fill="rgb(244,31,31)"/><text x="98.2074%" y="415.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (252 samples, 0.16%)</title><rect x="97.9324%" y="421" width="0.1615%" height="15" fill="rgb(231,43,21)"/><text x="98.1824%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.01%)</title><rect x="98.0811%" y="405" width="0.0128%" height="15" fill="rgb(217,131,35)"/><text x="98.3311%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (21 samples, 0.01%)</title><rect x="98.0971%" y="421" width="0.0135%" height="15" fill="rgb(221,149,4)"/><text x="98.3471%" y="431.50"></text></g><g><title>group-b073d76844680b0b`openmls::key_packages::KeyPackage::hash (466 samples, 0.30%)</title><rect x="97.8157%" y="437" width="0.2987%" height="15" fill="rgb(232,170,28)"/><text x="98.0657%" y="447.50"></text></g><g><title>group-b073d76844680b0b`openmls::schedule::KeySchedule::epoch_secrets (21 samples, 0.01%)</title><rect x="98.1195%" y="437" width="0.0135%" height="15" fill="rgb(238,56,10)"/><text x="98.3695%" y="447.50"></text></g><g><title>group-b073d76844680b0b`openmls::ciphersuite::Secret::kdf_expand_label (19 samples, 0.01%)</title><rect x="98.1208%" y="421" width="0.0122%" height="15" fill="rgb(235,196,14)"/><text x="98.3708%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (176 samples, 0.11%)</title><rect x="98.1952%" y="357" width="0.1128%" height="15" fill="rgb(216,45,48)"/><text x="98.4452%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (163 samples, 0.10%)</title><rect x="98.2035%" y="341" width="0.1045%" height="15" fill="rgb(238,213,17)"/><text x="98.4535%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (42 samples, 0.03%)</title><rect x="98.2811%" y="325" width="0.0269%" height="15" fill="rgb(212,13,2)"/><text x="98.5311%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (189 samples, 0.12%)</title><rect x="98.1881%" y="373" width="0.1211%" height="15" fill="rgb(240,114,20)"/><text x="98.4381%" y="383.50"></text></g><g><title>group-b073d76844680b0b`&lt;T as openmls::extensions::ExtensionHelper&gt;::clone_it (271 samples, 0.17%)</title><rect x="98.1561%" y="389" width="0.1737%" height="15" fill="rgb(228,41,40)"/><text x="98.4061%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (28 samples, 0.02%)</title><rect x="98.3118%" y="373" width="0.0179%" height="15" fill="rgb(244,132,35)"/><text x="98.5618%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (38 samples, 0.02%)</title><rect x="98.3349%" y="373" width="0.0244%" height="15" fill="rgb(253,189,4)"/><text x="98.5849%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (37 samples, 0.02%)</title><rect x="98.3355%" y="357" width="0.0237%" height="15" fill="rgb(224,37,19)"/><text x="98.5855%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (43 samples, 0.03%)</title><rect x="98.3323%" y="389" width="0.0276%" height="15" fill="rgb(235,223,18)"/><text x="98.5823%" y="399.50"></text></g><g><title>group-b073d76844680b0b`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (330 samples, 0.21%)</title><rect x="98.1497%" y="405" width="0.2115%" height="15" fill="rgb(235,163,25)"/><text x="98.3997%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (21 samples, 0.01%)</title><rect x="98.4541%" y="357" width="0.0135%" height="15" fill="rgb(217,145,28)"/><text x="98.7041%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (196 samples, 0.13%)</title><rect x="98.3657%" y="389" width="0.1256%" height="15" fill="rgb(223,223,32)"/><text x="98.6157%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (189 samples, 0.12%)</title><rect x="98.3701%" y="373" width="0.1211%" height="15" fill="rgb(227,189,39)"/><text x="98.6201%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (37 samples, 0.02%)</title><rect x="98.4676%" y="357" width="0.0237%" height="15" fill="rgb(248,10,22)"/><text x="98.7176%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (206 samples, 0.13%)</title><rect x="98.3612%" y="405" width="0.1320%" height="15" fill="rgb(248,46,39)"/><text x="98.6112%" y="415.50"></text></g><g><title>group-b073d76844680b0b`&lt;openmls::key_packages::KeyPackage as core::clone::Clone&gt;::clone (675 samples, 0.43%)</title><rect x="98.1401%" y="421" width="0.4326%" height="15" fill="rgb(248,113,48)"/><text x="98.3901%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (122 samples, 0.08%)</title><rect x="98.4945%" y="405" width="0.0782%" height="15" fill="rgb(245,16,25)"/><text x="98.7445%" y="415.50"></text></g><g><title>group-b073d76844680b0b`core::cmp::impls::_&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (20 samples, 0.01%)</title><rect x="98.5759%" y="421" width="0.0128%" height="15" fill="rgb(249,152,16)"/><text x="98.8259%" y="431.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::dh_kem::DhKem::dh_base (33 samples, 0.02%)</title><rect x="98.5900%" y="373" width="0.0212%" height="15" fill="rgb(250,16,1)"/><text x="98.8400%" y="383.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::ecdh::derive_base (33 samples, 0.02%)</title><rect x="98.5900%" y="357" width="0.0212%" height="15" fill="rgb(249,138,3)"/><text x="98.8400%" y="367.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_secret_to_public (33 samples, 0.02%)</title><rect x="98.5900%" y="341" width="0.0212%" height="15" fill="rgb(227,71,41)"/><text x="98.8400%" y="351.50"></text></g><g><title>group-b073d76844680b0b`Hacl_Curve25519_64_scalarmult (33 samples, 0.02%)</title><rect x="98.5900%" y="325" width="0.0212%" height="15" fill="rgb(209,184,23)"/><text x="98.8400%" y="335.50"></text></g><g><title>group-b073d76844680b0b`&lt;hpke_rs::dh_kem::DhKem as hpke_rs::kem::KemTrait&gt;::derive_key_pair (35 samples, 0.02%)</title><rect x="98.5900%" y="389" width="0.0224%" height="15" fill="rgb(223,215,31)"/><text x="98.8400%" y="399.50"></text></g><g><title>group-b073d76844680b0b`hpke_rs::Hpke::derive_key_pair (37 samples, 0.02%)</title><rect x="98.5900%" y="405" width="0.0237%" height="15" fill="rgb(210,146,28)"/><text x="98.8400%" y="415.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::private_tree::PrivateTree::from_key_package_bundle (38 samples, 0.02%)</title><rect x="98.5900%" y="421" width="0.0244%" height="15" fill="rgb(209,183,41)"/><text x="98.8400%" y="431.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::RatchetTree::new_from_nodes (1,038 samples, 0.67%)</title><rect x="98.1343%" y="437" width="0.6653%" height="15" fill="rgb(209,224,45)"/><text x="98.3843%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (278 samples, 0.18%)</title><rect x="98.6214%" y="421" width="0.1782%" height="15" fill="rgb(224,209,51)"/><text x="98.8714%" y="431.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (16 samples, 0.01%)</title><rect x="98.8252%" y="325" width="0.0103%" height="15" fill="rgb(223,17,39)"/><text x="99.0752%" y="335.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (23 samples, 0.01%)</title><rect x="98.8566%" y="309" width="0.0147%" height="15" fill="rgb(234,204,37)"/><text x="99.1066%" y="319.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_Hash_hash_256 (28 samples, 0.02%)</title><rect x="98.8995%" y="277" width="0.0179%" height="15" fill="rgb(236,120,5)"/><text x="99.1495%" y="287.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (20 samples, 0.01%)</title><rect x="98.9047%" y="261" width="0.0128%" height="15" fill="rgb(248,97,27)"/><text x="99.1547%" y="271.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (54 samples, 0.03%)</title><rect x="98.8989%" y="293" width="0.0346%" height="15" fill="rgb(240,66,17)"/><text x="99.1489%" y="303.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_Hash_hash_256 (49 samples, 0.03%)</title><rect x="98.9688%" y="261" width="0.0314%" height="15" fill="rgb(210,79,3)"/><text x="99.2188%" y="271.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (33 samples, 0.02%)</title><rect x="98.9790%" y="245" width="0.0212%" height="15" fill="rgb(214,176,27)"/><text x="99.2290%" y="255.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (26 samples, 0.02%)</title><rect x="99.0008%" y="261" width="0.0167%" height="15" fill="rgb(235,185,3)"/><text x="99.2508%" y="271.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (102 samples, 0.07%)</title><rect x="98.9688%" y="277" width="0.0654%" height="15" fill="rgb(227,24,12)"/><text x="99.2188%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (26 samples, 0.02%)</title><rect x="99.0175%" y="261" width="0.0167%" height="15" fill="rgb(252,169,48)"/><text x="99.2675%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (24 samples, 0.02%)</title><rect x="99.0188%" y="245" width="0.0154%" height="15" fill="rgb(212,65,1)"/><text x="99.2688%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (24 samples, 0.02%)</title><rect x="99.0188%" y="229" width="0.0154%" height="15" fill="rgb(242,39,24)"/><text x="99.2688%" y="239.50"></text></g><g><title>group-b073d76844680b0b`&lt;core::option::Option&lt;T&gt; as openmls::codec::Codec&gt;::encode (33 samples, 0.02%)</title><rect x="99.0828%" y="245" width="0.0212%" height="15" fill="rgb(249,32,23)"/><text x="99.3328%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (32 samples, 0.02%)</title><rect x="99.0835%" y="229" width="0.0205%" height="15" fill="rgb(251,195,23)"/><text x="99.3335%" y="239.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (51 samples, 0.03%)</title><rect x="99.1239%" y="213" width="0.0327%" height="15" fill="rgb(236,174,8)"/><text x="99.3739%" y="223.50"></text></g><g><title>group-b073d76844680b0b`EverCrypt_Hash_hash_256 (75 samples, 0.05%)</title><rect x="99.1098%" y="229" width="0.0481%" height="15" fill="rgb(220,197,8)"/><text x="99.3598%" y="239.50"></text></g><g><title>group-b073d76844680b0b`sha256_update (150 samples, 0.10%)</title><rect x="99.1585%" y="229" width="0.0961%" height="15" fill="rgb(240,108,37)"/><text x="99.4085%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (50 samples, 0.03%)</title><rect x="99.2559%" y="213" width="0.0320%" height="15" fill="rgb(232,176,24)"/><text x="99.5059%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (49 samples, 0.03%)</title><rect x="99.2565%" y="197" width="0.0314%" height="15" fill="rgb(243,35,29)"/><text x="99.5065%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (18 samples, 0.01%)</title><rect x="99.2764%" y="181" width="0.0115%" height="15" fill="rgb(210,37,18)"/><text x="99.5264%" y="191.50"></text></g><g><title>group-b073d76844680b0b`evercrypt::digest::hash (284 samples, 0.18%)</title><rect x="99.1066%" y="245" width="0.1820%" height="15" fill="rgb(224,184,40)"/><text x="99.3566%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (53 samples, 0.03%)</title><rect x="99.2546%" y="229" width="0.0340%" height="15" fill="rgb(236,39,29)"/><text x="99.5046%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (39 samples, 0.02%)</title><rect x="99.3559%" y="197" width="0.0250%" height="15" fill="rgb(232,48,39)"/><text x="99.6059%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (38 samples, 0.02%)</title><rect x="99.3565%" y="181" width="0.0244%" height="15" fill="rgb(236,34,42)"/><text x="99.6065%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (36 samples, 0.02%)</title><rect x="99.3578%" y="165" width="0.0231%" height="15" fill="rgb(243,106,37)"/><text x="99.6078%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (33 samples, 0.02%)</title><rect x="99.4027%" y="149" width="0.0212%" height="15" fill="rgb(218,96,6)"/><text x="99.6527%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (18 samples, 0.01%)</title><rect x="99.4123%" y="133" width="0.0115%" height="15" fill="rgb(235,130,12)"/><text x="99.6623%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (44 samples, 0.03%)</title><rect x="99.4251%" y="149" width="0.0282%" height="15" fill="rgb(231,95,0)"/><text x="99.6751%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (42 samples, 0.03%)</title><rect x="99.4264%" y="133" width="0.0269%" height="15" fill="rgb(228,12,23)"/><text x="99.6764%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (17 samples, 0.01%)</title><rect x="99.4424%" y="117" width="0.0109%" height="15" fill="rgb(216,12,1)"/><text x="99.6924%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (20 samples, 0.01%)</title><rect x="99.4533%" y="149" width="0.0128%" height="15" fill="rgb(219,59,3)"/><text x="99.7033%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (18 samples, 0.01%)</title><rect x="99.4546%" y="133" width="0.0115%" height="15" fill="rgb(215,208,46)"/><text x="99.7046%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (155 samples, 0.10%)</title><rect x="99.3995%" y="165" width="0.0993%" height="15" fill="rgb(254,224,29)"/><text x="99.6495%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (47 samples, 0.03%)</title><rect x="99.4687%" y="149" width="0.0301%" height="15" fill="rgb(232,14,29)"/><text x="99.7187%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (173 samples, 0.11%)</title><rect x="99.3905%" y="181" width="0.1109%" height="15" fill="rgb(208,45,52)"/><text x="99.6405%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (19 samples, 0.01%)</title><rect x="99.5020%" y="181" width="0.0122%" height="15" fill="rgb(234,191,28)"/><text x="99.7520%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (19 samples, 0.01%)</title><rect x="99.5020%" y="165" width="0.0122%" height="15" fill="rgb(244,67,43)"/><text x="99.7520%" y="175.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::finish_grow (254 samples, 0.16%)</title><rect x="99.3520%" y="213" width="0.1628%" height="15" fill="rgb(236,189,24)"/><text x="99.6020%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`realloc (207 samples, 0.13%)</title><rect x="99.3822%" y="197" width="0.1327%" height="15" fill="rgb(239,214,33)"/><text x="99.6322%" y="207.50"></text></g><g><title>group-b073d76844680b0b`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (266 samples, 0.17%)</title><rect x="99.3450%" y="229" width="0.1705%" height="15" fill="rgb(226,176,41)"/><text x="99.5950%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (53 samples, 0.03%)</title><rect x="99.5225%" y="229" width="0.0340%" height="15" fill="rgb(248,47,8)"/><text x="99.7725%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (37 samples, 0.02%)</title><rect x="99.5328%" y="213" width="0.0237%" height="15" fill="rgb(218,81,44)"/><text x="99.7828%" y="223.50"></text></g><g><title>group-b073d76844680b0b`openmls::codec::encode_vec (420 samples, 0.27%)</title><rect x="99.2886%" y="245" width="0.2692%" height="15" fill="rgb(213,98,6)"/><text x="99.5386%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (37 samples, 0.02%)</title><rect x="99.5597%" y="229" width="0.0237%" height="15" fill="rgb(222,85,22)"/><text x="99.8097%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (37 samples, 0.02%)</title><rect x="99.5597%" y="213" width="0.0237%" height="15" fill="rgb(239,46,39)"/><text x="99.8097%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (41 samples, 0.03%)</title><rect x="99.5578%" y="245" width="0.0263%" height="15" fill="rgb(237,12,29)"/><text x="99.8078%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (40 samples, 0.03%)</title><rect x="99.5924%" y="245" width="0.0256%" height="15" fill="rgb(214,77,8)"/><text x="99.8424%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (33 samples, 0.02%)</title><rect x="99.5969%" y="229" width="0.0212%" height="15" fill="rgb(217,168,37)"/><text x="99.8469%" y="239.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::LeafNodeHashInput::hash (869 samples, 0.56%)</title><rect x="99.0636%" y="261" width="0.5570%" height="15" fill="rgb(221,217,23)"/><text x="99.3136%" y="271.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (915 samples, 0.59%)</title><rect x="99.0380%" y="277" width="0.5864%" height="15" fill="rgb(243,229,36)"/><text x="99.2880%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (28 samples, 0.02%)</title><rect x="99.6244%" y="277" width="0.0179%" height="15" fill="rgb(251,163,40)"/><text x="99.8744%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (27 samples, 0.02%)</title><rect x="99.6251%" y="261" width="0.0173%" height="15" fill="rgb(237,222,12)"/><text x="99.8751%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (24 samples, 0.02%)</title><rect x="99.6270%" y="245" width="0.0154%" height="15" fill="rgb(248,132,6)"/><text x="99.8770%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (64 samples, 0.04%)</title><rect x="99.6501%" y="277" width="0.0410%" height="15" fill="rgb(227,167,50)"/><text x="99.9001%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (34 samples, 0.02%)</title><rect x="99.6693%" y="261" width="0.0218%" height="15" fill="rgb(242,84,37)"/><text x="99.9193%" y="271.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (1,176 samples, 0.75%)</title><rect x="98.9386%" y="293" width="0.7537%" height="15" fill="rgb(212,4,50)"/><text x="99.1886%" y="303.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (1,322 samples, 0.85%)</title><rect x="98.8739%" y="309" width="0.8473%" height="15" fill="rgb(230,228,32)"/><text x="99.1239%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (25 samples, 0.02%)</title><rect x="99.7052%" y="293" width="0.0160%" height="15" fill="rgb(248,217,23)"/><text x="99.9552%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (17 samples, 0.01%)</title><rect x="99.7103%" y="277" width="0.0109%" height="15" fill="rgb(238,197,32)"/><text x="99.9603%" y="287.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (1,403 samples, 0.90%)</title><rect x="98.8355%" y="325" width="0.8992%" height="15" fill="rgb(236,106,1)"/><text x="99.0855%" y="335.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (1,439 samples, 0.92%)</title><rect x="98.8201%" y="341" width="0.9223%" height="15" fill="rgb(219,228,13)"/><text x="99.0701%" y="351.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (1,454 samples, 0.93%)</title><rect x="98.8117%" y="357" width="0.9319%" height="15" fill="rgb(238,30,35)"/><text x="99.0617%" y="367.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (1,469 samples, 0.94%)</title><rect x="98.8053%" y="373" width="0.9415%" height="15" fill="rgb(236,70,23)"/><text x="99.0553%" y="383.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (1,479 samples, 0.95%)</title><rect x="98.7996%" y="437" width="0.9479%" height="15" fill="rgb(249,104,48)"/><text x="99.0496%" y="447.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (1,477 samples, 0.95%)</title><rect x="98.8008%" y="421" width="0.9466%" height="15" fill="rgb(254,117,50)"/><text x="99.0508%" y="431.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (1,476 samples, 0.95%)</title><rect x="98.8015%" y="405" width="0.9460%" height="15" fill="rgb(223,152,4)"/><text x="99.0515%" y="415.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::hashes::_&lt;impl openmls::tree::RatchetTree&gt;::tree_hash::node_hash (1,472 samples, 0.94%)</title><rect x="98.8040%" y="389" width="0.9434%" height="15" fill="rgb(245,6,2)"/><text x="99.0540%" y="399.50"></text></g><g><title>group-b073d76844680b0b`openmls::tree::secret_tree::SecretTree::new (87 samples, 0.06%)</title><rect x="99.7475%" y="437" width="0.0558%" height="15" fill="rgb(249,150,24)"/><text x="99.9975%" y="447.50"></text></g><g><title>group-b073d76844680b0b`alloc::vec::Vec&lt;T,A&gt;::extend_with (78 samples, 0.05%)</title><rect x="99.7532%" y="421" width="0.0500%" height="15" fill="rgb(228,185,42)"/><text x="100.0032%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (25 samples, 0.02%)</title><rect x="99.8096%" y="421" width="0.0160%" height="15" fill="rgb(226,39,33)"/><text x="100.0596%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (21 samples, 0.01%)</title><rect x="99.8122%" y="405" width="0.0135%" height="15" fill="rgb(221,166,19)"/><text x="100.0622%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (35 samples, 0.02%)</title><rect x="99.8058%" y="437" width="0.0224%" height="15" fill="rgb(209,109,2)"/><text x="100.0558%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (46 samples, 0.03%)</title><rect x="99.9000%" y="405" width="0.0295%" height="15" fill="rgb(252,216,26)"/><text x="100.1500%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (178 samples, 0.11%)</title><rect x="99.8289%" y="437" width="0.1141%" height="15" fill="rgb(227,173,36)"/><text x="100.0789%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (114 samples, 0.07%)</title><rect x="99.8699%" y="421" width="0.0731%" height="15" fill="rgb(209,90,7)"/><text x="100.1199%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (21 samples, 0.01%)</title><rect x="99.9295%" y="405" width="0.0135%" height="15" fill="rgb(250,194,11)"/><text x="100.1795%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (49 samples, 0.03%)</title><rect x="99.9468%" y="437" width="0.0314%" height="15" fill="rgb(220,72,50)"/><text x="100.1968%" y="447.50"></text></g><g><title>group-b073d76844680b0b`openmls::group::mls_group::MlsGroup::new_from_welcome (4,405 samples, 2.82%)</title><rect x="97.1562%" y="453" width="2.8232%" height="15" fill="rgb(222,106,48)"/><text x="97.4062%" y="463.50">gr..</text></g><g><title>group-b073d76844680b0b`0x1 (155,996 samples, 99.98%)</title><rect x="0.0141%" y="565" width="99.9808%" height="15" fill="rgb(216,220,45)"/><text x="0.2641%" y="575.50">group-b073d76844680b0b`0x1</text></g><g><title>libdyld.dylib`start (155,996 samples, 99.98%)</title><rect x="0.0141%" y="549" width="99.9808%" height="15" fill="rgb(234,112,18)"/><text x="0.2641%" y="559.50">libdyld.dylib`start</text></g><g><title>group-b073d76844680b0b`main (155,996 samples, 99.98%)</title><rect x="0.0141%" y="533" width="99.9808%" height="15" fill="rgb(206,179,9)"/><text x="0.2641%" y="543.50">group-b073d76844680b0b`main</text></g><g><title>group-b073d76844680b0b`std::rt::lang_start_internal (155,995 samples, 99.98%)</title><rect x="0.0147%" y="517" width="99.9801%" height="15" fill="rgb(215,115,40)"/><text x="0.2647%" y="527.50">group-b073d76844680b0b`std::rt::lang_start_internal</text></g><g><title>group-b073d76844680b0b`std::rt::lang_start::_{{closure}} (155,995 samples, 99.98%)</title><rect x="0.0147%" y="501" width="99.9801%" height="15" fill="rgb(222,69,34)"/><text x="0.2647%" y="511.50">group-b073d76844680b0b`std::rt::lang_start::_{{closure}}</text></g><g><title>group-b073d76844680b0b`std::sys_common::backtrace::__rust_begin_short_backtrace (155,995 samples, 99.98%)</title><rect x="0.0147%" y="485" width="99.9801%" height="15" fill="rgb(209,161,10)"/><text x="0.2647%" y="495.50">group-b073d76844680b0b`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>group-b073d76844680b0b`group::main (155,991 samples, 99.98%)</title><rect x="0.0173%" y="469" width="99.9776%" height="15" fill="rgb(217,6,38)"/><text x="0.2673%" y="479.50">group-b073d76844680b0b`group::main</text></g><g><title>all (156,026 samples, 100%)</title><rect x="0.0000%" y="581" width="100.0000%" height="15" fill="rgb(229,229,48)"/><text x="0.2500%" y="591.50"></text></g></svg></svg>