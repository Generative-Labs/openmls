<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="790" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="773.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="773.00"> </text><svg id="frames" x="10" width="1180"><g><title>openmls::group::mls_group::MlsGroup::apply_commit (1 samples, 2.13%)</title><rect x="0.0000%" y="453" width="2.1277%" height="15" fill="rgb(216,59,51)"/><text x="0.2500%" y="463.50">o..</text></g><g><title>openmls::group::mls_group::apply_commit::&lt;impl openmls::group::mls_group::MlsGroup&gt;::apply_commit_internal (1 samples, 2.13%)</title><rect x="0.0000%" y="437" width="2.1277%" height="15" fill="rgb(213,80,28)"/><text x="0.2500%" y="447.50">o..</text></g><g><title>openmls::group::mls_group::update_confirmed_transcript_hash (1 samples, 2.13%)</title><rect x="0.0000%" y="421" width="2.1277%" height="15" fill="rgb(220,93,7)"/><text x="0.2500%" y="431.50">o..</text></g><g><title>openmls::ciphersuite::Ciphersuite::hash (1 samples, 2.13%)</title><rect x="0.0000%" y="405" width="2.1277%" height="15" fill="rgb(225,24,44)"/><text x="0.2500%" y="415.50">o..</text></g><g><title>evercrypt::digest::hash (1 samples, 2.13%)</title><rect x="0.0000%" y="389" width="2.1277%" height="15" fill="rgb(243,74,40)"/><text x="0.2500%" y="399.50">e..</text></g><g><title>EverCrypt_Hash_hash_256 (1 samples, 2.13%)</title><rect x="0.0000%" y="373" width="2.1277%" height="15" fill="rgb(228,39,7)"/><text x="0.2500%" y="383.50">E..</text></g><g><title>Hacl_Hash_SHA2_update_multi_256 (1 samples, 2.13%)</title><rect x="0.0000%" y="357" width="2.1277%" height="15" fill="rgb(227,79,8)"/><text x="0.2500%" y="367.50">H..</text></g><g><title>Hacl_Hash_Core_SHA2_update_224 (1 samples, 2.13%)</title><rect x="0.0000%" y="341" width="2.1277%" height="15" fill="rgb(236,58,11)"/><text x="0.2500%" y="351.50">H..</text></g><g><title>openmls::codec::Codec::encode_detached (1 samples, 2.13%)</title><rect x="2.1277%" y="373" width="2.1277%" height="15" fill="rgb(249,63,35)"/><text x="2.3777%" y="383.50">o..</text></g><g><title>openmls::framing::codec::&lt;impl openmls::codec::Codec for openmls::framing::plaintext::MlsPlaintextTbs&gt;::encode (1 samples, 2.13%)</title><rect x="2.1277%" y="357" width="2.1277%" height="15" fill="rgb(252,114,16)"/><text x="2.3777%" y="367.50">o..</text></g><g><title>openmls::group::codec::&lt;impl openmls::codec::Codec for openmls::group::GroupId&gt;::encode (1 samples, 2.13%)</title><rect x="2.1277%" y="341" width="2.1277%" height="15" fill="rgb(254,151,24)"/><text x="2.3777%" y="351.50">o..</text></g><g><title>openmls::codec::encode_vec (1 samples, 2.13%)</title><rect x="2.1277%" y="325" width="2.1277%" height="15" fill="rgb(253,54,39)"/><text x="2.3777%" y="335.50">o..</text></g><g><title>&lt;u8 as openmls::codec::Codec&gt;::encode (1 samples, 2.13%)</title><rect x="2.1277%" y="309" width="2.1277%" height="15" fill="rgb(243,25,45)"/><text x="2.3777%" y="319.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 2.13%)</title><rect x="2.1277%" y="293" width="2.1277%" height="15" fill="rgb(234,134,9)"/><text x="2.3777%" y="303.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 2.13%)</title><rect x="2.1277%" y="277" width="2.1277%" height="15" fill="rgb(227,166,31)"/><text x="2.3777%" y="287.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 2.13%)</title><rect x="2.1277%" y="261" width="2.1277%" height="15" fill="rgb(245,143,41)"/><text x="2.3777%" y="271.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 2.13%)</title><rect x="2.1277%" y="245" width="2.1277%" height="15" fill="rgb(238,181,32)"/><text x="2.3777%" y="255.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 2.13%)</title><rect x="2.1277%" y="229" width="2.1277%" height="15" fill="rgb(224,113,18)"/><text x="2.3777%" y="239.50">a..</text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 2.13%)</title><rect x="2.1277%" y="213" width="2.1277%" height="15" fill="rgb(240,229,28)"/><text x="2.3777%" y="223.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 2.13%)</title><rect x="2.1277%" y="197" width="2.1277%" height="15" fill="rgb(250,185,3)"/><text x="2.3777%" y="207.50">&lt;..</text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 2.13%)</title><rect x="2.1277%" y="181" width="2.1277%" height="15" fill="rgb(212,59,25)"/><text x="2.3777%" y="191.50">a..</text></g><g><title>alloc::alloc::realloc (1 samples, 2.13%)</title><rect x="2.1277%" y="165" width="2.1277%" height="15" fill="rgb(221,87,20)"/><text x="2.3777%" y="175.50">a..</text></g><g><title>__GI___libc_realloc (1 samples, 2.13%)</title><rect x="2.1277%" y="149" width="2.1277%" height="15" fill="rgb(213,74,28)"/><text x="2.3777%" y="159.50">_..</text></g><g><title>_int_realloc (1 samples, 2.13%)</title><rect x="2.1277%" y="133" width="2.1277%" height="15" fill="rgb(224,132,34)"/><text x="2.3777%" y="143.50">_..</text></g><g><title>_int_malloc (1 samples, 2.13%)</title><rect x="2.1277%" y="117" width="2.1277%" height="15" fill="rgb(222,101,24)"/><text x="2.3777%" y="127.50">_..</text></g><g><title>unlink_chunk.constprop.0 (1 samples, 2.13%)</title><rect x="2.1277%" y="101" width="2.1277%" height="15" fill="rgb(254,142,4)"/><text x="2.3777%" y="111.50">u..</text></g><g><title>Hacl_Impl_Ed25519_PointAdd_point_add (5 samples, 10.64%)</title><rect x="4.2553%" y="229" width="10.6383%" height="15" fill="rgb(230,229,49)"/><text x="4.5053%" y="239.50">Hacl_Impl_Ed2551..</text></g><g><title>times_2d (5 samples, 10.64%)</title><rect x="4.2553%" y="213" width="10.6383%" height="15" fill="rgb(238,70,47)"/><text x="4.5053%" y="223.50">times_2d</text></g><g><title>fmul0 (5 samples, 10.64%)</title><rect x="4.2553%" y="197" width="10.6383%" height="15" fill="rgb(231,160,17)"/><text x="4.5053%" y="207.50">fmul0</text></g><g><title>point_double (5 samples, 10.64%)</title><rect x="14.8936%" y="229" width="10.6383%" height="15" fill="rgb(218,68,53)"/><text x="15.1436%" y="239.50">point_double</text></g><g><title>fmul0 (5 samples, 10.64%)</title><rect x="14.8936%" y="213" width="10.6383%" height="15" fill="rgb(236,111,10)"/><text x="15.1436%" y="223.50">fmul0</text></g><g><title>Hacl_Impl_Curve25519_Field51_fmul (5 samples, 10.64%)</title><rect x="14.8936%" y="197" width="10.6383%" height="15" fill="rgb(224,34,41)"/><text x="15.1436%" y="207.50">Hacl_Impl_Curve2..</text></g><g><title>FStar_UInt128_add (5 samples, 10.64%)</title><rect x="14.8936%" y="181" width="10.6383%" height="15" fill="rgb(241,118,19)"/><text x="15.1436%" y="191.50">FStar_UInt128_add</text></g><g><title>sign_step_1 (15 samples, 31.91%)</title><rect x="4.2553%" y="293" width="31.9149%" height="15" fill="rgb(238,129,25)"/><text x="4.5053%" y="303.50">sign_step_1</text></g><g><title>point_mul_g_compress (15 samples, 31.91%)</title><rect x="4.2553%" y="277" width="31.9149%" height="15" fill="rgb(238,22,31)"/><text x="4.5053%" y="287.50">point_mul_g_compress</text></g><g><title>point_mul_g (15 samples, 31.91%)</title><rect x="4.2553%" y="261" width="31.9149%" height="15" fill="rgb(222,174,48)"/><text x="4.5053%" y="271.50">point_mul_g</text></g><g><title>Hacl_Impl_Ed25519_Ladder_point_mul (15 samples, 31.91%)</title><rect x="4.2553%" y="245" width="31.9149%" height="15" fill="rgb(206,152,40)"/><text x="4.5053%" y="255.50">Hacl_Impl_Ed25519_Ladder_point_mul</text></g><g><title>swap_conditional_inplace (5 samples, 10.64%)</title><rect x="25.5319%" y="229" width="10.6383%" height="15" fill="rgb(218,99,54)"/><text x="25.7819%" y="239.50">swap_conditional..</text></g><g><title>swap_conditional_step (5 samples, 10.64%)</title><rect x="25.5319%" y="213" width="10.6383%" height="15" fill="rgb(220,174,26)"/><text x="25.7819%" y="223.50">swap_conditional..</text></g><g><title>sign_step_2 (1 samples, 2.13%)</title><rect x="36.1702%" y="293" width="2.1277%" height="15" fill="rgb(245,116,9)"/><text x="36.4202%" y="303.50">s..</text></g><g><title>sha512_modq_pre (1 samples, 2.13%)</title><rect x="36.1702%" y="277" width="2.1277%" height="15" fill="rgb(209,72,35)"/><text x="36.4202%" y="287.50">s..</text></g><g><title>sha512_pre_msg (1 samples, 2.13%)</title><rect x="36.1702%" y="261" width="2.1277%" height="15" fill="rgb(226,126,21)"/><text x="36.4202%" y="271.50">s..</text></g><g><title>Hacl_Hash_SHA2_hash_512 (1 samples, 2.13%)</title><rect x="36.1702%" y="245" width="2.1277%" height="15" fill="rgb(227,192,1)"/><text x="36.4202%" y="255.50">H..</text></g><g><title>Hacl_Hash_SHA2_update_last_512 (1 samples, 2.13%)</title><rect x="36.1702%" y="229" width="2.1277%" height="15" fill="rgb(237,180,29)"/><text x="36.4202%" y="239.50">H..</text></g><g><title>Hacl_Hash_SHA2_update_multi_512 (1 samples, 2.13%)</title><rect x="36.1702%" y="213" width="2.1277%" height="15" fill="rgb(230,197,35)"/><text x="36.4202%" y="223.50">H..</text></g><g><title>Hacl_Hash_Core_SHA2_update_384 (1 samples, 2.13%)</title><rect x="36.1702%" y="197" width="2.1277%" height="15" fill="rgb(246,193,31)"/><text x="36.4202%" y="207.50">H..</text></g><g><title>Hacl_Impl_Curve25519_Field51_fsub (1 samples, 2.13%)</title><rect x="38.2979%" y="213" width="2.1277%" height="15" fill="rgb(241,36,4)"/><text x="38.5479%" y="223.50">H..</text></g><g><title>Hacl_Impl_Curve25519_Field51_fmul (10 samples, 21.28%)</title><rect x="40.4255%" y="197" width="21.2766%" height="15" fill="rgb(241,130,17)"/><text x="40.6755%" y="207.50">Hacl_Impl_Curve25519_Field51_fmul</text></g><g><title>FStar_UInt128_add (10 samples, 21.28%)</title><rect x="40.4255%" y="181" width="21.2766%" height="15" fill="rgb(206,137,32)"/><text x="40.6755%" y="191.50">FStar_UInt128_add</text></g><g><title>Hacl_Impl_Ed25519_PointAdd_point_add (12 samples, 25.53%)</title><rect x="38.2979%" y="229" width="25.5319%" height="15" fill="rgb(237,228,51)"/><text x="38.5479%" y="239.50">Hacl_Impl_Ed25519_PointAdd_point_add</text></g><g><title>fmul0 (11 samples, 23.40%)</title><rect x="40.4255%" y="213" width="23.4043%" height="15" fill="rgb(243,6,42)"/><text x="40.6755%" y="223.50">fmul0</text></g><g><title>Unknow (1 samples, 2.13%)</title><rect x="61.7021%" y="197" width="2.1277%" height="15" fill="rgb(251,74,28)"/><text x="61.9521%" y="207.50">U..</text></g><g><title>openmls::group::mls_group::MlsGroup::create_add_proposal (31 samples, 65.96%)</title><rect x="2.1277%" y="453" width="65.9574%" height="15" fill="rgb(218,20,49)"/><text x="2.3777%" y="463.50">openmls::group::mls_group::MlsGroup::create_add_proposal</text></g><g><title>openmls::framing::plaintext::MlsPlaintext::new_from_proposal_member (31 samples, 65.96%)</title><rect x="2.1277%" y="437" width="65.9574%" height="15" fill="rgb(238,28,14)"/><text x="2.3777%" y="447.50">openmls::framing::plaintext::MlsPlaintext::new_from_proposal_member</text></g><g><title>openmls::framing::plaintext::MlsPlaintext::new_from_member (31 samples, 65.96%)</title><rect x="2.1277%" y="421" width="65.9574%" height="15" fill="rgb(229,40,46)"/><text x="2.3777%" y="431.50">openmls::framing::plaintext::MlsPlaintext::new_from_member</text></g><g><title>openmls::framing::plaintext::MlsPlaintext::sign_from_member (31 samples, 65.96%)</title><rect x="2.1277%" y="405" width="65.9574%" height="15" fill="rgb(244,195,20)"/><text x="2.3777%" y="415.50">openmls::framing::plaintext::MlsPlaintext::sign_from_member</text></g><g><title>openmls::framing::plaintext::MlsPlaintextTbs::sign (31 samples, 65.96%)</title><rect x="2.1277%" y="389" width="65.9574%" height="15" fill="rgb(253,56,35)"/><text x="2.3777%" y="399.50">openmls::framing::plaintext::MlsPlaintextTbs::sign</text></g><g><title>openmls::credentials::CredentialBundle::sign (30 samples, 63.83%)</title><rect x="4.2553%" y="373" width="63.8298%" height="15" fill="rgb(210,149,44)"/><text x="4.5053%" y="383.50">openmls::credentials::CredentialBundle::sign</text></g><g><title>openmls::ciphersuite::SignaturePrivateKey::sign (30 samples, 63.83%)</title><rect x="4.2553%" y="357" width="63.8298%" height="15" fill="rgb(240,135,12)"/><text x="4.5053%" y="367.50">openmls::ciphersuite::SignaturePrivateKey::sign</text></g><g><title>evercrypt::signature::sign (30 samples, 63.83%)</title><rect x="4.2553%" y="341" width="63.8298%" height="15" fill="rgb(251,24,50)"/><text x="4.5053%" y="351.50">evercrypt::signature::sign</text></g><g><title>evercrypt::ed25519::eddsa_sign (30 samples, 63.83%)</title><rect x="4.2553%" y="325" width="63.8298%" height="15" fill="rgb(243,200,47)"/><text x="4.5053%" y="335.50">evercrypt::ed25519::eddsa_sign</text></g><g><title>Hacl_Ed25519_sign (30 samples, 63.83%)</title><rect x="4.2553%" y="309" width="63.8298%" height="15" fill="rgb(224,166,26)"/><text x="4.5053%" y="319.50">Hacl_Ed25519_sign</text></g><g><title>sign_step_3 (14 samples, 29.79%)</title><rect x="38.2979%" y="293" width="29.7872%" height="15" fill="rgb(233,0,47)"/><text x="38.5479%" y="303.50">sign_step_3</text></g><g><title>point_mul_g_compress (14 samples, 29.79%)</title><rect x="38.2979%" y="277" width="29.7872%" height="15" fill="rgb(253,80,5)"/><text x="38.5479%" y="287.50">point_mul_g_compress</text></g><g><title>point_mul_g (14 samples, 29.79%)</title><rect x="38.2979%" y="261" width="29.7872%" height="15" fill="rgb(214,133,25)"/><text x="38.5479%" y="271.50">point_mul_g</text></g><g><title>Hacl_Impl_Ed25519_Ladder_point_mul (14 samples, 29.79%)</title><rect x="38.2979%" y="245" width="29.7872%" height="15" fill="rgb(209,27,14)"/><text x="38.5479%" y="255.50">Hacl_Impl_Ed25519_Ladder_point_mul</text></g><g><title>point_double (2 samples, 4.26%)</title><rect x="63.8298%" y="229" width="4.2553%" height="15" fill="rgb(219,102,51)"/><text x="64.0798%" y="239.50">point..</text></g><g><title>fsquare (2 samples, 4.26%)</title><rect x="63.8298%" y="213" width="4.2553%" height="15" fill="rgb(237,18,16)"/><text x="64.0798%" y="223.50">fsqua..</text></g><g><title>Hacl_Impl_Curve25519_Field51_fsqr (2 samples, 4.26%)</title><rect x="63.8298%" y="197" width="4.2553%" height="15" fill="rgb(241,85,17)"/><text x="64.0798%" y="207.50">Hacl_..</text></g><g><title>hpke_rs::Hpke::key_schedule_context (1 samples, 2.13%)</title><rect x="68.0851%" y="197" width="2.1277%" height="15" fill="rgb(236,90,42)"/><text x="68.3351%" y="207.50">h..</text></g><g><title>hpke_rs::kdf::Kdf::labeled_extract (1 samples, 2.13%)</title><rect x="68.0851%" y="181" width="2.1277%" height="15" fill="rgb(249,57,21)"/><text x="68.3351%" y="191.50">h..</text></g><g><title>&lt;hpke_rs::hkdf::HkdfSha256 as hpke_rs::kdf::KdfTrait&gt;::extract (1 samples, 2.13%)</title><rect x="68.0851%" y="165" width="2.1277%" height="15" fill="rgb(243,12,36)"/><text x="68.3351%" y="175.50">&lt;..</text></g><g><title>evercrypt::hkdf::extract (1 samples, 2.13%)</title><rect x="68.0851%" y="149" width="2.1277%" height="15" fill="rgb(253,128,47)"/><text x="68.3351%" y="159.50">e..</text></g><g><title>EverCrypt_HMAC_compute_sha2_256 (1 samples, 2.13%)</title><rect x="68.0851%" y="133" width="2.1277%" height="15" fill="rgb(207,33,20)"/><text x="68.3351%" y="143.50">E..</text></g><g><title>Hacl_Hash_SHA2_update_multi_256 (1 samples, 2.13%)</title><rect x="68.0851%" y="117" width="2.1277%" height="15" fill="rgb(233,215,35)"/><text x="68.3351%" y="127.50">H..</text></g><g><title>Hacl_Hash_Core_SHA2_update_224 (1 samples, 2.13%)</title><rect x="68.0851%" y="101" width="2.1277%" height="15" fill="rgb(249,188,52)"/><text x="68.3351%" y="111.50">H..</text></g><g><title>hpke_rs::Hpke::key_schedule (2 samples, 4.26%)</title><rect x="68.0851%" y="213" width="4.2553%" height="15" fill="rgb(225,12,32)"/><text x="68.3351%" y="223.50">hpke_..</text></g><g><title>hpke_rs::kdf::Kdf::labeled_expand (1 samples, 2.13%)</title><rect x="70.2128%" y="197" width="2.1277%" height="15" fill="rgb(247,98,14)"/><text x="70.4628%" y="207.50">h..</text></g><g><title>&lt;hpke_rs::hkdf::HkdfSha256 as hpke_rs::kdf::KdfTrait&gt;::expand (1 samples, 2.13%)</title><rect x="70.2128%" y="181" width="2.1277%" height="15" fill="rgb(247,219,48)"/><text x="70.4628%" y="191.50">&lt;..</text></g><g><title>evercrypt::hkdf::expand (1 samples, 2.13%)</title><rect x="70.2128%" y="165" width="2.1277%" height="15" fill="rgb(253,60,48)"/><text x="70.4628%" y="175.50">e..</text></g><g><title>EverCrypt_HKDF_expand_sha2_256 (1 samples, 2.13%)</title><rect x="70.2128%" y="149" width="2.1277%" height="15" fill="rgb(245,15,52)"/><text x="70.4628%" y="159.50">E..</text></g><g><title>EverCrypt_HMAC_compute_sha2_256 (1 samples, 2.13%)</title><rect x="70.2128%" y="133" width="2.1277%" height="15" fill="rgb(220,133,28)"/><text x="70.4628%" y="143.50">E..</text></g><g><title>EverCrypt_Hash_update_last_256 (1 samples, 2.13%)</title><rect x="70.2128%" y="117" width="2.1277%" height="15" fill="rgb(217,180,4)"/><text x="70.4628%" y="127.50">E..</text></g><g><title>Hacl_Hash_SHA2_update_multi_256 (1 samples, 2.13%)</title><rect x="70.2128%" y="101" width="2.1277%" height="15" fill="rgb(251,24,1)"/><text x="70.4628%" y="111.50">H..</text></g><g><title>Hacl_Hash_Core_SHA2_update_224 (1 samples, 2.13%)</title><rect x="70.2128%" y="85" width="2.1277%" height="15" fill="rgb(212,185,49)"/><text x="70.4628%" y="95.50">H..</text></g><g><title>hpke_rs::dh_kem::DhKem::dh_base (4 samples, 8.51%)</title><rect x="72.3404%" y="165" width="8.5106%" height="15" fill="rgb(215,175,22)"/><text x="72.5904%" y="175.50">hpke_rs::dh_..</text></g><g><title>evercrypt::ecdh::derive_base (4 samples, 8.51%)</title><rect x="72.3404%" y="149" width="8.5106%" height="15" fill="rgb(250,205,14)"/><text x="72.5904%" y="159.50">evercrypt::e..</text></g><g><title>evercrypt::x25519::dh_base (4 samples, 8.51%)</title><rect x="72.3404%" y="133" width="8.5106%" height="15" fill="rgb(225,211,22)"/><text x="72.5904%" y="143.50">evercrypt::x..</text></g><g><title>Hacl_Curve25519_51_secret_to_public (4 samples, 8.51%)</title><rect x="72.3404%" y="117" width="8.5106%" height="15" fill="rgb(251,179,42)"/><text x="72.5904%" y="127.50">Hacl_Curve25..</text></g><g><title>Hacl_Curve25519_51_scalarmult (4 samples, 8.51%)</title><rect x="72.3404%" y="101" width="8.5106%" height="15" fill="rgb(208,216,51)"/><text x="72.5904%" y="111.50">Hacl_Curve25..</text></g><g><title>montgomery_ladder (4 samples, 8.51%)</title><rect x="72.3404%" y="85" width="8.5106%" height="15" fill="rgb(235,36,11)"/><text x="72.5904%" y="95.50">montgomery_l..</text></g><g><title>point_add_and_double (4 samples, 8.51%)</title><rect x="72.3404%" y="69" width="8.5106%" height="15" fill="rgb(213,189,28)"/><text x="72.5904%" y="79.50">point_add_an..</text></g><g><title>fsqr20 (4 samples, 8.51%)</title><rect x="72.3404%" y="53" width="8.5106%" height="15" fill="rgb(227,203,42)"/><text x="72.5904%" y="63.50">fsqr20</text></g><g><title>FStar_UInt128_add (4 samples, 8.51%)</title><rect x="72.3404%" y="37" width="8.5106%" height="15" fill="rgb(244,72,36)"/><text x="72.5904%" y="47.50">FStar_UInt12..</text></g><g><title>&lt;hpke_rs::dh_kem::DhKem as hpke_rs::kem::KemTrait&gt;::derive_key_pair (5 samples, 10.64%)</title><rect x="72.3404%" y="181" width="10.6383%" height="15" fill="rgb(213,53,17)"/><text x="72.5904%" y="191.50">&lt;hpke_rs::dh_kem..</text></g><g><title>hpke_rs::kdf::Kdf::labeled_extract (1 samples, 2.13%)</title><rect x="80.8511%" y="165" width="2.1277%" height="15" fill="rgb(207,167,3)"/><text x="81.1011%" y="175.50">h..</text></g><g><title>&lt;hpke_rs::hkdf::HkdfSha256 as hpke_rs::kdf::KdfTrait&gt;::extract (1 samples, 2.13%)</title><rect x="80.8511%" y="149" width="2.1277%" height="15" fill="rgb(216,98,30)"/><text x="81.1011%" y="159.50">&lt;..</text></g><g><title>evercrypt::hkdf::extract (1 samples, 2.13%)</title><rect x="80.8511%" y="133" width="2.1277%" height="15" fill="rgb(236,123,15)"/><text x="81.1011%" y="143.50">e..</text></g><g><title>EverCrypt_HMAC_compute_sha2_256 (1 samples, 2.13%)</title><rect x="80.8511%" y="117" width="2.1277%" height="15" fill="rgb(248,81,50)"/><text x="81.1011%" y="127.50">E..</text></g><g><title>Hacl_Hash_SHA2_update_multi_256 (1 samples, 2.13%)</title><rect x="80.8511%" y="101" width="2.1277%" height="15" fill="rgb(214,120,4)"/><text x="81.1011%" y="111.50">H..</text></g><g><title>Hacl_Hash_Core_SHA2_update_224 (1 samples, 2.13%)</title><rect x="80.8511%" y="85" width="2.1277%" height="15" fill="rgb(208,179,34)"/><text x="81.1011%" y="95.50">H..</text></g><g><title>hpke_rs::dh_kem::DhKem::dh (5 samples, 10.64%)</title><rect x="82.9787%" y="181" width="10.6383%" height="15" fill="rgb(227,140,7)"/><text x="83.2287%" y="191.50">hpke_rs::dh_kem:..</text></g><g><title>evercrypt::ecdh::derive (5 samples, 10.64%)</title><rect x="82.9787%" y="165" width="10.6383%" height="15" fill="rgb(214,22,6)"/><text x="83.2287%" y="175.50">evercrypt::ecdh:..</text></g><g><title>evercrypt::x25519::dh (5 samples, 10.64%)</title><rect x="82.9787%" y="149" width="10.6383%" height="15" fill="rgb(207,137,27)"/><text x="83.2287%" y="159.50">evercrypt::x2551..</text></g><g><title>Hacl_Curve25519_51_ecdh (5 samples, 10.64%)</title><rect x="82.9787%" y="133" width="10.6383%" height="15" fill="rgb(210,8,46)"/><text x="83.2287%" y="143.50">Hacl_Curve25519_..</text></g><g><title>Hacl_Curve25519_51_scalarmult (5 samples, 10.64%)</title><rect x="82.9787%" y="117" width="10.6383%" height="15" fill="rgb(240,16,54)"/><text x="83.2287%" y="127.50">Hacl_Curve25519_..</text></g><g><title>montgomery_ladder (5 samples, 10.64%)</title><rect x="82.9787%" y="101" width="10.6383%" height="15" fill="rgb(211,209,29)"/><text x="83.2287%" y="111.50">montgomery_ladder</text></g><g><title>point_add_and_double (5 samples, 10.64%)</title><rect x="82.9787%" y="85" width="10.6383%" height="15" fill="rgb(226,228,24)"/><text x="83.2287%" y="95.50">point_add_and_do..</text></g><g><title>fmul20 (5 samples, 10.64%)</title><rect x="82.9787%" y="69" width="10.6383%" height="15" fill="rgb(222,84,9)"/><text x="83.2287%" y="79.50">fmul20</text></g><g><title>FStar_UInt128_add (5 samples, 10.64%)</title><rect x="82.9787%" y="53" width="10.6383%" height="15" fill="rgb(234,203,30)"/><text x="83.2287%" y="63.50">FStar_UInt128_add</text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 27.66%)</title><rect x="68.0851%" y="421" width="27.6596%" height="15" fill="rgb(238,109,14)"/><text x="68.3351%" y="431.50">core::iter::traits::iterator::Iterator::coll..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (13 samples, 27.66%)</title><rect x="68.0851%" y="405" width="27.6596%" height="15" fill="rgb(233,206,34)"/><text x="68.3351%" y="415.50">&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 27.66%)</title><rect x="68.0851%" y="389" width="27.6596%" height="15" fill="rgb(220,167,47)"/><text x="68.3351%" y="399.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (13 samples, 27.66%)</title><rect x="68.0851%" y="373" width="27.6596%" height="15" fill="rgb(238,105,10)"/><text x="68.3351%" y="383.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (13 samples, 27.66%)</title><rect x="68.0851%" y="357" width="27.6596%" height="15" fill="rgb(213,227,17)"/><text x="68.3351%" y="367.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_ex..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (13 samples, 27.66%)</title><rect x="68.0851%" y="341" width="27.6596%" height="15" fill="rgb(217,132,38)"/><text x="68.3351%" y="351.50">core::iter::traits::iterator::Iterator::for_..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 27.66%)</title><rect x="68.0851%" y="325" width="27.6596%" height="15" fill="rgb(242,146,4)"/><text x="68.3351%" y="335.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (13 samples, 27.66%)</title><rect x="68.0851%" y="309" width="27.6596%" height="15" fill="rgb(212,61,9)"/><text x="68.3351%" y="319.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (13 samples, 27.66%)</title><rect x="68.0851%" y="293" width="27.6596%" height="15" fill="rgb(247,126,22)"/><text x="68.3351%" y="303.50">core::iter::adapters::map::map_fold::{{closu..</text></g><g><title>openmls::group::mls_group::create_commit::&lt;impl openmls::group::mls_group::MlsGroup&gt;::create_commit_internal::{{closure}} (13 samples, 27.66%)</title><rect x="68.0851%" y="277" width="27.6596%" height="15" fill="rgb(220,196,2)"/><text x="68.3351%" y="287.50">openmls::group::mls_group::create_commit::&lt;i..</text></g><g><title>openmls::ciphersuite::Ciphersuite::hpke_seal (13 samples, 27.66%)</title><rect x="68.0851%" y="261" width="27.6596%" height="15" fill="rgb(208,46,4)"/><text x="68.3351%" y="271.50">openmls::ciphersuite::Ciphersuite::hpke_seal</text></g><g><title>hpke_rs::Hpke::seal (13 samples, 27.66%)</title><rect x="68.0851%" y="245" width="27.6596%" height="15" fill="rgb(252,104,46)"/><text x="68.3351%" y="255.50">hpke_rs::Hpke::seal</text></g><g><title>hpke_rs::Hpke::setup_sender (13 samples, 27.66%)</title><rect x="68.0851%" y="229" width="27.6596%" height="15" fill="rgb(237,152,48)"/><text x="68.3351%" y="239.50">hpke_rs::Hpke::setup_sender</text></g><g><title>hpke_rs::kem::Kem::encaps (11 samples, 23.40%)</title><rect x="72.3404%" y="213" width="23.4043%" height="15" fill="rgb(221,59,37)"/><text x="72.5904%" y="223.50">hpke_rs::kem::Kem::encaps</text></g><g><title>&lt;hpke_rs::dh_kem::DhKem as hpke_rs::kem::KemTrait&gt;::encaps (11 samples, 23.40%)</title><rect x="72.3404%" y="197" width="23.4043%" height="15" fill="rgb(209,202,51)"/><text x="72.5904%" y="207.50">&lt;hpke_rs::dh_kem::DhKem as hpke_rs::k..</text></g><g><title>hpke_rs::dh_kem::DhKem::extract_and_expand (1 samples, 2.13%)</title><rect x="93.6170%" y="181" width="2.1277%" height="15" fill="rgb(228,81,30)"/><text x="93.8670%" y="191.50">h..</text></g><g><title>hpke_rs::kdf::Kdf::labeled_expand (1 samples, 2.13%)</title><rect x="93.6170%" y="165" width="2.1277%" height="15" fill="rgb(227,42,39)"/><text x="93.8670%" y="175.50">h..</text></g><g><title>&lt;hpke_rs::hkdf::HkdfSha256 as hpke_rs::kdf::KdfTrait&gt;::expand (1 samples, 2.13%)</title><rect x="93.6170%" y="149" width="2.1277%" height="15" fill="rgb(221,26,2)"/><text x="93.8670%" y="159.50">&lt;..</text></g><g><title>evercrypt::hkdf::expand (1 samples, 2.13%)</title><rect x="93.6170%" y="133" width="2.1277%" height="15" fill="rgb(254,61,31)"/><text x="93.8670%" y="143.50">e..</text></g><g><title>EverCrypt_HKDF_expand_sha2_256 (1 samples, 2.13%)</title><rect x="93.6170%" y="117" width="2.1277%" height="15" fill="rgb(222,173,38)"/><text x="93.8670%" y="127.50">E..</text></g><g><title>EverCrypt_HMAC_compute_sha2_256 (1 samples, 2.13%)</title><rect x="93.6170%" y="101" width="2.1277%" height="15" fill="rgb(218,50,12)"/><text x="93.8670%" y="111.50">E..</text></g><g><title>EverCrypt_Hash_update_last_256 (1 samples, 2.13%)</title><rect x="93.6170%" y="85" width="2.1277%" height="15" fill="rgb(223,88,40)"/><text x="93.8670%" y="95.50">E..</text></g><g><title>Hacl_Hash_SHA2_update_multi_256 (1 samples, 2.13%)</title><rect x="93.6170%" y="69" width="2.1277%" height="15" fill="rgb(237,54,19)"/><text x="93.8670%" y="79.50">H..</text></g><g><title>Hacl_Hash_Core_SHA2_update_224 (1 samples, 2.13%)</title><rect x="93.6170%" y="53" width="2.1277%" height="15" fill="rgb(251,129,25)"/><text x="93.8670%" y="63.50">H..</text></g><g><title>openmls::group::mls_group::create_commit::PlaintextSecret::new (1 samples, 2.13%)</title><rect x="95.7447%" y="421" width="2.1277%" height="15" fill="rgb(238,97,19)"/><text x="95.9947%" y="431.50">o..</text></g><g><title>openmls::key_packages::KeyPackage::hash (1 samples, 2.13%)</title><rect x="95.7447%" y="405" width="2.1277%" height="15" fill="rgb(240,169,18)"/><text x="95.9947%" y="415.50">o..</text></g><g><title>openmls::ciphersuite::Ciphersuite::hash (1 samples, 2.13%)</title><rect x="95.7447%" y="389" width="2.1277%" height="15" fill="rgb(230,187,49)"/><text x="95.9947%" y="399.50">o..</text></g><g><title>evercrypt::digest::hash (1 samples, 2.13%)</title><rect x="95.7447%" y="373" width="2.1277%" height="15" fill="rgb(209,44,26)"/><text x="95.9947%" y="383.50">e..</text></g><g><title>EverCrypt_Hash_hash_256 (1 samples, 2.13%)</title><rect x="95.7447%" y="357" width="2.1277%" height="15" fill="rgb(244,0,6)"/><text x="95.9947%" y="367.50">E..</text></g><g><title>EverCrypt_Hash_update_last_256 (1 samples, 2.13%)</title><rect x="95.7447%" y="341" width="2.1277%" height="15" fill="rgb(248,18,21)"/><text x="95.9947%" y="351.50">E..</text></g><g><title>Hacl_Hash_SHA2_update_multi_256 (1 samples, 2.13%)</title><rect x="95.7447%" y="325" width="2.1277%" height="15" fill="rgb(245,180,19)"/><text x="95.9947%" y="335.50">H..</text></g><g><title>Hacl_Hash_Core_SHA2_update_224 (1 samples, 2.13%)</title><rect x="95.7447%" y="309" width="2.1277%" height="15" fill="rgb(252,118,36)"/><text x="95.9947%" y="319.50">H..</text></g><g><title>all (47 samples, 100%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(210,224,19)"/><text x="0.2500%" y="751.50"></text></g><g><title>group-f2b402fe5 (47 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(218,30,24)"/><text x="0.2500%" y="735.50">group-f2b402fe5</text></g><g><title>_start (47 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(219,75,50)"/><text x="0.2500%" y="719.50">_start</text></g><g><title>__libc_start_main (47 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(234,72,50)"/><text x="0.2500%" y="703.50">__libc_start_main</text></g><g><title>main (47 samples, 100.00%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(219,100,48)"/><text x="0.2500%" y="687.50">main</text></g><g><title>std::rt::lang_start_internal (47 samples, 100.00%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(253,5,41)"/><text x="0.2500%" y="671.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (47 samples, 100.00%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(247,181,11)"/><text x="0.2500%" y="655.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (47 samples, 100.00%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(222,223,25)"/><text x="0.2500%" y="639.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (47 samples, 100.00%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(214,198,28)"/><text x="0.2500%" y="623.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (47 samples, 100.00%)</title><rect x="0.0000%" y="597" width="100.0000%" height="15" fill="rgb(230,46,43)"/><text x="0.2500%" y="607.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (47 samples, 100.00%)</title><rect x="0.0000%" y="581" width="100.0000%" height="15" fill="rgb(233,65,53)"/><text x="0.2500%" y="591.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (47 samples, 100.00%)</title><rect x="0.0000%" y="565" width="100.0000%" height="15" fill="rgb(221,121,27)"/><text x="0.2500%" y="575.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (47 samples, 100.00%)</title><rect x="0.0000%" y="549" width="100.0000%" height="15" fill="rgb(247,70,47)"/><text x="0.2500%" y="559.50">core::ops::function::FnOnce::call_once</text></g><g><title>group::main (47 samples, 100.00%)</title><rect x="0.0000%" y="533" width="100.0000%" height="15" fill="rgb(228,85,35)"/><text x="0.2500%" y="543.50">group::main</text></g><g><title>group::bench_main (47 samples, 100.00%)</title><rect x="0.0000%" y="517" width="100.0000%" height="15" fill="rgb(209,50,18)"/><text x="0.2500%" y="527.50">group::bench_main</text></g><g><title>group::time (47 samples, 100.00%)</title><rect x="0.0000%" y="501" width="100.0000%" height="15" fill="rgb(250,19,35)"/><text x="0.2500%" y="511.50">group::time</text></g><g><title>group::bench_main::{{closure}} (47 samples, 100.00%)</title><rect x="0.0000%" y="485" width="100.0000%" height="15" fill="rgb(253,107,29)"/><text x="0.2500%" y="495.50">group::bench_main::{{closure}}</text></g><g><title>group::setup_group (47 samples, 100.00%)</title><rect x="0.0000%" y="469" width="100.0000%" height="15" fill="rgb(252,179,29)"/><text x="0.2500%" y="479.50">group::setup_group</text></g><g><title>openmls::group::mls_group::MlsGroup::create_commit (15 samples, 31.91%)</title><rect x="68.0851%" y="453" width="31.9149%" height="15" fill="rgb(238,194,6)"/><text x="68.3351%" y="463.50">openmls::group::mls_group::MlsGroup::create_commit</text></g><g><title>openmls::group::mls_group::create_commit::&lt;impl openmls::group::mls_group::MlsGroup&gt;::create_commit_internal (15 samples, 31.91%)</title><rect x="68.0851%" y="437" width="31.9149%" height="15" fill="rgb(238,164,29)"/><text x="68.3351%" y="447.50">openmls::group::mls_group::create_commit::&lt;impl open..</text></g><g><title>openmls::messages::proposals::ProposalQueue::filter_proposals (1 samples, 2.13%)</title><rect x="97.8723%" y="421" width="2.1277%" height="15" fill="rgb(224,25,9)"/><text x="98.1223%" y="431.50">o..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 2.13%)</title><rect x="97.8723%" y="405" width="2.1277%" height="15" fill="rgb(244,153,23)"/><text x="98.1223%" y="415.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 2.13%)</title><rect x="97.8723%" y="389" width="2.1277%" height="15" fill="rgb(212,203,14)"/><text x="98.1223%" y="399.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 2.13%)</title><rect x="97.8723%" y="373" width="2.1277%" height="15" fill="rgb(220,164,20)"/><text x="98.1223%" y="383.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 2.13%)</title><rect x="97.8723%" y="357" width="2.1277%" height="15" fill="rgb(222,203,48)"/><text x="98.1223%" y="367.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 2.13%)</title><rect x="97.8723%" y="341" width="2.1277%" height="15" fill="rgb(215,159,22)"/><text x="98.1223%" y="351.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 2.13%)</title><rect x="97.8723%" y="325" width="2.1277%" height="15" fill="rgb(216,183,47)"/><text x="98.1223%" y="335.50">c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 2.13%)</title><rect x="97.8723%" y="309" width="2.1277%" height="15" fill="rgb(229,195,25)"/><text x="98.1223%" y="319.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 2.13%)</title><rect x="97.8723%" y="293" width="2.1277%" height="15" fill="rgb(224,132,51)"/><text x="98.1223%" y="303.50">c..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 2.13%)</title><rect x="97.8723%" y="277" width="2.1277%" height="15" fill="rgb(240,63,7)"/><text x="98.1223%" y="287.50">c..</text></g><g><title>openmls::messages::proposals::ProposalQueue::filter_proposals::{{closure}} (1 samples, 2.13%)</title><rect x="97.8723%" y="261" width="2.1277%" height="15" fill="rgb(249,182,41)"/><text x="98.1223%" y="271.50">o..</text></g><g><title>openmls::messages::proposals::QueuedProposal::from_mls_plaintext (1 samples, 2.13%)</title><rect x="97.8723%" y="245" width="2.1277%" height="15" fill="rgb(243,47,26)"/><text x="98.1223%" y="255.50">o..</text></g><g><title>openmls::messages::proposals::ProposalReference::from_proposal (1 samples, 2.13%)</title><rect x="97.8723%" y="229" width="2.1277%" height="15" fill="rgb(233,48,2)"/><text x="98.1223%" y="239.50">o..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 2.13%)</title><rect x="97.8723%" y="213" width="2.1277%" height="15" fill="rgb(244,165,34)"/><text x="98.1223%" y="223.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 2.13%)</title><rect x="97.8723%" y="197" width="2.1277%" height="15" fill="rgb(207,89,7)"/><text x="98.1223%" y="207.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 2.13%)</title><rect x="97.8723%" y="181" width="2.1277%" height="15" fill="rgb(244,117,36)"/><text x="98.1223%" y="191.50">&lt;..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 2.13%)</title><rect x="97.8723%" y="165" width="2.1277%" height="15" fill="rgb(226,144,34)"/><text x="98.1223%" y="175.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (1 samples, 2.13%)</title><rect x="97.8723%" y="149" width="2.1277%" height="15" fill="rgb(213,23,19)"/><text x="98.1223%" y="159.50">a..</text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 2.13%)</title><rect x="97.8723%" y="133" width="2.1277%" height="15" fill="rgb(217,75,12)"/><text x="98.1223%" y="143.50">c..</text></g><g><title>_int_free (1 samples, 2.13%)</title><rect x="97.8723%" y="117" width="2.1277%" height="15" fill="rgb(224,159,17)"/><text x="98.1223%" y="127.50">_..</text></g><g><title>malloc_consolidate (1 samples, 2.13%)</title><rect x="97.8723%" y="101" width="2.1277%" height="15" fill="rgb(217,118,1)"/><text x="98.1223%" y="111.50">m..</text></g></svg></svg>