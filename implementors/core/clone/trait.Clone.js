(function() {var implementors = {};
implementors["openmls"] = [{"text":"impl Clone for CiphersuiteName","synthetic":false,"types":[]},{"text":"impl Clone for HpkeCiphertext","synthetic":false,"types":[]},{"text":"impl Clone for Secret","synthetic":false,"types":[]},{"text":"impl Clone for ReuseGuard","synthetic":false,"types":[]},{"text":"impl Clone for AeadNonce","synthetic":false,"types":[]},{"text":"impl Clone for Signature","synthetic":false,"types":[]},{"text":"impl Clone for SignaturePrivateKey","synthetic":false,"types":[]},{"text":"impl Clone for SignaturePublicKey","synthetic":false,"types":[]},{"text":"impl Clone for SignatureKeypair","synthetic":false,"types":[]},{"text":"impl Clone for Ciphersuite","synthetic":false,"types":[]},{"text":"impl Clone for ProtocolVersion","synthetic":false,"types":[]},{"text":"impl Clone for CredentialType","synthetic":false,"types":[]},{"text":"impl Clone for Certificate","synthetic":false,"types":[]},{"text":"impl Clone for MLSCredentialType","synthetic":false,"types":[]},{"text":"impl Clone for Credential","synthetic":false,"types":[]},{"text":"impl Clone for BasicCredential","synthetic":false,"types":[]},{"text":"impl Clone for CapabilitiesExtension","synthetic":false,"types":[]},{"text":"impl Clone for KeyIDExtension","synthetic":false,"types":[]},{"text":"impl Clone for LifetimeExtension","synthetic":false,"types":[]},{"text":"impl Clone for ParentHashExtension","synthetic":false,"types":[]},{"text":"impl Clone for RatchetTreeExtension","synthetic":false,"types":[]},{"text":"impl Clone for ExtensionError","synthetic":false,"types":[]},{"text":"impl Clone for ExtensionType","synthetic":false,"types":[]},{"text":"impl Clone for ExtensionStruct","synthetic":false,"types":[]},{"text":"impl Clone for Box&lt;dyn Extension&gt;","synthetic":false,"types":[]},{"text":"impl Clone for SenderType","synthetic":false,"types":[]},{"text":"impl Clone for Sender","synthetic":false,"types":[]},{"text":"impl Clone for MLSPlaintext","synthetic":false,"types":[]},{"text":"impl Clone for MLSCiphertext","synthetic":false,"types":[]},{"text":"impl Clone for ContentType","synthetic":false,"types":[]},{"text":"impl Clone for MLSPlaintextContentType","synthetic":false,"types":[]},{"text":"impl Clone for MLSSenderData","synthetic":false,"types":[]},{"text":"impl Clone for MLSCiphertextSenderDataAAD","synthetic":false,"types":[]},{"text":"impl Clone for MLSCiphertextContent","synthetic":false,"types":[]},{"text":"impl Clone for MLSCiphertextContentAAD","synthetic":false,"types":[]},{"text":"impl Clone for GroupId","synthetic":false,"types":[]},{"text":"impl Clone for GroupEpoch","synthetic":false,"types":[]},{"text":"impl Clone for GroupContext","synthetic":false,"types":[]},{"text":"impl Clone for GroupConfig","synthetic":false,"types":[]},{"text":"impl Clone for KeyPackage","synthetic":false,"types":[]},{"text":"impl Clone for ProposalType","synthetic":false,"types":[]},{"text":"impl Clone for Proposal","synthetic":false,"types":[]},{"text":"impl Clone for ProposalID","synthetic":false,"types":[]},{"text":"impl Clone for QueuedProposal","synthetic":false,"types":[]},{"text":"impl Clone for AddProposal","synthetic":false,"types":[]},{"text":"impl Clone for UpdateProposal","synthetic":false,"types":[]},{"text":"impl Clone for RemoveProposal","synthetic":false,"types":[]},{"text":"impl Clone for Commit","synthetic":false,"types":[]},{"text":"impl Clone for ConfirmationTag","synthetic":false,"types":[]},{"text":"impl Clone for EncryptedGroupSecrets","synthetic":false,"types":[]},{"text":"impl Clone for Welcome","synthetic":false,"types":[]},{"text":"impl Clone for EpochSecrets","synthetic":false,"types":[]},{"text":"impl Clone for NodeIndex","synthetic":false,"types":[]},{"text":"impl Clone for LeafIndex","synthetic":false,"types":[]},{"text":"impl Clone for NodeType","synthetic":false,"types":[]},{"text":"impl Clone for Node","synthetic":false,"types":[]},{"text":"impl Clone for ParentNode","synthetic":false,"types":[]},{"text":"impl Clone for SecretType","synthetic":false,"types":[]},{"text":"impl Clone for SecretTreeNode","synthetic":false,"types":[]},{"text":"impl Clone for SenderRatchet","synthetic":false,"types":[]},{"text":"impl Clone for UpdatePathNode","synthetic":false,"types":[]},{"text":"impl Clone for UpdatePath","synthetic":false,"types":[]},{"text":"impl Clone for TreeError","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()