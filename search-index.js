var searchIndex = JSON.parse('{\
"openmls":{"doc":"OpenMLSHigh-level APISee ManagedGroup","i":[[0,"utils","openmls","",null,null],[5,"randombytes","openmls::utils","",null,[[],["vec",3]]],[5,"random_u32","","",null,[[]]],[5,"zero","","",null,[[],["vec",3]]],[5,"_bytes_to_hex","","",null,[[],["string",3]]],[5,"_print_tree","","",null,[[["ratchettree",3]]]],[0,"ciphersuite","openmls","Ciphersuites for MLS",null,null],[3,"HpkeCiphertext","openmls::ciphersuite","7.7. Update Paths",null,null],[12,"kem_output","","",0,null],[12,"ciphertext","","",0,null],[3,"KdfLabel","","`KdfLabel` is later serialized and used in the `label`…",null,null],[12,"length","","",1,null],[12,"label","","",1,null],[12,"context","","",1,null],[3,"Secret","","A struct to contain secrets. This is to provide better…",null,null],[12,"value","","",2,null],[3,"AeadKey","","",null,null],[12,"aead_mode","","",3,null],[12,"value","","",3,null],[3,"ReuseGuard","","",null,null],[12,"value","","",4,null],[3,"AeadNonce","","",null,null],[12,"value","","",5,null],[3,"Signature","","",null,null],[12,"value","","",6,null],[3,"SignaturePrivateKey","","",null,null],[12,"ciphersuite","","",7,null],[12,"value","","",7,null],[3,"SignaturePublicKey","","",null,null],[12,"ciphersuite","","",8,null],[12,"value","","",8,null],[3,"SignatureKeypair","","",null,null],[12,"ciphersuite","","",9,null],[12,"private_key","","",9,null],[12,"public_key","","",9,null],[3,"Ciphersuite","","",null,null],[12,"name","","",10,null],[12,"signature","","",10,null],[12,"hpke","","",10,null],[12,"aead","","",10,null],[12,"hash","","",10,null],[12,"hmac","","",10,null],[4,"CiphersuiteName","","",null,null],[13,"MLS10_128_DHKEMX25519_AES128GCM_SHA256_Ed25519","","",11,null],[13,"MLS10_128_DHKEMP256_AES128GCM_SHA256_P256","","",11,null],[13,"MLS10_128_DHKEMX25519_CHACHA20POLY1305_SHA256_Ed25519","","",11,null],[13,"MLS10_256_DHKEMX448_AES256GCM_SHA512_Ed448","","",11,null],[13,"MLS10_256_DHKEMP521_AES256GCM_SHA512_P521","","",11,null],[13,"MLS10_256_DHKEMX448_CHACHA20POLY1305_SHA512_Ed448","","",11,null],[0,"ciphersuites","","",null,null],[5,"get_hash_from_suite","openmls::ciphersuite::ciphersuites","",null,[[["ciphersuitename",4]],["digestmode",4]]],[5,"get_aead_from_suite","","",null,[[["ciphersuitename",4]],["aeadmode",4]]],[5,"get_signature_from_suite","","",null,[[["ciphersuitename",4]],[["signaturemode",4],["configerror",4],["result",4]]]],[5,"get_kem_from_suite","","",null,[[["ciphersuitename",4]],[["hpkekemmode",4],["configerror",4],["result",4]]]],[5,"get_kdf_from_suite","","",null,[[["ciphersuitename",4]],["hmacmode",4]]],[5,"get_hpke_kdf_from_suite","","",null,[[["ciphersuitename",4]],["hpkekdfmode",4]]],[5,"get_hpke_aead_from_suite","","",null,[[["ciphersuitename",4]],["hpkeaeadmode",4]]],[0,"codec","openmls::ciphersuite","Codec implementations for the ciphersuites. Provides…",null,null],[11,"serialize","","",1,[[],["vec",3]]],[0,"errors","","Crypto errorsThis file defines a set of errors thrown by…",null,null],[4,"HKDFError","openmls::ciphersuite::errors","",null,null],[13,"InvalidLength","","",12,null],[4,"CryptoError","","",null,null],[13,"CryptoLibraryError","","",13,null],[0,"signable","openmls::ciphersuite","",null,null],[8,"Signable","openmls::ciphersuite::signable","The `Signable` trait is implemented by all struct that are…",null,null],[10,"unsigned_payload","","",14,[[],[["vec",3],["codecerror",4],["result",4]]]],[11,"sign","","Sign the payload with the given `id`.",14,[[["credentialbundle",3]],["signature",3]]],[11,"verify","","Verifies the payload against the given `credential` and…",14,[[["credential",3],["signature",3]]]],[7,"EMPTY_SECRET","openmls::ciphersuite","",null,null],[17,"NONCE_BYTES","","",null,null],[17,"REUSE_GUARD_BYTES","","",null,null],[17,"TAG_BYTES","","",null,null],[11,"serialized_label","","",1,[[],["vec",3]]],[11,"to_vec","","",2,[[],["vec",3]]],[11,"random","","Randomly sample a fresh `Secret`.",2,[[]]],[11,"kdf_expand_label","","Expand a `Secret` to a new `Secret` of length `length`…",2,[[["ciphersuite",3]],["secret",3]]],[11,"derive_secret","","Derive a new `Secret` from the this one by expanding it…",2,[[["ciphersuite",3]],["secret",3]]],[11,"from_random","","Samples a fresh reuse guard uniformly at random.",4,[[]]],[11,"new","","Create a new ciphersuite from the given `name`.",10,[[["ciphersuitename",4]],[["result",4],["configerror",4]]]],[11,"name","","Get the name of this ciphersuite.",10,[[],["ciphersuitename",4]]],[11,"new_signature_keypair","","Create a new signature key pair and return it.",10,[[],[["signaturekeypair",3],["result",4],["cryptoerror",4]]]],[11,"hash","","Hash `payload` and return the digest.",10,[[],["vec",3]]],[11,"hash_length","","Get the length of the used hash algorithm.",10,[[]]],[11,"hkdf_extract","","HKDF extract.",10,[[["option",4],["secret",3]],["secret",3]]],[11,"hkdf_expand","","HKDF expand",10,[[["secret",3]],[["hkdferror",4],["secret",3],["result",4]]]],[11,"aead_key_length","","Returns the key size of the used AEAD.",10,[[]]],[11,"aead_nonce_length","","Returns the length of the nonce in the AEAD.",10,[[]]],[11,"hpke_seal","","HPKE single-shot encryption of `ptxt` to `pk_r`, using…",10,[[["hpkepublickey",3]],["hpkeciphertext",3]]],[11,"hpke_seal_secret","","HPKE single-shot encryption specifically to seal a Secret…",10,[[["hpkepublickey",3],["secret",3]],["hpkeciphertext",3]]],[11,"hpke_open","","HPKE single-shot decryption of `input` with `sk_r`, using…",10,[[["hpkeprivatekey",3],["hpkeciphertext",3]],["vec",3]]],[11,"derive_hpke_keypair","","Derive a new HPKE keypair from a given Secret.",10,[[["secret",3]],["hpkekeypair",3]]],[11,"from_secret","","Create an `AeadKey` from a `Secret`. TODO: This function…",3,[[["ciphersuite",3],["secret",3]]]],[11,"from_sender_data_secret","","Derive a new AEAD key from a `SenderDataSecret`.",3,[[["ciphersuite",3],["senderdatasecret",3]]]],[11,"from_welcome_secret","","Derive a new AEAD key from a `WelcomeSecret`.",3,[[["ciphersuite",3],["welcomesecret",3]],["aeadkey",3]]],[11,"aead_seal","","Encrypt a payload under the AeadKey given a nonce.",3,[[["aeadnonce",3]],[["vec",3],["aeaderror",4],["result",4]]]],[11,"aead_open","","AEAD decrypt `ciphertext` with `key`, `aad`, and `nonce`.",3,[[["aeadnonce",3]],[["vec",3],["aeaderror",4],["result",4]]]],[11,"from_secret","","Create an `AeadNonce` from a `Secret`. TODO: This function…",5,[[["secret",3]]]],[11,"from_sender_data_secret","","Derive a new AEAD nonce from a `SenderDataSecret`.",5,[[["ciphersuite",3],["senderdatasecret",3]]]],[11,"from_welcome_secret","","Derive a new AEAD key from a `WelcomeSecret`.",5,[[["ciphersuite",3],["welcomesecret",3]]]],[11,"from_random","","Generate a new random nonce.",5,[[]]],[11,"xor_with_reuse_guard","","Xor the first bytes of the nonce with the reuse_guard.",5,[[["reuseguard",3]]]],[11,"new_empty","","",6,[[],["signature",3]]],[11,"sign","","Sign the `payload` byte slice with this signature key.…",9,[[],[["result",4],["signatureerror",4],["signature",3]]]],[11,"verify","","Verify a `Signature` on the `payload` byte slice with the…",9,[[["signature",3]]]],[11,"into_tuple","","Get the private and public key objects",9,[[]]],[11,"new","","Create a new signature public key from raw key bytes.",8,[[["vec",3],["ciphersuitename",4]],[["result",4],["configerror",4]]]],[11,"verify","","Verify a `Signature` on the `payload` byte slice with the…",8,[[["signature",3]]]],[11,"sign","","Sign the `payload` byte slice with this signature key.…",7,[[],[["result",4],["signatureerror",4],["signature",3]]]],[0,"codec","openmls","",null,null],[3,"Cursor","openmls::codec","",null,null],[12,"buffer","","",15,null],[12,"position","","",15,null],[4,"CodecError","","",null,null],[13,"EncodingError","","",16,null],[13,"DecodingError","","",16,null],[13,"Other","","",16,null],[4,"VecSize","","",null,null],[13,"VecU8","","",17,null],[13,"VecU16","","",17,null],[13,"VecU32","","",17,null],[13,"VecU64","","",17,null],[5,"encode_vec","","",null,[[["vecsize",4],["vec",3]],[["result",4],["codecerror",4]]]],[5,"decode_vec","","",null,[[["vecsize",4],["cursor",3]],[["result",4],["codecerror",4],["vec",3]]]],[8,"Codec","","",null,null],[11,"encode","","",18,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",18,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode_detached","","",18,[[],[["vec",3],["result",4],["codecerror",4]]]],[11,"new","","",15,[[],["cursor",3]]],[11,"consume","","",15,[[],[["result",4],["codecerror",4]]]],[11,"sub_cursor","","",15,[[],[["cursor",3],["codecerror",4],["result",4]]]],[11,"is_empty","","",15,[[]]],[11,"has_more","","",15,[[]]],[0,"config","openmls","This config contains all structs, enums and functions to…",null,null],[3,"CONFIG","openmls::config","",null,null],[12,"__private_field","","",19,null],[3,"Constants","","Constants that are used throughout the library.",null,null],[12,"default_key_package_lifetime","","The default lifetime of a key package in seconds.",20,null],[12,"key_package_lifetime_margin","","The amount of time (in seconds) the lifetime of a…",20,null],[3,"PersistentConfig","","The configuration we use for the library (`Config`) is not…",null,null],[12,"protocol_versions","","",21,null],[12,"ciphersuites","","",21,null],[12,"extensions","","",21,null],[12,"constants","","",21,null],[3,"Config","","OpenMLS ConfigurationThis is the global configuration for…",null,null],[12,"protocol_versions","","",22,null],[12,"ciphersuites","","",22,null],[12,"extensions","","",22,null],[12,"constants","","",22,null],[4,"ProtocolVersion","","Protocol VersionKey Packages",null,null],[13,"Reserved","","",23,null],[13,"Mls10","","",23,null],[0,"errors","","Config errorsA `ConfigError` is thrown when either the…",null,null],[4,"ConfigError","openmls::config::errors","",null,null],[13,"InvalidConfig","","Invalid configuration.",24,null],[13,"UnsupportedMlsVersion","","MLS version is not supported by this configuration.",24,null],[13,"UnsupportedCiphersuite","","Ciphersuite is not supported by this configuration.",24,null],[13,"UnsupportedSignatureScheme","","Signature scheme is not supported by this configuration.",24,null],[17,"DEFAULT_KEY_PACKAGE_LIFETIME","openmls::config","This value is used as the default lifetime of…",null,null],[17,"DEFAULT_KEY_PACKAGE_LIFETIME_MARGIN","","This value is used as the default amount of time (in…",null,null],[11,"supported_extensions","","Get a list of the supported extension types.",22,[[]]],[11,"supported_ciphersuites","","Get a list of the supported cipher suites.",22,[[]]],[11,"supported_ciphersuite_names","","Get a list of the supported cipher suites names.",22,[[],[["ciphersuitename",4],["vec",3]]]],[11,"supported_versions","","Get a list of the supported protocol versions.",22,[[]]],[11,"ciphersuite","","Get the ciphersuite of the given name.",22,[[["ciphersuitename",4]],[["result",4],["ciphersuite",3],["configerror",4]]]],[11,"default_key_package_lifetime","","Get the default `KeyPackage` lifetime (in seconds).",22,[[]]],[11,"key_package_lifetime_margin","","Get the margin in which `KeyPackage` lifetimes are already…",22,[[]]],[11,"from","","Convert an integer to the corresponding protocol version.",23,[[],[["result",4],["configerror",4],["protocolversion",4]]]],[11,"is_supported","openmls::ciphersuite","Returns `true` if the ciphersuite is supported in the…",11,[[]]],[0,"creds","openmls","",null,null],[3,"Certificate","openmls::creds","Struct containing an X509 certificate chain, as per Spec.",null,null],[12,"cert_data","","",25,null],[3,"Credential","","Struct containing MLS credential data, where the data…",null,null],[12,"credential_type","","",26,null],[12,"credential","","",26,null],[3,"BasicCredential","","",null,null],[12,"identity","","",27,null],[12,"ciphersuite","","",27,null],[12,"public_key","","",27,null],[3,"CredentialBundle","","This struct contains a credential and the corresponding…",null,null],[12,"credential","","",28,null],[12,"signature_private_key","","",28,null],[4,"CredentialError","","",null,null],[13,"UnknwonConfigError","","",29,null],[13,"UnsupportedCredentialType","","",29,null],[4,"CredentialType","","Enum for Credential Types. We only need this for…",null,null],[13,"Reserved","","",30,null],[13,"Basic","","",30,null],[13,"X509","","",30,null],[4,"MLSCredentialType","","This enum contains the different available credentials.",null,null],[13,"Basic","","",31,null],[13,"X509","","",31,null],[11,"verify","","Verify a signature of a given payload against the public…",26,[[["signature",3]]]],[11,"get_identity","","Get the identity of a given credential.",26,[[],["vec",3]]],[11,"ciphersuite","","Get the ciphersuite associated with the credential.",26,[[],["ciphersuite",3]]],[11,"verify","","",27,[[["signature",3]]]],[11,"new","","Create a new `CredentialBundle` of the given credential…",28,[[["vec",3],["ciphersuitename",4],["credentialtype",4]],[["credentialerror",4],["result",4]]]],[11,"credential","","",28,[[],["credential",3]]],[11,"sign","","Sign a `msg` using the private key of the credential bundle.",28,[[],[["result",4],["signatureerror",4],["signature",3]]]],[0,"extensions","openmls","",null,null],[3,"ExtensionStruct","openmls::extensions","Extension structAn extension has an `ExtensionType` and an…",null,null],[12,"extension_type","","",32,null],[12,"extension_data","","",32,null],[4,"ExtensionType","","Extension typesIANA registrations",null,null],[13,"Reserved","","",33,null],[13,"Capabilities","","",33,null],[13,"Lifetime","","",33,null],[13,"KeyID","","",33,null],[13,"ParentHash","","",33,null],[13,"RatchetTree","","",33,null],[5,"from_bytes","","Build a new extension of the given type from a byte slice.",null,[[["extensiontype",4]],[["extensionerror",4],["result",4],["box",3]]]],[5,"extensions_vec_from_cursor","","Read a list of extensions from a `Cursor` into a vector of…",null,[[["cursor",3]],[["codecerror",4],["result",4],["vec",3]]]],[0,"capabilities_extension","","Capabilities ExtensionKey Package Extension",null,null],[3,"CapabilitiesExtension","openmls::extensions::capabilities_extension","",null,null],[12,"versions","","",34,null],[12,"ciphersuites","","",34,null],[12,"extensions","","",34,null],[11,"new","","Create a new capabilities extension with the given…",34,[[["option",4],["option",4],["option",4]]]],[11,"versions","","Get a reference to the list of versions in this extension.",34,[[]]],[11,"ciphersuites","","Get a reference to the list of cipher suites in this…",34,[[]]],[11,"extensions","","Get a reference to the list of supported extensions.",34,[[]]],[0,"errors","openmls::extensions","Extension errors.An `ExtensionError` is thrown when an…",null,null],[4,"ExtensionError","openmls::extensions::errors","",null,null],[13,"InvalidExtensionType","","Invalid extension type error.",35,null],[13,"DecodingError","","Error when decoding an extension.",35,null],[13,"Capabilities","","Capabilities extension error. See…",35,null],[13,"Lifetime","","Lifetime extension error. See `LifetimeExtensionError` for…",35,null],[13,"KeyPackageId","","Key package ID extension error. See `KeyPackageIdError`…",35,null],[13,"ParentHash","","Parent hash extension error. See `ParentHashError` for…",35,null],[13,"RatchetTree","","Ratchet tree extension error. See `RatchetTreeError` for…",35,null],[4,"LifetimeExtensionError","","",null,null],[13,"Invalid","","Invalid lifetime extensions.",36,null],[13,"Expired","","Lifetime extension is expired.",36,null],[4,"CapabilitiesExtensionError","","",null,null],[13,"Invalid","","Invalid capabilities extensions.",37,null],[13,"EmptyVersionsField","","Capabilities extension is missing a version field.",37,null],[13,"UnsupportedCiphersuite","","Capabilities contains only unsupported ciphersuites.",37,null],[4,"KeyPackageIdError","","",null,null],[13,"Invalid","","Invalid key package ID extensions.",38,null],[4,"ParentHashError","","",null,null],[13,"Invalid","","Invalid parent hash extensions.",39,null],[4,"RatchetTreeError","","",null,null],[13,"Invalid","","Invalid ratchet tree extensions.",40,null],[0,"key_package_id_extension","openmls::extensions","KeyPackage IdentifiersKey Package Extension",null,null],[3,"KeyIDExtension","openmls::extensions::key_package_id_extension","",null,null],[12,"key_id","","",41,null],[11,"new","","Create a new key identifier extension from a byte slice.",41,[[]]],[11,"as_slice","","Get the value of the key id as byte slice.",41,[[]]],[0,"life_time_extension","openmls::extensions","Life time extensionKeyPackage Extension",null,null],[3,"LifetimeExtension","openmls::extensions::life_time_extension","The lifetime extension holds a not before and a not after…",null,null],[12,"not_before","","",42,null],[12,"not_after","","",42,null],[11,"new","","Create a new lifetime extensions with lifetime `t` (in…",42,[[]]],[11,"is_valid","","Returns true if this lifetime is valid.",42,[[]]],[0,"parent_hash_extension","openmls::extensions","Parent hash extensionKeyPackage Extension",null,null],[3,"ParentHashExtension","openmls::extensions::parent_hash_extension","",null,null],[12,"parent_hash","","",43,null],[11,"new","","",43,[[]]],[11,"parent_hash","","Get a reference to the parent hash value.",43,[[]]],[0,"ratchet_tree_extension","openmls::extensions","Ratchet tree extensionGroupInfo Extension",null,null],[3,"RatchetTreeExtension","openmls::extensions::ratchet_tree_extension","",null,null],[12,"tree","","",44,null],[11,"new","","Build a new extension from a vector of `Node`s.",44,[[["option",4],["vec",3]]]],[11,"into_vector","","",44,[[],[["option",4],["vec",3]]]],[8,"Extension","openmls::extensions","ExtensionThis trait defines functions to interact with an…",null,null],[10,"new_from_bytes","","Build a new extension from a byte slice.",45,[[],[["result",4],["extensionerror",4]]]],[10,"get_type","","Each extension has an extension type. This should be an…",45,[[],["extensiontype",4]]],[10,"to_extension_struct","","Get the extension as `ExtensionStruct` for encoding.",45,[[],["extensionstruct",3]]],[10,"as_any","","Get a generic trait object for downcasting.",45,[[],["any",8]]],[11,"to_parent_hash_extension","","Get a reference to the `ParentHashExtension`. Returns an…",45,[[],[["parenthashextension",3],["extensionerror",4],["result",4]]]],[11,"to_capabilities_extension","","Get a reference to the `CapabilitiesExtension`. Returns an…",45,[[],[["result",4],["extensionerror",4],["capabilitiesextension",3]]]],[11,"to_lifetime_extension","","Get a reference to the `LifetimeExtension`. Returns an…",45,[[],[["lifetimeextension",3],["extensionerror",4],["result",4]]]],[11,"to_key_id_extension","","Get a reference to the `KeyIDExtension`. Returns an…",45,[[],[["keyidextension",3],["extensionerror",4],["result",4]]]],[11,"to_ratchet_tree_extension_ref","","Get a reference to the `RatchetTreeExtension`. Returns an…",45,[[],[["result",4],["ratchettreeextension",3],["extensionerror",4]]]],[8,"ExtensionHelper","","",null,null],[10,"clone_it","","",46,[[],[["box",3],["extension",8]]]],[11,"new","","Build a new `ExtensionStruct`.",32,[[["vec",3],["extensiontype",4]]]],[11,"_get_extension_data","","Get the type of this extension struct.",32,[[]]],[0,"framing","openmls","",null,null],[3,"MLSPlaintext","openmls::framing","",null,null],[12,"group_id","","",47,null],[12,"epoch","","",47,null],[12,"sender","","",47,null],[12,"authenticated_data","","",47,null],[12,"content_type","","",47,null],[12,"content","","",47,null],[12,"signature","","",47,null],[3,"MLSCiphertext","","",null,null],[12,"group_id","","",48,null],[12,"epoch","","",48,null],[12,"content_type","","",48,null],[12,"authenticated_data","","",48,null],[12,"encrypted_sender_data","","",48,null],[12,"ciphertext","","",48,null],[3,"MLSPlaintextTBS","","",null,null],[12,"serialized_context_option","","",49,null],[12,"group_id","","",49,null],[12,"epoch","","",49,null],[12,"sender","","",49,null],[12,"authenticated_data","","",49,null],[12,"content_type","","",49,null],[12,"payload","","",49,null],[3,"MLSSenderData","","",null,null],[12,"sender","","",50,null],[12,"generation","","",50,null],[12,"reuse_guard","","",50,null],[3,"MLSCiphertextSenderDataAAD","","",null,null],[12,"group_id","","",51,null],[12,"epoch","","",51,null],[12,"content_type","","",51,null],[3,"MLSCiphertextContent","","",null,null],[12,"content","","",52,null],[12,"signature","","",52,null],[12,"padding","","",52,null],[3,"MLSCiphertextContentAAD","","",null,null],[12,"group_id","","",53,null],[12,"epoch","","",53,null],[12,"content_type","","",53,null],[12,"authenticated_data","","",53,null],[3,"MLSPlaintextCommitContent","","",null,null],[12,"group_id","","",54,null],[12,"epoch","","",54,null],[12,"sender","","",54,null],[12,"content_type","","",54,null],[12,"commit","","",54,null],[3,"MLSPlaintextCommitAuthData","","",null,null],[12,"confirmation_tag","","",55,null],[4,"ContentType","","",null,null],[13,"Invalid","","",56,null],[13,"Application","","",56,null],[13,"Proposal","","",56,null],[13,"Commit","","",56,null],[13,"Default","","",56,null],[4,"MLSPlaintextContentType","","",null,null],[13,"Application","","",57,null],[13,"Proposal","","",57,null],[13,"Commit","","",57,null],[0,"errors","","Framing errors.`MLSPlaintextError` and…",null,null],[4,"MLSPlaintextError","openmls::framing::errors","",null,null],[13,"NotAnApplicationMessage","","This is not an application message.",58,null],[4,"MLSCiphertextError","","",null,null],[13,"InvalidContentType","","Invalid content type in message.",59,null],[13,"GenerationOutOfBound","","Ratcheting secret generation is not found.",59,null],[0,"sender","openmls::framing","Section  9. Message Framing",null,null],[3,"Sender","openmls::framing::sender","",null,null],[12,"sender_type","","",60,null],[12,"sender","","",60,null],[4,"SenderType","","",null,null],[13,"Invalid","","",61,null],[13,"Member","","",61,null],[13,"Preconfigured","","",61,null],[13,"NewMember","","",61,null],[13,"Default","","",61,null],[11,"member","","",60,[[["leafindex",3]]]],[11,"to_node_index","","",60,[[],["nodeindex",3]]],[11,"to_leaf_index","","",60,[[],["leafindex",3]]],[11,"new","openmls::framing","",47,[[["leafindex",3],["credentialbundle",3],["groupcontext",3],["mlsplaintextcontenttype",4]]]],[11,"content","","Returns a reference to the `content` field",47,[[],["mlsplaintextcontenttype",4]]],[11,"sign","","",47,[[["option",4],["credentialbundle",3],["vec",3]]]],[11,"verify","","",47,[[["option",4],["vec",3],["credential",3]]]],[11,"as_application_message","","",47,[[],[["mlsplaintexterror",4],["result",4]]]],[11,"as_slice","","",48,[[],["vec",3]]],[11,"new_from_plaintext","","",48,[[["aeadkey",3],["mlsgroup",3],["aeadnonce",3],["mlsplaintext",3]],["mlsciphertext",3]]],[11,"to_plaintext","","",48,[[["ciphersuite",3],["epochsecrets",3],["secrettree",3],["groupcontext",3]],[["result",4],["mlsplaintext",3],["mlsciphertexterror",4]]]],[11,"encode_padded_ciphertext_content_detached","","",48,[[["mlsplaintext",3]],[["vec",3],["result",4],["codecerror",4]]]],[11,"new_from","","",49,[[["mlsplaintext",3],["option",4],["vec",3]]]],[11,"sign","","",49,[[["credentialbundle",3]],["signature",3]]],[11,"verify","","",49,[[["credential",3],["signature",3]]]],[11,"from_bytes","","",50,[[],[["result",4],["codecerror",4]]]],[11,"new","","",50,[[["leafindex",3],["reuseguard",3]]]],[11,"new","","",51,[[["groupid",3],["groupepoch",3],["contenttype",4]]]],[11,"from_bytes","","",52,[[],[["result",4],["codecerror",4]]]],[11,"new","","",54,[[["leafindex",3],["groupcontext",3],["commit",3]]]],[11,"serialize","","",54,[[],["vec",3]]],[11,"serialize","","",55,[[],["vec",3]]],[0,"group","openmls","Group APIs for MLS",null,null],[3,"GroupId","openmls::group","",null,null],[12,"value","","",62,null],[3,"GroupEpoch","","",null,null],[12,"0","","",63,null],[3,"GroupContext","","",null,null],[12,"group_id","","",64,null],[12,"epoch","","",64,null],[12,"tree_hash","","",64,null],[12,"confirmed_transcript_hash","","",64,null],[3,"GroupConfig","","Configuration for an MLS group.",null,null],[12,"add_ratchet_tree_extension","","Flag whether to send the ratchet tree along with the…",65,null],[12,"padding_block_size","","",65,null],[12,"additional_as_epochs","","",65,null],[0,"errors","","MLS Group errors`WelcomeError`, `ApplyCommitError`,…",null,null],[4,"GroupError","openmls::group::errors","",null,null],[13,"DecryptionError","","",66,null],[4,"WelcomeError","","",null,null],[13,"CiphersuiteMismatch","","",67,null],[13,"JoinerSecretNotFound","","",67,null],[13,"MissingRatchetTree","","",67,null],[13,"TreeHashMismatch","","",67,null],[13,"JoinerNotInTree","","",67,null],[13,"ConfirmationTagMismatch","","",67,null],[13,"InvalidRatchetTree","","",67,null],[13,"InvalidGroupInfoSignature","","",67,null],[13,"GroupInfoDecryptionFailure","","",67,null],[13,"DuplicateRatchetTreeExtension","","",67,null],[13,"UnsupportedMlsVersion","","",67,null],[13,"UnknownError","","",67,null],[4,"ApplyCommitError","","",null,null],[13,"EpochMismatch","","",68,null],[13,"WrongPlaintextContentType","","",68,null],[13,"SelfRemoved","","",68,null],[13,"PathKeyPackageVerificationFailure","","",68,null],[13,"NoParentHashExtension","","",68,null],[13,"ParentHashMismatch","","",68,null],[13,"PlaintextSignatureFailure","","",68,null],[13,"RequiredPathNotFound","","",68,null],[13,"ConfirmationTagMismatch","","",68,null],[13,"MissingOwnKeyPackage","","",68,null],[13,"MissingProposal","","",68,null],[13,"OwnKeyNotFound","","",68,null],[4,"CreateCommitError","","",null,null],[13,"CannotRemoveSelf","","",69,null],[13,"OwnKeyNotFound","","",69,null],[4,"ExporterError","","",null,null],[13,"KeyLengthTooLong","","",70,null],[0,"managed_group","openmls::group","",null,null],[3,"ManagedGroup","openmls::group::managed_group","A `ManagedGroup` represents an [MlsGroup] with an easier,…",null,null],[12,"credential_bundle","","",71,null],[12,"managed_group_config","","",71,null],[12,"group","","",71,null],[12,"pending_proposals","","",71,null],[12,"own_kpbs","","",71,null],[12,"aad","","",71,null],[12,"active","","",71,null],[4,"MLSMessage","","Unified message type",null,null],[13,"Plaintext","","",72,null],[13,"Ciphertext","","",72,null],[0,"callbacks","","",null,null],[3,"ManagedGroupCallbacks","openmls::group::managed_group::callbacks","Collection of callback functions that are passed to a…",null,null],[12,"validate_add","","",73,null],[12,"validate_remove","","",73,null],[12,"member_added","","",73,null],[12,"member_removed","","",73,null],[12,"member_updated","","",73,null],[12,"app_message_received","","",73,null],[12,"invalid_message_received","","",73,null],[12,"error_occured","","",73,null],[4,"Removal","","This enum lists the 4 different variants of a removal,…",null,null],[13,"WeLeft","","We previously issued a RemoveProposal for ourselves and…",74,null],[13,"TheyLeft","","Another member issued a RemoveProposal for itself that was…",74,null],[13,"WeWereRemovedBy","","Another member issued a RemoveProposal for ourselves that…",74,null],[13,"TheyWereRemovedBy","","Member A issued a RemoveProposal for member B that was now…",74,null],[6,"ValidateAdd","","",null,null],[6,"ValidateRemove","","",null,null],[6,"MemberAdded","","",null,null],[6,"MemberRemoved","","",null,null],[6,"MemberUpdated","","",null,null],[6,"AppMessageReceived","","",null,null],[6,"InvalidMessageReceived","","",null,null],[6,"ErrorOccured","","",null,null],[11,"new","","",73,[[]]],[11,"with_validate_add","","Validator function for AddProposals",73,[[]]],[11,"with_validate_remove","","Validator function for RemoveProposals",73,[[]]],[11,"with_member_added","","Event listener function for AddProposals",73,[[]]],[11,"with_member_removed","","Event listener function for RemoveProposals when a member…",73,[[]]],[11,"with_member_updated","","Event listener function for UpdateProposals",73,[[]]],[11,"with_app_message_received","","Event listener function for application messages",73,[[]]],[11,"with_invalid_message_received","","Event listener function for invalid messages",73,[[]]],[11,"with_error_occured","","Event listener function for errors that occur",73,[[]]],[11,"new","","",74,[[["credential",3]]]],[0,"config","openmls::group::managed_group","",null,null],[3,"ManagedGroupConfig","openmls::group::managed_group::config","Specifies the configuration parameters for a managed group",null,null],[12,"handshake_message_format","","Defines whether handshake messages should be encrypted",75,null],[12,"update_policy","","Defines the update policy",75,null],[12,"callbacks","","Callbacks",75,null],[3,"UpdatePolicy","","Specifies in which intervals the own leaf node should be…",null,null],[12,"maximum_time","","Maximum time before an update in seconds",76,null],[12,"maximum_sent_messages","","Maximum messages that are sent before an update in seconds",76,null],[12,"maximum_received_messages","","Maximum messages that are received before an update in…",76,null],[4,"HandshakeMessageFormat","","Defines whether handshake messages (Proposals & Commits)…",null,null],[13,"Plaintext","","",77,null],[13,"Ciphertext","","",77,null],[11,"new","","",75,[[["managedgroupcallbacks",3],["handshakemessageformat",4],["updatepolicy",3]]]],[0,"errors","openmls::group::managed_group","MLS Managed Group errors`WelcomeError`,…",null,null],[4,"ManagedGroupError","openmls::group::managed_group::errors","",null,null],[13,"Unknown","","",78,null],[13,"Codec","","",78,null],[13,"Config","","",78,null],[13,"Group","","",78,null],[13,"CreateCommit","","",78,null],[13,"UseAfterEviction","","",78,null],[13,"PendingProposalsExist","","",78,null],[13,"Exporter","","",78,null],[4,"InvalidMessageError","","",null,null],[13,"InvalidCiphertext","","",79,null],[13,"CommitWithInvalidProposals","","",79,null],[13,"CommitError","","",79,null],[11,"new","openmls::group::managed_group","Creates a new group from scratch with only the creator as…",71,[[["keypackagebundle",3],["credentialbundle",3],["managedgroupconfig",3],["groupid",3]],[["result",4],["managedgrouperror",4]]]],[11,"new_from_welcome","","Creates a new group from a `Welcome` message",71,[[["keypackagebundle",3],["option",4],["credentialbundle",3],["managedgroupconfig",3],["welcome",3],["vec",3]],[["result",4],["welcomeerror",4]]]],[11,"add_members","","Adds members to the group",71,[[],[["result",4],["managedgrouperror",4]]]],[11,"remove_members","","Removes members from the group",71,[[],[["result",4],["vec",3],["managedgrouperror",4]]]],[11,"propose_add_members","","Creates proposals to add members to the group",71,[[],[["result",4],["vec",3],["managedgrouperror",4]]]],[11,"propose_remove_members","","Creates proposals to remove members from the group",71,[[],[["result",4],["vec",3],["managedgrouperror",4]]]],[11,"leave_group","","Leave the group",71,[[],[["result",4],["vec",3],["managedgrouperror",4]]]],[11,"members","","Gets the current list of members",71,[[],[["credential",3],["vec",3]]]],[11,"process_messages","","Processes any incoming messages from the DS (MLSPlaintext…",71,[[["mlsmessage",4],["vec",3]],[["result",4],["managedgrouperror",4]]]],[11,"create_message","","Creates an application message. Returns…",71,[[],[["result",4],["mlsmessage",4],["managedgrouperror",4]]]],[11,"process_pending_proposals","","Process pending proposals",71,[[],[["managedgrouperror",4],["result",4]]]],[11,"export_secret","","Exports a secret from the current epoch",71,[[],[["result",4],["vec",3],["managedgrouperror",4]]]],[11,"configuration","","Gets the configuration",71,[[],["managedgroupconfig",3]]],[11,"set_configuration","","Sets the configuration",71,[[["managedgroupconfig",3]]]],[11,"aad","","Gets the AAD used in the framing",71,[[]]],[11,"set_aad","","Sets the AAD used in the framingget_own_key_package",71,[[]]],[11,"is_active","","Returns whether the own client is still a member of the…",71,[[]]],[11,"set_credential_bundle","","Sets a different `CredentialBundle`",71,[[["credentialbundle",3]]]],[11,"credential","","Returns own credential",71,[[],["credential",3]]],[11,"group_id","","Get group ID",71,[[],["groupid",3]]],[11,"self_update","","Updates the own leaf node",71,[[["keypackagebundle",3],["option",4]],[["result",4],["vec",3],["managedgrouperror",4]]]],[11,"propose_self_update","","Creates a proposal to update the own leaf node",71,[[["keypackagebundle",3],["option",4]],[["result",4],["vec",3],["managedgrouperror",4]]]],[11,"get_pending_proposals","","Returns a list of proposal",71,[[]]],[11,"load","","Loads the state from persisted state",71,[[["managedgroupconfig",3],["read",8],["box",3]],["managedgroup",3]]],[11,"save","","Persists the state",71,[[["box",3],["write",8]]]],[11,"export_ratchet_tree","","Export the Ratchet Tree",71,[[],[["option",4],["vec",3]]]],[11,"plaintext_to_mls_messages","","Converts MLSPlaintext to MLSMessage. Depending on whether…",71,[[["mlsplaintext",3],["vec",3]],[["mlsmessage",4],["vec",3]]]],[11,"validate_proposal","","Validate all pending proposals. The function returns…",71,[[["credential",3],["mlsplaintext",3],["leafindex",3],["hashmap",3]]]],[11,"send_events","","Send out the corresponding events for the pending proposal…",71,[[["leafindex",3],["hashmap",3],["credential",3]]]],[11,"invalid_message_event","","Send an event when an invalid message was received",71,[[["invalidmessageerror",4]]]],[11,"indexed_members","","Return a list (LeafIndex, Credential)",71,[[],[["leafindex",3],["hashmap",3],["credential",3]]]],[0,"mls_group","openmls::group","",null,null],[3,"MlsGroup","openmls::group::mls_group","",null,null],[12,"ciphersuite","","",80,null],[12,"group_context","","",80,null],[12,"epoch_secrets","","",80,null],[12,"init_secret","","",80,null],[12,"secret_tree","","",80,null],[12,"tree","","",80,null],[12,"interim_transcript_hash","","",80,null],[12,"add_ratchet_tree_extension","","",80,null],[5,"update_confirmed_transcript_hash","","",null,[[["ciphersuite",3],["mlsplaintextcommitcontent",3]],["vec",3]]],[5,"update_interim_transcript_hash","","",null,[[["ciphersuite",3],["mlsplaintextcommitauthdata",3]],["vec",3]]],[0,"apply_commit","","",null,null],[11,"apply_commit_internal","","",80,[[["mlsplaintext",3],["vec",3]],[["applycommiterror",4],["result",4]]]],[0,"create_commit","","",null,null],[11,"create_commit_internal","","",80,[[["credentialbundle",3]],[["result",4],["createcommiterror",4]]]],[0,"new_from_welcome","","",null,null],[11,"new_from_welcome_internal","","",80,[[["keypackagebundle",3],["option",4],["welcome",3],["vec",3]],[["result",4],["welcomeerror",4]]]],[11,"find_key_package_from_welcome_secrets","","",80,[[["keypackage",3]],[["encryptedgroupsecrets",3],["option",4]]]],[11,"decrypt_group_info","","",80,[[["ciphersuite",3],["encryptedgroupsecrets",3],["hpkeprivatekey",3]],[["result",4],["welcomeerror",4]]]],[6,"CreateCommitResult","","",null,null],[11,"new","","",80,[[["ciphersuitename",4],["keypackagebundle",3],["groupconfig",3]],[["result",4],["configerror",4]]]],[11,"new_from_welcome","","",80,[[["keypackagebundle",3],["option",4],["welcome",3],["vec",3]],[["result",4],["welcomeerror",4]]]],[11,"create_add_proposal","","",80,[[["credentialbundle",3],["keypackage",3]],["mlsplaintext",3]]],[11,"create_update_proposal","","",80,[[["credentialbundle",3],["keypackage",3]],["mlsplaintext",3]]],[11,"create_remove_proposal","","",80,[[["leafindex",3],["credentialbundle",3]],["mlsplaintext",3]]],[11,"create_commit","","",80,[[["credentialbundle",3]],[["result",4],["createcommiterror",4]]]],[11,"apply_commit","","",80,[[["mlsplaintext",3],["vec",3]],[["applycommiterror",4],["result",4]]]],[11,"create_application_message","","",80,[[["credentialbundle",3]],["mlsciphertext",3]]],[11,"encrypt","","",80,[[["mlsplaintext",3]],["mlsciphertext",3]]],[11,"decrypt","","",80,[[["mlsciphertext",3]],[["grouperror",4],["mlsplaintext",3],["result",4]]]],[11,"export_secret","","",80,[[],[["result",4],["vec",3],["exportererror",4]]]],[11,"tree","","",80,[[],[["ratchettree",3],["ref",3]]]],[11,"sender_index","","",80,[[],["leafindex",3]]],[11,"ciphersuite","","Get the ciphersuite implementation used in this group.",80,[[],["ciphersuite",3]]],[11,"context","","",80,[[],["groupcontext",3]]],[11,"group_id","","",80,[[],["groupid",3]]],[11,"epoch_secrets","","",80,[[],["epochsecrets",3]]],[11,"random","openmls::group","",62,[[]]],[11,"from_slice","","",62,[[]]],[11,"as_slice","","",62,[[],["vec",3]]],[11,"increment","","",63,[[]]],[11,"create_initial_group_context","","Create the `GroupContext` needed upon creation of a new…",64,[[["ciphersuite",3],["groupid",3],["vec",3]]]],[11,"serialize","","",64,[[],["vec",3]]],[11,"get_padding_block_size","","Get the padding block size used in this config.",65,[[]]],[0,"key_packages","openmls","",null,null],[3,"KeyPackage","openmls::key_packages","",null,null],[12,"protocol_version","","",81,null],[12,"cipher_suite","","",81,null],[12,"hpke_init_key","","",81,null],[12,"credential","","",81,null],[12,"extensions","","",81,null],[12,"signature","","",81,null],[3,"KeyPackageBundle","","",null,null],[12,"key_package","","",82,null],[12,"private_key","","",82,null],[12,"leaf_secret","","",82,null],[0,"codec","","",null,null],[0,"errors","","Key Package errors`KeyPackageError` are thrown on errors…",null,null],[4,"KeyPackageError","openmls::key_packages::errors","",null,null],[13,"UnknownExtensionError","","An unknown extension error occurred.",83,null],[13,"ExtensionNotPresent","","The requested extension is not present in the key package.",83,null],[13,"UnsupportedCiphersuite","","The requested ciphersuite is not supported.",83,null],[13,"UnknownConfigError","","An unknown configuration error occurred.",83,null],[13,"MandatoryExtensionsMissing","","A mandatory extension is missing in the key package.",83,null],[13,"InvalidLifetimeExtension","","The lifetime extension of the key package is not valid.",83,null],[13,"InvalidSignature","","The key package signature is not valid.",83,null],[13,"LibraryError","","An unknown OpenMLS library error occurred.",83,null],[13,"DuplicateExtension","","Duplicate extensions are not allowed.",83,null],[13,"NoCiphersuitesSupplied","","Creating a new key package requires at least one…",83,null],[13,"CiphersuiteMismatch","","The list of ciphersuites is not consistent with the…",83,null],[17,"MANDATORY_EXTENSIONS","openmls::key_packages","Mandatory extensions for key packages.",null,null],[11,"verify","","Verify that this key package is valid:",81,[[],[["result",4],["keypackageerror",4]]]],[11,"hash","","Compute the hash of the encoding of this key package.",81,[[],["vec",3]]],[11,"key_id","","Get the ID of this key package as byte slice. Returns an…",81,[[],[["result",4],["keypackageerror",4]]]],[11,"add_extension","","Add (or replace) an extension to the KeyPackage. Make sure…",81,[[["box",3],["extension",8]]]],[11,"extensions","","Get a reference to the extensions of this key package.",81,[[]]],[11,"credential","","Get a reference to the credential.",81,[[],["credential",3]]],[11,"sign","","Populate the `signature` field using the…",81,[[["credentialbundle",3]]]],[11,"new","","Create a new key package but only with the given…",81,[[["hpkepublickey",3],["ciphersuitename",4],["credentialbundle",3],["vec",3],["box",3]],[["keypackageerror",4],["result",4]]]],[11,"unsigned_payload","","Compile the unsigned payload to create the signature…",81,[[],[["vec",3],["result",4],["codecerror",4]]]],[11,"get_extension","","Get a reference to the extension of `extension_type`.…",81,[[["extensiontype",4]],[["option",4],["box",3]]]],[11,"update_parent_hash","","Update the parent hash extension of this key package.",81,[[]]],[11,"remove_extension","","Remove an extension from the KeyPackage Make sure to…",81,[[["extensiontype",4]]]],[11,"hpke_init_key","","Get a reference to the HPKE init key.",81,[[],["hpkepublickey",3]]],[11,"set_hpke_init_key","","Set a new HPKE init key.",81,[[["hpkepublickey",3]]]],[11,"cipher_suite","","Get the `Ciphersuite`.",81,[[],["ciphersuite",3]]],[11,"new","","Create a new `KeyPackageBundle` with a fresh…",82,[[["credentialbundle",3],["vec",3],["box",3]],[["keypackageerror",4],["result",4]]]],[11,"from_rekeyed_key_package","","Replace the init key in the `KeyPackage` with a random one…",82,[[["keypackage",3]]]],[11,"new_with_keypair","","Create a new `KeyPackageBundle` for the given…",82,[[["hpkekeypair",3],["secret",3],["credentialbundle",3],["vec",3],["box",3]],[["keypackageerror",4],["result",4]]]],[11,"get_key_package","","Get a reference to the `KeyPackage`.",82,[[],["keypackage",3]]],[11,"new_from_leaf_secret","","",82,[[["secret",3],["credentialbundle",3],["vec",3],["box",3]],[["keypackageerror",4],["result",4]]]],[11,"new_from_values","","Assembles a new KeyPackageBundle from a KeyPackage, a…",82,[[["secret",3],["hpkeprivatekey",3],["keypackage",3]]]],[11,"_set_private_key","","Update the private key in the bundle.",82,[[["hpkeprivatekey",3]]]],[11,"set_key_package","","Update the key package in the bundle.",82,[[["keypackage",3]]]],[11,"get_key_package_ref_mut","","Get a mutable reference to the `KeyPackage`.",82,[[],["keypackage",3]]],[11,"get_private_key_ref","","Get a reference to the `HPKEPrivateKey`.",82,[[],["hpkeprivatekey",3]]],[11,"leaf_secret","","Get a reference to the `leaf_secret`.",82,[[],["secret",3]]],[11,"derive_leaf_node_secret","","This function derives the leaf_node_secret from the…",82,[[["ciphersuite",3],["secret",3]],["secret",3]]],[0,"messages","openmls","",null,null],[3,"Welcome","openmls::messages","Welcome Messages",null,null],[12,"version","","",84,null],[12,"cipher_suite","","",84,null],[12,"secrets","","",84,null],[12,"encrypted_group_info","","",84,null],[3,"EncryptedGroupSecrets","","EncryptedGroupSecrets",null,null],[12,"key_package_hash","","",85,null],[12,"encrypted_group_secrets","","",85,null],[3,"Commit","","",null,null],[12,"proposals","","",86,null],[12,"path","","",86,null],[3,"ConfirmationTag","","",null,null],[12,"0","","",87,null],[3,"GroupInfo","","GroupInfo",null,null],[12,"group_id","","",88,null],[12,"epoch","","",88,null],[12,"tree_hash","","",88,null],[12,"confirmed_transcript_hash","","",88,null],[12,"extensions","","",88,null],[12,"confirmation_tag","","",88,null],[12,"signer_index","","",88,null],[12,"signature","","",88,null],[3,"PathSecret","","PathSecret",null,null],[12,"path_secret","","",89,null],[3,"GroupSecrets","","GroupSecrets",null,null],[12,"joiner_secret","","",90,null],[12,"path_secret","","",90,null],[12,"psks","","",90,null],[0,"codec","","Codec implementations for message structs.",null,null],[0,"proposals","","",null,null],[3,"ProposalID","openmls::messages::proposals","",null,null],[12,"value","","",91,null],[3,"QueuedProposal","","Alternative representation of a Proposal, where the sender…",null,null],[12,"proposal","","",92,null],[12,"proposal_id","","",92,null],[12,"sender","","",92,null],[3,"ProposalQueue","","Proposal queue that helps filtering and sorting the…",null,null],[12,"queued_proposals","","",93,null],[3,"AddProposal","","",null,null],[12,"key_package","","",94,null],[3,"UpdateProposal","","",null,null],[12,"key_package","","",95,null],[3,"RemoveProposal","","",null,null],[12,"removed","","",96,null],[4,"ProposalType","","",null,null],[13,"Invalid","","",97,null],[13,"Add","","",97,null],[13,"Update","","",97,null],[13,"Remove","","",97,null],[13,"Default","","",97,null],[4,"Proposal","","",null,null],[13,"Add","","",98,null],[13,"Update","","",98,null],[13,"Remove","","",98,null],[11,"get_type","","",98,[[],["proposaltype",4]]],[11,"is_type","","",98,[[["proposaltype",4]]]],[11,"as_add","","",98,[[],[["addproposal",3],["option",4]]]],[11,"as_update","","",98,[[],[["option",4],["updateproposal",3]]]],[11,"as_remove","","",98,[[],[["removeproposal",3],["option",4]]]],[11,"from_proposal","","",91,[[["ciphersuite",3],["proposal",4]]]],[11,"new","","Creates a new `QueuedProposal` from an `MLSPlaintext`",92,[[["ciphersuite",3],["mlsplaintext",3]]]],[11,"get_proposal_ref","","Returns the `Proposal` as a reference",92,[[],["proposal",4]]],[11,"get_proposal_id_ref","","Returns the `ProposalID` as a reference",92,[[],["proposalid",3]]],[11,"get_sender_ref","","Returns the `Sender` as a reference",92,[[],["sender",3]]],[11,"new","","",93,[[]]],[11,"new_from_committed_proposals","","Returns a new `ProposalQueue` from proposals that were…",93,[[["ciphersuite",3],["mlsplaintext",3],["vec",3]]]],[11,"filtered_proposals","","Filters received proposals",93,[[["ciphersuite",3],["leafindex",3]]]],[11,"contains","","Returns `true` if all `ProposalID` values from the list…",93,[[]]],[11,"add","","Add a new `QueuedProposal` to the queue",93,[[["queuedproposal",3]]]],[11,"retain","","Retains only the elements specified by the predicate",93,[[]]],[11,"get_proposal_id_list","","Gets the list of all `ProposalID`",93,[[],[["proposalid",3],["vec",3]]]],[11,"get_filtered_proposals","","Return a list of fileterd `QueuedProposal`",93,[[["proposaltype",4]],[["vec",3],["queuedproposal",3]]]],[11,"new","openmls::messages","Create a new welcome message from the provided data. Note…",84,[[["encryptedgroupsecrets",3],["ciphersuite",3],["protocolversion",4],["vec",3],["vec",3]]]],[11,"ciphersuite","","Get a reference to the ciphersuite in this Welcome message.",84,[[],["ciphersuite",3]]],[11,"secrets","","Get a reference to the encrypted group secrets in this…",84,[[]]],[11,"encrypted_group_info","","Get a reference to the encrypted group info.",84,[[]]],[11,"has_path","","Returns `true` if the commit contains an update path.…",86,[[]]],[11,"new","","Create a new confirmation tag.",87,[[["ciphersuite",3],["secret",3]]]],[11,"to_vec","","Get a copy of the raw byte vector.",87,[[],["vec",3]]],[11,"new","","",88,[[["box",3],["leafindex",3],["groupid",3],["vec",3],["groupepoch",3],["vec",3]]]],[11,"tree_hash","","Get the tree hash as byte slice.",88,[[]]],[11,"signer_index","","Get the signer index.",88,[[],["leafindex",3]]],[11,"signature","","Get the signature.",88,[[],["signature",3]]],[11,"set_signature","","Set the signature.",88,[[["signature",3]]]],[11,"group_id","","Get the group ID.",88,[[],["groupid",3]]],[11,"epoch","","Get the epoch.",88,[[],["groupepoch",3]]],[11,"confirmed_transcript_hash","","Get the confirmed transcript hash.",88,[[]]],[11,"confirmation_tag","","Get the confirmed tag.",88,[[]]],[11,"extensions","","Get the extensions.",88,[[]]],[11,"extensions_mut","","Get the extensions as mutable reference.",88,[[],["vec",3]]],[11,"from_bytes","","",88,[[],[["result",4],["codecerror",4]]]],[11,"new","","Create a new group secret.",90,[[["joinersecret",3],["option",4],["pathsecret",3]]]],[0,"schedule","openmls","This module represents the key schedule as introduced in…",null,null],[3,"InitSecret","openmls::schedule","The `InitSecret` is used to connect the next epoch to the…",null,null],[12,"secret","","",99,null],[3,"JoinerSecret","","It\'s necessary to clone this to be able generate…",null,null],[12,"secret","","",100,null],[3,"MemberSecret","","An intermediate secret in the key schedule. It can be used…",null,null],[12,"secret","","",101,null],[3,"WelcomeSecret","","",null,null],[12,"secret","","",102,null],[3,"EpochSecret","","An intermediate secret in the key schedule, the…",null,null],[12,"secret","","",103,null],[3,"EncryptionSecret","","The `EncryptionSecret` is used to create a `SecretTree`.",null,null],[12,"secret","","",104,null],[3,"ExporterSecret","","A secret that we can derive secrets from, that are used…",null,null],[12,"secret","","",105,null],[3,"SenderDataSecret","","A key that can be used to derive an `AeadKey` and an…",null,null],[12,"secret","","",106,null],[3,"EpochSecrets","","The `EpochSecrets` contain keys (or secrets), which are…",null,null],[12,"sender_data_secret","","",107,null],[12,"exporter_secret","","",107,null],[12,"confirmation_key","","",107,null],[0,"psk","","Pre shared keys.",null,null],[3,"ExternalPsk","openmls::schedule::psk","",null,null],[12,"psk_id","","",108,null],[3,"ReinitPsk","","",null,null],[12,"psk_group_id","","",109,null],[12,"psk_epoch","","",109,null],[3,"BranchPsk","","",null,null],[12,"psk_group_id","","",110,null],[12,"psk_epoch","","",110,null],[3,"PreSharedKeyID","","",null,null],[12,"psktype","","",111,null],[3,"PreSharedKeys","","struct { PreSharedKeyID psks<0..2^16-1>; } PreSharedKeys;",null,null],[12,"psks","","",112,null],[4,"PSKType","","enum { reserved(0), external(1), reinit(2), branch(3),…",null,null],[13,"Reserved","","",113,null],[13,"External","","",113,null],[13,"Reinit","","",113,null],[13,"Branch","","",113,null],[4,"Psk","","",null,null],[13,"External","","",114,null],[13,"Reinit","","",114,null],[13,"Branch","","",114,null],[11,"from_epoch_secret","openmls::schedule","Derive an `InitSecret` from an `EpochSecret`.",99,[[["ciphersuite",3],["epochsecret",3]]]],[11,"random","","Sample a fresh, random `InitSecret` for the creation of a…",99,[[]]],[11,"from_commit_and_epoch_secret","","Derive a `JoinerSecret` from an optional `CommitSecret`…",100,[[["ciphersuite",3],["option",4],["commitsecret",3],["initsecret",3]]]],[11,"from_commit_secret","","Derive the inital `JoinerSecret` when creating a new group…",100,[[["ciphersuite",3],["commitsecret",3]]]],[11,"group_secrets","","Create the `GroupSecrets` for a number of…",100,[[["vec",3],["option",4],["ratchettree",3],["vec",3]],["vec",3]]],[11,"from_joiner_secret_and_psk","","Derive a `MemberSecret` from a `CommitSecret` and a…",101,[[["ciphersuite",3],["joinersecret",3],["option",4],["secret",3]]]],[11,"from_commit_secret_and_psk","","Derive an initial `MemberSecret` when creating a new…",101,[[["ciphersuite",3],["commitsecret",3],["option",4],["secret",3]]]],[11,"derive_welcome_key_nonce","","Derive an `AeadKey` and an `AeadNonce` from the…",101,[[["ciphersuite",3]]]],[11,"from_member_secret","","Derive a `WelcomeSecret` from to decrypt a `Welcome`…",102,[[["ciphersuite",3],["membersecret",3]]]],[11,"secret","","Get the `Secret` of the `WelcomeSecret`.",102,[[],["secret",3]]],[11,"derive_welcome_key_nonce","","Derive an `AeadKey` and an `AeadNonce` from the…",102,[[["ciphersuite",3]]]],[11,"from_member_secret","","Derive an `EpochSecret` from a `MemberSecret`, consuming…",103,[[["ciphersuite",3],["groupcontext",3],["membersecret",3]]]],[11,"from_epoch_secret","","Derive an encryption secret from a reference to an…",104,[[["ciphersuite",3],["epochsecret",3]]]],[11,"create_secret_tree","","Create a `SecretTree` from the `encryption_secret`…",104,[[["leafindex",3]],["secrettree",3]]],[11,"consume_secret","","",104,[[],["secret",3]]],[11,"from_epoch_secret","","Derive an `ExporterSecret` from an `EpochSecret`.",105,[[["ciphersuite",3],["epochsecret",3]]]],[11,"secret","","Get the `Secret` of the `ExporterSecret`.",105,[[],["secret",3]]],[11,"from_epoch_secret","","Derive an `ExporterSecret` from an `EpochSecret`.",106,[[["ciphersuite",3],["epochsecret",3]]]],[11,"secret","","Get the `Secret` of the `ExporterSecret`.",106,[[],["secret",3]]],[11,"sender_data_secret","","Get the sender_data secret.",107,[[],["senderdatasecret",3]]],[11,"confirmation_key","","Get the confirmation key.",107,[[],["secret",3]]],[11,"derive_epoch_secrets","","Derive `EpochSecrets`, as well as an `EncryptionSecret`…",107,[[["ciphersuite",3],["membersecret",3],["groupcontext",3]]]],[0,"tree","openmls","",null,null],[3,"RatchetTree","openmls::tree","The ratchet tree.",null,null],[12,"ciphersuite","","The ciphersuite used in this tree.",115,null],[12,"nodes","","All nodes in the tree. Note that these only hold public…",115,null],[12,"private_tree","","This holds all private values in the tree. See…",115,null],[3,"UpdatePathNode","","7.7. Update Paths",null,null],[12,"public_key","","",116,null],[12,"encrypted_path_secret","","",116,null],[3,"UpdatePath","","7.7. Update Paths",null,null],[12,"leaf_key_package","","",117,null],[12,"nodes","","",117,null],[4,"TreeError","","These are errors the RatchetTree can return.",null,null],[13,"InvalidArguments","","",118,null],[13,"DuplicateIndex","","",118,null],[13,"InvalidUpdatePath","","",118,null],[13,"UnknownError","","",118,null],[0,"codec","","",null,null],[0,"hash_input","","7.5. Tree Hashes",null,null],[3,"ParentNodeHashInput","openmls::tree::hash_input","",null,null],[12,"node_index","","",119,null],[12,"parent_node","","",119,null],[12,"left_hash","","",119,null],[12,"right_hash","","",119,null],[3,"LeafNodeHashInput","","",null,null],[12,"node_index","","",120,null],[12,"key_package","","",120,null],[11,"new","","",119,[[["option",4]]]],[11,"hash","","",119,[[["ciphersuite",3]],["vec",3]]],[11,"new","","",120,[[["option",4],["nodeindex",3]]]],[11,"hash","","",120,[[["ciphersuite",3]],["vec",3]]],[0,"index","openmls::tree","",null,null],[3,"NodeIndex","openmls::tree::index","",null,null],[12,"0","","",121,null],[3,"LeafIndex","","",null,null],[12,"0","","",122,null],[11,"as_u32","","",121,[[]]],[11,"as_usize","","",121,[[]]],[11,"as_u32","","",122,[[]]],[11,"as_usize","","",122,[[]]],[0,"node","openmls::tree","",null,null],[3,"Node","openmls::tree::node","",null,null],[12,"node_type","","",123,null],[12,"key_package","","",123,null],[12,"node","","",123,null],[3,"ParentNode","","",null,null],[12,"public_key","","",124,null],[12,"unmerged_leaves","","",124,null],[12,"parent_hash","","",124,null],[4,"NodeType","","",null,null],[13,"Leaf","","",125,null],[13,"Parent","","",125,null],[13,"Default","","",125,null],[11,"new_leaf","","",123,[[["option",4],["keypackage",3]]]],[11,"new_blank_parent_node","","",123,[[]]],[11,"get_public_hpke_key","","",123,[[],[["hpkepublickey",3],["option",4]]]],[11,"blank","","",123,[[]]],[11,"is_blank","","",123,[[]]],[11,"hash","","",123,[[["ciphersuite",3]],[["option",4],["vec",3]]]],[11,"parent_hash","","",123,[[],[["option",4],["vec",3]]]],[11,"key_package","","Get a reference to the key package in this node.",123,[[],[["option",4],["keypackage",3]]]],[11,"key_package_mut","","Get a mutable reference to the key package in this node.",123,[[],[["keypackage",3],["option",4]]]],[11,"new","","",124,[[["hpkepublickey",3]]]],[11,"get_public_key","","",124,[[],["hpkepublickey",3]]],[11,"get_parent_hash","","",124,[[]]],[11,"set_parent_hash","","",124,[[["vec",3]]]],[11,"get_unmerged_leaves","","",124,[[]]],[11,"get_unmerged_leaves_mut","","",124,[[],["vec",3]]],[0,"path_keys","openmls::tree","A data structure holding HPKE key pairs for a path in the…",null,null],[3,"PathKeys","openmls::tree::path_keys","A set of keys for a path stored as `HashMap` with entries…",null,null],[12,"keys","","",126,null],[11,"add","","Add a slice of `HPKEPrivateKey`s with the indices given in…",126,[[["vec",3],["hpkeprivatekey",3]]]],[11,"get","","Get an HPKE private key for a given node index.",126,[[["nodeindex",3]],[["hpkeprivatekey",3],["option",4]]]],[0,"private_tree","openmls::tree","A data structure holding information about the leaf node…",null,null],[3,"CommitSecret","openmls::tree::private_tree","",null,null],[12,"secret","","",127,null],[3,"PrivateTree","","",null,null],[12,"node_index","","",128,null],[12,"hpke_private_key","","",128,null],[12,"path_keys","","",128,null],[12,"commit_secret","","",128,null],[12,"path_secrets","","",128,null],[6,"PathSecrets","","",null,null],[11,"secret","","",127,[[],["secret",3]]],[11,"zero_secret","","Create a CommitSecret consisting of an all-zero string of…",127,[[["ciphersuite",3]]]],[11,"new","","Create a new empty placeholder `PrivateTree` with default…",128,[[["nodeindex",3]],["privatetree",3]]],[11,"from_key_package_bundle","","Create a minimal `PrivateTree` setting only the private…",128,[[["keypackagebundle",3],["nodeindex",3]]]],[11,"new_with_keys","","Creates a `PrivateTree` with a new private key, leaf…",128,[[["ciphersuite",3],["keypackagebundle",3],["nodeindex",3]]]],[11,"get_hpke_private_key","","",128,[[],["hpkeprivatekey",3]]],[11,"get_node_index","","",128,[[],["nodeindex",3]]],[11,"get_path_keys","","",128,[[],["pathkeys",3]]],[11,"get_commit_secret","","",128,[[],["commitsecret",3]]],[11,"get_path_secrets","","",128,[[]]],[11,"generate_path_secrets","","Generate `n` path secrets with the given `leaf_secret`.",128,[[["ciphersuite",3],["secret",3]],[["vec",3],["hpkepublickey",3]]]],[11,"continue_path_secrets","","Generate `n` path secrets with the given `start_secret`.",128,[[["ciphersuite",3],["secret",3]],[["vec",3],["hpkepublickey",3]]]],[11,"derive_path_secrets","","This function generates the path secrets internally and is…",128,[[["ciphersuite",3],["secret",3],["vec",3]],[["vec",3],["hpkepublickey",3]]]],[11,"generate_commit_secret","","Generate the commit secret for the given `path_secret`.",128,[[["ciphersuite",3]]]],[11,"generate_path_keypairs","","Generate HPKE key pairs for all path secrets in…",128,[[["ciphersuite",3]],[["vec",3],["hpkepublickey",3]]]],[0,"secret_tree","openmls::tree","",null,null],[3,"TreeContext","openmls::tree::secret_tree","",null,null],[12,"node","","",129,null],[12,"generation","","",129,null],[3,"SecretTreeNode","","",null,null],[12,"secret","","",130,null],[3,"SecretTree","","",null,null],[12,"nodes","","",131,null],[12,"handshake_sender_ratchets","","",131,null],[12,"application_sender_ratchets","","",131,null],[12,"size","","",131,null],[4,"SecretTreeError","","",null,null],[13,"TooDistantInThePast","","",132,null],[13,"TooDistantInTheFuture","","",132,null],[13,"IndexOutOfBounds","","",132,null],[4,"SecretType","","",null,null],[13,"HandshakeSecret","","",133,null],[13,"ApplicationSecret","","",133,null],[4,"SecretTypeError","","",null,null],[13,"InvalidContentType","","",134,null],[5,"derive_tree_secret","","Derives secrets for inner nodes of a SecretTree",null,[[["ciphersuite",3],["secret",3]],["secret",3]]],[11,"new","","Creates a new SecretTree based on an `encryption_secret`…",131,[[["encryptionsecret",3],["leafindex",3]]]],[11,"initialize_sender_ratchets","","Initializes a specific SenderRatchet pair for a given…",131,[[["ciphersuite",3],["leafindex",3]],[["result",4],["secrettreeerror",4]]]],[11,"get_secret_for_decryption","","Return RatchetSecrets for a given index and generation.…",131,[[["ciphersuite",3],["leafindex",3],["secrettype",4]],[["result",4],["secrettreeerror",4]]]],[11,"get_secret_for_encryption","","Return the next RatchetSecrets that should be used for…",131,[[["ciphersuite",3],["leafindex",3],["secrettype",4]]]],[11,"get_ratchet_mut","","Returns a mutable reference to a specific SenderRatchet.…",131,[[["leafindex",3],["secrettype",4]],["senderratchet",3]]],[11,"get_ratchet_opt","","Returns an optional reference to a specific SenderRatchet",131,[[["leafindex",3],["secrettype",4]],[["option",4],["senderratchet",3]]]],[11,"derive_down","","Derives the secrets for the child leaves in a SecretTree…",131,[[["ciphersuite",3],["nodeindex",3]]]],[0,"sender_ratchet","openmls::tree","",null,null],[3,"SenderRatchet","openmls::tree::sender_ratchet","",null,null],[12,"index","","",135,null],[12,"generation","","",135,null],[12,"past_secrets","","",135,null],[6,"RatchetSecrets","","",null,null],[17,"OUT_OF_ORDER_TOLERANCE","","",null,null],[17,"MAXIMUM_FORWARD_DISTANCE","","",null,null],[11,"new","","Creates e new SenderRatchet",135,[[["leafindex",3],["secret",3]]]],[11,"get_secret_for_decryption","","Gets a secret from the SenderRatchet. Returns an error if…",135,[[["ciphersuite",3]],[["result",4],["secrettreeerror",4]]]],[11,"get_secret_for_encryption","","Gets a secret from the SenderRatchet and ratchets forward",135,[[["ciphersuite",3]]]],[11,"ratchet_secret","","Computes the new secret",135,[[["ciphersuite",3],["secret",3]],["secret",3]]],[11,"derive_key_nonce","","Derives a key & nonce from a secret",135,[[["ciphersuite",3],["secret",3]]]],[11,"get_generation","","Gets the current generation",135,[[]]],[0,"treemath","openmls::tree","",null,null],[4,"TreeMathError","openmls::tree::treemath","",null,null],[13,"LeafHasNoChildren","","",136,null],[13,"RootHasNoParent","","",136,null],[5,"log2","","",null,[[]]],[5,"level","","",null,[[["nodeindex",3]]]],[5,"node_width","","",null,[[]]],[5,"root","","",null,[[["leafindex",3]],["nodeindex",3]]],[5,"left","","",null,[[["nodeindex",3]],[["nodeindex",3],["treematherror",4],["result",4]]]],[5,"right","","",null,[[["leafindex",3],["nodeindex",3]],[["nodeindex",3],["treematherror",4],["result",4]]]],[5,"parent_step","","",null,[[]]],[5,"parent","","",null,[[["leafindex",3],["nodeindex",3]],[["nodeindex",3],["treematherror",4],["result",4]]]],[5,"sibling","","",null,[[["leafindex",3],["nodeindex",3]],[["nodeindex",3],["treematherror",4],["result",4]]]],[5,"dirpath","","",null,[[["leafindex",3],["nodeindex",3]],[["treematherror",4],["result",4],["vec",3]]]],[5,"dirpath_long","","",null,[[["leafindex",3],["nodeindex",3]],[["treematherror",4],["result",4],["vec",3]]]],[5,"direct_path_root","","",null,[[["leafindex",3],["nodeindex",3]],[["treematherror",4],["result",4],["vec",3]]]],[5,"copath","","",null,[[["leafindex",3],["nodeindex",3]],[["treematherror",4],["result",4],["vec",3]]]],[5,"common_ancestor_index","","",null,[[["nodeindex",3]],["nodeindex",3]]],[6,"InvitationList","openmls::tree","",null,null],[11,"new","","Create a new empty `RatchetTree`.",115,[[["keypackagebundle",3],["ciphersuite",3]],["ratchettree",3]]],[11,"new_from_public_tree","","Create a new `RatchetTree` by cloning the public tree…",115,[[["ratchettree",3]]]],[11,"new_from_nodes","","Generate a new `RatchetTree` from `Node`s with the…",115,[[["keypackagebundle",3],["ciphersuite",3]],[["treeerror",4],["ratchettree",3],["result",4]]]],[11,"private_tree_mut","","Return a mutable reference to the `PrivateTree`.",115,[[],["privatetree",3]]],[11,"private_tree","","Return a reference to the `PrivateTree`.",115,[[],["privatetree",3]]],[11,"tree_size","","",115,[[],["nodeindex",3]]],[11,"public_key_tree","","Get a vector with all nodes in the tree, containing `None`…",115,[[],[["option",4],["vec",3]]]],[11,"public_key_tree_copy","","Get a vector with a copy of all nodes in the tree,…",115,[[],[["option",4],["vec",3]]]],[11,"leaf_count","","",115,[[],["leafindex",3]]],[11,"resolve","","",115,[[["nodeindex",3]],[["nodeindex",3],["vec",3]]]],[11,"get_own_node_index","","Get the index of the own node.",115,[[],["nodeindex",3]]],[11,"own_key_package","","Get a reference to the own key package.",115,[[],["keypackage",3]]],[11,"own_key_package_mut","","Get a mutable reference to the own key package.",115,[[],["keypackage",3]]],[11,"blank_member","","",115,[[["nodeindex",3]]]],[11,"free_leaves","","",115,[[],[["nodeindex",3],["vec",3]]]],[11,"update_path","","7.7. Update Paths",115,[[["leafindex",3],["updatepath",3]],[["treeerror",4],["result",4],["commitsecret",3]]]],[11,"replace_private_tree","","Update the private tree with the new `KeyPackageBundle`.",115,[[["keypackagebundle",3]],["commitsecret",3]]],[11,"refresh_private_tree","","Update the private tree.",115,[[["credentialbundle",3]]]],[11,"replace_private_tree_","","Replace the private tree with a new one based on the…",115,[[["keypackagebundle",3]],[["option",4],["updatepath",3]]]],[11,"encrypt_to_copath","","Encrypt the path secrets to the co path and return the…",115,[[["vec",3],["hpkepublickey",3]],[["treeerror",4],["result",4],["vec",3]]]],[11,"merge_direct_path_keys","","Merge public keys from a direct path to this tree along…",115,[[["vec",3],["updatepath",3],["nodeindex",3]],[["treeerror",4],["result",4]]]],[11,"validate_public_keys","","Validates that the `public_keys` matches the public keys…",115,[[],[["treeerror",4],["result",4]]]],[11,"merge_public_keys","","Merges `public_keys` into the tree along the `path`",115,[[],[["treeerror",4],["result",4]]]],[11,"add_nodes","","Add nodes for the provided key packages.",115,[[],["vec",3]]],[11,"apply_proposals","","Applies a list of proposals from a Commit to the tree.…",115,[[["proposalqueue",3]],[["treeerror",4],["result",4]]]],[11,"trim_tree","","Trims the tree from the right when there are empty leaf…",115,[[]]],[11,"compute_tree_hash","","Computes the tree hash",115,[[],["vec",3]]],[11,"compute_parent_hash","","Computes the parent hash",115,[[["nodeindex",3]],["vec",3]]],[11,"verify_integrity","","Verifies the integrity of a public tree",115,[[["ciphersuite",3]]]],[11,"new","","Create a new update path.",117,[[["vec",3],["updatepathnode",3],["keypackage",3]]]],[0,"prelude","openmls","Single place, re-exporting the most used public functions.…",null,null],[3,"GroupConfig","openmls::prelude","Configuration for an MLS group.",null,null],[12,"add_ratchet_tree_extension","","Flag whether to send the ratchet tree along with the…",65,null],[12,"padding_block_size","","",65,null],[12,"additional_as_epochs","","",65,null],[3,"MlsGroup","","",null,null],[12,"ciphersuite","","",80,null],[12,"group_context","","",80,null],[12,"epoch_secrets","","",80,null],[12,"init_secret","","",80,null],[12,"secret_tree","","",80,null],[12,"tree","","",80,null],[12,"interim_transcript_hash","","",80,null],[12,"add_ratchet_tree_extension","","",80,null],[3,"ManagedGroup","","A `ManagedGroup` represents an [MlsGroup] with an easier,…",null,null],[12,"credential_bundle","","",71,null],[12,"managed_group_config","","",71,null],[12,"group","","",71,null],[12,"pending_proposals","","",71,null],[12,"own_kpbs","","",71,null],[12,"aad","","",71,null],[12,"active","","",71,null],[3,"ManagedGroupCallbacks","","Collection of callback functions that are passed to a…",null,null],[12,"validate_add","","",73,null],[12,"validate_remove","","",73,null],[12,"member_added","","",73,null],[12,"member_removed","","",73,null],[12,"member_updated","","",73,null],[12,"app_message_received","","",73,null],[12,"invalid_message_received","","",73,null],[12,"error_occured","","",73,null],[3,"ManagedGroupConfig","","Specifies the configuration parameters for a managed group",null,null],[12,"handshake_message_format","","Defines whether handshake messages should be encrypted",75,null],[12,"update_policy","","Defines the update policy",75,null],[12,"callbacks","","Callbacks",75,null],[3,"UpdatePolicy","","Specifies in which intervals the own leaf node should be…",null,null],[12,"maximum_time","","Maximum time before an update in seconds",76,null],[12,"maximum_sent_messages","","Maximum messages that are sent before an update in seconds",76,null],[12,"maximum_received_messages","","Maximum messages that are received before an update in…",76,null],[3,"LeafIndex","","",null,null],[12,"0","","",122,null],[3,"HpkeCiphertext","","7.7. Update Paths",null,null],[12,"kem_output","","",0,null],[12,"ciphertext","","",0,null],[3,"Secret","","A struct to contain secrets. This is to provide better…",null,null],[12,"value","","",2,null],[3,"AeadKey","","",null,null],[12,"aead_mode","","",3,null],[12,"value","","",3,null],[3,"ReuseGuard","","",null,null],[12,"value","","",4,null],[3,"AeadNonce","","",null,null],[12,"value","","",5,null],[3,"Signature","","",null,null],[12,"value","","",6,null],[3,"SignaturePrivateKey","","",null,null],[12,"ciphersuite","","",7,null],[12,"value","","",7,null],[3,"SignaturePublicKey","","",null,null],[12,"ciphersuite","","",8,null],[12,"value","","",8,null],[3,"SignatureKeypair","","",null,null],[12,"ciphersuite","","",9,null],[12,"private_key","","",9,null],[12,"public_key","","",9,null],[3,"Ciphersuite","","",null,null],[12,"name","","",10,null],[12,"signature","","",10,null],[12,"hpke","","",10,null],[12,"aead","","",10,null],[12,"hash","","",10,null],[12,"hmac","","",10,null],[3,"Cursor","","",null,null],[12,"buffer","","",15,null],[12,"position","","",15,null],[3,"Config","","OpenMLS ConfigurationThis is the global configuration for…",null,null],[12,"protocol_versions","","",22,null],[12,"ciphersuites","","",22,null],[12,"extensions","","",22,null],[12,"constants","","",22,null],[3,"Certificate","","Struct containing an X509 certificate chain, as per Spec.",null,null],[12,"cert_data","","",25,null],[3,"Credential","","Struct containing MLS credential data, where the data…",null,null],[12,"credential_type","","",26,null],[12,"credential","","",26,null],[3,"BasicCredential","","",null,null],[12,"identity","","",27,null],[12,"ciphersuite","","",27,null],[12,"public_key","","",27,null],[3,"CredentialBundle","","This struct contains a credential and the corresponding…",null,null],[12,"credential","","",28,null],[12,"signature_private_key","","",28,null],[3,"CapabilitiesExtension","","",null,null],[12,"versions","","",34,null],[12,"ciphersuites","","",34,null],[12,"extensions","","",34,null],[3,"KeyIDExtension","","",null,null],[12,"key_id","","",41,null],[3,"LifetimeExtension","","The lifetime extension holds a not before and a not after…",null,null],[12,"not_before","","",42,null],[12,"not_after","","",42,null],[3,"ExtensionStruct","","Extension structAn extension has an `ExtensionType` and an…",null,null],[12,"extension_type","","",32,null],[12,"extension_data","","",32,null],[3,"Sender","","",null,null],[12,"sender_type","","",60,null],[12,"sender","","",60,null],[3,"MLSPlaintext","","",null,null],[12,"group_id","","",47,null],[12,"epoch","","",47,null],[12,"sender","","",47,null],[12,"authenticated_data","","",47,null],[12,"content_type","","",47,null],[12,"content","","",47,null],[12,"signature","","",47,null],[3,"MLSCiphertext","","",null,null],[12,"group_id","","",48,null],[12,"epoch","","",48,null],[12,"content_type","","",48,null],[12,"authenticated_data","","",48,null],[12,"encrypted_sender_data","","",48,null],[12,"ciphertext","","",48,null],[3,"GroupId","","",null,null],[12,"value","","",62,null],[3,"KeyPackage","","",null,null],[12,"protocol_version","","",81,null],[12,"cipher_suite","","",81,null],[12,"hpke_init_key","","",81,null],[12,"credential","","",81,null],[12,"extensions","","",81,null],[12,"signature","","",81,null],[3,"KeyPackageBundle","","",null,null],[12,"key_package","","",82,null],[12,"private_key","","",82,null],[12,"leaf_secret","","",82,null],[3,"AddProposal","","",null,null],[12,"key_package","","",94,null],[3,"RemoveProposal","","",null,null],[12,"removed","","",96,null],[3,"UpdateProposal","","",null,null],[12,"key_package","","",95,null],[3,"Welcome","","Welcome Messages",null,null],[12,"version","","",84,null],[12,"cipher_suite","","",84,null],[12,"secrets","","",84,null],[12,"encrypted_group_info","","",84,null],[4,"HandshakeMessageFormat","","Defines whether handshake messages (Proposals & Commits)…",null,null],[13,"Plaintext","","",77,null],[13,"Ciphertext","","",77,null],[4,"InvalidMessageError","","",null,null],[13,"InvalidCiphertext","","",79,null],[13,"CommitWithInvalidProposals","","",79,null],[13,"CommitError","","",79,null],[4,"ManagedGroupError","","",null,null],[13,"Unknown","","",78,null],[13,"Codec","","",78,null],[13,"Config","","",78,null],[13,"Group","","",78,null],[13,"CreateCommit","","",78,null],[13,"UseAfterEviction","","",78,null],[13,"PendingProposalsExist","","",78,null],[13,"Exporter","","",78,null],[4,"Removal","","This enum lists the 4 different variants of a removal,…",null,null],[13,"WeLeft","","We previously issued a RemoveProposal for ourselves and…",74,null],[13,"TheyLeft","","Another member issued a RemoveProposal for itself that was…",74,null],[13,"WeWereRemovedBy","","Another member issued a RemoveProposal for ourselves that…",74,null],[13,"TheyWereRemovedBy","","Member A issued a RemoveProposal for member B that was now…",74,null],[4,"ApplyCommitError","","",null,null],[13,"EpochMismatch","","",68,null],[13,"WrongPlaintextContentType","","",68,null],[13,"SelfRemoved","","",68,null],[13,"PathKeyPackageVerificationFailure","","",68,null],[13,"NoParentHashExtension","","",68,null],[13,"ParentHashMismatch","","",68,null],[13,"PlaintextSignatureFailure","","",68,null],[13,"RequiredPathNotFound","","",68,null],[13,"ConfirmationTagMismatch","","",68,null],[13,"MissingOwnKeyPackage","","",68,null],[13,"MissingProposal","","",68,null],[13,"OwnKeyNotFound","","",68,null],[4,"CreateCommitError","","",null,null],[13,"CannotRemoveSelf","","",69,null],[13,"OwnKeyNotFound","","",69,null],[4,"GroupError","","",null,null],[13,"DecryptionError","","",66,null],[4,"WelcomeError","","",null,null],[13,"CiphersuiteMismatch","","",67,null],[13,"JoinerSecretNotFound","","",67,null],[13,"MissingRatchetTree","","",67,null],[13,"TreeHashMismatch","","",67,null],[13,"JoinerNotInTree","","",67,null],[13,"ConfirmationTagMismatch","","",67,null],[13,"InvalidRatchetTree","","",67,null],[13,"InvalidGroupInfoSignature","","",67,null],[13,"GroupInfoDecryptionFailure","","",67,null],[13,"DuplicateRatchetTreeExtension","","",67,null],[13,"UnsupportedMlsVersion","","",67,null],[13,"UnknownError","","",67,null],[4,"CiphersuiteName","","",null,null],[13,"MLS10_128_DHKEMX25519_AES128GCM_SHA256_Ed25519","","",11,null],[13,"MLS10_128_DHKEMP256_AES128GCM_SHA256_P256","","",11,null],[13,"MLS10_128_DHKEMX25519_CHACHA20POLY1305_SHA256_Ed25519","","",11,null],[13,"MLS10_256_DHKEMX448_AES256GCM_SHA512_Ed448","","",11,null],[13,"MLS10_256_DHKEMP521_AES256GCM_SHA512_P521","","",11,null],[13,"MLS10_256_DHKEMX448_CHACHA20POLY1305_SHA512_Ed448","","",11,null],[4,"CodecError","","",null,null],[13,"EncodingError","","",16,null],[13,"DecodingError","","",16,null],[13,"Other","","",16,null],[4,"VecSize","","",null,null],[13,"VecU8","","",17,null],[13,"VecU16","","",17,null],[13,"VecU32","","",17,null],[13,"VecU64","","",17,null],[4,"ProtocolVersion","","Protocol VersionKey Packages",null,null],[13,"Reserved","","",23,null],[13,"Mls10","","",23,null],[4,"CredentialError","","",null,null],[13,"UnknwonConfigError","","",29,null],[13,"UnsupportedCredentialType","","",29,null],[4,"CredentialType","","Enum for Credential Types. We only need this for…",null,null],[13,"Reserved","","",30,null],[13,"Basic","","",30,null],[13,"X509","","",30,null],[4,"MLSCredentialType","","This enum contains the different available credentials.",null,null],[13,"Basic","","",31,null],[13,"X509","","",31,null],[4,"ExtensionType","","Extension typesIANA registrations",null,null],[13,"Reserved","","",33,null],[13,"Capabilities","","",33,null],[13,"Lifetime","","",33,null],[13,"KeyID","","",33,null],[13,"ParentHash","","",33,null],[13,"RatchetTree","","",33,null],[4,"ContentType","","",null,null],[13,"Invalid","","",56,null],[13,"Application","","",56,null],[13,"Proposal","","",56,null],[13,"Commit","","",56,null],[13,"Default","","",56,null],[4,"MLSPlaintextContentType","","",null,null],[13,"Application","","",57,null],[13,"Proposal","","",57,null],[13,"Commit","","",57,null],[5,"encode_vec","","",null,[[["vecsize",4],["vec",3]],[["result",4],["codecerror",4]]]],[5,"decode_vec","","",null,[[["vecsize",4],["cursor",3]],[["result",4],["codecerror",4],["vec",3]]]],[5,"_print_tree","","",null,[[["ratchettree",3]]]],[0,"errors","","Config errorsA `ConfigError` is thrown when either the…",null,null],[4,"ConfigError","openmls::prelude::errors","",null,null],[13,"InvalidConfig","","Invalid configuration.",24,null],[13,"UnsupportedMlsVersion","","MLS version is not supported by this configuration.",24,null],[13,"UnsupportedCiphersuite","","Ciphersuite is not supported by this configuration.",24,null],[13,"UnsupportedSignatureScheme","","Signature scheme is not supported by this configuration.",24,null],[0,"errors","openmls::prelude","Extension errors.An `ExtensionError` is thrown when an…",null,null],[4,"ExtensionError","openmls::prelude::errors","",null,null],[13,"InvalidExtensionType","","Invalid extension type error.",35,null],[13,"DecodingError","","Error when decoding an extension.",35,null],[13,"Capabilities","","Capabilities extension error. See…",35,null],[13,"Lifetime","","Lifetime extension error. See `LifetimeExtensionError` for…",35,null],[13,"KeyPackageId","","Key package ID extension error. See `KeyPackageIdError`…",35,null],[13,"ParentHash","","Parent hash extension error. See `ParentHashError` for…",35,null],[13,"RatchetTree","","Ratchet tree extension error. See `RatchetTreeError` for…",35,null],[4,"LifetimeExtensionError","","",null,null],[13,"Invalid","","Invalid lifetime extensions.",36,null],[13,"Expired","","Lifetime extension is expired.",36,null],[4,"CapabilitiesExtensionError","","",null,null],[13,"Invalid","","Invalid capabilities extensions.",37,null],[13,"EmptyVersionsField","","Capabilities extension is missing a version field.",37,null],[13,"UnsupportedCiphersuite","","Capabilities contains only unsupported ciphersuites.",37,null],[4,"KeyPackageIdError","","",null,null],[13,"Invalid","","Invalid key package ID extensions.",38,null],[4,"ParentHashError","","",null,null],[13,"Invalid","","Invalid parent hash extensions.",39,null],[4,"RatchetTreeError","","",null,null],[13,"Invalid","","Invalid ratchet tree extensions.",40,null],[0,"errors","openmls::prelude","Framing errors.`MLSPlaintextError` and…",null,null],[4,"MLSPlaintextError","openmls::prelude::errors","",null,null],[13,"NotAnApplicationMessage","","This is not an application message.",58,null],[4,"MLSCiphertextError","","",null,null],[13,"InvalidContentType","","Invalid content type in message.",59,null],[13,"GenerationOutOfBound","","Ratcheting secret generation is not found.",59,null],[0,"sender","openmls::prelude","Section  9. Message Framing",null,null],[3,"Sender","openmls::prelude::sender","",null,null],[12,"sender_type","","",60,null],[12,"sender","","",60,null],[4,"SenderType","","",null,null],[13,"Invalid","","",61,null],[13,"Member","","",61,null],[13,"Preconfigured","","",61,null],[13,"NewMember","","",61,null],[13,"Default","","",61,null],[0,"errors","openmls::prelude","Key Package errors`KeyPackageError` are thrown on errors…",null,null],[4,"KeyPackageError","openmls::prelude::errors","",null,null],[13,"UnknownExtensionError","","An unknown extension error occurred.",83,null],[13,"ExtensionNotPresent","","The requested extension is not present in the key package.",83,null],[13,"UnsupportedCiphersuite","","The requested ciphersuite is not supported.",83,null],[13,"UnknownConfigError","","An unknown configuration error occurred.",83,null],[13,"MandatoryExtensionsMissing","","A mandatory extension is missing in the key package.",83,null],[13,"InvalidLifetimeExtension","","The lifetime extension of the key package is not valid.",83,null],[13,"InvalidSignature","","The key package signature is not valid.",83,null],[13,"LibraryError","","An unknown OpenMLS library error occurred.",83,null],[13,"DuplicateExtension","","Duplicate extensions are not allowed.",83,null],[13,"NoCiphersuitesSupplied","","Creating a new key package requires at least one…",83,null],[13,"CiphersuiteMismatch","","The list of ciphersuites is not consistent with the…",83,null],[8,"Codec","openmls::prelude","",null,null],[11,"encode","openmls::codec","",18,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",18,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode_detached","","",18,[[],[["vec",3],["result",4],["codecerror",4]]]],[8,"Extension","openmls::prelude","ExtensionThis trait defines functions to interact with an…",null,null],[10,"new_from_bytes","","Build a new extension from a byte slice.",45,[[],[["result",4],["extensionerror",4]]]],[10,"get_type","","Each extension has an extension type. This should be an…",45,[[],["extensiontype",4]]],[10,"to_extension_struct","","Get the extension as `ExtensionStruct` for encoding.",45,[[],["extensionstruct",3]]],[10,"as_any","","Get a generic trait object for downcasting.",45,[[],["any",8]]],[11,"to_parent_hash_extension","openmls::extensions","Get a reference to the `ParentHashExtension`. Returns an…",45,[[],[["parenthashextension",3],["extensionerror",4],["result",4]]]],[11,"to_capabilities_extension","","Get a reference to the `CapabilitiesExtension`. Returns an…",45,[[],[["result",4],["extensionerror",4],["capabilitiesextension",3]]]],[11,"to_lifetime_extension","","Get a reference to the `LifetimeExtension`. Returns an…",45,[[],[["lifetimeextension",3],["extensionerror",4],["result",4]]]],[11,"to_key_id_extension","","Get a reference to the `KeyIDExtension`. Returns an…",45,[[],[["keyidextension",3],["extensionerror",4],["result",4]]]],[11,"to_ratchet_tree_extension_ref","","Get a reference to the `RatchetTreeExtension`. Returns an…",45,[[],[["result",4],["ratchettreeextension",3],["extensionerror",4]]]],[8,"ExtensionHelper","openmls::prelude","",null,null],[10,"clone_it","","",46,[[],[["box",3],["extension",8]]]],[11,"from","openmls::ciphersuite","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","openmls::ciphersuite::errors","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","openmls::codec","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","openmls::config","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","openmls::config::errors","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_string","","",24,[[],["string",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","openmls::creds","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","openmls::extensions","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","openmls::extensions::capabilities_extension","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","openmls::extensions::errors","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"to_string","","",36,[[],["string",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"to_string","","",37,[[],["string",3]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"to_string","","",38,[[],["string",3]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"to_string","","",39,[[],["string",3]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","openmls::extensions::key_package_id_extension","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","openmls::extensions::life_time_extension","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","openmls::extensions::parent_hash_extension","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","openmls::extensions::ratchet_tree_extension","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","openmls::framing","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"from","openmls::framing::errors","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_string","","",58,[[],["string",3]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_string","","",59,[[],["string",3]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"from","openmls::framing::sender","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"from","openmls::group","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"from","openmls::group::errors","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"from","openmls::group::managed_group","",71,[[]]],[11,"into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"from","openmls::group::managed_group::callbacks","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"vzip","","",73,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"from","openmls::group::managed_group::config","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"from","openmls::group::managed_group::errors","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_string","","",79,[[],["string",3]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"from","openmls::group::mls_group","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"from","openmls::key_packages","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"from","openmls::key_packages::errors","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"to_string","","",83,[[],["string",3]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"from","openmls::messages","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"vzip","","",85,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"from","openmls::messages::proposals","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"vzip","","",91,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"vzip","","",92,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"vzip","","",94,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"vzip","","",95,[[]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"vzip","","",96,[[]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"vzip","","",97,[[]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"vzip","","",98,[[]]],[11,"from","openmls::schedule","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"vzip","","",99,[[]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"vzip","","",100,[[]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"vzip","","",101,[[]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"vzip","","",102,[[]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"vzip","","",103,[[]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"vzip","","",104,[[]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"vzip","","",105,[[]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"vzip","","",106,[[]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"vzip","","",107,[[]]],[11,"from","openmls::schedule::psk","",108,[[]]],[11,"into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"vzip","","",108,[[]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"vzip","","",109,[[]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"vzip","","",110,[[]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"vzip","","",111,[[]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"vzip","","",112,[[]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"vzip","","",113,[[]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"vzip","","",114,[[]]],[11,"from","openmls::tree","",115,[[]]],[11,"into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"vzip","","",115,[[]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"vzip","","",116,[[]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"vzip","","",117,[[]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"vzip","","",118,[[]]],[11,"from","openmls::tree::hash_input","",119,[[]]],[11,"into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"vzip","","",119,[[]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"vzip","","",120,[[]]],[11,"from","openmls::tree::index","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"vzip","","",121,[[]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"vzip","","",122,[[]]],[11,"from","openmls::tree::node","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"vzip","","",123,[[]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"vzip","","",124,[[]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"vzip","","",125,[[]]],[11,"from","openmls::tree::path_keys","",126,[[]]],[11,"into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"vzip","","",126,[[]]],[11,"from","openmls::tree::private_tree","",127,[[]]],[11,"into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"vzip","","",127,[[]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"vzip","","",128,[[]]],[11,"from","openmls::tree::secret_tree","",129,[[]]],[11,"into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"vzip","","",129,[[]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"vzip","","",130,[[]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"vzip","","",131,[[]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"vzip","","",132,[[]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"vzip","","",133,[[]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"vzip","","",134,[[]]],[11,"from","openmls::tree::sender_ratchet","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"vzip","","",135,[[]]],[11,"from","openmls::tree::treemath","",136,[[]]],[11,"into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"vzip","","",136,[[]]],[11,"unsigned_payload","openmls::messages","",88,[[],[["vec",3],["result",4],["codecerror",4]]]],[11,"encode","openmls::ciphersuite","",11,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",11,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",8,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",6,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",6,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",0,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",0,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",4,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",4,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",2,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",2,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::config","",23,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",23,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::creds","",30,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",30,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",26,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",26,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",27,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",27,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::extensions","",33,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",33,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",32,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",32,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::framing::sender","",61,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",61,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",60,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",60,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::framing","",47,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",47,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",48,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",48,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",56,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",56,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",57,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",57,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",49,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",50,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",50,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",51,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",51,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",52,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",53,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",53,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",54,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",54,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",55,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",55,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::group","",62,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",62,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",63,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",63,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",64,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",64,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",65,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",65,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::key_packages","",81,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",81,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::messages","",88,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",86,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",86,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",87,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",87,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",89,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",89,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",85,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",85,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",84,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",84,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",90,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",90,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::messages::proposals","",97,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",98,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",98,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",91,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",91,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",94,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",94,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",95,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",95,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",96,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",96,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::schedule","",100,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",100,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::tree::node","",125,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",125,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",123,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",123,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::tree","",116,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",116,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",117,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",117,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::tree::secret_tree","",130,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::tree::hash_input","",119,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",120,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::tree::index","",122,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::tree::node","",124,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",124,[[["cursor",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::tree::secret_tree","",129,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"get_type","openmls::extensions::capabilities_extension","",34,[[],["extensiontype",4]]],[11,"new_from_bytes","","Build a new CapabilitiesExtension from a byte slice.…",34,[[],[["result",4],["extensionerror",4]]]],[11,"to_extension_struct","","",34,[[],["extensionstruct",3]]],[11,"as_any","","",34,[[],["any",8]]],[11,"get_type","openmls::extensions::key_package_id_extension","",41,[[],["extensiontype",4]]],[11,"new_from_bytes","","Build a new KeyIDExtension from a byte slice.",41,[[],[["result",4],["extensionerror",4]]]],[11,"to_extension_struct","","",41,[[],["extensionstruct",3]]],[11,"as_any","","",41,[[],["any",8]]],[11,"get_type","openmls::extensions::life_time_extension","",42,[[],["extensiontype",4]]],[11,"new_from_bytes","","Build a new LifetimeExtension from a byte slice.",42,[[],[["result",4],["extensionerror",4]]]],[11,"to_extension_struct","","",42,[[],["extensionstruct",3]]],[11,"as_any","","",42,[[],["any",8]]],[11,"get_type","openmls::extensions::parent_hash_extension","",43,[[],["extensiontype",4]]],[11,"new_from_bytes","","Build a new ParentHashExtension from a byte slice.",43,[[],[["result",4],["extensionerror",4]]]],[11,"to_extension_struct","","",43,[[],["extensionstruct",3]]],[11,"as_any","","",43,[[],["any",8]]],[11,"get_type","openmls::extensions::ratchet_tree_extension","",44,[[],["extensiontype",4]]],[11,"new_from_bytes","","Build a new RatchetTreeExtension from a byte slice.",44,[[],[["result",4],["extensionerror",4]]]],[11,"to_extension_struct","","",44,[[],["extensionstruct",3]]],[11,"as_any","","",44,[[],["any",8]]],[11,"from","openmls::ciphersuite","",2,[[["vec",3]]]],[11,"from","","",2,[[]]],[11,"from","openmls::codec","",16,[[["configerror",4]],["codecerror",4]]],[11,"from","openmls::config::errors","",24,[[["codecerror",4]]]],[11,"from","openmls::config","",22,[[["persistentconfig",3]]]],[11,"from","openmls::creds","",29,[[["configerror",4]],["credentialerror",4]]],[11,"from","","",26,[[["mlscredentialtype",4]]]],[11,"from","openmls::extensions::errors","",35,[[["configerror",4]]]],[11,"from","","",35,[[["codecerror",4]]]],[11,"from","openmls::codec","",16,[[["extensionerror",4]]]],[11,"from","openmls::framing::sender","",61,[[]]],[11,"from","openmls::framing","",56,[[]]],[11,"from","","",56,[[["mlsplaintextcontenttype",4]]]],[11,"from","","",54,[[["mlsplaintext",3]]]],[11,"from","","",55,[[["mlsplaintext",3]]]],[11,"from","","",55,[[["confirmationtag",3]]]],[11,"from","openmls::group::errors","",66,[[["mlsciphertexterror",4]]]],[11,"from","","",67,[[["treeerror",4]],["welcomeerror",4]]],[11,"from","","",68,[[["configerror",4]],["applycommiterror",4]]],[11,"from","","",68,[[["extensionerror",4]],["applycommiterror",4]]],[11,"from","","",67,[[["configerror",4]],["welcomeerror",4]]],[11,"from","openmls::group::managed_group::errors","",78,[[["configerror",4]],["managedgrouperror",4]]],[11,"from","","",78,[[["codecerror",4]],["managedgrouperror",4]]],[11,"from","","",78,[[["grouperror",4]],["managedgrouperror",4]]],[11,"from","","",78,[[["createcommiterror",4]],["managedgrouperror",4]]],[11,"from","","",78,[[["exportererror",4]],["managedgrouperror",4]]],[11,"from","openmls::group::managed_group","",72,[[["mlsplaintext",3]]]],[11,"from","","",72,[[["mlsciphertext",3]]]],[11,"from","openmls::key_packages::errors","",83,[[["extensionerror",4]]]],[11,"from","","",83,[[["configerror",4]]]],[11,"from","openmls::messages::proposals","",97,[[]]],[11,"from","openmls::tree::index","",121,[[],["nodeindex",3]]],[11,"from","","",121,[[],["nodeindex",3]]],[11,"from","","",121,[[["leafindex",3]],["nodeindex",3]]],[11,"from","","",122,[[],["leafindex",3]]],[11,"from","","",122,[[],["leafindex",3]]],[11,"from","","",122,[[["nodeindex",3]],["leafindex",3]]],[11,"from","openmls::tree::node","",125,[[]]],[11,"from","openmls::tree","",118,[[["configerror",4]],["treeerror",4]]],[11,"into","openmls::tree::index","",122,[[]]],[11,"into","","",122,[[]]],[11,"clone","openmls::ciphersuite","",11,[[],["ciphersuitename",4]]],[11,"clone","","",0,[[],["hpkeciphertext",3]]],[11,"clone","","",2,[[],["secret",3]]],[11,"clone","","",4,[[],["reuseguard",3]]],[11,"clone","","",5,[[],["aeadnonce",3]]],[11,"clone","","",6,[[],["signature",3]]],[11,"clone","","",7,[[],["signatureprivatekey",3]]],[11,"clone","","",8,[[],["signaturepublickey",3]]],[11,"clone","","",9,[[],["signaturekeypair",3]]],[11,"clone","","",10,[[]]],[11,"clone","openmls::config","",23,[[],["protocolversion",4]]],[11,"clone","openmls::creds","",30,[[],["credentialtype",4]]],[11,"clone","","",25,[[],["certificate",3]]],[11,"clone","","",31,[[],["mlscredentialtype",4]]],[11,"clone","","",26,[[],["credential",3]]],[11,"clone","","",27,[[],["basiccredential",3]]],[11,"clone","openmls::extensions::capabilities_extension","",34,[[],["capabilitiesextension",3]]],[11,"clone","openmls::extensions::errors","",35,[[],["extensionerror",4]]],[11,"clone","","",36,[[],["lifetimeextensionerror",4]]],[11,"clone","","",37,[[],["capabilitiesextensionerror",4]]],[11,"clone","","",38,[[],["keypackageiderror",4]]],[11,"clone","","",39,[[],["parenthasherror",4]]],[11,"clone","","",40,[[],["ratchettreeerror",4]]],[11,"clone","openmls::extensions::key_package_id_extension","",41,[[],["keyidextension",3]]],[11,"clone","openmls::extensions::life_time_extension","",42,[[],["lifetimeextension",3]]],[11,"clone","openmls::extensions::parent_hash_extension","",43,[[],["parenthashextension",3]]],[11,"clone","openmls::extensions::ratchet_tree_extension","",44,[[],["ratchettreeextension",3]]],[11,"clone","openmls::extensions","",33,[[],["extensiontype",4]]],[11,"clone","","",32,[[],["extensionstruct",3]]],[11,"clone","openmls::framing::sender","",61,[[],["sendertype",4]]],[11,"clone","","",60,[[],["sender",3]]],[11,"clone","openmls::framing","",47,[[],["mlsplaintext",3]]],[11,"clone","","",48,[[],["mlsciphertext",3]]],[11,"clone","","",56,[[],["contenttype",4]]],[11,"clone","","",57,[[],["mlsplaintextcontenttype",4]]],[11,"clone","","",50,[[],["mlssenderdata",3]]],[11,"clone","","",51,[[],["mlsciphertextsenderdataaad",3]]],[11,"clone","","",52,[[],["mlsciphertextcontent",3]]],[11,"clone","","",53,[[],["mlsciphertextcontentaad",3]]],[11,"clone","openmls::group::managed_group::callbacks","",73,[[],["managedgroupcallbacks",3]]],[11,"clone","openmls::group::managed_group::config","",77,[[],["handshakemessageformat",4]]],[11,"clone","","",75,[[],["managedgroupconfig",3]]],[11,"clone","","",76,[[],["updatepolicy",3]]],[11,"clone","openmls::group::managed_group","",72,[[],["mlsmessage",4]]],[11,"clone","openmls::group","",62,[[],["groupid",3]]],[11,"clone","","",63,[[],["groupepoch",3]]],[11,"clone","","",64,[[],["groupcontext",3]]],[11,"clone","","",65,[[],["groupconfig",3]]],[11,"clone","openmls::key_packages::errors","",83,[[],["keypackageerror",4]]],[11,"clone","openmls::key_packages","",81,[[],["keypackage",3]]],[11,"clone","openmls::messages::proposals","",97,[[],["proposaltype",4]]],[11,"clone","","",98,[[],["proposal",4]]],[11,"clone","","",91,[[],["proposalid",3]]],[11,"clone","","",92,[[],["queuedproposal",3]]],[11,"clone","","",94,[[],["addproposal",3]]],[11,"clone","","",95,[[],["updateproposal",3]]],[11,"clone","","",96,[[],["removeproposal",3]]],[11,"clone","openmls::messages","",84,[[],["welcome",3]]],[11,"clone","","",85,[[],["encryptedgroupsecrets",3]]],[11,"clone","","",86,[[],["commit",3]]],[11,"clone","","",87,[[],["confirmationtag",3]]],[11,"clone","openmls::schedule::psk","",113,[[],["psktype",4]]],[11,"clone","openmls::schedule","",99,[[],["initsecret",3]]],[11,"clone","","",100,[[],["joinersecret",3]]],[11,"clone","openmls::tree::index","",121,[[],["nodeindex",3]]],[11,"clone","","",122,[[],["leafindex",3]]],[11,"clone","openmls::tree::node","",125,[[],["nodetype",4]]],[11,"clone","","",123,[[],["node",3]]],[11,"clone","","",124,[[],["parentnode",3]]],[11,"clone","openmls::tree::secret_tree","",133,[[],["secrettype",4]]],[11,"clone","","",130,[[],["secrettreenode",3]]],[11,"clone","openmls::tree::sender_ratchet","",135,[[],["senderratchet",3]]],[11,"clone","openmls::tree","",116,[[],["updatepathnode",3]]],[11,"clone","","",117,[[],["updatepath",3]]],[11,"clone","","",118,[[],["treeerror",4]]],[11,"default","openmls::ciphersuite","",2,[[]]],[11,"default","openmls::config","",23,[[]]],[11,"default","openmls::extensions::capabilities_extension","",34,[[]]],[11,"default","openmls::extensions::key_package_id_extension","",41,[[],["keyidextension",3]]],[11,"default","openmls::extensions::life_time_extension","",42,[[]]],[11,"default","openmls::extensions::parent_hash_extension","",43,[[],["parenthashextension",3]]],[11,"default","openmls::extensions::ratchet_tree_extension","",44,[[],["ratchettreeextension",3]]],[11,"default","openmls::extensions","",33,[[]]],[11,"default","openmls::group::managed_group::callbacks","",73,[[],["managedgroupcallbacks",3]]],[11,"default","openmls::group::managed_group::config","",76,[[]]],[11,"default","openmls::group","",65,[[]]],[11,"default","openmls::messages::proposals","",93,[[],["proposalqueue",3]]],[11,"default","openmls::tree::index","",121,[[],["nodeindex",3]]],[11,"default","openmls::tree::path_keys","",126,[[],["pathkeys",3]]],[11,"default","openmls::tree::private_tree","",127,[[]]],[11,"cmp","openmls::config","",23,[[["protocolversion",4]],["ordering",4]]],[11,"cmp","openmls::extensions","",33,[[["extensiontype",4]],["ordering",4]]],[11,"cmp","","",45,[[],["ordering",4]]],[11,"cmp","openmls::tree::index","",121,[[["nodeindex",3]],["ordering",4]]],[11,"cmp","","",122,[[["leafindex",3]],["ordering",4]]],[11,"eq","openmls::ciphersuite","",11,[[["ciphersuitename",4]]]],[11,"eq","","",0,[[["hpkeciphertext",3]]]],[11,"ne","","",0,[[["hpkeciphertext",3]]]],[11,"eq","","",3,[[["aeadkey",3]]]],[11,"ne","","",3,[[["aeadkey",3]]]],[11,"eq","","",4,[[["reuseguard",3]]]],[11,"ne","","",4,[[["reuseguard",3]]]],[11,"eq","","",5,[[["aeadnonce",3]]]],[11,"ne","","",5,[[["aeadnonce",3]]]],[11,"eq","","",6,[[["signature",3]]]],[11,"ne","","",6,[[["signature",3]]]],[11,"eq","","",10,[[["ciphersuite",3]]]],[11,"eq","","",8,[[]]],[11,"eq","openmls::codec","",16,[[["codecerror",4]]]],[11,"eq","openmls::config::errors","",24,[[["configerror",4]]]],[11,"eq","openmls::config","",23,[[["protocolversion",4]]]],[11,"eq","openmls::creds","",30,[[["credentialtype",4]]]],[11,"eq","","",25,[[["certificate",3]]]],[11,"ne","","",25,[[["certificate",3]]]],[11,"eq","","",31,[[["mlscredentialtype",4]]]],[11,"ne","","",31,[[["mlscredentialtype",4]]]],[11,"eq","","",26,[[["credential",3]]]],[11,"ne","","",26,[[["credential",3]]]],[11,"eq","","",27,[[]]],[11,"eq","openmls::extensions::capabilities_extension","",34,[[["capabilitiesextension",3]]]],[11,"ne","","",34,[[["capabilitiesextension",3]]]],[11,"eq","openmls::extensions::errors","",35,[[["extensionerror",4]]]],[11,"ne","","",35,[[["extensionerror",4]]]],[11,"eq","","",36,[[["lifetimeextensionerror",4]]]],[11,"eq","","",37,[[["capabilitiesextensionerror",4]]]],[11,"eq","","",38,[[["keypackageiderror",4]]]],[11,"eq","","",39,[[["parenthasherror",4]]]],[11,"eq","","",40,[[["ratchettreeerror",4]]]],[11,"eq","openmls::extensions::key_package_id_extension","",41,[[["keyidextension",3]]]],[11,"ne","","",41,[[["keyidextension",3]]]],[11,"eq","openmls::extensions::life_time_extension","",42,[[["lifetimeextension",3]]]],[11,"ne","","",42,[[["lifetimeextension",3]]]],[11,"eq","openmls::extensions::parent_hash_extension","",43,[[["parenthashextension",3]]]],[11,"ne","","",43,[[["parenthashextension",3]]]],[11,"eq","openmls::extensions::ratchet_tree_extension","",44,[[["ratchettreeextension",3]]]],[11,"ne","","",44,[[["ratchettreeextension",3]]]],[11,"eq","openmls::extensions","",33,[[["extensiontype",4]]]],[11,"eq","","",32,[[["extensionstruct",3]]]],[11,"ne","","",32,[[["extensionstruct",3]]]],[11,"eq","","",45,[[]]],[11,"eq","openmls::framing::sender","",61,[[["sendertype",4]]]],[11,"eq","","",60,[[["sender",3]]]],[11,"ne","","",60,[[["sender",3]]]],[11,"eq","openmls::framing","",47,[[["mlsplaintext",3]]]],[11,"ne","","",47,[[["mlsplaintext",3]]]],[11,"eq","","",48,[[["mlsciphertext",3]]]],[11,"ne","","",48,[[["mlsciphertext",3]]]],[11,"eq","","",56,[[["contenttype",4]]]],[11,"eq","","",57,[[["mlsplaintextcontenttype",4]]]],[11,"ne","","",57,[[["mlsplaintextcontenttype",4]]]],[11,"eq","openmls::group::errors","",66,[[["grouperror",4]]]],[11,"eq","","",67,[[["welcomeerror",4]]]],[11,"eq","","",68,[[["applycommiterror",4]]]],[11,"eq","","",69,[[["createcommiterror",4]]]],[11,"eq","","",70,[[["exportererror",4]]]],[11,"eq","openmls::group::managed_group::errors","",78,[[["managedgrouperror",4]]]],[11,"ne","","",78,[[["managedgrouperror",4]]]],[11,"eq","openmls::group::managed_group","",72,[[["mlsmessage",4]]]],[11,"ne","","",72,[[["mlsmessage",4]]]],[11,"eq","openmls::group","",62,[[["groupid",3]]]],[11,"ne","","",62,[[["groupid",3]]]],[11,"eq","","",63,[[["groupepoch",3]]]],[11,"ne","","",63,[[["groupepoch",3]]]],[11,"eq","openmls::key_packages::errors","",83,[[["keypackageerror",4]]]],[11,"eq","openmls::key_packages","",81,[[["keypackage",3]]]],[11,"ne","","",81,[[["keypackage",3]]]],[11,"eq","openmls::messages::proposals","",97,[[["proposaltype",4]]]],[11,"eq","","",98,[[["proposal",4]]]],[11,"ne","","",98,[[["proposal",4]]]],[11,"eq","","",91,[[["proposalid",3]]]],[11,"ne","","",91,[[["proposalid",3]]]],[11,"eq","","",94,[[["addproposal",3]]]],[11,"ne","","",94,[[["addproposal",3]]]],[11,"eq","","",95,[[["updateproposal",3]]]],[11,"ne","","",95,[[["updateproposal",3]]]],[11,"eq","","",96,[[["removeproposal",3]]]],[11,"ne","","",96,[[["removeproposal",3]]]],[11,"eq","openmls::messages","",84,[[["welcome",3]]]],[11,"ne","","",84,[[["welcome",3]]]],[11,"eq","","",85,[[["encryptedgroupsecrets",3]]]],[11,"ne","","",85,[[["encryptedgroupsecrets",3]]]],[11,"eq","","",86,[[["commit",3]]]],[11,"ne","","",86,[[["commit",3]]]],[11,"eq","","",87,[[["confirmationtag",3]]]],[11,"ne","","",87,[[["confirmationtag",3]]]],[11,"eq","openmls::schedule::psk","",113,[[["psktype",4]]]],[11,"eq","openmls::tree::index","",121,[[["nodeindex",3]]]],[11,"ne","","",121,[[["nodeindex",3]]]],[11,"eq","","",122,[[["leafindex",3]]]],[11,"ne","","",122,[[["leafindex",3]]]],[11,"eq","openmls::tree::node","",125,[[["nodetype",4]]]],[11,"eq","","",123,[[["node",3]]]],[11,"ne","","",123,[[["node",3]]]],[11,"eq","","",124,[[["parentnode",3]]]],[11,"ne","","",124,[[["parentnode",3]]]],[11,"eq","openmls::tree::secret_tree","",132,[[["secrettreeerror",4]]]],[11,"eq","openmls::tree","",116,[[["updatepathnode",3]]]],[11,"ne","","",116,[[["updatepathnode",3]]]],[11,"eq","","",117,[[["updatepath",3]]]],[11,"ne","","",117,[[["updatepath",3]]]],[11,"eq","","",118,[[["treeerror",4]]]],[11,"partial_cmp","openmls::config","",23,[[["protocolversion",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","openmls::extensions","",33,[[["extensiontype",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",45,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","openmls::tree::index","",121,[[["nodeindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",121,[[["nodeindex",3]]]],[11,"le","","",121,[[["nodeindex",3]]]],[11,"gt","","",121,[[["nodeindex",3]]]],[11,"ge","","",121,[[["nodeindex",3]]]],[11,"partial_cmp","","",122,[[["leafindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",122,[[["leafindex",3]]]],[11,"le","","",122,[[["leafindex",3]]]],[11,"gt","","",122,[[["leafindex",3]]]],[11,"ge","","",122,[[["leafindex",3]]]],[11,"deref","openmls::config","",19,[[],["config",3]]],[11,"fmt","openmls::ciphersuite::errors","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::ciphersuite","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::codec","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::config::errors","",24,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::config","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::creds","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::capabilities_extension","",34,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::errors","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::key_package_id_extension","",41,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::life_time_extension","",42,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::parent_hash_extension","",43,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::ratchet_tree_extension","",44,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::framing::errors","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::framing::sender","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::framing","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::group::errors","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::group::managed_group::errors","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::group::managed_group","",72,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::group","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::key_packages::errors","",83,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::key_packages","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::messages::proposals","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::messages","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::schedule::psk","",113,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::schedule","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::index","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::node","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::path_keys","",126,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::private_tree","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::secret_tree","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::treemath","",136,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::ciphersuite::errors","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::ciphersuite","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::config::errors","",24,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::errors","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::framing::errors","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::group::managed_group::errors","",79,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::key_packages::errors","",83,[[["formatter",3]],["result",6]]],[11,"hash","openmls::ciphersuite","",11,[[]]],[11,"hash","openmls::extensions","",33,[[]]],[11,"hash","","",32,[[]]],[11,"hash","openmls::group","",62,[[]]],[11,"hash","openmls::messages::proposals","",91,[[]]],[11,"hash","openmls::tree::index","",121,[[]]],[11,"hash","","",122,[[]]],[11,"try_from","openmls::ciphersuite","",11,[[],["result",4]]],[11,"try_from","openmls::creds","",30,[[],["result",4]]],[11,"try_from","openmls::extensions","Get the `ExtensionType` from a u16. Returns an error if…",33,[[],["result",4]]],[11,"try_from","openmls::tree::secret_tree","",133,[[["contenttype",4]],[["result",4],["secrettype",4],["secrettypeerror",4]]]],[11,"try_from","","",133,[[["mlsplaintext",3]],[["result",4],["secrettype",4],["secrettypeerror",4]]]],[11,"description","openmls::ciphersuite::errors","",12,[[]]],[11,"description","","",13,[[]]],[11,"description","openmls::config::errors","",24,[[]]],[11,"description","openmls::extensions::errors","",35,[[]]],[11,"description","openmls::framing::errors","",58,[[]]],[11,"description","","",59,[[]]],[11,"description","openmls::group::managed_group::errors","",79,[[]]],[11,"description","openmls::key_packages::errors","",83,[[]]],[11,"deserialize","openmls::ciphersuite","",11,[[],["result",4]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"deserialize","openmls::config","",20,[[],["result",4]]],[11,"deserialize","","",21,[[],["result",4]]],[11,"deserialize","","",23,[[],["result",4]]],[11,"deserialize","openmls::extensions","",33,[[],["result",4]]],[11,"serialize","openmls::ciphersuite","",11,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","openmls::config","",23,[[],["result",4]]],[11,"serialize","openmls::extensions","",33,[[],["result",4]]],[11,"initialize","openmls::config","",19,[[]]],[11,"derive_exported_secret","openmls::schedule","Derive a `Secret` from the exporter secret. We return…",105,[[["ciphersuite",3],["groupcontext",3]],["vec",3]]]],"p":[[3,"HpkeCiphertext"],[3,"KdfLabel"],[3,"Secret"],[3,"AeadKey"],[3,"ReuseGuard"],[3,"AeadNonce"],[3,"Signature"],[3,"SignaturePrivateKey"],[3,"SignaturePublicKey"],[3,"SignatureKeypair"],[3,"Ciphersuite"],[4,"CiphersuiteName"],[4,"HKDFError"],[4,"CryptoError"],[8,"Signable"],[3,"Cursor"],[4,"CodecError"],[4,"VecSize"],[8,"Codec"],[3,"CONFIG"],[3,"Constants"],[3,"PersistentConfig"],[3,"Config"],[4,"ProtocolVersion"],[4,"ConfigError"],[3,"Certificate"],[3,"Credential"],[3,"BasicCredential"],[3,"CredentialBundle"],[4,"CredentialError"],[4,"CredentialType"],[4,"MLSCredentialType"],[3,"ExtensionStruct"],[4,"ExtensionType"],[3,"CapabilitiesExtension"],[4,"ExtensionError"],[4,"LifetimeExtensionError"],[4,"CapabilitiesExtensionError"],[4,"KeyPackageIdError"],[4,"ParentHashError"],[4,"RatchetTreeError"],[3,"KeyIDExtension"],[3,"LifetimeExtension"],[3,"ParentHashExtension"],[3,"RatchetTreeExtension"],[8,"Extension"],[8,"ExtensionHelper"],[3,"MLSPlaintext"],[3,"MLSCiphertext"],[3,"MLSPlaintextTBS"],[3,"MLSSenderData"],[3,"MLSCiphertextSenderDataAAD"],[3,"MLSCiphertextContent"],[3,"MLSCiphertextContentAAD"],[3,"MLSPlaintextCommitContent"],[3,"MLSPlaintextCommitAuthData"],[4,"ContentType"],[4,"MLSPlaintextContentType"],[4,"MLSPlaintextError"],[4,"MLSCiphertextError"],[3,"Sender"],[4,"SenderType"],[3,"GroupId"],[3,"GroupEpoch"],[3,"GroupContext"],[3,"GroupConfig"],[4,"GroupError"],[4,"WelcomeError"],[4,"ApplyCommitError"],[4,"CreateCommitError"],[4,"ExporterError"],[3,"ManagedGroup"],[4,"MLSMessage"],[3,"ManagedGroupCallbacks"],[4,"Removal"],[3,"ManagedGroupConfig"],[3,"UpdatePolicy"],[4,"HandshakeMessageFormat"],[4,"ManagedGroupError"],[4,"InvalidMessageError"],[3,"MlsGroup"],[3,"KeyPackage"],[3,"KeyPackageBundle"],[4,"KeyPackageError"],[3,"Welcome"],[3,"EncryptedGroupSecrets"],[3,"Commit"],[3,"ConfirmationTag"],[3,"GroupInfo"],[3,"PathSecret"],[3,"GroupSecrets"],[3,"ProposalID"],[3,"QueuedProposal"],[3,"ProposalQueue"],[3,"AddProposal"],[3,"UpdateProposal"],[3,"RemoveProposal"],[4,"ProposalType"],[4,"Proposal"],[3,"InitSecret"],[3,"JoinerSecret"],[3,"MemberSecret"],[3,"WelcomeSecret"],[3,"EpochSecret"],[3,"EncryptionSecret"],[3,"ExporterSecret"],[3,"SenderDataSecret"],[3,"EpochSecrets"],[3,"ExternalPsk"],[3,"ReinitPsk"],[3,"BranchPsk"],[3,"PreSharedKeyID"],[3,"PreSharedKeys"],[4,"PSKType"],[4,"Psk"],[3,"RatchetTree"],[3,"UpdatePathNode"],[3,"UpdatePath"],[4,"TreeError"],[3,"ParentNodeHashInput"],[3,"LeafNodeHashInput"],[3,"NodeIndex"],[3,"LeafIndex"],[3,"Node"],[3,"ParentNode"],[4,"NodeType"],[3,"PathKeys"],[3,"CommitSecret"],[3,"PrivateTree"],[3,"TreeContext"],[3,"SecretTreeNode"],[3,"SecretTree"],[4,"SecretTreeError"],[4,"SecretType"],[4,"SecretTypeError"],[3,"SenderRatchet"],[4,"TreeMathError"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);