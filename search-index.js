var searchIndex = JSON.parse('{\
"openmls":{"doc":"OpenMLS","t":[0,5,5,5,5,5,5,5,0,3,12,11,3,12,11,0,5,5,5,5,5,0,0,5,5,5,5,5,5,0,0,4,13,11,4,13,13,13,11,0,8,10,11,11,0,17,17,4,13,13,13,13,13,13,4,13,13,13,13,11,3,12,12,3,12,12,12,11,5,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,3,12,11,3,12,12,12,3,12,11,3,12,3,12,3,12,12,3,12,12,3,12,12,12,3,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,4,13,13,13,11,4,13,13,13,13,11,3,12,12,11,11,11,11,11,11,8,11,11,11,11,5,5,0,0,0,4,13,13,13,13,13,13,11,17,17,17,3,12,3,12,12,3,12,12,12,12,3,12,12,12,12,11,11,11,11,11,11,11,4,13,13,13,11,0,0,0,4,13,13,13,13,13,13,11,4,13,13,3,12,4,13,13,3,12,12,11,11,11,11,3,12,12,12,11,3,12,12,11,11,11,0,0,3,12,12,12,11,11,11,11,5,7,0,4,13,13,13,13,13,13,13,13,13,11,4,13,13,11,4,13,13,13,11,4,13,11,4,13,11,4,13,11,4,13,11,0,3,12,11,11,5,7,0,3,12,12,11,11,5,7,0,3,12,11,11,5,7,0,3,12,11,11,5,7,4,13,13,13,13,13,13,3,12,12,11,11,5,5,5,8,10,10,10,10,11,11,11,11,11,17,8,10,0,0,3,12,12,12,12,12,12,11,11,11,11,3,12,12,12,11,3,12,12,12,11,3,12,12,12,12,3,12,12,12,12,0,11,0,4,13,13,13,13,11,4,13,13,13,13,13,13,13,11,4,13,13,13,13,11,0,3,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,11,11,4,13,13,13,3,12,12,12,11,11,3,12,3,12,12,12,12,12,12,12,11,11,11,3,12,11,11,3,12,12,12,12,12,12,3,12,0,4,13,13,13,3,12,12,11,11,11,0,0,0,4,13,13,13,13,13,13,13,13,13,13,13,13,11,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,4,13,13,11,4,13,11,4,13,13,13,11,0,0,0,3,12,12,12,11,11,11,11,6,6,6,0,4,13,13,3,12,12,12,12,12,11,11,11,11,3,12,12,12,0,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,4,13,13,11,4,13,11,4,13,11,4,13,13,13,13,13,13,11,0,4,13,13,13,13,13,13,13,3,12,12,12,11,11,11,11,3,12,12,11,11,11,3,12,12,11,11,11,3,12,12,11,11,11,3,12,12,11,11,11,3,12,12,12,11,11,11,11,3,12,11,11,4,13,13,13,13,11,0,3,12,12,12,11,11,11,0,3,12,12,12,12,12,12,12,11,3,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,11,11,11,0,0,0,3,12,12,12,11,0,6,3,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,5,5,5,0,0,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,5,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,0,3,12,12,12,12,12,12,12,12,12,12,12,5,5,4,13,13,13,13,11,0,3,12,12,12,6,6,6,0,4,13,13,3,12,12,12,12,12,3,12,12,12,0,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,4,13,4,13,4,13,13,13,13,13,13,0,4,13,13,13,13,13,13,13,3,12,12,12,3,12,12,3,12,12,3,12,12,3,12,12,3,12,12,12,3,12,4,13,13,13,13,3,12,12,12,6,6,6,4,13,13,3,12,12,12,12,12,3,12,12,12,4,13,13,4,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,4,13,4,13,13,13,13,13,13,13,3,12,12,12,3,12,12,3,12,12,3,12,12,3,12,12,3,12,12,12,3,12,4,13,13,13,13,3,12,12,12,12,12,12,12,4,13,13,6,3,12,12,12,12,12,12,12,12,6,3,12,11,11,11,3,12,11,3,12,12,12,12,12,12,11,3,12,12,12,11,0,0,0,4,13,13,13,13,13,13,13,13,13,13,13,13,13,11,3,12,12,12,12,12,12,12,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,4,13,13,13,13,11,3,12,12,3,12,12,11,11,11,11,11,0,0,0,4,13,13,11,4,13,11,4,13,11,0,4,13,13,13,13,13,4,13,13,4,13,13,11,4,13,13,13,13,13,11,11,11,11,11,11,3,12,11,3,12,12,12,12,11,11,11,11,11,3,12,12,11,11,11,11,11,11,11,3,12,3,12,3,12,3,12,3,12,12,12,12,3,12,12,12,12,3,12,12,11,11,11,11,11,3,12,12,11,11,3,12,3,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,3,12,3,12,12,12,11,11,11,3,12,12,12,12,12,12,12,12,12,11,11,3,12,12,12,12,12,12,11,0,0,0,4,13,13,13,11,4,13,11,4,13,13,11,4,13,13,13,13,13,13,13,13,13,13,13,13,13,11,0,4,13,13,13,3,12,11,11,3,12,12,12,11,11,11,3,12,12,11,11,3,12,12,11,11,4,13,13,13,3,12,12,12,11,11,11,11,3,12,11,3,12,12,12,11,3,12,11,11,11,11,11,11,0,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,12,12,12,12,5,5,5,3,12,12,12,3,12,3,12,3,12,11,11,11,11,11,3,12,11,11,11,11,11,3,12,11,11,11,11,11,4,13,13,13,3,12,12,12,12,11,11,11,11,3,12,11,3,12,11,11,11,11,11,3,12,11,3,12,11,11,11,11,3,12,11,11,11,3,12,11,11,11,3,12,11,11,11,3,12,11,11,11,11,3,12,11,11,11,11,3,12,11,11,5,3,12,11,11,11,11,3,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,0,0,0,4,13,13,13,13,13,11,4,13,13,13,13,13,11,0,3,12,12,12,11,11,3,12,12,11,11,3,12,12,12,12,11,11,0,3,12,11,11,11,11,3,12,11,11,0,4,13,13,11,11,3,12,12,12,11,11,11,11,11,11,11,11,11,3,12,12,12,11,11,11,11,11,0,3,12,11,11,0,6,3,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,0,4,13,13,13,11,4,13,13,5,3,12,12,3,12,3,12,12,12,12,11,11,11,11,11,11,11,0,17,17,6,3,12,12,12,11,11,11,11,11,0,4,13,13,13,13,13,13,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,3,12,12,12,3,12,12,12,12,3,12,12,12,3,12,12,12,12,12,12,5,5,5,5,5,5,4,13,13,13,13,13,13,13,13,13,13,13,11,0,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,4,13,13,13,13,13,13,13,11,0,3,12,12,12,12,12,12,12,5,5,4,13,13,13,13,13,13,11,3,12,12,3,12,12,12,12,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,12,12,11,3,12,12,3,12,12,11,0,0,4,13,13,13,13,13,13,13,13,13,4,13,13,4,13,13,13,4,13,4,13,4,13,4,13,0,4,13,13,13,13,13,13,13,13,13,13,13,13,13,3,12,12,12,12,12,12,12,12,4,13,13,13,13,13,13,13,4,13,13,4,13,13,13,13,13,13,3,12,12,12,12,12,12,12,3,12,12,12,3,12,12,12,12,12,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,4,13,13,13,13,3,12,12,12,3,12,12,12,4,13,13,13,13,13,13,4,13,13,13,13,3,12,12,3,12,12,12,3,12,12,12,3,12,3,12,3,12,3,12,12,3,12,12,3,12,12,12,3,12,12,12,12,12,12,4,13,13,13,4,13,13,13,13,3,12,12,8,11,11,11,11,5,5,4,13,13,13,13,13,13,4,13,13,3,12,4,13,13,3,12,12,3,12,12,12,3,12,12,3,12,12,12,4,13,13,13,13,13,13,13,13,13,4,13,13,4,13,13,13,4,13,4,13,4,13,4,13,3,12,3,12,12,3,12,4,13,13,13,13,13,13,3,12,12,8,10,10,10,10,11,11,11,11,11,8,10,4,13,13,13,13,13,13,13,13,13,13,13,13,13,3,12,12,12,12,12,12,12,3,12,12,12,3,12,3,12,3,12,12,12,12,3,12,3,12,3,12,12,3,12,3,12,12,12,3,12,4,13,13,13,4,13,13,13,3,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["utils","randombytes","random_u32","random_u64","random_u8","zero","_bytes_to_hex","_print_tree","error","ErrorString","0","_description","ErrorPayload","0","_description","test_util","write","read","bytes_to_hex","hex_to_bytes","hex_to_bytes_option","ciphersuite","ciphersuites","hash_from_suite","aead_from_suite","kem_from_suite","kdf_from_suite","hpke_kdf_from_suite","hpke_aead_from_suite","codec","errors","HkdfError","InvalidLength","_description","CryptoError","CryptoLibraryError","HpkeDecryptionError","UnsupportedSignatureScheme","_description","signable","Signable","unsigned_payload","sign","verify","ser","NONCE_BYTES","REUSE_GUARD_BYTES","CiphersuiteName","MLS10_128_DHKEMX25519_AES128GCM_SHA256_Ed25519","MLS10_128_DHKEMP256_AES128GCM_SHA256_P256","MLS10_128_DHKEMX25519_CHACHA20POLY1305_SHA256_Ed25519","MLS10_256_DHKEMX448_AES256GCM_SHA512_Ed448","MLS10_256_DHKEMP521_AES256GCM_SHA512_P521","MLS10_256_DHKEMX448_CHACHA20POLY1305_SHA512_Ed448","SignatureScheme","ECDSA_SECP256R1_SHA256","ECDSA_SECP521R1_SHA512","ED25519","ED448","new_keypair","HpkeCiphertext","kem_output","ciphertext","KdfLabel","length","label","context","serialized_label","equal_ct","Secret","ciphersuite","value","mls_version","random","zero","from_slice","hkdf_extract","hkdf_expand","kdf_expand_label","derive_secret","config","as_slice","ciphersuite","version","Mac","mac_value","new","AeadKey","aead_mode","value","mac_len","ReuseGuard","value","from_random","AeadNonce","value","Signature","value","SignaturePrivateKey","signature_scheme","value","SignaturePublicKey","signature_scheme","value","SignatureKeypair","signature_scheme","private_key","public_key","Ciphersuite","name","signature_scheme","hpke","aead","hash","hmac","new","default","signature_scheme","name","hash","hash_length","mac_length","aead_key_length","aead_nonce_length","hpke_seal","hpke_seal_secret","hpke_open","derive_hpke_keypair","from_secret","as_slice","aead_seal","aead_open","from_secret","random","as_slice","xor_with_reuse_guard","new_empty","sign","verify","into_tuple","new","new","verify","sign","codec","errors","CodecError","EncodingError","DecodingError","Other","_description","VecSize","VecU8","VecU16","VecU32","VecU64","len_len","Cursor","buffer","position","new","consume","sub_cursor","is_empty","has_more","raw","Codec","encode","decode","encode_detached","decode_detached","encode_vec","decode_vec","config","codec","errors","ConfigError","InvalidConfig","UnsupportedMlsVersion","UnsupportedCiphersuite","UnsupportedSignatureScheme","IncompatibleMlsVersion","IncompatibleCiphersuite","_description","DEFAULT_KEY_PACKAGE_LIFETIME","DEFAULT_KEY_PACKAGE_LIFETIME_MARGIN","SUPPORTED_CIPHERSUITE_NAMES","CONFIG","__private_field","Constants","default_key_package_lifetime","key_package_lifetime_margin","PersistentConfig","protocol_versions","ciphersuites","extensions","constants","Config","protocol_versions","ciphersuites","extensions","constants","supported_extensions","supported_ciphersuites","supported_ciphersuite_names","supported_versions","ciphersuite","default_key_package_lifetime","key_package_lifetime_margin","ProtocolVersion","Reserved","Mls10","Mls10Draft11","is_supported","credentials","codec","errors","CredentialError","ConfigError","CryptoError","CodecError","UnsupportedCredentialType","InvalidSignature","SignatureError","_description","CredentialType","Basic","X509","Certificate","cert_data","MlsCredentialType","Basic","X509","Credential","credential_type","credential","verify","identity","signature_scheme","signature_key","BasicCredential","identity","signature_scheme","public_key","verify","CredentialBundle","credential","signature_private_key","new","credential","sign","extensions","capabilities_extension","CapabilitiesExtension","versions","ciphersuites","extensions","new","versions","ciphersuites","extensions","__init16518203259712514104","__init16518203259712514104___rust_ctor___ctor","errors","ExtensionError","InvalidExtensionType","Capabilities","Lifetime","KeyPackageId","ParentHash","RatchetTree","CodecError","ConfigError","InvalidExtension","_description","LifetimeExtensionError","Invalid","Expired","_description","CapabilitiesExtensionError","Invalid","EmptyVersionsField","UnsupportedCiphersuite","_description","KeyPackageIdError","Invalid","_description","ParentHashError","Invalid","_description","RatchetTreeError","Invalid","_description","InvalidExtensionError","Duplicate","_description","key_package_id_extension","KeyIdExtension","key_id","new","as_slice","__init8638611003337923728","__init8638611003337923728___rust_ctor___ctor","life_time_extension","LifetimeExtension","not_before","not_after","new","is_valid","__init6011765713567273734","__init6011765713567273734___rust_ctor___ctor","parent_hash_extension","ParentHashExtension","parent_hash","new","parent_hash","__init8216850123135685403","__init8216850123135685403___rust_ctor___ctor","ratchet_tree_extension","RatchetTreeExtension","tree","new","into_vector","__init16993038184397398079","__init16993038184397398079___rust_ctor___ctor","ExtensionType","Reserved","Capabilities","Lifetime","KeyId","ParentHash","RatchetTree","ExtensionStruct","extension_type","extension_data","new","extension_data","from_bytes","encode_extensions","extensions_vec_from_cursor","Extension","new_from_bytes","extension_type","to_extension_struct","as_any","to_parent_hash_extension","to_capabilities_extension","to_lifetime_extension","to_key_id_extension","as_ratchet_tree_extension","_Extension_registry","ExtensionHelper","clone_it","framing","ciphertext","MlsCiphertext","group_id","epoch","content_type","authenticated_data","encrypted_sender_data","ciphertext","try_from_plaintext","to_plaintext","is_handshake_message","encode_padded_ciphertext_content_detached","MlsSenderData","sender","generation","reuse_guard","new","MlsSenderDataAad","group_id","epoch","content_type","new","MlsCiphertextContent","content","signature","confirmation_tag","padding","MlsCiphertextContentAad","group_id","epoch","content_type","authenticated_data","codec","decode","errors","MlsPlaintextError","NotAnApplicationMessage","UnknownSender","InvalidSignature","InvalidMembershipTag","_description","MlsCiphertextError","PlaintextError","SecretTreeError","CodecError","InvalidContentType","GenerationOutOfBound","EncryptionError","DecryptionError","_description","VerificationError","CodecError","CredentialError","MissingMembershipTag","InvalidMembershipTag","_description","plaintext","MlsPlaintext","group_id","epoch","sender","authenticated_data","content_type","content","signature","confirmation_tag","membership_tag","new_from_member","new_from_proposal_member","new_from_application","content","sender","sign_from_external","sign_from_member","add_membership_tag","verify_signature","verify_membership_tag","verify_from_member","as_application_message","is_handshake_message","is_proposal","group_id","epoch","ContentType","Application","Proposal","Commit","is_handshake_message","is_proposal","MlsPlaintextContentType","Application","Proposal","Commit","MlsPlaintextTbmPayload","tbs_payload","signature","confirmation_tag","new","into_bytes","MembershipTag","0","MlsPlaintextTbs","serialized_context_option","group_id","epoch","sender","authenticated_data","content_type","payload","new_from","sign","verify","MlsPlaintextTbsPayload","payload","new_from_mls_plaintext","sign","MlsPlaintextCommitContent","group_id","epoch","sender","content_type","commit","signature","MlsPlaintextCommitAuthData","confirmation_tag","sender","SenderType","Member","Preconfigured","NewMember","Sender","sender_type","sender","is_member","to_leaf_index","member","group","codec","errors","GroupError","MlsCiphertextError","WelcomeError","ApplyCommitError","CreateCommitError","ConfigError","ExporterError","ProposalQueueError","CodecError","KeyScheduleError","MathError","PskError","InitSecretNotFound","_description","WelcomeError","InvalidRatchetTree","ParentHashMismatch","GroupSecretsDecryptionFailure","CodecError","KeyScheduleError","PskError","CiphersuiteMismatch","JoinerSecretNotFound","MissingRatchetTree","TreeHashMismatch","ConfirmationTagMismatch","InvalidGroupInfoSignature","GroupInfoDecryptionFailure","DuplicateRatchetTreeExtension","UnsupportedMlsVersion","UnknownError","_description","ApplyCommitError","PlaintextSignatureFailure","DecryptionFailure","CodecError","KeyScheduleError","PskError","EpochMismatch","WrongPlaintextContentType","SelfRemoved","PathKeyPackageVerificationFailure","NoParentHashExtension","ParentHashMismatch","RequiredPathNotFound","ConfirmationTagMissing","ConfirmationTagMismatch","MissingOwnKeyPackage","MissingProposal","OwnKeyNotFound","InitSecretNotFound","_description","CreateCommitError","CannotRemoveSelf","OwnKeyNotFound","_description","ExporterError","KeyLengthTooLong","_description","PskError","PskSecretError","NoPskFetcherProvided","PskIdNotFound","_description","group_context","managed_group","callbacks","ManagedGroupCallbacks","validate_add","validate_remove","auto_save","new","with_validate_add","with_validate_remove","with_auto_save","ValidateAdd","ValidateRemove","AutoSave","config","HandshakeMessageFormat","Plaintext","Ciphertext","ManagedGroupConfig","handshake_message_format","update_policy","padding_size","number_of_resumption_secrets","callbacks","new","padding_size","callbacks","set_callbacks","UpdatePolicy","maximum_time","maximum_sent_messages","maximum_received_messages","errors","ManagedGroupError","LibraryError","Codec","Config","Group","CreateCommit","UseAfterEviction","PendingProposalsExist","Exporter","EmptyInput","KeyStoreError","InvalidMessage","NoMatchingCredentialBundle","NoMatchingKeyPackageBundle","PoisonedCredentialBundle","_description","EmptyInputError","AddMembers","RemoveMembers","_description","UseAfterEviction","Error","_description","PendingProposalsError","Exists","_description","InvalidMessageError","InvalidCiphertext","CommitError","GroupError","MembershipTagMismatch","InvalidProposal","CommitWithInvalidProposals","_description","events","GroupEvent","MemberAdded","MemberRemoved","MemberUpdated","PskReceived","ReInit","ApplicationMessage","Error","MemberAddedEvent","aad","sender","added_member","new","aad","sender","added_member","MemberRemovedEvent","aad","removal","new","aad","removal","MemberUpdatedEvent","aad","updated_member","new","aad","updated_member","PskReceivedEvent","aad","psk_id","new","aad","psk_id","ReInitEvent","aad","re_init_proposal","new","aad","psk_id","ApplicationMessageEvent","aad","sender","message","new","aad","sender","message","ErrorEvent","error","new","error","Removal","WeLeft","TheyLeft","WeWereRemovedBy","TheyWereRemovedBy","new","resumption","ResumptionSecretStore","number_of_secrets","resumption_secrets","cursor","new","add","get","ser","SerializedManagedGroup","managed_group_config","group","pending_proposals","own_kpbs","aad","resumption_secret_store","active","into_managed_group","ManagedGroup","managed_group_config","group","pending_proposals","own_kpbs","aad","resumption_secret_store","active","new","new_from_welcome","add_members","remove_members","propose_add_member","propose_remove_member","leave_group","members","process_message","create_message","process_pending_proposals","export_secret","authentication_secret","get_resumption_secret","configuration","set_configuration","aad","set_aad","ciphersuite","is_active","credential","group_id","self_update","propose_self_update","pending_proposals","load","save","export_ratchet_tree","export_path_secrets","export_group_context","tree_hash","print_tree","plaintext_to_mls_message","validate_proposal","validate_inline_proposals","prepare_events","prepare_proposal_event","auto_save","indexed_members","MlsMessage","Plaintext","Ciphertext","group_id","epoch","is_handshake_message","mls_group","apply_commit","create_commit","PlaintextSecret","public_key","group_secrets_bytes","key_package_hash","new","new_from_welcome","CreateCommitResult","MlsGroup","ciphersuite","group_context","epoch_secrets","secret_tree","tree","interim_transcript_hash","use_ratchet_tree_extension","mls_version","new","new_from_welcome","create_add_proposal","create_update_proposal","create_remove_proposal","create_presharedkey_proposal","create_commit","apply_commit","create_application_message","encrypt","decrypt","verify_signature","verify_membership_tag","export_secret","authentication_secret","load","save","tree","ciphersuite","context","group_id","extensions","export_public_group_state","use_ratchet_tree_extension","sender_index","epoch_secrets","secret_tree_mut","interim_transcript_hash","epoch_secrets_mut","context_mut","PskFetcher","update_confirmed_transcript_hash","update_interim_transcript_hash","psk_output","tests","kat_messages","MessagesTestVector","key_package","capabilities","lifetime","ratchet_tree","group_info","group_secrets","welcome","public_group_state","add_proposal","update_proposal","remove_proposal","pre_shared_key_proposal","re_init_proposal","external_init_proposal","app_ack_proposal","commit","mls_plaintext_application","mls_plaintext_proposal","mls_plaintext_commit","mls_ciphertext","generate_test_vector","run_test_vector","MessagesTestVectorError","LifetimeEncodingMismatch","RatchetTreeEncodingMismatch","WelcomeEncodingMismatch","PublicGroupStateEncodingMismatch","AddProposalEncodingMismatch","MlsCiphertextEncodingMismatch","MlsPlaintextCommitEncodingMismatch","MlsPlaintextProposalEncodingMismatch","MlsPlaintextApplicationEncodingMismatch","CommitEncodingMismatch","PreSharedKeyProposalEncodingMismatch","RemoveProposalEncodingMismatch","UpdateProposalEncodingMismatch","GroupSecretsEncodingMismatch","GroupInfoEncodingMismatch","KeyPackageEncodingMismatch","CapabilitiesEncodingMismatch","_description","kat_transcripts","TranscriptTestVector","cipher_suite","group_id","epoch","tree_hash_before","confirmed_transcript_hash_before","interim_transcript_hash_before","membership_key","confirmation_key","commit","confirmed_transcript_hash_after","interim_transcript_hash_after","generate_test_vector","run_test_vector","TranscriptTestVectorError","MembershipTagVerificationError","ConfirmationTagMismatch","ConfirmedTranscriptHashMismatch","InterimTranscriptHashMismatch","_description","callbacks","ManagedGroupCallbacks","validate_add","validate_remove","auto_save","ValidateAdd","ValidateRemove","AutoSave","config","HandshakeMessageFormat","Plaintext","Ciphertext","ManagedGroupConfig","handshake_message_format","update_policy","padding_size","number_of_resumption_secrets","callbacks","UpdatePolicy","maximum_time","maximum_sent_messages","maximum_received_messages","errors","ManagedGroupError","LibraryError","Codec","Config","Group","CreateCommit","UseAfterEviction","PendingProposalsExist","Exporter","EmptyInput","KeyStoreError","InvalidMessage","NoMatchingCredentialBundle","NoMatchingKeyPackageBundle","PoisonedCredentialBundle","EmptyInputError","AddMembers","RemoveMembers","UseAfterEviction","Error","PendingProposalsError","Exists","InvalidMessageError","InvalidCiphertext","CommitError","GroupError","MembershipTagMismatch","InvalidProposal","CommitWithInvalidProposals","events","GroupEvent","MemberAdded","MemberRemoved","MemberUpdated","PskReceived","ReInit","ApplicationMessage","Error","MemberAddedEvent","aad","sender","added_member","MemberRemovedEvent","aad","removal","MemberUpdatedEvent","aad","updated_member","PskReceivedEvent","aad","psk_id","ReInitEvent","aad","re_init_proposal","ApplicationMessageEvent","aad","sender","message","ErrorEvent","error","Removal","WeLeft","TheyLeft","WeWereRemovedBy","TheyWereRemovedBy","ManagedGroupCallbacks","validate_add","validate_remove","auto_save","ValidateAdd","ValidateRemove","AutoSave","HandshakeMessageFormat","Plaintext","Ciphertext","ManagedGroupConfig","handshake_message_format","update_policy","padding_size","number_of_resumption_secrets","callbacks","UpdatePolicy","maximum_time","maximum_sent_messages","maximum_received_messages","EmptyInputError","AddMembers","RemoveMembers","InvalidMessageError","InvalidCiphertext","CommitError","GroupError","MembershipTagMismatch","InvalidProposal","CommitWithInvalidProposals","ManagedGroupError","LibraryError","Codec","Config","Group","CreateCommit","UseAfterEviction","PendingProposalsExist","Exporter","EmptyInput","KeyStoreError","InvalidMessage","NoMatchingCredentialBundle","NoMatchingKeyPackageBundle","PoisonedCredentialBundle","PendingProposalsError","Exists","UseAfterEviction","Error","GroupEvent","MemberAdded","MemberRemoved","MemberUpdated","PskReceived","ReInit","ApplicationMessage","Error","MemberAddedEvent","aad","sender","added_member","MemberRemovedEvent","aad","removal","MemberUpdatedEvent","aad","updated_member","PskReceivedEvent","aad","psk_id","ReInitEvent","aad","re_init_proposal","ApplicationMessageEvent","aad","sender","message","ErrorEvent","error","Removal","WeLeft","TheyLeft","WeWereRemovedBy","TheyWereRemovedBy","ManagedGroup","managed_group_config","group","pending_proposals","own_kpbs","aad","resumption_secret_store","active","MlsMessage","Plaintext","Ciphertext","CreateCommitResult","MlsGroup","ciphersuite","group_context","epoch_secrets","secret_tree","tree","interim_transcript_hash","use_ratchet_tree_extension","mls_version","PskFetcher","GroupId","value","random","from_slice","as_slice","GroupEpoch","0","increment","GroupContext","group_id","epoch","tree_hash","confirmed_transcript_hash","extensions","serialized","set_epoch","GroupConfig","add_ratchet_tree_extension","padding_block_size","additional_as_epochs","padding_block_size","key_packages","codec","errors","KeyPackageError","ExtensionError","ConfigError","CodecError","UnsupportedCiphersuite","UnknownConfigError","MandatoryExtensionsMissing","InvalidLifetimeExtension","InvalidSignature","LibraryError","DuplicateExtension","NoCiphersuitesSupplied","CiphersuiteMismatch","CiphersuiteSignatureSchemeMismatch","_description","KeyPackage","protocol_version","ciphersuite","hpke_init_key","credential","extensions","signature","encoded","MANDATORY_EXTENSIONS","verify","hash","key_id","add_extension","extensions","credential","sign","new","unsigned_payload","extension_with_type","update_parent_hash","remove_extension","hpke_init_key","set_hpke_init_key","ciphersuite","protocol_version","ciphersuite_name","KeyPackageBundle","key_package","private_key","leaf_secret","new","new_with_version","from_rekeyed_key_package","from_key_package_and_leaf_secret","new_with_keypair","key_package","new_from_leaf_secret","_set_private_key","set_key_package","key_package_mut","private_key","leaf_secret","derive_leaf_node_secret","sign","key_store","errors","KeyStoreError","KeyPackageError","CredentialError","NoMatchingCredentialBundle","NoMatchingKeyPackageBundle","_description","KeyStore","credential_bundles","init_key_package_bundles","CbGuard","cbs","index","take_key_package_bundle","get_credential_bundle","generate_key_package_bundle","generate_credential_bundle","get_leaf_secret","messages","codec","errors","ProposalQueueError","NotAProposal","ProposalNotFound","_description","ProposalOrRefTypeError","UnknownValue","_description","QueuedProposalError","WrongContentType","_description","proposals","ProposalType","Add","Update","Remove","Presharedkey","Reinit","ProposalOrRefType","Proposal","Reference","ProposalOrRef","Proposal","Reference","proposal_or_ref_type","Proposal","Add","Update","Remove","PreSharedKey","ReInit","proposal_type","is_type","as_add","as_update","as_remove","as_presharedkey","ProposalReference","value","from_proposal","QueuedProposal","proposal","proposal_reference","sender","proposal_or_ref_type","from_mls_plaintext","from_proposal_and_sender","proposal","proposal_reference","sender","ProposalQueue","proposal_references","queued_proposals","from_proposals_by_reference","from_committed_proposals","filter_proposals","get","add","commit_list","filtered_by_type","AddProposal","key_package","UpdateProposal","key_package","RemoveProposal","removed","PreSharedKeyProposal","psk","ReInitProposal","group_id","version","ciphersuite","extensions","Welcome","version","cipher_suite","secrets","encrypted_group_info","EncryptedGroupSecrets","key_package_hash","encrypted_group_secrets","new","ciphersuite","secrets","encrypted_group_info","version","Commit","proposals","path","has_path","path","ConfirmationTag","0","GroupInfo","group_id","epoch","tree_hash","confirmed_transcript_hash","extensions","confirmation_tag","signer_index","signature","new","tree_hash","signer_index","signature","set_signature","group_id","epoch","confirmed_transcript_hash","confirmation_tag","extensions","PathSecret","path_secret","GroupSecrets","joiner_secret","path_secret","psks","new_encoded","config","random_encoded","PublicGroupState","ciphersuite","group_id","epoch","tree_hash","interim_transcript_hash","extensions","external_pub","signer_index","signature","new","verify","PublicGroupStateTbs","group_id","epoch","tree_hash","interim_transcript_hash","extensions","external_pub","sign","schedule","codec","errors","ErrorState","NotInit","NotEpoch","NotContext","_description","KeyScheduleError","InvalidState","_description","PskSecretError","TooManyKeys","DifferentLength","_description","KsTestVectorError","JoinerSecretMismatch","WelcomeSecretMismatch","InitSecretMismatch","GroupContextMismatch","SenderDataSecretMismatch","EncryptionSecretMismatch","ExporterSecretMismatch","AuthenticationSecretMismatch","ExternalSecretMismatch","ConfirmationKeyMismatch","MembershipKeyMismatch","ResumptionSecretMismatch","ExternalPubMismatch","_description","psk","PskType","External","Reinit","Branch","ExternalPsk","psk_id","new","psk_id","ExternalPskBundle","secret","nonce","external_psk","new","to_presharedkey_id","secret","ReinitPsk","psk_group_id","psk_epoch","psk_group_id","psk_epoch","BranchPsk","psk_group_id","psk_epoch","psk_group_id","psk_epoch","Psk","External","Reinit","Branch","PreSharedKeyId","psk_type","psk","psk_nonce","new","psktype","psk","psk_nonce","PreSharedKeys","psks","psks","PskLabel","id","index","count","new","PskSecret","secret","new","secret","random","as_slice","clone","from_slice","kat_key_schedule","Epoch","tree_hash","commit_secret","psk_secret","confirmed_transcript_hash","group_context","joiner_secret","welcome_secret","init_secret","sender_data_secret","encryption_secret","exporter_secret","authentication_secret","external_secret","confirmation_key","membership_key","resumption_secret","external_pub","KeyScheduleTestVector","cipher_suite","group_id","initial_init_secret","epochs","generate","generate_test_vector","run_test_vector","PreSharedKeyId","psk_type","psk","psk_nonce","PreSharedKeys","psks","PskSecret","secret","CommitSecret","secret","new","zero_secret","random","as_slice","from_slice","InitSecret","secret","new","random","clone","as_slice","from_slice","JoinerSecret","secret","new","config","clone","as_slice","random","State","Initial","Context","Done","KeySchedule","ciphersuite","intermediate_secret","epoch_secret","state","init","welcome","add_context","epoch_secrets","IntermediateSecret","secret","new","WelcomeSecret","secret","new","derive_welcome_key_nonce","derive_aead_key","derive_aead_nonce","as_slice","EpochSecret","secret","new","EncryptionSecret","secret","new","create_secret_tree","consume_secret","as_slice","ExporterSecret","secret","new","as_slice","derive_exported_secret","AuthenticationSecret","secret","new","export","as_slice","ExternalSecret","secret","new","derive_external_keypair","as_slice","ConfirmationKey","secret","new","tag","from_secret","as_slice","MembershipKey","secret","new","tag","from_secret","as_slice","ResumptionSecret","secret","new","as_slice","ciphertext_sample","SenderDataSecret","secret","new","derive_aead_key","derive_aead_nonce","as_slice","EpochSecrets","init_secret","sender_data_secret","encryption_secret","exporter_secret","authentication_secret","external_secret","confirmation_key","membership_key","resumption_secret","sender_data_secret","confirmation_key","authentication_secret","exporter_secret","membership_key","external_secret","resumption_secret","init_secret","encryption_secret","new","tree","codec","errors","TreeError","PathSecretDecryptionError","InvalidArguments","InvalidUpdatePath","InvalidTree","NotAParentNode","_description","ParentHashError","EndedWithLeafNode","AllChecksFailed","InputNotParentNode","NotAParentNode","EmptyParentNode","_description","hashes","ParentHashInput","public_key","parent_hash","original_child_resolution","new","hash","LeafNodeHashInput","node_index","key_package","new","hash","ParentNodeTreeHashInput","node_index","parent_node","left_hash","right_hash","new","hash","index","NodeIndex","0","as_u32","as_usize","is_leaf","is_parent","LeafIndex","0","as_u32","as_usize","node","NodeType","Leaf","Parent","is_leaf","is_parent","Node","node_type","key_package","node","new_leaf","new_blank_parent_node","public_hpke_key","blank","is_blank","is_full_parent","parent_hash","key_package","key_package_mut","ParentNode","public_key","unmerged_leaves","parent_hash","new","public_key","set_parent_hash","unmerged_leaves","add_unmerged_leaf","path_keys","PathKeys","keys","add","get","private_tree","PathSecrets","PrivateTree","leaf_index","hpke_private_key","path_keys","commit_secret","path_secrets","new","from_key_package_bundle","new_with_keys","hpke_private_key","leaf_index","path_keys","commit_secret","path_secrets","generate_path_secrets","continue_path_secrets","derive_path_secrets","generate_commit_secret","generate_path_keypairs","secret_tree","SecretTreeError","TooDistantInThePast","TooDistantInTheFuture","IndexOutOfBounds","_description","SecretType","HandshakeSecret","ApplicationSecret","derive_tree_secret","TreeContext","node","generation","SecretTreeNode","secret","SecretTree","nodes","handshake_sender_ratchets","application_sender_ratchets","size","new","initialize_sender_ratchets","secret_for_decryption","secret_for_encryption","ratchet_mut","ratchet_opt","derive_down","sender_ratchet","OUT_OF_ORDER_TOLERANCE","MAXIMUM_FORWARD_DISTANCE","RatchetSecrets","SenderRatchet","index","generation","past_secrets","new","secret_for_decryption","secret_for_encryption","ratchet_secret","derive_key_nonce","treemath","TreeMathError","LeafHasNoChildren","RootHasNoParent","NotAParentNode","LeafNotInTree","NodeNotInTree","InvalidInput","_description","log2","level","node_width","root","left","right","parent_step","parent","unsafe_parent","sibling","node_in_tree","leaf_in_tree","leaf_direct_path","parent_direct_path","copath","common_ancestor_index","leaf_count","tests","kat_encryption","SenderDataInfo","ciphertext","key","nonce","RatchetStep","key","nonce","plaintext","ciphertext","LeafSequence","generations","handshake","application","EncryptionTestVector","cipher_suite","n_leaves","encryption_secret","sender_data_secret","sender_data_info","leaves","group","receiver_group","build_handshake_messages","build_application_messages","generate_test_vector","run_test_vector","EncTestVectorError","LeafNumberMismatch","SenderDataKeyMismatch","SenderDataNonceMismatch","InvalidLeafSequenceApplication","InvalidLeafSequenceHandshake","ApplicationSecretKeyMismatch","ApplicationSecretNonceMismatch","DecryptedApplicationMessageMismatch","HandshakeSecretKeyMismatch","HandshakeSecretNonceMismatch","DecryptedHandshakeMessageMismatch","_description","kat_tree_kem","TreeKemTestVector","cipher_suite","ratchet_tree_before","add_sender","my_leaf_secret","my_key_package","my_path_secret","update_sender","update_path","update_group_context","tree_hash_before","root_secret_after_add","root_secret_after_update","ratchet_tree_after","tree_hash_after","run_test_vector","TreeKemTestVectorError","BeforeTreeHashMismatch","AfterTreeHashMismatch","BeforeParentHashMismatch","AfterParentHashMismatch","BeforeRootSecretMismatch","AfterRootSecretMismatch","AfterRatchetTreeMismatch","_description","kat_treemath","TreeMathTestVector","n_leaves","n_nodes","root","left","right","parent","sibling","generate_test_vector","run_test_vector","TmTestVectorError","TreeSizeMismatch","RootIndexMismatch","LeftIndexMismatch","RightIndexMismatch","ParentIndexMismatch","SiblingIndexMismatch","_description","LeafNodeHashInput","node_index","key_package","ParentNodeTreeHashInput","node_index","parent_node","left_hash","right_hash","RatchetTree","ciphersuite","mls_version","nodes","private_tree","new","ciphersuite","new_from_public_tree","new_from_nodes","private_tree_mut","private_tree","tree_size","public_key_tree","public_key_tree_copy","leaf_count","resolve","own_node_index","own_key_package","own_key_package_mut","blank_member","free_leaves","update_path","replace_private_tree","refresh_private_tree","replace_private_tree_","encrypt_to_copath","merge_direct_path_keys","validate_public_keys","merge_public_keys","add_node","add_nodes","apply_proposals","trim_tree","commit_secret","path_secret","ApplyProposalsValues","path_required","self_removed","invitation_list","presharedkeys","exclusion_list","UpdatePathNode","public_key","encrypted_path_secret","UpdatePath","leaf_key_package","nodes","new","prelude","errors","ExtensionError","InvalidExtensionType","Capabilities","Lifetime","KeyPackageId","ParentHash","RatchetTree","CodecError","ConfigError","InvalidExtension","LifetimeExtensionError","Invalid","Expired","CapabilitiesExtensionError","Invalid","EmptyVersionsField","UnsupportedCiphersuite","KeyPackageIdError","Invalid","ParentHashError","Invalid","RatchetTreeError","Invalid","InvalidExtensionError","Duplicate","errors","KeyPackageError","ExtensionError","ConfigError","CodecError","UnsupportedCiphersuite","UnknownConfigError","MandatoryExtensionsMissing","InvalidLifetimeExtension","InvalidSignature","LibraryError","DuplicateExtension","NoCiphersuitesSupplied","CiphersuiteMismatch","CiphersuiteSignatureSchemeMismatch","MlsGroup","ciphersuite","group_context","epoch_secrets","secret_tree","tree","interim_transcript_hash","use_ratchet_tree_extension","mls_version","GroupEvent","MemberAdded","MemberRemoved","MemberUpdated","PskReceived","ReInit","ApplicationMessage","Error","HandshakeMessageFormat","Plaintext","Ciphertext","InvalidMessageError","InvalidCiphertext","CommitError","GroupError","MembershipTagMismatch","InvalidProposal","CommitWithInvalidProposals","ManagedGroup","managed_group_config","group","pending_proposals","own_kpbs","aad","resumption_secret_store","active","ManagedGroupCallbacks","validate_add","validate_remove","auto_save","ManagedGroupConfig","handshake_message_format","update_policy","padding_size","number_of_resumption_secrets","callbacks","ManagedGroupError","LibraryError","Codec","Config","Group","CreateCommit","UseAfterEviction","PendingProposalsExist","Exporter","EmptyInput","KeyStoreError","InvalidMessage","NoMatchingCredentialBundle","NoMatchingKeyPackageBundle","PoisonedCredentialBundle","MlsMessage","Plaintext","Ciphertext","Removal","WeLeft","TheyLeft","WeWereRemovedBy","TheyWereRemovedBy","UpdatePolicy","maximum_time","maximum_sent_messages","maximum_received_messages","ExternalPskBundle","secret","nonce","external_psk","CiphersuiteName","MLS10_128_DHKEMX25519_AES128GCM_SHA256_Ed25519","MLS10_128_DHKEMP256_AES128GCM_SHA256_P256","MLS10_128_DHKEMX25519_CHACHA20POLY1305_SHA256_Ed25519","MLS10_256_DHKEMX448_AES256GCM_SHA512_Ed448","MLS10_256_DHKEMP521_AES256GCM_SHA512_P521","MLS10_256_DHKEMX448_CHACHA20POLY1305_SHA512_Ed448","SignatureScheme","ECDSA_SECP256R1_SHA256","ECDSA_SECP521R1_SHA512","ED25519","ED448","HpkeCiphertext","kem_output","ciphertext","Secret","ciphersuite","value","mls_version","AeadKey","aead_mode","value","mac_len","ReuseGuard","value","AeadNonce","value","Signature","value","SignaturePrivateKey","signature_scheme","value","SignaturePublicKey","signature_scheme","value","SignatureKeypair","signature_scheme","private_key","public_key","Ciphersuite","name","signature_scheme","hpke","aead","hash","hmac","CodecError","EncodingError","DecodingError","Other","VecSize","VecU8","VecU16","VecU32","VecU64","Cursor","buffer","position","Codec","encode","decode","encode_detached","decode_detached","encode_vec","decode_vec","CredentialError","ConfigError","CryptoError","CodecError","UnsupportedCredentialType","InvalidSignature","SignatureError","CredentialType","Basic","X509","Certificate","cert_data","MlsCredentialType","Basic","X509","Credential","credential_type","credential","BasicCredential","identity","signature_scheme","public_key","CredentialBundle","credential","signature_private_key","CapabilitiesExtension","versions","ciphersuites","extensions","ExtensionError","InvalidExtensionType","Capabilities","Lifetime","KeyPackageId","ParentHash","RatchetTree","CodecError","ConfigError","InvalidExtension","LifetimeExtensionError","Invalid","Expired","CapabilitiesExtensionError","Invalid","EmptyVersionsField","UnsupportedCiphersuite","KeyPackageIdError","Invalid","ParentHashError","Invalid","RatchetTreeError","Invalid","InvalidExtensionError","Duplicate","KeyIdExtension","key_id","LifetimeExtension","not_before","not_after","RatchetTreeExtension","tree","ExtensionType","Reserved","Capabilities","Lifetime","KeyId","ParentHash","RatchetTree","ExtensionStruct","extension_type","extension_data","Extension","new_from_bytes","extension_type","to_extension_struct","as_any","to_parent_hash_extension","to_capabilities_extension","to_lifetime_extension","to_key_id_extension","as_ratchet_tree_extension","ExtensionHelper","clone_it","KeyPackageError","ExtensionError","ConfigError","CodecError","UnsupportedCiphersuite","UnknownConfigError","MandatoryExtensionsMissing","InvalidLifetimeExtension","InvalidSignature","LibraryError","DuplicateExtension","NoCiphersuitesSupplied","CiphersuiteMismatch","CiphersuiteSignatureSchemeMismatch","KeyPackage","protocol_version","ciphersuite","hpke_init_key","credential","extensions","signature","encoded","KeyPackageBundle","key_package","private_key","leaf_secret","AddProposal","key_package","PreSharedKeyProposal","psk","ReInitProposal","group_id","version","ciphersuite","extensions","RemoveProposal","removed","UpdateProposal","key_package","BranchPsk","psk_group_id","psk_epoch","ExternalPsk","psk_id","PreSharedKeyId","psk_type","psk","psk_nonce","PreSharedKeys","psks","Psk","External","Reinit","Branch","PskType","External","Reinit","Branch","ReinitPsk","psk_group_id","psk_epoch","_print_tree","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","unsigned_payload","encode","decode","encode","decode","encode","encode","decode","encode","decode","encode","decode","encode","decode","encode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","encode","decode","encode","decode","encode","encode","decode","encode","decode","encode","decode","encode","encode","encode","decode","encode","decode","encode","decode","encode","decode","encode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","decode","encode","encode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","encode","decode","encode","extension_type","new_from_bytes","to_extension_struct","as_any","extension_type","new_from_bytes","to_extension_struct","as_any","extension_type","new_from_bytes","to_extension_struct","as_any","extension_type","new_from_bytes","to_extension_struct","as_any","extension_type","new_from_bytes","to_extension_struct","as_any","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","cmp","cmp","cmp","cmp","cmp","eq","ne","eq","ne","eq","eq","eq","eq","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","eq","eq","eq","ne","eq","ne","eq","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","eq","eq","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","eq","eq","eq","eq","eq","ne","eq","ne","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","deref","deref","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","hash","hash","hash","hash","hash","hash","hash","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","initialize","tls_serialize","tls_serialize","tls_serialize","serialized_len","serialized_len","serialized_len","serialized_len","serialized_len","serialized_len","decode","new","create_initial_group_context","serialized","group_id","epoch","apply_commit_internal","create_commit_internal","new_from_welcome_internal","find_key_package_from_welcome_secrets","original_child_resolution","set_parent_hashes","verify_parent_hash","verify_parent_hashes","tree_hash"],"q":["openmls","openmls::utils","","","","","","","openmls","openmls::error","","","","","","openmls","openmls::test_util","","","","","openmls","openmls::ciphersuite","openmls::ciphersuite::ciphersuites","","","","","","openmls::ciphersuite","","openmls::ciphersuite::errors","","","","","","","","openmls::ciphersuite","openmls::ciphersuite::signable","","","","openmls::ciphersuite","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls","openmls::codec","openmls::codec::errors","","","","","openmls::codec","","","","","","","","","","","","","","","","","","","","","","openmls","openmls::config","","openmls::config::errors","","","","","","","","openmls::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::ciphersuite","openmls","openmls::credentials","","openmls::credentials::errors","","","","","","","","openmls::credentials","","","","","","","","","","","","","","","","","","","","","","","","","","openmls","openmls::extensions","openmls::extensions::capabilities_extension","","","","","","","","","","openmls::extensions","openmls::extensions::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::extensions","openmls::extensions::key_package_id_extension","","","","","","openmls::extensions","openmls::extensions::life_time_extension","","","","","","","openmls::extensions","openmls::extensions::parent_hash_extension","","","","","","openmls::extensions","openmls::extensions::ratchet_tree_extension","","","","","","openmls::extensions","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls","openmls::framing","openmls::framing::ciphertext","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::framing","openmls::framing::ciphertext","openmls::framing","openmls::framing::errors","","","","","","","","","","","","","","","","","","","","","openmls::framing","openmls::framing::plaintext","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::framing","openmls::framing::sender","","","","","","","","","","openmls","openmls::group","","openmls::group::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::group","","openmls::group::managed_group","openmls::group::managed_group::callbacks","","","","","","","","","","","openmls::group::managed_group","openmls::group::managed_group::config","","","","","","","","","","","","","","","","","openmls::group::managed_group","openmls::group::managed_group::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::group::managed_group","openmls::group::managed_group::events","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::group::managed_group","openmls::group::managed_group::resumption","","","","","","","openmls::group::managed_group","openmls::group::managed_group::ser","","","","","","","","","openmls::group::managed_group","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::group","openmls::group::mls_group","","openmls::group::mls_group::create_commit","","","","","openmls::group::mls_group","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::group","openmls::group::tests","openmls::group::tests::kat_messages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::group::tests","openmls::group::tests::kat_transcripts","","","","","","","","","","","","","","","","","","","","openmls::group","openmls::group::callbacks","","","","","","","openmls::group","openmls::group::config","","","","","","","","","","","","","openmls::group","openmls::group::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::group","openmls::group::events","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::group","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls","openmls::key_packages","","openmls::key_packages::errors","","","","","","","","","","","","","","","openmls::key_packages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls","openmls::key_store","openmls::key_store::errors","","","","","","openmls::key_store","","","","","","","","","","","openmls","openmls::messages","","openmls::messages::errors","","","","","","","","","","openmls::messages","openmls::messages::proposals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::messages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls","openmls::schedule","","openmls::schedule::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::schedule","openmls::schedule::psk","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::schedule","openmls::schedule::kat_key_schedule","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::schedule","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls","openmls::tree","","openmls::tree::errors","","","","","","","","","","","","","","openmls::tree","openmls::tree::hashes","","","","","","","","","","","","","","","","","","openmls::tree","openmls::tree::index","","","","","","","","","","openmls::tree","openmls::tree::node","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::tree","openmls::tree::path_keys","","","","openmls::tree","openmls::tree::private_tree","","","","","","","","","","","","","","","","","","","","openmls::tree","openmls::tree::secret_tree","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::tree","openmls::tree::sender_ratchet","","","","","","","","","","","","openmls::tree","openmls::tree::treemath","","","","","","","","","","","","","","","","","","","","","","","","","openmls::tree","openmls::tree::tests","openmls::tree::tests::kat_encryption","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::tree::tests","openmls::tree::tests::kat_tree_kem","","","","","","","","","","","","","","","","","","","","","","","","","openmls::tree::tests","openmls::tree::tests::kat_treemath","","","","","","","","","","","","","","","","","","openmls::tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls","openmls::prelude","openmls::prelude::errors","","","","","","","","","","","","","","","","","","","","","","","","","openmls::prelude","openmls::prelude::errors","","","","","","","","","","","","","","openmls::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::codec","","","","openmls::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::extensions","","","","","openmls::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::error","","","","","","","","","","","","","","","","","","","","","","openmls::ciphersuite::errors","","","","","","","","","","","","","","","","","","","","","","openmls::ciphersuite","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::codec::errors","","","","","","","","","","","openmls::codec","","","","","","","","","","","","","","","","openmls::config::errors","","","","","","","","","","","openmls::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::credentials::errors","","","","","","","","","","","openmls::credentials","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::extensions::capabilities_extension","","","","","","","","","","","openmls::extensions::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::extensions::key_package_id_extension","","","","","","","","","","","openmls::extensions::life_time_extension","","","","","","","","","","","openmls::extensions::parent_hash_extension","","","","","","","","","","","openmls::extensions::ratchet_tree_extension","","","","","","","","","","","openmls::extensions","","","","","","","","","","","","","","","","","","","","","","openmls::framing::ciphertext","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::framing::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::framing::plaintext","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::framing::sender","","","","","","","","","","","","","","","","","","","","","","openmls::group::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::group::managed_group::callbacks","","","","","","","","","","openmls::group::managed_group::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::group::managed_group::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::group::managed_group::events","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::group::managed_group::resumption","","","","","","","","","openmls::group::managed_group::ser","","","","","","","","","openmls::group::managed_group","","","","","","","","","","","","","","","","","","","openmls::group::mls_group::create_commit","","","","","","","","openmls::group::mls_group","","","","","","","","","openmls::group::tests::kat_messages","","","","","","","","","","","","","","","","","","","","","","openmls::group::tests::kat_transcripts","","","","","","","","","","","","","","","","","","","","","","openmls::group","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::key_packages::errors","","","","","","","","","","","openmls::key_packages","","","","","","","","","","","","","","","","","","","","openmls::key_store::errors","","","","","","","","","","","openmls::key_store","","","","","","","","","","","","","","","","openmls::messages::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::messages::proposals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::messages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::schedule::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::schedule::psk","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::schedule::kat_key_schedule","","","","","","","","","","","","","","","","","","","","","","openmls::schedule","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::tree::errors","","","","","","","","","","","","","","","","","","","","","","openmls::tree::hashes","","","","","","","","","","","","","","","","","","","","","","","","openmls::tree::index","","","","","","","","","","","","","","","","","","","","","","openmls::tree::node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::tree::path_keys","","","","","","","","","openmls::tree::private_tree","","","","","","","","","openmls::tree::secret_tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::tree::sender_ratchet","","","","","","","","","","","openmls::tree::treemath","","","","","","","","","","","openmls::tree::tests::kat_encryption","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::tree::tests::kat_tree_kem","","","","","","","","","","","","","","","","","","","","","","openmls::tree::tests::kat_treemath","","","","","","","","","","","","","","","","","","","","","","openmls::tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::messages","openmls::ciphersuite","","","","","","","","","","","","","","openmls::config","","openmls::credentials","","","","","","openmls::extensions::capabilities_extension","","openmls::extensions::life_time_extension","","openmls::extensions","","","","openmls::framing::plaintext","","openmls::framing::ciphertext","","openmls::framing::plaintext","","","openmls::ciphersuite","","openmls::framing::plaintext","","","openmls::framing::ciphertext","","","","","","openmls::framing::plaintext","","openmls::framing::sender","","","","openmls::group","","","","","openmls::key_packages","","openmls::messages","","","","","","","","","","","","","openmls::messages::proposals","","","","","","","","","","","","","","","","","","openmls::messages","","","openmls::schedule::psk","","","","","","","","","","","","openmls::schedule","","openmls::schedule::psk","openmls::tree::node","","","","","","openmls::tree","","","","openmls::tree::secret_tree","openmls::tree::index","","openmls::tree::secret_tree","openmls::extensions::capabilities_extension","","","","openmls::extensions::key_package_id_extension","","","","openmls::extensions::life_time_extension","","","","openmls::extensions::parent_hash_extension","","","","openmls::extensions::ratchet_tree_extension","","","","openmls::error","","","","openmls::ciphersuite","","openmls::codec::errors","openmls::config","openmls::credentials::errors","","","openmls::credentials","openmls::extensions::errors","","","","","","","","","openmls::framing::errors","","","","","openmls::framing::plaintext","","openmls::group::errors","","","","","","","","","","","","","","","","","","","","","","","openmls::group::managed_group::errors","","","","","","","","","","","","","","openmls::group::managed_group","","openmls::key_packages::errors","","","openmls::key_store::errors","","openmls::messages::errors","openmls::codec::errors","openmls::messages","openmls::schedule::errors","openmls::tree::errors","openmls::tree::index","","","","","openmls::tree::secret_tree","","openmls::error","","openmls::ciphersuite::errors","","openmls::ciphersuite","","","","","","","","","","","","openmls::codec::errors","openmls::config::errors","openmls::config","","","openmls::credentials::errors","openmls::credentials","","","","","openmls::extensions::capabilities_extension","openmls::extensions::errors","","","","","","","openmls::extensions::key_package_id_extension","openmls::extensions::life_time_extension","openmls::extensions::parent_hash_extension","openmls::extensions::ratchet_tree_extension","openmls::extensions","","openmls::framing::ciphertext","","","","","openmls::framing::errors","","","openmls::framing::plaintext","","","","openmls::framing::sender","","openmls::group::errors","","","","","","openmls::group::managed_group::callbacks","openmls::group::managed_group::config","","","openmls::group::managed_group::errors","","","","","openmls::group::managed_group::events","","","","","","","","","openmls::group::managed_group","openmls::group::tests::kat_messages","","openmls::group::tests::kat_transcripts","","openmls::group","","","","openmls::key_packages::errors","openmls::key_packages","openmls::key_store::errors","openmls::messages::errors","","","openmls::messages::proposals","","","","","","","","","","","openmls::messages","","","","","openmls::schedule::errors","","","","openmls::schedule::psk","","","","","","openmls::schedule::kat_key_schedule","","openmls::schedule","openmls::tree::errors","","openmls::tree::index","","openmls::tree::node","","","openmls::tree::secret_tree","","","openmls::tree::sender_ratchet","openmls::tree::treemath","openmls::tree::tests::kat_encryption","","","","","openmls::tree::tests::kat_tree_kem","","openmls::tree::tests::kat_treemath","","openmls::tree","","openmls::ciphersuite","openmls::config","openmls::extensions::capabilities_extension","openmls::extensions::key_package_id_extension","openmls::extensions::life_time_extension","openmls::extensions::parent_hash_extension","openmls::extensions::ratchet_tree_extension","openmls::extensions","openmls::group::managed_group::callbacks","openmls::group::managed_group::config","openmls::group::tests::kat_messages","openmls::group::tests::kat_transcripts","openmls::group","openmls::key_store","openmls::messages::proposals","openmls::schedule::kat_key_schedule","","openmls::schedule","","openmls::tree::index","","openmls::tree::path_keys","openmls::tree::tests::kat_encryption","","","openmls::config","openmls::extensions","","openmls::tree::index","","openmls::error","","","","openmls::ciphersuite::errors","","openmls::ciphersuite","","","","","","","","","","","","","openmls::codec::errors","openmls::config::errors","openmls::config","","","","","openmls::credentials::errors","","openmls::credentials","","","","","","","","openmls::extensions::capabilities_extension","","openmls::extensions::errors","","","","","","","","openmls::extensions::key_package_id_extension","","openmls::extensions::life_time_extension","","openmls::extensions::parent_hash_extension","","openmls::extensions::ratchet_tree_extension","","openmls::extensions","","","","openmls::framing::ciphertext","","openmls::framing::errors","","","","","openmls::framing::plaintext","","","","","","","openmls::framing::sender","","","openmls::group::errors","","","","","","","","","","openmls::group::managed_group::callbacks","openmls::group::managed_group::config","","","","","openmls::group::managed_group::errors","","","","","","","openmls::group::managed_group::events","","","","","","","","","","","","","","","","","","openmls::group::managed_group","","openmls::group::tests::kat_messages","openmls::group::tests::kat_transcripts","openmls::group","","","","","","openmls::key_packages::errors","","openmls::key_packages","","openmls::key_store::errors","","openmls::messages::errors","","","","openmls::messages::proposals","","","","","","","","","","","","","","","","","","openmls::messages","","","","","","","","","","","","openmls::schedule::errors","","","","","openmls::schedule::psk","","","","","","","","","","","openmls::schedule","","openmls::tree::errors","","","openmls::tree::index","","","","openmls::tree::node","","","","","openmls::tree::path_keys","","openmls::tree::secret_tree","openmls::tree::treemath","openmls::tree::tests::kat_encryption","openmls::tree::tests::kat_tree_kem","openmls::tree::tests::kat_treemath","openmls::tree","","","","openmls::config","openmls::extensions","","openmls::tree::index","","openmls::config","openmls::key_store","openmls::error","","openmls::ciphersuite::errors","","openmls::ciphersuite","","","","","","","","","","","","","openmls::codec::errors","openmls::codec","","openmls::config::errors","openmls::config","","","","openmls::credentials::errors","openmls::credentials","","","","","","openmls::extensions::capabilities_extension","openmls::extensions::errors","","","","","","","openmls::extensions::key_package_id_extension","openmls::extensions::life_time_extension","openmls::extensions::parent_hash_extension","openmls::extensions::ratchet_tree_extension","openmls::extensions","","openmls::framing::ciphertext","","openmls::framing::errors","","","openmls::framing::plaintext","","","","","","openmls::framing::sender","","openmls::group::errors","","","","","","openmls::group::managed_group::callbacks","openmls::group::managed_group::config","","","openmls::group::managed_group::errors","","","","","openmls::group::managed_group::events","","","","","","","","","openmls::group::managed_group::resumption","openmls::group::managed_group","","openmls::group::mls_group","openmls::group::tests::kat_messages","","openmls::group::tests::kat_transcripts","","openmls::group","","","","openmls::key_packages::errors","openmls::key_packages","","openmls::key_store::errors","openmls::key_store","openmls::messages::errors","","","openmls::messages::proposals","","","","","","","","","","openmls::messages","","","","","","openmls::schedule::errors","","","","openmls::schedule::psk","","","","","","openmls::schedule::kat_key_schedule","","openmls::schedule","","","","","","","","","","","openmls::tree::errors","","openmls::tree::index","","openmls::tree::node","","","openmls::tree::path_keys","openmls::tree::private_tree","openmls::tree::secret_tree","","","","","openmls::tree::sender_ratchet","openmls::tree::treemath","openmls::tree::tests::kat_encryption","","","","","openmls::tree::tests::kat_tree_kem","","openmls::tree::tests::kat_treemath","","openmls::tree","","","openmls::error","","openmls::ciphersuite::errors","","openmls::ciphersuite","","openmls::codec::errors","openmls::config::errors","openmls::config","openmls::credentials::errors","openmls::extensions::errors","","","","","","","openmls::framing::errors","","","openmls::group::errors","","","","","","openmls::group::managed_group::errors","","","","","openmls::group::tests::kat_messages","openmls::group::tests::kat_transcripts","openmls::key_packages::errors","openmls::key_store::errors","openmls::messages::errors","","","openmls::schedule::errors","","","","openmls::tree::errors","","openmls::tree::secret_tree","openmls::tree::treemath","openmls::tree::tests::kat_encryption","openmls::tree::tests::kat_tree_kem","openmls::tree::tests::kat_treemath","openmls::ciphersuite","","","openmls::extensions","","openmls::group","openmls::messages::proposals","openmls::tree::index","","openmls::ciphersuite","","openmls::config","openmls::credentials","openmls::extensions","openmls::framing::plaintext","","","openmls::framing::sender","openmls::messages::proposals","","openmls::schedule::psk","openmls::tree::index","openmls::tree::node","openmls::ciphersuite::errors","","openmls::codec::errors","openmls::config::errors","openmls::credentials::errors","openmls::extensions::errors","","","","","","","openmls::framing::errors","","","openmls::group::errors","","","","","","openmls::group::managed_group::errors","","","","","openmls::group::tests::kat_messages","openmls::group::tests::kat_transcripts","openmls::key_packages::errors","openmls::key_store::errors","openmls::messages::errors","","","openmls::schedule::errors","","","","openmls::tree::errors","","openmls::tree::secret_tree","openmls::tree::treemath","openmls::tree::tests::kat_encryption","openmls::tree::tests::kat_tree_kem","openmls::tree::tests::kat_treemath","openmls::ciphersuite","","","","","","","","openmls::config","","","","openmls::credentials","","","","","openmls::extensions::capabilities_extension","openmls::extensions::key_package_id_extension","openmls::extensions::life_time_extension","openmls::extensions::parent_hash_extension","openmls::extensions::ratchet_tree_extension","openmls::extensions","","openmls::framing::plaintext","","","","openmls::framing::sender","","openmls::group::managed_group::config","","","openmls::group::managed_group::resumption","openmls::group::managed_group::ser","openmls::group::mls_group","openmls::group::tests::kat_messages","openmls::group::tests::kat_transcripts","openmls::group","","","openmls::key_packages","","openmls::messages::proposals","","","","","","","","openmls::messages","","","openmls::schedule::psk","","","","","","openmls::schedule::kat_key_schedule","","openmls::schedule","","","","","","","","","","","openmls::tree::index","","openmls::tree::node","","","openmls::tree::path_keys","openmls::tree::private_tree","openmls::tree::secret_tree","","openmls::tree::sender_ratchet","openmls::tree::tests::kat_encryption","","","","openmls::tree::tests::kat_tree_kem","openmls::tree::tests::kat_treemath","openmls::tree","","","openmls::ciphersuite","","","","","","","","openmls::config","","","openmls::credentials","","","","","openmls::extensions::capabilities_extension","openmls::extensions::key_package_id_extension","openmls::extensions::life_time_extension","openmls::extensions::parent_hash_extension","openmls::extensions::ratchet_tree_extension","openmls::extensions","","","","","","openmls::framing::plaintext","","","","openmls::framing::sender","","openmls::group::managed_group::config","","","openmls::group::managed_group::resumption","openmls::group::managed_group::ser","openmls::group::managed_group","openmls::group::mls_group","openmls::group::tests::kat_messages","openmls::group::tests::kat_transcripts","openmls::group","","","openmls::key_packages","","openmls::messages::proposals","","","","","","","","openmls::messages","","","openmls::schedule::psk","","","","","","openmls::schedule::kat_key_schedule","","openmls::schedule","","","","","","","","","","","openmls::tree::index","","openmls::tree::node","","","openmls::tree::path_keys","openmls::tree::private_tree","openmls::tree::secret_tree","","openmls::tree::sender_ratchet","openmls::tree::tests::kat_encryption","","","","openmls::tree::tests::kat_tree_kem","openmls::tree::tests::kat_treemath","openmls::tree","","","openmls::config","openmls::tree::hashes","","","openmls::ciphersuite","openmls::key_packages","openmls::tree::node","openmls::tree::hashes","","","openmls::framing::plaintext","openmls::group","","","","","openmls::group::mls_group","","","","openmls::tree","","","",""],"d":["","","","","","","","","OpenMLS Errors","A wrapper struct for an error string. This can be used …","","","A wrapper struct for an arbitrary error payload as byte …","","","Test utilities","","","Convert <code>bytes</code> to a hex string.","Convert a hex string to a byte vector.","Convert a hex string to a byte vector. If the input is …","Ciphersuites for MLS","","","","","","","","Codec implementations for the ciphersuites. Provides …","Crypto errors","","The HKDF output is empty.","","","Unrecoverable error in the crypto library.","Error while decrypting an HPKE ciphertext.","This SignatureScheme is not supported.","","","The <code>Signable</code> trait is implemented by all struct that are …","","Sign the payload with the given <code>id</code>.","Verifies the payload against the given <code>credential</code> and …","","","","","","","","","","","SignatureScheme according to IANA TLS parameters","ECDSA_SECP256R1_SHA256","ECDSA_SECP521R1_SHA512","ED25519","ED448","Create a new signature key pair and return it.","7.7. Update Paths","","","<code>KdfLabel</code> is later serialized and used in the <code>label</code> field …","","","","","Compare two byte slices in a way that’s hopefully not …","A struct to contain secrets. This is to provide better …","","","","Randomly sample a fresh <code>Secret</code>. This default random …","Create an all zero secret.","Create a new secret from a byte vector.","HKDF extract where <code>self</code> is <code>salt</code>.","HKDF expand where <code>self</code> is <code>prk</code>.","Expand a <code>Secret</code> to a new <code>Secret</code> of length <code>length</code> …","Derive a new <code>Secret</code> from the this one by expanding it …","Update the ciphersuite and MLS version of this secret. …","Returns the inner bytes of a secret","Returns the ciphersuite of the secret","Returns the MLS version of the secret","9.2 Message framing","","HMAC-Hash(salt, IKM). For all supported ciphersuites this …","","","","","","","Samples a fresh reuse guard uniformly at random.","","","","","","","","","","","","","","","","","","","","","","Create a new ciphersuite from the given <code>name</code>.","Get the default ciphersuite.","Get the signature scheme of this ciphersuite.","Get the name of this ciphersuite.","Hash <code>payload</code> and return the digest.","Get the length of the used hash algorithm.","Get the length of the AEAD tag.","Returns the key size of the used AEAD.","Returns the length of the nonce in the AEAD.","HPKE single-shot encryption of <code>ptxt</code> to <code>pk_r</code>, using <code>info</code> …","HPKE single-shot encryption specifically to seal a Secret …","HPKE single-shot decryption of <code>input</code> with <code>sk_r</code>, using <code>info</code>…","Derive a new HPKE keypair from a given Secret.","Create an <code>AeadKey</code> from a <code>Secret</code>. TODO: This function …","Get a slice to the key value.","Encrypt a payload under the AeadKey given a nonce.","AEAD decrypt <code>ciphertext</code> with <code>key</code>, <code>aad</code>, and <code>nonce</code>.","Create an <code>AeadNonce</code> from a <code>Secret</code>. TODO: This function …","Generate a new random nonce.","Get a slice to the nonce value.","Xor the first bytes of the nonce with the reuse_guard.","","Sign the <code>payload</code> byte slice with this signature key. …","Verify a <code>Signature</code> on the <code>payload</code> byte slice with the key …","Get the private and public key objects","","Create a new signature public key from raw key bytes.","Verify a <code>Signature</code> on the <code>payload</code> byte slice with the key …","Sign the <code>payload</code> byte slice with this signature key. …","","","","Error encoding.","Error decoding.","Some other error occurred.","","","","","","","","","","","","","","","","Get a slice of the underlying raw buffer.","","","","","","","","This config contains all structs, enums and functions to …","","Config errors","","Invalid configuration.","MLS version is not supported by this configuration.","Ciphersuite is not supported by this configuration.","Signature scheme is not supported by this configuration.","Operation on incompatible MLS versions.","Operation on incompatible cipher suites.","","This value is used as the default lifetime of <code>KeyPackage</code>s …","This value is used as the default amount of time (in …","Supported ciphersuites TODO #13: This should come from …","","","Constants that are used throughout the library.","The default lifetime of a key package in seconds.","The amount of time (in seconds) the lifetime of a …","The configuration we use for the library (<code>Config</code>) is not …","","","","","OpenMLS Configuration","","","","","Get a list of the supported extension types.","Get a list of the supported cipher suites.","Get a list of the supported cipher suites names.","Get a list of the supported protocol versions.","Get the ciphersuite of the given name.","Get the default <code>KeyPackage</code> lifetime (in seconds).","Get the margin in which <code>KeyPackage</code> lifetimes are already …","Protocol Version","","","","Returns <code>true</code> if the ciphersuite is supported in the …","","","","","See <code>ConfigError</code> for details.","See <code>CryptoError</code> for details.","See <code>CodecError</code> for details.","Unsupported credential type.","Invalid signature.","Error while signing.","","Enum for Credential Types. We only need this for …","","","Struct containing an X509 certificate chain, as per Spec.","","This enum contains the different available credentials.","","","Struct containing MLS credential data, where the data …","","","Verify a signature of a given payload against the public …","Get the identity of a given credential.","Get the signature scheme used by the credential.","Get the public key contained in the credential.","","","","","","This struct contains a credential and the corresponding …","","","Create a new <code>CredentialBundle</code> of the given credential …","","Sign a <code>msg</code> using the private key of the credential bundle.","","Capabilities Extension","","","","","Create a new capabilities extension with the given …","Get a reference to the list of versions in this extension.","Get a reference to the list of cipher suites in this …","Get a reference to the list of supported extensions.","","","Extension errors.","","Invalid extension type error.","Capabilities extension error. See …","Lifetime extension error. See <code>LifetimeExtensionError</code> for …","Key package ID extension error. See <code>KeyPackageIdError</code> for …","Parent hash extension error. See <code>ParentHashError</code> for …","Ratchet tree extension error. See <code>RatchetTreeError</code> for …","Error decoding or encoding an extension.","Configuration error. See <code>ConfigError</code> for details.","The extension is malformed. See <code>InvalidExtensionError</code> for …","","","Invalid lifetime extensions.","Lifetime extension is expired.","","","Invalid capabilities extensions.","Capabilities extension is missing a version field.","Capabilities contains only unsupported ciphersuites.","","","Invalid key package ID extensions.","","","Invalid parent hash extensions.","","","Invalid ratchet tree extensions.","","","The provided extension list contains duplicate extensions.","","KeyPackage Identifiers","","","Create a new key identifier extension from a byte slice.","Get the value of the key id as byte slice.","","","Life time extension","The lifetime extension holds a not before and a not after …","","","Create a new lifetime extensions with lifetime <code>t</code> (in …","Returns true if this lifetime is valid.","","","Parent hash extension","","","","Get a reference to the parent hash value.","","","Ratchet tree extension","","","Build a new extension from a vector of <code>Node</code>s.","","","","Extension types","","","","","","","Extension struct","","","Build a new <code>ExtensionStruct</code>.","Get the data of this extension struct.","Build a new extension of the given type from a byte slice.","Encode extensions with TLS encoding. This is used …","Read a list of extensions from a <code>Cursor</code> into a vector of …","Extension","Build a new extension from a byte slice.","Each extension has an extension type. This should be an …","Get the extension as <code>ExtensionStruct</code> for encoding.","Get a generic trait object for downcasting.","Get a reference to the <code>ParentHashExtension</code>. Returns an …","Get a reference to the <code>CapabilitiesExtension</code>. Returns an …","Get a reference to the <code>LifetimeExtension</code>. Returns an …","Get a reference to the <code>KeyIDExtension</code>. Returns an …","Get a reference to the <code>RatchetTreeExtension</code>. Returns an …","","","","","","<code>MlsCiphertext</code> is the framing struct for an encrypted …","","","","","","","Try to create a new <code>MlsCiphertext</code> from an <code>MlsPlaintext</code>","","Returns <code>true</code> if this is a handshake message and <code>false</code> …","Encodes the <code>MLSCiphertextContent</code> struct with padding","","","","","","","","","","","","","","","","","","","","","","","Framing errors.","","The MlsPlaintext message is not an application message.","Sender is not part of the group","The MlsPlaintext signature is invalid","The MlsPlaintext membership tag is invalid","","","MlsPlaintext error","SecretTree error","Codec error","The MlsCiphertext has an invalid content type.","Couldn’t find a ratcheting secret for the given sender …","An error occurred while encrypting.","An error occurred while decrypting.","","","Codec error","Credential error","The MlsPlaintext membership tag is missing","The MlsPlaintext membership tag is invalid","","","<code>MLSPlaintext</code> is a framing structure for MLS messages. It …","","","","","","","","","","This constructor builds a new <code>MlsPlaintext</code> from the …","This constructor builds an <code>MlsPlaintext</code> containing a …","This constructor builds an <code>MlsPlaintext</code> containing an …","Returns a reference to the <code>content</code> field.","Get the sender leaf index of this message.","Sign this <code>MlsPlaintext</code>. This populates the <code>signature</code> …","Sign this <code>MlsPlaintext</code> and add a membership tag. This …","Adds a membership tag to this <code>MlsPlaintext</code>. The …","Verify the signature of an <code>MlsPlaintext</code> sent from an …","Verify the membership tag of an <code>MlsPlaintext</code> sent from …","Verify the signature and the membership tag of an …","Tries to extract an application messages from an …","Returns <code>true</code> if this is a handshake message and <code>false</code> …","Returns <code>true</code> if this is a proposal message and <code>false</code> …","Get the group ID.","Get the group ID.","","","","","","","","","","","9.1 Content Authentication","","","","","","Wrapper around a <code>Mac</code> used for type safety.","","","","","","","","","","","","","","","","","","","","","","","","","","Section  9. Message Framing","","","","","","","","","","","Group APIs for MLS","","MLS Group errors","","See <code>MlsCiphertextError</code> for details.","See <code>WelcomeError</code> for details.","See <code>ApplyCommitError</code> for details.","See <code>CreateCommitError</code> for details.","See <code>ConfigError</code> for details.","See <code>ExporterError</code> for details.","See <code>ProposalQueueError</code> for details.","Codec error occurred.","An error occurred in the key schedule.","An error occurred during a tree math operation.","A PSK error occured.","Missing init secret when creating commit.","","","Invalid ratchet tree in Welcome message.","The parent hash verification failed.","Unable to decrypt the EncryptedGroupSecrets.","Codec error occurred.","An error occurred in the key schedule.","A PSK error occured.","Ciphersuites in the Welcome message and the corresponding …","No joiner secret found in the Welcome message.","No ratchet tree available to build initial tree after …","The computed tree hash does not match the one in the …","The computed confirmation tag does not match the expected …","The signature on the GroupInfo is not valid.","Unable to decrypt the GroupInfo.","Found a duplicate ratchet tree extension in the Welcome …","The Welcome message uses an unsupported MLS version.","An unknown error occurred.","","","MlsPlaintext signature is invalid.","A matching EncryptedPathSecret failed to decrypt.","Codec error occurred.","An error occurred in the key schedule.","A PSK error occured.","Couldn’t apply Commit. The epoch of the group context …","apply_commit_internal was called with an MlsPlaintext …","Tried to apply a commit to a group we are not a part of.","Unable to verify the key package signature.","Parent hash extension is missing.","Parent hash values don’t match.","Unable to determine commit path.","Confirmation Tag is missing.","Confirmation tag is invalid.","No key package provided to apply own commit.","The proposal queue is missing a proposal for the commit.","Missing own key to apply proposal.","Missing init secret to apply proposal.","","","The Commit tried to remove self from the group. This is …","Couldn’t create the commit because there’s no key to …","","","The requested key length is not supported (too large).","","","An error occured when concatenating the PSKs.","A PSK was needed, but no PSK fetcher function was …","No PSK was found for PSK ID.","","","","","Collection of callback functions that are passed to a …","","","","","Validator function for AddProposals","Validator function for RemoveProposals","Auto-save callback","","","","","Defines whether handshake messages (Proposals & Commits) …","","","Specifies the configuration parameters for a managed group","Defines whether handshake messages should be encrypted","Defines the update policy","Size of padding in bytes","Number of resumtion secrets to keep","Callbacks","","","","","Specifies in which intervals the own leaf node should be …","Maximum time before an update in seconds","Maximum messages that are sent before an update in seconds","Maximum messages that are received before an update in …","MLS Managed Group errors","","An internal library error occurred. Additional detail is …","See <code>CodecError</code> for details","See <code>ConfigError</code> for details","See <code>GroupError</code> for details","See <code>CreateCommitError</code> for details","See <code>UseAfterEviction</code> for details","See <code>PendingProposalsError</code> for details","See <code>ExporterError</code> for details","Empty input. Additional detail is provided.","See <code>KeyStoreError</code> for details","The message could not be processed.","Couldn’t find a <code>CredentialBundle</code> in the <code>KeyStore</code> that …","Couldn’t find a <code>KeyPackageBundle</code> in the <code>KeyStore</code> that …","Tried to access a poisoned <code>CredentialBundle</code>. See …","","","An empty list of KeyPackages was provided.","An empty list of indexes was provided.","","","Tried to use a group after being evicted from it.","","","Can’t create message because a pending proposal exists.","","","An invalid ciphertext was provided. The error returns the …","See <code>ApplyCommitError</code> for details","See <code>GroupError</code> for details","A Proposal with an invalid membership tag was received.","The given proposal is invalid.","A commit contained an invalid proposal.","","","Group event that occured while processing messages in …","","","","","","","","Event that occurs when member <code>sender</code> adds member …","","","","","Get a reference to the event’s aad.","Get a reference to the event’s sender.","Get a reference to the event’s added member credential.","Event that occurs when a member leaves/is removed from …","","","","Get a reference to the event’s aad.","Get a reference to the event’s removal.","Event that occurs when a member updates its leaf. …","","","","Get a reference to the event’s aad.","Get a reference to the event’s updated member.","Event that occurs when  a PSK is received. <code>psk_id</code> …","","","","Get a reference to the event’s aad.","Get a reference to the event’s psk id.","Event that occurs when a <code>ReInitProposal</code> is received. …","","","","Get a reference to the event’s aad.","Get a reference to the event’s psk id.","Event that occurs when an application message is received.…","","","","","Get a reference to the event’s aad.","Get a reference to the event’s sender.","Get a reference to the event’s message.","Event that occurs when an error occurred while processing …","","","Get a reference to the event’s error.","This enum lists the 4 different variants of a removal, …","We previously issued a RemoveProposal for ourselves and …","Another member issued a RemoveProposal for itself that …","Another member issued a RemoveProposal for ourselves that …","Member A issued a RemoveProposal for member B that was …","","","Resumption secrets store. This is where the resumption …","","","","Create e new store with a given maximum size of …","Add a new entry to the store.","Find an entry for a give epoch number and optionally …","","","","","","","","","","","A <code>ManagedGroup</code> represents an [MlsGroup] with an easier, …","","","","","","","","Creates a new group from scratch with only the creator as …","Creates a new group from a <code>Welcome</code> message","Adds members to the group","Removes members from the group","Creates proposals to add members to the group","Creates proposals to remove members from the group","Leave the group","Gets the current list of members","Processes any incoming messages from the DS (MlsPlaintext …","Creates an application message. Returns …","Process pending proposals","Exports a secret from the current epoch","Returns the authentication secret","Returns a resumption secret for a given epoch. If no …","Gets the configuration","Sets the configuration","Gets the AAD used in the framing","Sets the AAD used in the framing","Returns the group’s ciphersuite","Returns whether the own client is still a member of the …","Returns own credential. If the group is inactive, it …","Get group ID","Updates the own leaf node","Creates a proposal to update the own leaf node","Returns a list of proposal","Loads the state from persisted state","Persists the state","Export the Ratchet Tree","","","","","Converts MlsPlaintext to MLSMessage. Depending on whether …","Validate all pending proposals. The function returns <code>true</code> …","Validates the inline proposals from a Commit message","Prepare the corresponding events for the proposals …","Prepare the corresponding events for the pending proposal …","Auto-save function","Return a list (LeafIndex, Credential)","Unified message type","An OpenMLS <code>MlsPlaintext</code>.","An OpenMLS <code>MlsCiphertext</code>.","Get the group ID as plain byte vector.","Get the epoch as plain u64.","Returns <code>true</code> if this is a handshake message and <code>false</code> …","","","","Helper struct holding values that are encryptedin the …","","","","Prepare the <code>GroupSecrets</code> for a number of <code>invited_members</code> …","","","","","","","","","","","","","","","","","","","","","","Decrypt an MlsCiphertext into an MlsPlaintext","Verify the signature of an MlsPlaintext","Verify the membership tag an MlsPlaintext","Exporter","Returns the authentication secret","Loads the state from persisted state","Persists the state","Returns the ratchet tree","Get the ciphersuite implementation used in this group.","Get the group context","Get the group ID","Get the groups extensions. Right now this is limited to …","Export the <code>PublicGroupState</code>","Returns <code>true</code> if the group uses the ratchet tree extension …","","","","Current interim transcript hash of the group","","","This callback function is used in several places in …","","","","Unit tests for the MLS group","Known Answer Tests for the encoding and decoding of …","","","","","","","","","","","","","","","","","","","","","","","","","Lifetime encodings don’t match.","RatchetTree encodings don’t match.","Welcome encodings don’t match.","PublicGroupState encodings don’t match.","AddProposal encodings don’t match.","MlsCiphertext encodings don’t match.","MlsPlaintextCommit encodings don’t match.","MlsPlaintextProposal encodings don’t match.","MlsPlaintextApplication encodings don’t match.","Commit encodings don’t match.","PreSharedKeyProposal encodings don’t match.","RemoveProposal encodings don’t match.","UpdateProposal encodings don’t match.","GroupSecrets encodings don’t match.","GroupInfo encodings don’t match.","KeyPackage encodings don’t match.","Capabilities encodings don’t match.","","Known Answer Tests for the transcript hashes","","","","","","","","","","","","","","","","Membership tag could not be verified.","The computed confirmation tag doesn’t match the one in …","The computed transcript hash doesn’t match the one in …","The computed interim transcript hash doesn’t match the …","","","Collection of callback functions that are passed to a …","","","","","","","","Defines whether handshake messages (Proposals & Commits) …","","","Specifies the configuration parameters for a managed group","Defines whether handshake messages should be encrypted","Defines the update policy","Size of padding in bytes","Number of resumtion secrets to keep","Callbacks","Specifies in which intervals the own leaf node should be …","Maximum time before an update in seconds","Maximum messages that are sent before an update in seconds","Maximum messages that are received before an update in …","MLS Managed Group errors","","An internal library error occurred. Additional detail is …","See <code>CodecError</code> for details","See <code>ConfigError</code> for details","See <code>GroupError</code> for details","See <code>CreateCommitError</code> for details","See <code>UseAfterEviction</code> for details","See <code>PendingProposalsError</code> for details","See <code>ExporterError</code> for details","Empty input. Additional detail is provided.","See <code>KeyStoreError</code> for details","The message could not be processed.","Couldn’t find a <code>CredentialBundle</code> in the <code>KeyStore</code> that …","Couldn’t find a <code>KeyPackageBundle</code> in the <code>KeyStore</code> that …","Tried to access a poisoned <code>CredentialBundle</code>. See …","","An empty list of KeyPackages was provided.","An empty list of indexes was provided.","","Tried to use a group after being evicted from it.","","Can’t create message because a pending proposal exists.","","An invalid ciphertext was provided. The error returns the …","See <code>ApplyCommitError</code> for details","See <code>GroupError</code> for details","A Proposal with an invalid membership tag was received.","The given proposal is invalid.","A commit contained an invalid proposal.","","Group event that occured while processing messages in …","","","","","","","","Event that occurs when member <code>sender</code> adds member …","","","","Event that occurs when a member leaves/is removed from …","","","Event that occurs when a member updates its leaf. …","","","Event that occurs when  a PSK is received. <code>psk_id</code> …","","","Event that occurs when a <code>ReInitProposal</code> is received. …","","","Event that occurs when an application message is received.…","","","","Event that occurs when an error occurred while processing …","","This enum lists the 4 different variants of a removal, …","We previously issued a RemoveProposal for ourselves and …","Another member issued a RemoveProposal for itself that …","Another member issued a RemoveProposal for ourselves that …","Member A issued a RemoveProposal for member B that was …","Collection of callback functions that are passed to a …","","","","","","","Defines whether handshake messages (Proposals & Commits) …","","","Specifies the configuration parameters for a managed group","Defines whether handshake messages should be encrypted","Defines the update policy","Size of padding in bytes","Number of resumtion secrets to keep","Callbacks","Specifies in which intervals the own leaf node should be …","Maximum time before an update in seconds","Maximum messages that are sent before an update in seconds","Maximum messages that are received before an update in …","","An empty list of KeyPackages was provided.","An empty list of indexes was provided.","","An invalid ciphertext was provided. The error returns the …","See <code>ApplyCommitError</code> for details","See <code>GroupError</code> for details","A Proposal with an invalid membership tag was received.","The given proposal is invalid.","A commit contained an invalid proposal.","","An internal library error occurred. Additional detail is …","See <code>CodecError</code> for details","See <code>ConfigError</code> for details","See <code>GroupError</code> for details","See <code>CreateCommitError</code> for details","See <code>UseAfterEviction</code> for details","See <code>PendingProposalsError</code> for details","See <code>ExporterError</code> for details","Empty input. Additional detail is provided.","See <code>KeyStoreError</code> for details","The message could not be processed.","Couldn’t find a <code>CredentialBundle</code> in the <code>KeyStore</code> that …","Couldn’t find a <code>KeyPackageBundle</code> in the <code>KeyStore</code> that …","Tried to access a poisoned <code>CredentialBundle</code>. See …","","Can’t create message because a pending proposal exists.","","Tried to use a group after being evicted from it.","Group event that occured while processing messages in …","","","","","","","","Event that occurs when member <code>sender</code> adds member …","","","","Event that occurs when a member leaves/is removed from …","","","Event that occurs when a member updates its leaf. …","","","Event that occurs when  a PSK is received. <code>psk_id</code> …","","","Event that occurs when a <code>ReInitProposal</code> is received. …","","","Event that occurs when an application message is received.…","","","","Event that occurs when an error occurred while processing …","","This enum lists the 4 different variants of a removal, …","We previously issued a RemoveProposal for ourselves and …","Another member issued a RemoveProposal for itself that …","Another member issued a RemoveProposal for ourselves that …","Member A issued a RemoveProposal for member B that was …","A <code>ManagedGroup</code> represents an [MlsGroup] with an easier, …","","","","","","","","Unified message type","An OpenMLS <code>MlsPlaintext</code>.","An OpenMLS <code>MlsCiphertext</code>.","","","","","","","","","","","This callback function is used in several places in …","","","","","","","","","","","","","","","","","Configuration for an MLS group.","Flag whether to send the ratchet tree along with the …","","","Get the padding block size used in this config.","","","Key Package errors","","See <code>ExtensionError</code> for details.","See <code>ConfigError</code> for details.","See <code>CodecError</code> for details.","The requested ciphersuite is not supported.","An unknown configuration error occurred.","A mandatory extension is missing in the key package.","The lifetime extension of the key package is not valid.","The key package signature is not valid.","An unknown OpenMLS library error occurred.","Duplicate extensions are not allowed.","Creating a new key package requires at least one …","The list of ciphersuites is not consistent with the …","The ciphersuite does not match the signature scheme.","","","","","","","","","","Mandatory extensions for key packages.","Verify that this key package is valid:","Compute the hash of the encoding of this key package.","Get the ID of this key package as byte slice. Returns an …","Add (or replace) an extension to the KeyPackage. Make …","Get a reference to the extensions of this key package.","Get a reference to the credential.","Populate the <code>signature</code> field using the <code>credential_bundle</code>.","Create a new key package but only with the given …","Compile the unsigned payload to create the signature …","Get a reference to the extension of <code>extension_type</code>. …","Update the parent hash extension of this key package.","Remove an extension from the KeyPackage Make sure to …","Get a reference to the HPKE init key.","Set a new HPKE init key.","Get the <code>Ciphersuite</code>.","Get the <code>ProtocolVersion</code>.","Get the <code>CiphersuiteName</code>.","","","","","Create a new <code>KeyPackageBundle</code> with a fresh <code>HpkeKeyPair</code>. …","Create a new <code>KeyPackageBundle</code> with","Replace the init key in the <code>KeyPackage</code> with a random one …","Creates a new <code>KeyPackageBundle</code> from a given <code>KeyPackage</code> …","Create a new <code>KeyPackageBundle</code> for the given <code>ciphersuite</code>, …","Get a reference to the <code>KeyPackage</code>.","","Update the private key in the bundle.","Update the key package in the bundle.","Get a mutable reference to the <code>KeyPackage</code>.","Get a reference to the <code>HpkePrivateKey</code>.","Get a reference to the <code>leaf_secret</code>.","This function derives the leaf_node_secret from the …","Sign the KeyPackageBundle","A storage solution for cryptographic key material used in …","","","Error while creating <code>KeyPackageBundle</code>. See <code>KeyPackageError</code>…","Error while creating <code>CredentialBundle</code>. See <code>CredentialError</code>…","No <code>CredentialBundle</code> found for the given <code>Credential</code>.","No <code>KeyPackageBundle</code> found for the given <code>KeyPackage</code> hash.","","The <code>KeyStore</code> contains <code>CredentialBundle</code>s and …","","","This guard struct for a <code>CredentialBundle</code> implements <code>Deref</code>…","","","Retrieve a <code>KeyPackageBundle</code> from the key store given the …","Retrieve a <code>CbGuard</code> from the key store given the …","Generate a fresh <code>KeyPackageBundle</code> with the given …","Generate a fresh <code>CredentialBundle</code> with the given …","This function allows us to get hold of the next …","","Codec implementations for message structs.","","","The given MLS Plaintext was not a Proposal.","Not all proposals in the Commit were found locally.","","","Invalid value for ProposalOrRefType was found.","","","API misuse. Only proposals can end up in the proposal …","","","","","","","","","11.2 Commit","","","Type of Proposal, either by value or by reference","","","","Proposal","","","","","","","","","","","","Reference to a Proposal. This can be used in Commit …","","","Alternative representation of a Proposal, where the …","","","","","Creates a new <code>QueuedProposal</code> from an <code>MlsPlaintext</code>","Creates a new <code>QueuedProposal</code> from a <code>Proposal</code> and <code>Sender</code>","Returns the <code>Proposal</code> as a reference","Returns the <code>ProposalReference</code> as a reference","Returns the <code>Sender</code> as a reference","Proposal queue that helps filtering and sorting the …","<code>proposal_references</code> holds references to the proposals in …","<code>queued_proposals</code> contains the actual proposals in the …","Returns a new <code>ProposalQueue</code> from proposals that were …","Returns a new <code>ProposalQueue</code> from proposals that were …","Filters received proposals","Returns proposal for a given proposal ID","Add a new <code>QueuedProposal</code> to the queue","Returns the list of all proposals that are covered by a …","Returns an iterator over a list of <code>QueuedProposal</code> …","","","","","","","Preshared Key proposal 11.1.4 struct { PreSharedKeyID psk;…","","ReInit proposal 11.1.5 struct { opaque group_id<0..255>; …","","","","","Welcome Messages","","","","","EncryptedGroupSecrets","","","Create a new welcome message from the provided data. Note …","Get a reference to the ciphersuite in this Welcome …","Get a reference to the encrypted group secrets in this …","Get a reference to the encrypted group info.","Get a reference to the protocol version in the <code>Welcome</code>.","","","","Returns <code>true</code> if the commit contains an update path. <code>false</code> …","","Confirmation tag field of MlsPlaintext. For type saftey …","","GroupInfo","","","","","","","","","","Get the tree hash as byte slice.","Get the signer index.","Get the signature.","Set the signature.","Get the group ID.","Get the epoch.","Get the confirmed transcript hash.","Get the confirmed tag.","Get the extensions.","PathSecret","","GroupSecrets","","","","Create new encoded group secrets.","Set the config for the secrets, i.e. cipher suite and MLS …","","PublicGroupState","","","","","","","","","","Creates a new <code>PublicGroupState</code> struct from the current …","Verifies the signature of the <code>PublicGroupState</code>. Returns …","PublicGroupStateTBS","","","","","","","Signs the <code>PublicGroupStateTBS</code> with a <code>CredentialBundle</code>.","This module represents the key schedule as introduced in …","","","","Expected to be in initial state.","Expected to be in epoch state.","Expected to be in a state where the context is added.","","","The requested operation is not valid on the key schedule …","","","More than 2^16 PSKS were provided.","The IDs and secrets vectors have different lengths.","","","The computed joiner secret doesn’t match the one in the …","The computed welcome secret doesn’t match the one in …","The computed init secret doesn’t match the one in the …","The group context doesn’t match the one in the test …","The computed sender data secret doesn’t match the one …","The computed encryption secret doesn’t match the one in …","The computed exporter secret doesn’t match the one in …","The computed authentication secret doesn’t match the …","The computed external secret doesn’t match the one in …","The computed confirmation key doesn’t match the one in …","The computed membership key doesn’t match the one in …","The computed resumption secret doesn’t match the one in …","The computed external public key doesn’t match the one …","","Pre shared keys.","Type of PSK.","","","","External PSK.","","Create a new <code>ExternalPsk</code> from a PSK ID","Return the PSK ID","External PSK Bundle. This contains the secret part of the …","","","","Create a new bundle","Return the <code>PreSharedKeyID</code>","Return the secret","ReInit PSK.","","","Return the <code>GroupId</code>","Return the <code>GroupEpoch</code>","Branch PSK","","","Return the <code>GroupId</code>","Return the <code>GroupEpoch</code>","PSK enum that can contain the different PSK types","","","","A <code>PreSharedKeyID</code> is used to uniquely identify the PSKs …","","","","Create a new <code>PreSharedKeyID</code>","Return the type of the PSK","Return the PSK","Return the PSK nonce","<code>PreSharedKeys</code> is a vector of <code>PreSharedKeyID</code>s. struct { …","","Return the <code>PreSharedKeyID</code>s","<code>PskLabel</code> is used in the final concatentation of PSKs …","","","","Create a new <code>PskLabel</code>","This contains the <code>psk-secret</code> calculated from the PSKs …","","Create a new <code>PskSecret</code> from PSK IDs and PSKs","Return the inner secret","","","","","Known Answer Tests for the key schedule","","","","","","","","","","","","","","","","","","","","","","","","","","","A <code>PreSharedKeyID</code> is used to uniquely identify the PSKs …","","","","<code>PreSharedKeys</code> is a vector of <code>PreSharedKeyID</code>s. struct { …","","This contains the <code>psk-secret</code> calculated from the PSKs …","","","","","Create a CommitSecret consisting of an all-zero string of …","","","","The <code>InitSecret</code> is used to connect the next epoch to the …","","Derive an <code>InitSecret</code> from an <code>EpochSecret</code>.","Sample a fresh, random <code>InitSecret</code> for the creation of a …","","","","","","Derive a <code>JoinerSecret</code> from an optional <code>CommitSecret</code> and an…","Set the config for the secret, i.e. cipher suite and MLS …","","","","","","","","","","","","","Initialize the key schedule and return it.","Derive the welcome secret. Note that this has to be …","Add the group context to the key schedule.","Derive the epoch secrets. If the <code>init_secret</code> argument is …","The intermediate secret includes the optional PSK and is …","","Derive an <code>IntermediateSecret</code> from a <code>JoinerSecret</code> and an …","","","Derive a <code>WelcomeSecret</code> from to decrypt a <code>Welcome</code> message.","Derive an <code>AeadKey</code> and an <code>AeadNonce</code> from the <code>WelcomeSecret</code>,…","Derive a new AEAD key from a <code>WelcomeSecret</code>.","Derive a new AEAD nonce from a <code>WelcomeSecret</code>.","","An intermediate secret in the key schedule, the …","","Derive an <code>EpochSecret</code> from a <code>JoinerSecret</code>","The <code>EncryptionSecret</code> is used to create a <code>SecretTree</code>.","","Derive an encryption secret from a reference to an …","Create a <code>SecretTree</code> from the <code>encryption_secret</code> contained …","","","A secret that we can derive secrets from, that are used …","","Derive an <code>ExporterSecret</code> from an <code>EpochSecret</code>.","","Derive a <code>Secret</code> from the exporter secret. We return …","A secret that can be used among members to make sure …","","Derive an <code>AuthenticationSecret</code> from an <code>EpochSecret</code>.","☣️ Get a copy of the secret bytes.","","A secret used when joining a group with an external …","","Derive an <code>ExternalSecret</code> from an <code>EpochSecret</code>.","Derive the external keypair for External Commits","","The confirmation key is used to calculate the …","","Derive an <code>ConfirmationKey</code> from an <code>EpochSecret</code>.","Create a new confirmation tag.","","","The membership key is used to calculate the <code>MembershipTag</code>.","","Derive an <code>MembershipKey</code> from an <code>EpochSecret</code>.","Create a new membership tag.","","","A secret used in cross-group operations.","","Derive an <code>ResumptionSecret</code> from an <code>EpochSecret</code>.","","","A key that can be used to derive an <code>AeadKey</code> and an …","","Derive an <code>ExporterSecret</code> from an <code>EpochSecret</code>.","Derive a new AEAD key from a <code>SenderDataSecret</code>.","Derive a new AEAD nonce from a <code>SenderDataSecret</code>.","","The <code>EpochSecrets</code> contain keys (or secrets), which are …","","","","","","","","","","Get the sender_data secret.","Get the confirmation key.","Authentication secret","Exporter secret","Membership key","External secret","External secret","Init secret","Encryption secret Note that this consumes the encryption …","Derive <code>EpochSecrets</code> from an <code>EpochSecret</code>. If the …","","","","","Error while decrypting <code>PathSecret</code>.","Invalid arguments.","The computed update path is invalid.","The tree is not valid.","The node is not a parent node.","","","The search for a valid child ended with a leaf node.","All checks failed: Neither child has the right parent …","The input node is not a parent node.","The node is not a parent node.","The parent node was blank.","","7.4. Parent Hash","","","","","","","","","","","","","","","","","","","","NodeIndex is an index to the nodes of a tree, both parent …","","","","","","LeafIndex is an index to the leaves of a tree.","","","","","Node type. Can be either <code>Leaf</code> or <code>Parent</code>.","","","Returns <code>true</code> if the node type is <code>Leaf</code> and <code>false</code> otherwise.","Returns <code>true</code> if the node type is <code>Parent</code> and <code>false</code> …","Ratchet tree node. A <code>Node</code> can either be a leaf node (in …","","","","Creates a new leaf node. It can either be blank or …","Creates a new blank parent node.","Returns the public HPKE key of either node type.","Blanks the node.","Returns <code>true</code> if the node is blank and <code>false</code> otherwise.","Returns <code>true</code> if the node is a non-blank parent node and …","Returns the parent hash of a node. Returns <code>None</code> if the …","Get a reference to the key package in this node.","Get a mutable reference to the key package in this node.","Content of a parent node.","","","","Creates a new <code>ParentNode</code> from the provided values.","Returns the node’s HPKE public key","Sets the node’s parent hash","Returns the node’s unmerged leaves","Adds a leaf to the node’s unmerged leaves","A data structure holding HPKE key pairs for a path in the …","A set of keys for a path stored as <code>HashMap</code> with entries …","","Add a slice of <code>HpkePrivateKey</code>s with the indices given in …","Get an HPKE private key for a given node index.","A data structure holding information about the leaf node …","","","","","","","","Create a new empty placeholder <code>PrivateTree</code> with default …","Create a minimal <code>PrivateTree</code> setting only the private key.…","Creates a <code>PrivateTree</code> with a new private key, leaf secret …","","","","","","Generate <code>n</code> path secrets with the given <code>leaf_secret</code>.","Generate <code>n</code> path secrets with the given <code>start_secret</code>.","This function generates the path secrets internally and …","Generate the commit secret for the given <code>path_secret</code>.","Generate HPKE key pairs for all path secrets in …","","","Generation is too old to be processed.","Generation is too far in the future to be processed.","Index out of bounds","","","","","Derives secrets for inner nodes of a SecretTree","","","","","","","","","","","Creates a new SecretTree based on an <code>encryption_secret</code> …","Initializes a specific SenderRatchet pair for a given …","Return RatchetSecrets for a given index and generation. …","Return the next RatchetSecrets that should be used for …","Returns a mutable reference to a specific SenderRatchet. …","Returns an optional reference to a specific SenderRatchet","Derives the secrets for the child leaves in a SecretTree …","","","","","","","","","Creates e new SenderRatchet","Gets a secret from the SenderRatchet. Returns an error if …","Gets a secret from the SenderRatchet and ratchets forward","Computes the new secret","Derives a key & nonce from a secret","","","Leaf nodes don’t have children.","Root nodes don’t have parents.","Node index was not a parent node.","The leaf index is larger than the tree size.","The node index is larger than the tree size.","The provided input is invalid for tree math.","","","","","","","","","","","","","","Direct path from a leaf node to the root. Does not …","Direct path from a parent node to the root. Includes the …","Copath of a leaf. Ordered from leaf to root.","","Returns the number of leaves in a tree","Tree unit tests.","Known Answer Tests for encrypting to tree nodes","","","","","","","","","","","","","","","","","","","","","","","","","","","","The test vector does not contain as many leaves as …","The computed sender data key doesn’t match the one in …","The computed sender data nonce doesn’t match the one in …","The number of generations in leaf sequence doesn’t …","The number of generations in leaf sequence doesn’t …","The computed application secret key doesn’t match the …","The computed application secret nonce doesn’t match the …","The decrypted application message doesn’t match the one …","The computed handshake secret key doesn’t match the one …","The computed handshake secret nonce doesn’t match the …","The decrypted handshake message doesn’t match the one …","","TreeKEM test vectors","","","","","","","","","","","","","","","","","","Tree hash mismatch in the ‘before’ tree.","Tree hash mismatch in the ‘after’ tree.","Parent hash mismatch in the ‘before’ tree.","Parent hash mismatch in the ‘after’ tree.","Root secret mismatch in the ‘before’ tree.","Root secret mismatch in the ‘after’ tree.","Ratchet tree mismatch in the after the update.","","Known Answer Tests for treemath","","","","","","","","","","","","The computed tree size doesn’t match the one in the …","The computed root index doesn’t match the one in the …","A computed left child index doesn’t match the one in …","A computed right child index doesn’t match the one in …","A computed parent index doesn’t match the one in the …","A computed sibling index doesn’t match the one in the …","","","","","","","","","","The ratchet tree.","The ciphersuite used in this tree.","The MLS protocol version used in this tree.","All nodes in the tree. Note that these only hold public …","This holds all private values in the tree. See <code>PrivateTree</code>…","Create a new <code>RatchetTree</code> with only the “self” member …","","Create a new <code>RatchetTree</code> by cloning the public tree nodes …","Generate a new <code>RatchetTree</code> from <code>Node</code>s with the client’s …","Return a mutable reference to the <code>PrivateTree</code>.","Return a reference to the <code>PrivateTree</code>.","","Get a vector with all nodes in the tree, containing <code>None</code> …","Get a vector with a copy of all nodes in the tree, …","Returns the number of leaves in a tree","Compute the resolution for a given node index. Leaves …","Get the index of the own node.","Get a reference to the own key package.","Get a mutable reference to the own key package.","Blanks all the nodes in the direct path of a member","Returns the list of blank leaves within the tree","7.7. Update Paths","Update the private tree with the new <code>KeyPackageBundle</code>.","Update the private tree.","Replace the private tree with a new one based on the …","Encrypt the path secrets to the co path and return the …","Merge public keys from a direct path to this tree along …","Validates that the <code>public_keys</code> matches the public keys in …","Merges <code>public_keys</code> into the tree along the <code>path</code>","Add a node for the provided key package the tree on the …","Add nodes for the provided key packages. Returns a vector …","Applies a list of proposals from a Commit to the tree. …","Trims the tree from the right when there are empty leaf …","Get a reference to the commit secret.","Get the path secret for a given target node. Returns <code>None</code> …","This struct contain the return vallues of the …","","","","","This function creates a <code>HashSet</code> of node indexes of the …","7.7. Update Paths","","","7.7. Update Paths","","","Create a new update path.","Single place, re-exporting the most used public functions.…","Extension errors.","","Invalid extension type error.","Capabilities extension error. See …","Lifetime extension error. See <code>LifetimeExtensionError</code> for …","Key package ID extension error. See <code>KeyPackageIdError</code> for …","Parent hash extension error. See <code>ParentHashError</code> for …","Ratchet tree extension error. See <code>RatchetTreeError</code> for …","Error decoding or encoding an extension.","Configuration error. See <code>ConfigError</code> for details.","The extension is malformed. See <code>InvalidExtensionError</code> for …","","Invalid lifetime extensions.","Lifetime extension is expired.","","Invalid capabilities extensions.","Capabilities extension is missing a version field.","Capabilities contains only unsupported ciphersuites.","","Invalid key package ID extensions.","","Invalid parent hash extensions.","","Invalid ratchet tree extensions.","","The provided extension list contains duplicate extensions.","Key Package errors","","See <code>ExtensionError</code> for details.","See <code>ConfigError</code> for details.","See <code>CodecError</code> for details.","The requested ciphersuite is not supported.","An unknown configuration error occurred.","A mandatory extension is missing in the key package.","The lifetime extension of the key package is not valid.","The key package signature is not valid.","An unknown OpenMLS library error occurred.","Duplicate extensions are not allowed.","Creating a new key package requires at least one …","The list of ciphersuites is not consistent with the …","The ciphersuite does not match the signature scheme.","","","","","","","","","","Group event that occured while processing messages in …","","","","","","","","Defines whether handshake messages (Proposals & Commits) …","","","","An invalid ciphertext was provided. The error returns the …","See <code>ApplyCommitError</code> for details","See <code>GroupError</code> for details","A Proposal with an invalid membership tag was received.","The given proposal is invalid.","A commit contained an invalid proposal.","A <code>ManagedGroup</code> represents an [MlsGroup] with an easier, …","","","","","","","","Collection of callback functions that are passed to a …","","","","Specifies the configuration parameters for a managed group","Defines whether handshake messages should be encrypted","Defines the update policy","Size of padding in bytes","Number of resumtion secrets to keep","Callbacks","","An internal library error occurred. Additional detail is …","See <code>CodecError</code> for details","See <code>ConfigError</code> for details","See <code>GroupError</code> for details","See <code>CreateCommitError</code> for details","See <code>UseAfterEviction</code> for details","See <code>PendingProposalsError</code> for details","See <code>ExporterError</code> for details","Empty input. Additional detail is provided.","See <code>KeyStoreError</code> for details","The message could not be processed.","Couldn’t find a <code>CredentialBundle</code> in the <code>KeyStore</code> that …","Couldn’t find a <code>KeyPackageBundle</code> in the <code>KeyStore</code> that …","Tried to access a poisoned <code>CredentialBundle</code>. See …","Unified message type","An OpenMLS <code>MlsPlaintext</code>.","An OpenMLS <code>MlsCiphertext</code>.","This enum lists the 4 different variants of a removal, …","We previously issued a RemoveProposal for ourselves and …","Another member issued a RemoveProposal for itself that …","Another member issued a RemoveProposal for ourselves that …","Member A issued a RemoveProposal for member B that was …","Specifies in which intervals the own leaf node should be …","Maximum time before an update in seconds","Maximum messages that are sent before an update in seconds","Maximum messages that are received before an update in …","External PSK Bundle. This contains the secret part of the …","","","","","","","","","","","SignatureScheme according to IANA TLS parameters","ECDSA_SECP256R1_SHA256","ECDSA_SECP521R1_SHA512","ED25519","ED448","7.7. Update Paths","","","A struct to contain secrets. This is to provide better …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Error encoding.","Error decoding.","Some other error occurred.","","","","","","","","","","","","","","","","","See <code>ConfigError</code> for details.","See <code>CryptoError</code> for details.","See <code>CodecError</code> for details.","Unsupported credential type.","Invalid signature.","Error while signing.","Enum for Credential Types. We only need this for …","","","Struct containing an X509 certificate chain, as per Spec.","","This enum contains the different available credentials.","","","Struct containing MLS credential data, where the data …","","","","","","","This struct contains a credential and the corresponding …","","","","","","","","Invalid extension type error.","Capabilities extension error. See …","Lifetime extension error. See <code>LifetimeExtensionError</code> for …","Key package ID extension error. See <code>KeyPackageIdError</code> for …","Parent hash extension error. See <code>ParentHashError</code> for …","Ratchet tree extension error. See <code>RatchetTreeError</code> for …","Error decoding or encoding an extension.","Configuration error. See <code>ConfigError</code> for details.","The extension is malformed. See <code>InvalidExtensionError</code> for …","","Invalid lifetime extensions.","Lifetime extension is expired.","","Invalid capabilities extensions.","Capabilities extension is missing a version field.","Capabilities contains only unsupported ciphersuites.","","Invalid key package ID extensions.","","Invalid parent hash extensions.","","Invalid ratchet tree extensions.","","The provided extension list contains duplicate extensions.","","","The lifetime extension holds a not before and a not after …","","","","","Extension types","","","","","","","Extension struct","","","Extension","Build a new extension from a byte slice.","Each extension has an extension type. This should be an …","Get the extension as <code>ExtensionStruct</code> for encoding.","Get a generic trait object for downcasting.","Get a reference to the <code>ParentHashExtension</code>. Returns an …","Get a reference to the <code>CapabilitiesExtension</code>. Returns an …","Get a reference to the <code>LifetimeExtension</code>. Returns an …","Get a reference to the <code>KeyIDExtension</code>. Returns an …","Get a reference to the <code>RatchetTreeExtension</code>. Returns an …","","","","See <code>ExtensionError</code> for details.","See <code>ConfigError</code> for details.","See <code>CodecError</code> for details.","The requested ciphersuite is not supported.","An unknown configuration error occurred.","A mandatory extension is missing in the key package.","The lifetime extension of the key package is not valid.","The key package signature is not valid.","An unknown OpenMLS library error occurred.","Duplicate extensions are not allowed.","Creating a new key package requires at least one …","The list of ciphersuites is not consistent with the …","The ciphersuite does not match the signature scheme.","","","","","","","","","","","","","","","Preshared Key proposal 11.1.4 struct { PreSharedKeyID psk;…","","ReInit proposal 11.1.5 struct { opaque group_id<0..255>; …","","","","","","","","","Branch PSK","","","External PSK.","","A <code>PreSharedKeyID</code> is used to uniquely identify the PSKs …","","","","<code>PreSharedKeys</code> is a vector of <code>PreSharedKeyID</code>s. struct { …","","PSK enum that can contain the different PSK types","","","","Type of PSK.","","","","ReInituild a new CapabilitiesExtension from a byte slice. …","","","","Build a new KeyIDExtension from a byte slice.","","","","Build a new LifetimeExtension from a byte slice.","","","","Build a new ParentHashExtension from a byte slice.","","","","Build a new RatchetTreeExtension from a byte sliceonvert an integer to the corresponding protocol version.","","Get the <code>ExtensionType</code> from a u16. Returns an error if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new group context","Create the <code>GroupContext</code> needed upon creation of a new …","Return the serialized group context","Return the group ID","Return the epoch","","","","","The list of HpkePublicKey values of the nodes in the …","Computes the parent hashes for a leaf node and returns …","Verify the parent hash of a tree node. Returns <code>Ok(())</code> if …","Verify the parent hashes of the tree nodes. Returns <code>true</code> …","Computes and returns the tree hash"],"i":[0,0,0,0,0,0,0,0,0,0,1,1,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,4,4,4,4,0,0,5,5,5,0,0,0,0,6,6,6,6,6,6,0,7,7,7,7,7,0,8,8,0,9,9,9,9,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,11,11,0,12,12,12,0,13,13,0,14,0,15,0,16,16,0,17,17,0,18,18,18,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,12,12,12,12,14,14,14,14,15,18,18,18,18,17,17,16,0,0,0,20,20,20,20,0,21,21,21,21,21,0,22,22,22,22,22,22,22,22,0,23,23,23,23,0,0,0,0,0,0,24,24,24,24,24,24,24,0,0,0,0,25,0,26,26,0,27,27,27,27,0,28,28,28,28,28,28,28,28,28,28,28,0,29,29,29,6,0,0,0,0,30,30,30,30,30,30,30,0,31,31,0,32,0,33,33,0,34,34,34,34,34,34,0,35,35,35,35,0,36,36,36,36,36,0,0,0,37,37,37,37,37,37,37,0,0,0,0,38,38,38,38,38,38,38,38,38,38,0,39,39,39,0,40,40,40,40,0,41,41,0,42,42,0,43,43,0,44,44,0,0,45,45,45,0,0,0,0,46,46,46,46,0,0,0,0,47,47,47,0,0,0,0,48,48,48,0,0,0,49,49,49,49,49,49,0,50,50,50,50,0,0,0,0,51,51,51,51,51,51,51,51,51,0,0,52,0,0,0,53,53,53,53,53,53,53,53,53,53,0,54,54,54,54,0,55,55,55,55,0,56,56,56,56,0,57,57,57,57,0,56,0,0,58,58,58,58,58,0,59,59,59,59,59,59,59,59,0,60,60,60,60,60,0,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,0,62,62,62,62,62,0,63,63,63,0,64,64,64,64,64,0,65,0,66,66,66,66,66,66,66,66,66,66,0,67,67,67,0,68,68,68,68,68,68,0,69,0,0,70,70,70,0,71,71,71,71,71,0,0,0,0,72,72,72,72,72,72,72,72,72,72,72,72,72,0,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,0,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,0,75,75,75,0,76,76,0,77,77,77,77,0,0,0,0,78,78,78,78,78,78,78,0,0,0,0,0,79,79,0,80,80,80,80,80,80,80,80,80,0,81,81,81,0,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,83,83,83,0,84,84,0,85,85,0,86,86,86,86,86,86,86,0,0,87,87,87,87,87,87,87,0,88,88,88,88,88,88,88,0,89,89,89,89,89,0,90,90,90,90,90,0,91,91,91,91,91,0,92,92,92,92,92,0,93,93,93,93,93,93,93,0,94,94,94,0,95,95,95,95,95,0,0,96,96,96,96,96,96,0,0,97,97,97,97,97,97,97,97,0,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,0,99,99,99,99,99,0,0,0,0,100,100,100,100,0,0,0,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,0,0,0,0,0,0,0,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,0,0,0,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,0,0,104,104,104,104,104,104,104,104,104,104,104,0,0,0,105,105,105,105,105,0,0,78,78,78,0,0,0,0,0,79,79,0,80,80,80,80,80,0,81,81,81,0,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,83,83,0,84,0,85,0,86,86,86,86,86,86,0,0,87,87,87,87,87,87,87,0,88,88,88,0,89,89,0,90,90,0,91,91,0,92,92,0,93,93,93,0,94,0,95,95,95,95,0,78,78,78,0,0,0,0,79,79,0,80,80,80,80,80,0,81,81,81,0,83,83,0,86,86,86,86,86,86,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,85,0,84,0,87,87,87,87,87,87,87,0,88,88,88,0,89,89,0,90,90,0,91,91,0,92,92,0,93,93,93,0,94,0,95,95,95,95,0,98,98,98,98,98,98,98,0,99,99,0,0,101,101,101,101,101,101,101,101,0,0,106,106,106,106,0,107,107,0,108,108,108,108,108,108,108,0,109,109,109,109,0,0,0,0,110,110,110,110,110,110,110,110,110,110,110,110,110,110,0,111,111,111,111,111,111,111,0,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,0,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,0,0,0,113,113,113,113,113,0,114,114,0,115,115,114,114,114,114,114,0,0,0,0,116,116,116,0,117,117,0,118,118,0,0,119,119,119,119,119,0,120,120,0,121,121,121,0,122,122,122,122,122,122,122,122,122,122,122,0,123,123,0,124,124,124,124,124,124,124,124,124,0,125,125,125,125,125,125,125,125,125,0,126,0,127,0,128,0,129,0,130,130,130,130,0,131,131,131,131,0,132,132,131,131,131,131,131,0,133,133,133,133,0,134,0,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,0,136,0,137,137,137,137,137,137,0,138,138,138,138,138,138,138,138,138,138,138,0,139,139,139,139,139,139,139,0,0,0,0,140,140,140,140,0,141,141,0,142,142,142,0,143,143,143,143,143,143,143,143,143,143,143,143,143,143,0,0,144,144,144,0,145,145,145,0,146,146,146,146,146,146,0,147,147,147,147,0,148,148,148,148,0,149,149,149,0,150,150,150,150,150,150,150,0,151,151,0,152,152,152,152,0,153,153,153,153,153,153,153,0,0,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,0,155,155,155,155,0,0,0,0,150,150,150,0,151,0,153,0,156,156,156,156,156,156,0,157,157,157,157,157,157,0,158,158,158,158,158,158,0,159,159,159,0,160,160,160,160,160,160,160,160,0,161,161,0,162,162,162,162,162,162,0,163,163,0,164,164,164,164,164,0,165,165,165,165,0,166,166,166,166,0,167,167,167,167,0,168,168,168,168,168,0,169,169,169,169,169,0,170,170,170,0,0,171,171,171,171,171,0,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,0,0,0,0,173,173,173,173,173,173,0,174,174,174,174,174,174,0,0,175,175,175,175,175,0,176,176,176,176,0,177,177,177,177,177,177,0,0,178,178,178,178,178,0,179,179,179,0,0,180,180,180,180,0,181,181,181,181,181,181,181,181,181,181,181,181,0,182,182,182,182,182,182,182,182,0,0,183,183,183,0,0,0,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,0,0,185,185,185,185,0,186,186,0,0,187,187,0,188,0,189,189,189,189,189,189,189,189,189,189,189,0,0,0,0,0,190,190,190,190,190,190,190,190,0,0,191,191,191,191,191,191,191,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,192,192,0,193,193,193,193,0,194,194,194,0,195,195,195,195,195,195,0,0,0,0,0,0,0,196,196,196,196,196,196,196,196,196,196,196,196,0,0,197,197,197,197,197,197,197,197,197,197,197,197,197,197,0,0,198,198,198,198,198,198,198,198,0,0,199,199,199,199,199,199,199,0,0,0,200,200,200,200,200,200,200,0,176,176,0,177,177,177,177,0,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,0,202,202,202,202,202,0,203,203,0,204,204,204,0,0,0,38,38,38,38,38,38,38,38,38,0,39,39,0,40,40,40,0,41,0,42,0,43,0,44,0,0,110,110,110,110,110,110,110,110,110,110,110,110,110,0,101,101,101,101,101,101,101,101,0,87,87,87,87,87,87,87,0,79,79,0,86,86,86,86,86,86,0,98,98,98,98,98,98,98,0,78,78,78,0,80,80,80,80,80,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,99,99,0,95,95,95,95,0,81,81,81,0,146,146,146,0,6,6,6,6,6,6,0,7,7,7,7,0,8,8,0,10,10,10,0,12,12,12,0,13,0,14,0,15,0,16,16,0,17,17,0,18,18,18,0,19,19,19,19,19,19,0,20,20,20,0,21,21,21,21,0,22,22,0,23,23,23,23,0,0,0,30,30,30,30,30,30,0,31,31,0,32,0,33,33,0,34,34,0,35,35,35,0,36,36,0,37,37,37,0,38,38,38,38,38,38,38,38,38,0,39,39,0,40,40,40,0,41,0,42,0,43,0,44,0,45,0,46,46,0,48,0,49,49,49,49,49,49,0,50,50,0,51,51,51,51,51,51,51,51,51,0,52,0,110,110,110,110,110,110,110,110,110,110,110,110,110,0,111,111,111,111,111,111,111,0,112,112,112,0,126,0,129,0,130,130,130,130,0,128,0,127,0,148,148,0,145,0,150,150,150,0,151,0,149,149,149,0,144,144,144,0,147,147,0,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,50,50,50,53,53,53,53,53,53,53,53,53,53,54,54,54,54,54,54,54,54,54,54,55,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,56,57,57,57,57,57,57,57,57,57,57,58,58,58,58,58,58,58,58,58,58,58,59,59,59,59,59,59,59,59,59,59,59,60,60,60,60,60,60,60,60,60,60,60,61,61,61,61,61,61,61,61,61,61,61,62,62,62,62,62,62,62,62,62,62,62,63,63,63,63,63,63,63,63,63,63,63,64,64,64,64,64,64,64,64,65,65,65,65,65,65,65,65,65,65,65,66,66,66,66,66,66,66,66,67,67,67,67,67,67,67,67,68,68,68,68,68,68,68,68,69,69,69,69,69,69,69,69,70,70,70,70,70,70,70,70,70,70,70,71,71,71,71,71,71,71,71,71,71,71,72,72,72,72,72,72,72,72,72,72,72,73,73,73,73,73,73,73,73,73,73,73,74,74,74,74,74,74,74,74,74,74,74,75,75,75,75,75,75,75,75,75,75,75,76,76,76,76,76,76,76,76,76,76,76,77,77,77,77,77,77,77,77,77,77,77,78,78,78,78,78,78,78,78,78,78,79,79,79,79,79,79,79,79,79,79,79,80,80,80,80,80,80,80,80,80,80,80,81,81,81,81,81,81,81,81,81,81,81,82,82,82,82,82,82,82,82,82,82,82,83,83,83,83,83,83,83,83,83,83,83,84,84,84,84,84,84,84,84,84,84,84,85,85,85,85,85,85,85,85,85,85,85,86,86,86,86,86,86,86,86,86,86,86,87,87,87,87,87,87,87,87,87,87,88,88,88,88,88,88,88,88,88,88,89,89,89,89,89,89,89,89,89,89,90,90,90,90,90,90,90,90,90,90,91,91,91,91,91,91,91,91,91,91,92,92,92,92,92,92,92,92,92,92,93,93,93,93,93,93,93,93,93,93,94,94,94,94,94,94,94,94,94,94,95,95,95,95,95,95,95,95,95,95,96,96,96,96,96,96,96,96,96,97,97,97,97,97,97,97,97,97,98,98,98,98,98,98,98,98,98,99,99,99,99,99,99,99,99,99,99,100,100,100,100,100,100,100,100,101,101,101,101,101,101,101,101,101,102,102,102,102,102,102,102,102,102,102,102,103,103,103,103,103,103,103,103,103,103,103,104,104,104,104,104,104,104,104,104,104,104,105,105,105,105,105,105,105,105,105,105,105,106,106,106,106,106,106,106,106,106,106,106,107,107,107,107,107,107,107,107,107,107,107,108,108,108,108,108,108,108,108,108,108,108,109,109,109,109,109,109,109,109,109,109,110,110,110,110,110,110,110,110,110,110,110,111,111,111,111,111,111,111,111,111,111,111,112,112,112,112,112,112,112,112,112,113,113,113,113,113,113,113,113,113,113,113,114,114,114,114,114,114,114,114,115,115,115,115,115,115,115,115,116,116,116,116,116,116,116,116,116,116,116,117,117,117,117,117,117,117,117,117,117,117,118,118,118,118,118,118,118,118,118,118,118,119,119,119,119,119,119,119,119,119,119,120,120,120,120,120,120,120,120,120,120,121,121,121,121,121,121,121,121,121,121,121,122,122,122,122,122,122,122,122,122,122,122,123,123,123,123,123,123,123,123,123,123,123,124,124,124,124,124,124,124,124,124,124,125,125,125,125,125,125,125,125,126,126,126,126,126,126,126,126,126,126,126,127,127,127,127,127,127,127,127,127,127,127,128,128,128,128,128,128,128,128,128,128,128,129,129,129,129,129,129,129,129,129,129,129,130,130,130,130,130,130,130,130,130,130,130,131,131,131,131,131,131,131,131,131,131,132,132,132,132,132,132,132,132,132,132,133,133,133,133,133,133,133,133,133,133,133,134,134,134,134,134,134,134,134,134,134,134,135,135,135,135,135,135,135,135,136,136,136,136,136,136,136,136,136,136,136,137,137,137,137,137,137,137,137,138,138,138,138,138,138,138,138,139,139,139,139,139,139,139,139,140,140,140,140,140,140,140,140,140,140,140,141,141,141,141,141,141,141,141,141,141,141,142,142,142,142,142,142,142,142,142,142,142,143,143,143,143,143,143,143,143,143,143,143,144,144,144,144,144,144,144,144,144,144,144,145,145,145,145,145,145,145,145,145,145,145,146,146,146,146,146,146,146,146,147,147,147,147,147,147,147,147,147,147,147,148,148,148,148,148,148,148,148,148,148,148,149,149,149,149,149,149,149,149,149,149,149,150,150,150,150,150,150,150,150,150,150,150,151,151,151,151,151,151,151,151,152,152,152,152,152,152,152,152,153,153,153,153,153,153,153,153,154,154,154,154,154,154,154,154,154,154,154,155,155,155,155,155,155,155,155,155,155,155,156,156,156,156,156,156,156,156,156,157,157,157,157,157,157,157,157,157,158,158,158,158,158,158,158,158,159,159,159,159,159,159,159,159,160,160,160,160,160,160,160,160,161,161,161,161,161,161,161,161,162,162,162,162,162,162,162,162,163,163,163,163,163,163,163,163,164,164,164,164,164,164,164,164,164,165,165,165,165,165,165,165,165,165,166,166,166,166,166,166,166,166,166,167,167,167,167,167,167,167,167,167,168,168,168,168,168,168,168,168,168,169,169,169,169,169,169,169,169,169,170,170,170,170,170,170,170,170,170,170,170,171,171,171,171,171,171,171,171,171,172,172,172,172,172,172,172,172,172,173,173,173,173,173,173,173,173,173,173,173,174,174,174,174,174,174,174,174,174,174,174,175,175,175,175,175,175,175,175,176,176,176,176,176,176,176,176,177,177,177,177,177,177,177,177,178,178,178,178,178,178,178,178,178,178,178,179,179,179,179,179,179,179,179,179,179,179,180,180,180,180,180,180,180,180,180,180,180,181,181,181,181,181,181,181,181,181,181,181,182,182,182,182,182,182,182,182,182,182,182,183,183,183,183,183,183,183,183,183,184,184,184,184,184,184,184,184,184,185,185,185,185,185,185,185,185,185,185,185,186,186,186,186,186,186,186,186,186,186,187,187,187,187,187,187,187,187,188,188,188,188,188,188,188,188,188,188,188,189,189,189,189,189,189,189,189,189,190,190,190,190,190,190,190,190,190,190,190,191,191,191,191,191,191,191,191,191,191,191,192,192,192,192,192,192,192,192,192,192,192,193,193,193,193,193,193,193,193,193,193,193,194,194,194,194,194,194,194,194,194,194,194,195,195,195,195,195,195,195,195,195,195,195,196,196,196,196,196,196,196,196,196,196,196,197,197,197,197,197,197,197,197,197,197,197,198,198,198,198,198,198,198,198,198,198,198,199,199,199,199,199,199,199,199,199,199,199,200,200,200,200,200,200,200,200,200,200,200,201,201,201,201,201,201,201,201,201,202,202,202,202,202,202,202,202,203,203,203,203,203,203,203,203,203,203,203,204,204,204,204,204,204,204,204,204,204,204,135,6,6,7,7,17,15,15,8,8,13,13,10,10,9,29,29,31,31,34,34,35,35,37,37,46,46,49,49,50,50,61,61,53,53,62,62,63,11,11,65,65,66,54,54,55,55,57,57,68,69,70,70,71,71,106,106,107,107,108,111,111,133,133,134,134,135,135,136,136,132,132,131,131,137,119,120,121,121,122,122,123,123,126,126,127,127,128,128,129,129,130,130,138,138,139,144,144,145,145,147,147,148,148,150,150,151,151,158,158,152,180,180,181,181,182,182,203,203,204,204,188,179,179,187,37,37,37,37,45,45,45,45,46,46,46,46,47,47,47,47,48,48,48,48,1,1,2,2,7,10,20,28,30,30,30,34,38,38,38,38,38,38,38,38,38,59,59,59,60,60,62,69,72,72,72,72,72,72,72,72,72,72,72,73,73,73,73,73,73,74,74,74,74,74,77,82,82,82,82,82,82,82,82,82,82,82,86,86,86,99,99,110,110,110,113,113,116,20,136,141,173,178,178,178,179,179,186,186,1,2,3,4,6,7,8,10,11,13,14,15,16,17,18,19,20,24,26,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,56,57,58,59,60,61,62,63,65,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,99,102,103,104,105,106,107,108,109,110,111,113,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,136,140,141,142,143,144,145,147,148,149,150,154,155,170,173,174,178,179,180,181,182,185,186,188,190,191,192,193,194,195,196,197,198,199,200,203,204,10,29,37,45,46,47,48,49,78,81,102,104,109,114,125,154,155,156,164,178,179,183,192,193,194,29,49,51,178,179,1,1,2,2,3,4,6,7,8,8,10,11,14,14,15,15,17,17,19,20,24,26,26,28,28,29,30,30,31,32,32,33,33,34,34,35,37,37,38,38,39,40,41,42,43,44,45,45,46,46,47,47,48,48,49,50,50,51,53,53,58,59,59,60,60,61,61,62,63,63,65,65,70,71,71,72,72,73,73,74,74,75,76,77,77,78,79,80,80,81,81,82,82,83,84,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,99,99,103,105,106,106,107,107,108,108,110,110,111,111,113,113,116,116,117,118,119,120,121,121,122,122,123,123,126,126,127,127,128,128,129,129,130,130,131,131,132,132,133,133,134,134,136,136,138,138,140,141,141,142,143,144,145,145,147,147,148,148,149,149,150,150,159,172,173,173,174,178,178,179,179,180,181,181,182,182,183,183,185,191,196,198,200,203,203,204,204,29,49,51,178,179,25,115,1,2,3,4,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,56,58,59,60,61,62,63,64,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,126,127,128,129,130,131,132,133,134,136,138,140,141,142,143,144,145,147,148,149,150,154,155,156,157,159,165,166,167,168,169,170,171,172,173,174,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,1,2,3,4,6,19,20,24,29,30,38,39,40,41,42,43,44,58,59,60,72,73,74,75,76,77,82,83,84,85,86,103,105,110,113,116,117,118,140,141,142,143,173,174,185,191,196,198,200,6,7,17,49,50,106,123,178,179,6,7,29,31,49,62,68,69,70,119,120,144,179,180,3,4,20,24,30,38,39,40,41,42,43,44,58,59,60,72,73,74,75,76,77,82,83,84,85,86,103,105,110,113,116,117,118,140,141,142,143,173,174,185,191,196,198,200,19,6,7,8,10,11,15,17,26,27,28,29,31,32,33,34,35,37,45,46,47,48,49,50,61,62,63,65,70,71,79,80,81,96,97,101,102,104,106,107,108,111,112,121,122,123,126,127,128,129,130,133,134,136,144,145,147,148,149,150,154,155,156,157,164,165,166,167,168,169,170,171,172,178,179,180,181,182,183,184,188,189,190,192,193,194,195,197,199,201,203,204,19,6,7,8,10,11,15,17,26,28,29,31,32,33,34,35,37,45,46,47,48,49,50,51,51,51,51,61,62,63,65,70,71,79,80,81,96,97,98,101,102,104,106,107,108,111,112,121,122,123,126,127,128,129,130,133,134,136,144,145,147,148,149,150,154,155,156,157,164,165,166,167,168,169,170,171,172,178,179,180,181,182,183,184,188,189,190,192,193,194,195,197,199,201,203,204,25,175,177,176,15,111,182,175,177,176,63,108,108,108,108,108,101,101,101,101,201,201,201,201,201],"f":[null,[[["usize",15]],[["vec",3],["u8",15]]],[[],["u32",15]],[[],["u64",15]],[[],["u8",15]],[[["usize",15]],[["vec",3],["u8",15]]],[[],["string",3]],[[["ratchettree",3],["str",15]]],null,null,null,[[],["string",3]],null,null,[[],["string",3]],null,[[["str",15]]],[[["str",15]],["deserializeowned",8]],[[],["string",3]],[[["str",15]],[["vec",3],["u8",15]]],[[["string",3],["option",4]],[["vec",3],["u8",15]]],null,null,[[["ciphersuitename",4]],["digestmode",4]],[[["ciphersuitename",4]],["aeadmode",4]],[[["ciphersuitename",4]],[["result",4],["configerror",4],["hpkekemmode",4]]],[[["ciphersuitename",4]],["hmacmode",4]],[[["ciphersuitename",4]],["hpkekdfmode",4]],[[["ciphersuitename",4]],["hpkeaeadmode",4]],null,null,null,null,[[],["string",3]],null,null,null,null,[[],["string",3]],null,null,[[],[["result",4],["vec",3],["codecerror",4]]],[[["credentialbundle",3]],["signature",3]],[[["credential",3],["signature",3]],[["credentialerror",4],["result",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["cryptoerror",4],["result",4],["signaturekeypair",3]]],null,null,null,null,null,null,null,[[["string",3],["usize",15]],[["vec",3],["u8",15]]],[[],["bool",15]],null,null,null,null,[[["ciphersuite",3]]],[[["protocolversion",4],["ciphersuite",3]]],[[["protocolversion",4],["ciphersuite",3]]],[[]],[[["usize",15]],[["result",4],["hkdferror",4]]],[[["usize",15],["str",15]],["secret",3]],[[["str",15]],["secret",3]],[[["protocolversion",4],["ciphersuite",3]]],[[]],[[],["ciphersuite",3]],[[],["protocolversion",4]],null,null,[[["secret",3]]],null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ciphersuitename",4]],[["configerror",4],["result",4]]],[[]],[[],["signaturescheme",4]],[[],["ciphersuitename",4]],[[],[["vec",3],["u8",15]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["hpkepublickey",3]],["hpkeciphertext",3]],[[["secret",3],["hpkepublickey",3]],["hpkeciphertext",3]],[[["hpkeciphertext",3],["hpkeprivatekey",3]],[["vec",3],["result",4],["cryptoerror",4]]],[[["secret",3]],["hpkekeypair",3]],[[["secret",3]]],[[]],[[["aeadnonce",3]],[["vec",3],["result",4],["aeaderror",4]]],[[["aeadnonce",3]],[["vec",3],["result",4],["aeaderror",4]]],[[["secret",3]]],[[]],[[]],[[["reuseguard",3]]],[[],["signature",3]],[[],[["result",4],["signatureerror",4],["signature",3]]],[[["signature",3]],[["signatureerror",4],["result",4]]],[[]],[[["signaturescheme",4]],[["cryptoerror",4],["result",4],["signaturekeypair",3]]],[[["vec",3],["signaturescheme",4],["u8",15]],[["result",4],["signatureerror",4]]],[[["signature",3]],[["signatureerror",4],["result",4]]],[[],[["result",4],["signatureerror",4],["signature",3]]],null,null,null,null,null,null,[[],["string",3]],null,null,null,null,null,[[],["usize",15]],null,null,null,[[],["cursor",3]],[[["usize",15]],[["codecerror",4],["result",4]]],[[["usize",15]],[["codecerror",4],["result",4],["cursor",3]]],[[],["bool",15]],[[],["bool",15]],[[]],null,[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[],[["result",4],["vec",3],["codecerror",4]]],[[],[["codecerror",4],["result",4]]],[[["vecsize",4],["vec",3]],[["result",4],["codecerror",4]]],[[["vecsize",4],["cursor",3]],[["codecerror",4],["result",4],["vec",3]]],null,null,null,null,null,null,null,null,null,null,[[],["string",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["ciphersuitename",4]],[["ciphersuite",3],["configerror",4],["result",4]]],[[],["u64",15]],[[],["u64",15]],null,null,null,null,[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,[[],["string",3]],null,null,null,null,null,null,null,null,null,null,null,[[["signature",3]],[["credentialerror",4],["result",4]]],[[],["vec",3]],[[],["signaturescheme",4]],[[],["signaturepublickey",3]],null,null,null,null,[[["signature",3]],[["credentialerror",4],["result",4]]],null,null,null,[[["signaturescheme",4],["credentialtype",4],["u8",15],["vec",3]],[["result",4],["credentialerror",4]]],[[],["credential",3]],[[],[["result",4],["signatureerror",4],["signature",3]]],null,null,null,null,null,null,[[["option",4],["option",4],["option",4]]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["string",3]],null,null,null,[[],["string",3]],null,null,null,null,[[],["string",3]],null,null,[[],["string",3]],null,null,[[],["string",3]],null,null,[[],["string",3]],null,null,[[],["string",3]],null,null,null,[[]],[[]],[[]],null,null,null,null,null,[[["u64",15]]],[[],["bool",15]],[[]],null,null,null,null,[[]],[[]],[[]],null,null,null,null,[[["option",4],["vec",3]]],[[],[["option",4],["vec",3]]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[["vec",3],["extensiontype",4],["u8",15]]],[[]],[[["extensiontype",4]],[["extensionerror",4],["result",4],["box",3]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4],["vec",3]]],null,[[],[["result",4],["extensionerror",4]]],[[],["extensiontype",4]],[[],["extensionstruct",3]],[[],["any",8]],[[],[["extensionerror",4],["parenthashextension",3],["result",4]]],[[],[["result",4],["extensionerror",4],["capabilitiesextension",3]]],[[],[["result",4],["lifetimeextension",3],["extensionerror",4]]],[[],[["result",4],["extensionerror",4],["keyidextension",3]]],[[],[["extensionerror",4],["result",4],["ratchettreeextension",3]]],null,null,[[],[["extension",8],["box",3]]],null,null,null,null,null,null,null,null,null,[[["groupcontext",3],["usize",15],["secrettree",3],["mlsplaintext",3],["leafindex",3],["ciphersuite",3],["epochsecrets",3]],[["result",4],["mlsciphertext",3],["mlsciphertexterror",4]]],[[["epochsecrets",3],["ciphersuite",3],["secrettree",3]],[["result",4],["mlsplaintext",3],["mlsciphertexterror",4]]],[[],["bool",15]],[[["mlsplaintext",3],["usize",15]],[["result",4],["vec",3],["codecerror",4]]],null,null,null,null,[[["leafindex",3],["u32",15],["reuseguard",3]]],null,null,null,null,[[["groupepoch",3],["contenttype",4],["groupid",3]]],null,null,null,null,null,null,null,null,null,null,null,[[["contenttype",4],["cursor",3]],[["codecerror",4],["result",4]]],null,null,null,null,null,null,[[],["string",3]],null,null,null,null,null,null,null,null,[[],["string",3]],null,null,null,null,null,[[],["string",3]],null,null,null,null,null,null,null,null,null,null,null,[[["groupcontext",3],["leafindex",3],["mlsplaintextcontenttype",4],["credentialbundle",3]],[["codecerror",4],["result",4]]],[[["groupcontext",3],["membershipkey",3],["leafindex",3],["credentialbundle",3],["proposal",4]],[["codecerror",4],["result",4]]],[[["groupcontext",3],["membershipkey",3],["leafindex",3],["credentialbundle",3]],[["codecerror",4],["result",4]]],[[],["mlsplaintextcontenttype",4]],[[],["leafindex",3]],[[["credentialbundle",3]]],[[["credentialbundle",3]],[["result",4],["codecerror",4]]],[[["membershipkey",3]],[["result",4],["codecerror",4]]],[[["credential",3]],[["verificationerror",4],["result",4]]],[[["membershipkey",3],["ciphersuite",3]],[["verificationerror",4],["result",4]]],[[["credential",3],["membershipkey",3]],[["verificationerror",4],["result",4]]],[[],[["result",4],["mlsplaintexterror",4]]],[[],["bool",15]],[[],["bool",15]],[[],["groupid",3]],[[],["groupepoch",3]],null,null,null,null,[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,[[["mlsplaintexttbs",3],["signature",3],["option",4]],[["codecerror",4],["result",4]]],[[],[["result",4],["vec",3],["codecerror",4]]],null,null,null,null,null,null,null,null,null,null,[[["mlsplaintext",3],["option",4]]],[[["credentialbundle",3]],[["result",4],["codecerror",4],["signature",3]]],[[["credential",3],["signature",3]],[["verificationerror",4],["result",4]]],null,null,[[["mlsplaintext",3],["option",4]]],[[["credentialbundle",3]],["signature",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["leafindex",3]],[[["leafindex",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["string",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["string",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["string",3]],null,null,null,[[],["string",3]],null,null,[[],["string",3]],null,null,null,null,[[],["string",3]],null,null,null,null,null,null,null,[[]],[[["validateadd",6]]],[[["validateremove",6]]],[[["autosave",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15],["handshakemessageformat",4],["managedgroupcallbacks",3],["updatepolicy",3]]],[[],["usize",15]],[[],["managedgroupcallbacks",3]],[[["managedgroupcallbacks",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["string",3]],null,null,null,[[],["string",3]],null,null,[[],["string",3]],null,null,[[],["string",3]],null,null,null,null,null,null,null,[[],["string",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u8",15],["vec",3],["credential",3]]],[[]],[[],["credential",3]],[[],["credential",3]],null,null,null,[[["vec",3],["removal",4],["u8",15]]],[[]],[[],["removal",4]],null,null,null,[[["vec",3],["credential",3],["u8",15]]],[[]],[[],["credential",3]],null,null,null,[[["vec",3],["presharedkeyid",3],["u8",15]]],[[]],[[],["presharedkeyid",3]],null,null,null,[[["vec",3],["reinitproposal",3],["u8",15]]],[[]],[[],["reinitproposal",3]],null,null,null,null,[[["u8",15],["vec",3],["credential",3]]],[[]],[[],["credential",3]],[[]],null,null,[[["managedgrouperror",4]]],[[],["managedgrouperror",4]],null,null,null,null,null,[[["credential",3]]],null,null,null,null,null,[[["usize",15]]],[[["resumptionsecret",3],["groupepoch",3]]],[[["groupepoch",3]],[["resumptionsecret",3],["option",4]]],null,null,null,null,null,null,null,null,null,[[["managedgroupcallbacks",3]],["managedgroup",3]],null,null,null,null,null,null,null,null,[[["keystore",3],["managedgroupconfig",3],["groupid",3]],[["result",4],["managedgrouperror",4]]],[[["vec",3],["option",4],["keystore",3],["managedgroupconfig",3],["welcome",3]],[["result",4],["managedgrouperror",4]]],[[["keystore",3]],[["managedgrouperror",4],["result",4]]],[[["keystore",3]],[["managedgrouperror",4],["result",4]]],[[["keypackage",3],["keystore",3]],[["mlsmessage",4],["managedgrouperror",4],["result",4]]],[[["usize",15],["keystore",3]],[["mlsmessage",4],["managedgrouperror",4],["result",4]]],[[["keystore",3]],[["mlsmessage",4],["managedgrouperror",4],["result",4]]],[[],[["vec",3],["credential",3]]],[[["mlsmessage",4]],[["vec",3],["managedgrouperror",4],["result",4]]],[[["keystore",3]],[["mlsmessage",4],["managedgrouperror",4],["result",4]]],[[["keystore",3]],[["managedgrouperror",4],["result",4]]],[[["usize",15],["str",15]],[["vec",3],["managedgrouperror",4],["result",4]]],[[],[["vec",3],["u8",15]]],[[["groupepoch",3]],[["resumptionsecret",3],["option",4]]],[[],["managedgroupconfig",3]],[[["managedgroupconfig",3]]],[[]],[[]],[[],["ciphersuite",3]],[[],["bool",15]],[[],[["result",4],["credential",3],["managedgrouperror",4]]],[[],["groupid",3]],[[["keystore",3],["keypackagebundle",3],["option",4]],[["managedgrouperror",4],["result",4]]],[[["keystore",3],["keypackagebundle",3],["option",4]],[["mlsmessage",4],["managedgrouperror",4],["result",4]]],[[]],[[["read",8],["managedgroupcallbacks",3]],[["result",4],["managedgroup",3],["error",3]]],[[],[["error",3],["result",4]]],[[],[["option",4],["vec",3]]],[[],["ref",3]],[[],["groupcontext",3]],[[],[["vec",3],["u8",15]]],[[["str",15]]],[[["mlsplaintext",3]],[["mlsmessage",4],["managedgrouperror",4],["result",4]]],[[["leafindex",3],["proposal",4],["hashmap",3]],["bool",15]],[[["leafindex",3],["hashmap",3]],["bool",15]],[[["leafindex",3],["hashmap",3],["ciphersuite",3]],[["vec",3],["groupevent",4]]],[[["leafindex",3],["hashmap",3],["proposal",4]],["groupevent",4]],[[]],[[],[["leafindex",3],["credential",3],["hashmap",3]]],null,null,null,[[],[["vec",3],["u8",15]]],[[],["u64",15]],[[],["bool",15]],null,null,null,null,null,null,null,[[["ratchettree",3],["vec",3],["joinersecret",3],["presharedkeys",3]],[["result",4],["vec",3],["grouperror",4]]],null,null,null,null,null,null,null,null,null,null,null,[[["groupconfig",3],["keypackagebundle",3],["ciphersuitename",4]],[["grouperror",4],["result",4]]],[[["vec",3],["keypackagebundle",3],["option",4],["pskfetcher",6],["welcome",3],["option",4]],[["grouperror",4],["result",4]]],[[["keypackage",3],["credentialbundle",3]],[["grouperror",4],["result",4],["mlsplaintext",3]]],[[["keypackage",3],["credentialbundle",3]],[["grouperror",4],["result",4],["mlsplaintext",3]]],[[["leafindex",3],["credentialbundle",3]],[["grouperror",4],["result",4],["mlsplaintext",3]]],[[["presharedkeyid",3],["credentialbundle",3]],[["grouperror",4],["result",4],["mlsplaintext",3]]],[[["option",4],["pskfetcher",6],["bool",15],["credentialbundle",3]],["createcommitresult",6]],[[["mlsplaintext",3],["option",4],["pskfetcher",6]],[["grouperror",4],["result",4]]],[[["usize",15],["credentialbundle",3]],[["grouperror",4],["mlsciphertext",3],["result",4]]],[[["usize",15],["mlsplaintext",3]],[["grouperror",4],["mlsciphertext",3],["result",4]]],[[["mlsciphertext",3]],[["result",4],["mlsplaintext",3],["mlsciphertexterror",4]]],[[["mlsplaintext",3]],[["mlsplaintexterror",4],["result",4]]],[[["mlsplaintext",3]],[["mlsplaintexterror",4],["result",4]]],[[["usize",15],["str",15]],[["vec",3],["grouperror",4],["result",4]]],[[],[["vec",3],["u8",15]]],[[["read",8]],[["result",4],["error",3],["mlsgroup",3]]],[[],[["error",3],["result",4]]],[[],[["ratchettree",3],["ref",3]]],[[],["ciphersuite",3]],[[],["groupcontext",3]],[[],["groupid",3]],[[],[["vec",3],["box",3]]],[[["credentialbundle",3]],[["credentialerror",4],["publicgroupstate",3],["result",4]]],[[],["bool",15]],[[],["leafindex",3]],[[],["epochsecrets",3]],[[],[["refmut",3],["secrettree",3]]],[[]],[[],["epochsecrets",3]],[[],["groupcontext",3]],null,[[["ciphersuite",3],["mlsplaintextcommitcontent",3]],[["result",4],["vec",3],["codecerror",4]]],[[["ciphersuite",3],["mlsplaintextcommitauthdata",3]],[["result",4],["vec",3],["codecerror",4]]],[[["option",4],["pskfetcher",6],["presharedkeys",3],["ciphersuite",3]],[["option",4],["pskerror",4],["result",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ciphersuite",3]],["messagestestvector",3]],[[["messagestestvector",3]],[["result",4],["messagestestvectorerror",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["string",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ciphersuite",3]],["transcripttestvector",3]],[[["transcripttestvector",3]],[["result",4],["transcripttestvectorerror",4]]],null,null,null,null,null,[[],["string",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],[["vec",3],["u8",15]]],null,null,[[]],null,null,null,null,null,null,null,[[["groupepoch",3]]],null,null,null,null,[[],["u32",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["string",3]],null,null,null,null,null,null,null,null,null,[[],[["keypackageerror",4],["result",4]]],[[],[["vec",3],["u8",15]]],[[],[["keypackageerror",4],["result",4]]],[[["extension",8],["box",3]]],[[]],[[],["credential",3]],[[["credentialbundle",3]]],[[["vec",3],["box",3],["hpkepublickey",3],["credentialbundle",3],["ciphersuitename",4]],[["keypackageerror",4],["result",4]]],[[],[["result",4],["vec",3],["codecerror",4]]],[[["extensiontype",4]],[["box",3],["option",4]]],[[]],[[["extensiontype",4]]],[[],["hpkepublickey",3]],[[["hpkepublickey",3]]],[[],["ciphersuite",3]],[[],["protocolversion",4]],[[],["ciphersuitename",4]],null,null,null,null,[[["credentialbundle",3],["vec",3],["box",3]],[["keypackageerror",4],["result",4]]],[[["box",3],["credentialbundle",3],["protocolversion",4],["vec",3]],[["keypackageerror",4],["result",4]]],[[["keypackage",3]]],[[["secret",3],["keypackage",3]]],[[["hpkekeypair",3],["secret",3],["box",3],["credentialbundle",3],["vec",3]],[["keypackageerror",4],["result",4]]],[[],["keypackage",3]],[[["secret",3],["box",3],["credentialbundle",3],["vec",3]],[["keypackageerror",4],["result",4]]],[[["hpkeprivatekey",3]]],[[["keypackage",3]]],[[],["keypackage",3]],[[],["hpkeprivatekey",3]],[[],["secret",3]],[[["secret",3]],["secret",3]],[[["credentialbundle",3]]],null,null,null,null,null,null,null,[[],["string",3]],null,null,null,null,null,null,[[],[["keypackagebundle",3],["option",4]]],[[["signaturepublickey",3]],[["option",4],["cbguard",3]]],[[["credential",3],["vec",3],["box",3]],[["result",4],["keypackage",3],["keystoreerror",4]]],[[["signaturescheme",4],["credentialtype",4],["u8",15],["vec",3]],[["result",4],["credential",3],["keystoreerror",4]]],[[],["secret",3]],null,null,null,null,null,null,[[],["string",3]],null,null,[[],["string",3]],null,null,[[],["string",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["proposalorreftype",4]],null,null,null,null,null,null,[[],["proposaltype",4]],[[["proposaltype",4]],["bool",15]],[[],[["addproposal",3],["option",4]]],[[],[["updateproposal",3],["option",4]]],[[],[["removeproposal",3],["option",4]]],[[],[["presharedkeyproposal",3],["option",4]]],null,null,[[["ciphersuite",3],["proposal",4]]],null,null,null,null,null,[[["mlsplaintext",3],["ciphersuite",3]],[["queuedproposalerror",4],["result",4]]],[[["proposal",4],["ciphersuite",3],["sender",3]]],[[],["proposal",4]],[[],["proposalreference",3]],[[],["sender",3]],null,null,null,[[["ciphersuite",3]]],[[["ciphersuite",3],["sender",3]],[["proposalqueueerror",4],["result",4]]],[[["leafindex",3],["ciphersuite",3]],[["result",4],["proposalqueueerror",4]]],[[["proposalreference",3]],[["option",4],["queuedproposal",3]]],[[["queuedproposal",3]]],[[],[["proposalorref",4],["vec",3]]],[[["proposaltype",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ciphersuite",3],["encryptedgroupsecrets",3],["u8",15],["vec",3],["vec",3],["protocolversion",4]]],[[],["ciphersuite",3]],[[]],[[]],[[],["protocolversion",4]],null,null,null,[[],["bool",15]],[[],["option",4]],null,null,null,null,null,null,null,null,null,null,null,[[["confirmationtag",3],["groupid",3],["vec",3],["u8",15],["vec",3],["groupepoch",3],["leafindex",3],["box",3]]],[[]],[[],["leafindex",3]],[[],["signature",3]],[[["signature",3]]],[[],["groupid",3]],[[],["groupepoch",3]],[[]],[[],["confirmationtag",3]],[[]],null,null,null,null,null,null,[[["joinersecret",3],["pathsecret",3],["option",4]],[["result",4],["vec",3],["codecerror",4]]],[[["protocolversion",4],["ciphersuite",3]],["groupsecrets",3]],[[["protocolversion",4],["ciphersuite",3]],[["result",4],["vec",3],["codecerror",4]]],null,null,null,null,null,null,null,null,null,null,[[["mlsgroup",3],["credentialbundle",3]],[["result",4],["credentialerror",4]]],[[["credentialbundle",3]],[["credentialerror",4],["result",4]]],null,null,null,null,null,null,null,[[["credentialbundle",3]],[["credentialerror",4],["result",4],["signature",3]]],null,null,null,null,null,null,null,[[],["string",3]],null,null,[[],["string",3]],null,null,null,[[],["string",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["string",3]],null,null,null,null,null,null,null,[[["vec",3],["u8",15]]],[[]],null,null,null,null,[[["secret",3],["u8",15],["vec",3],["ciphersuite",3]]],[[],["presharedkeyid",3]],[[],["secret",3]],null,null,null,[[],["groupid",3]],[[],["groupepoch",3]],null,null,null,[[],["groupid",3]],[[],["groupepoch",3]],null,null,null,null,null,null,null,null,[[["psk",4],["u8",15],["vec",3],["psktype",4]]],[[],["psktype",4]],[[],["psk",4]],[[]],null,null,[[],["vec",3]],null,null,null,null,[[["presharedkeyid",3],["u16",15]]],null,null,[[["ciphersuite",3]],[["psksecreterror",4],["result",4]]],[[],["secret",3]],[[["ciphersuite",3]]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["initsecret",3],["u64",15],["ciphersuite",3]]],[[["ciphersuite",3],["u64",15]],["keyscheduletestvector",3]],[[["keyscheduletestvector",3]],[["kstestvectorerror",4],["result",4]]],null,null,null,null,null,null,null,null,null,null,[[["ciphersuite",3],["secret",3]]],[[["protocolversion",4],["ciphersuite",3]]],[[["ciphersuite",3]]],[[]],[[]],null,null,[[["epochsecret",3]]],[[["protocolversion",4],["ciphersuite",3]]],[[]],[[]],[[]],null,null,[[["initsecret",3]]],[[["protocolversion",4],["ciphersuite",3]]],[[]],[[]],[[["protocolversion",4],["ciphersuite",3]]],null,null,null,null,null,null,null,null,null,[[["joinersecret",3],["ciphersuite",3]]],[[],[["welcomesecret",3],["keyscheduleerror",4],["result",4]]],[[["groupcontext",3]],[["keyscheduleerror",4],["result",4]]],[[["bool",15]],[["result",4],["epochsecrets",3],["keyscheduleerror",4]]],null,null,[[["joinersecret",3],["option",4],["psksecret",3]]],null,null,[[["intermediatesecret",3]]],[[]],[[],["aeadkey",3]],[[],["aeadnonce",3]],[[]],null,null,[[["intermediatesecret",3],["groupcontext",3],["ciphersuite",3]]],null,null,[[["epochsecret",3]]],[[["leafindex",3]],["secrettree",3]],[[],["secret",3]],[[]],null,null,[[["epochsecret",3]]],[[]],[[["usize",15],["ciphersuite",3],["str",15]],[["vec",3],["u8",15]]],null,null,[[["epochsecret",3]]],[[],[["vec",3],["u8",15]]],[[]],null,null,[[["epochsecret",3]]],[[["ciphersuite",3]],["hpkekeypair",3]],[[]],null,null,[[["epochsecret",3]]],[[],["confirmationtag",3]],[[["secret",3]]],[[]],null,null,[[["epochsecret",3]]],[[["mlsplaintexttbmpayload",3]],[["codecerror",4],["result",4],["membershiptag",3]]],[[["secret",3]]],[[]],null,null,[[["epochsecret",3]]],[[]],[[["ciphersuite",3]]],null,null,[[["epochsecret",3]]],[[],["aeadkey",3]],[[["ciphersuite",3]],["aeadnonce",3]],[[]],null,null,null,null,null,null,null,null,null,null,[[],["senderdatasecret",3]],[[],["confirmationkey",3]],[[],["authenticationsecret",3]],[[],["exportersecret",3]],[[],["membershipkey",3]],[[],["externalsecret",3]],[[],["resumptionsecret",3]],[[],[["option",4],["initsecret",3]]],[[],["encryptionsecret",3]],[[["bool",15],["epochsecret",3]]],null,null,null,null,null,null,null,null,null,[[],["string",3]],null,null,null,null,null,null,[[],["string",3]],null,null,null,null,null,[[["ratchettree",3],["nodeindex",3]],[["parenthasherror",4],["result",4]]],[[["ciphersuite",3]],[["vec",3],["u8",15]]],null,null,null,[[["option",4],["nodeindex",3]]],[[["ciphersuite",3]],[["vec",3],["u8",15]]],null,null,null,null,null,[[["u32",15],["option",4]]],[[["ciphersuite",3]],[["vec",3],["u8",15]]],null,null,null,[[],["u32",15]],[[],["usize",15]],[[],["bool",15]],[[],["bool",15]],null,null,[[],["u32",15]],[[],["usize",15]],null,null,null,null,[[],["bool",15]],[[],["bool",15]],null,null,null,null,[[["keypackage",3],["option",4]]],[[]],[[],[["option",4],["hpkepublickey",3]]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["option",4]],[[],[["option",4],["keypackage",3]]],[[],[["keypackage",3],["option",4]]],null,null,null,null,[[["hpkepublickey",3]]],[[],["hpkepublickey",3]],[[["vec",3],["u8",15]]],[[]],[[["leafindex",3]]],null,null,null,[[["hpkeprivatekey",3],["vec",3]]],[[["nodeindex",3]],[["hpkeprivatekey",3],["option",4]]],null,null,null,null,null,null,null,null,[[["leafindex",3]],["privatetree",3]],[[["leafindex",3],["keypackagebundle",3]]],[[["leafindex",3],["ciphersuite",3],["keypackagebundle",3]]],[[],["hpkeprivatekey",3]],[[],["leafindex",3]],[[],["pathkeys",3]],[[],[["option",4],["commitsecret",3]]],[[]],[[["ciphersuite",3],["secret",3]],[["hpkepublickey",3],["vec",3]]],[[["pathsecret",3],["ciphersuite",3]],[["hpkepublickey",3],["vec",3]]],[[["pathsecret",3],["ciphersuite",3],["vec",3]],[["hpkepublickey",3],["vec",3]]],[[["ciphersuite",3]]],[[["ciphersuite",3]],[["hpkepublickey",3],["vec",3]]],null,null,null,null,null,[[],["string",3]],null,null,null,[[["u32",15],["usize",15],["secret",3],["str",15]],["secret",3]],null,null,null,null,null,null,null,null,null,null,[[["leafindex",3],["encryptionsecret",3]]],[[["leafindex",3],["ciphersuite",3]],[["result",4],["secrettreeerror",4]]],[[["secrettype",4],["u32",15],["leafindex",3],["ciphersuite",3]],[["result",4],["secrettreeerror",4]]],[[["leafindex",3],["secrettype",4],["ciphersuite",3]],[["result",4],["secrettreeerror",4]]],[[["leafindex",3],["secrettype",4]],["senderratchet",3]],[[["leafindex",3],["secrettype",4]],[["option",4],["result",4],["secrettreeerror",4]]],[[["ciphersuite",3],["nodeindex",3]]],null,null,null,null,null,null,null,null,[[["leafindex",3],["secret",3]]],[[["u32",15],["ciphersuite",3]],[["result",4],["secrettreeerror",4]]],[[["ciphersuite",3]]],[[["ciphersuite",3],["secret",3]],["secret",3]],[[["u32",15],["ciphersuite",3],["secret",3]]],null,null,null,null,null,null,null,null,[[],["string",3]],[[["usize",15]],["usize",15]],[[["nodeindex",3]],["usize",15]],[[["usize",15]],["usize",15]],[[["leafindex",3]],["nodeindex",3]],[[["nodeindex",3]],[["result",4],["treematherror",4],["nodeindex",3]]],[[["leafindex",3],["nodeindex",3]],[["result",4],["treematherror",4],["nodeindex",3]]],[[["usize",15]],["usize",15]],[[["leafindex",3],["nodeindex",3]],[["result",4],["treematherror",4],["nodeindex",3]]],[[["leafindex",3],["nodeindex",3]],[["result",4],["treematherror",4],["nodeindex",3]]],[[["leafindex",3],["nodeindex",3]],[["result",4],["treematherror",4],["nodeindex",3]]],[[["leafindex",3],["nodeindex",3]],[["result",4],["treematherror",4]]],[[["leafindex",3]],[["result",4],["treematherror",4]]],[[["leafindex",3]],[["result",4],["vec",3],["treematherror",4]]],[[["leafindex",3],["nodeindex",3]],[["result",4],["vec",3],["treematherror",4]]],[[["leafindex",3]],[["result",4],["vec",3],["treematherror",4]]],[[["nodeindex",3]],["nodeindex",3]],[[["nodeindex",3]],["leafindex",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ciphersuite",3]],["mlsgroup",3]],[[["ciphersuite",3],["groupid",3]],["mlsgroup",3]],[[["leafindex",3],["mlsgroup",3]]],[[["leafindex",3],["mlsgroup",3]]],[[["u32",15],["ciphersuite",3]],["encryptiontestvector",3]],[[["encryptiontestvector",3]],[["result",4],["enctestvectorerror",4]]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["string",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["treekemtestvector",3]],[["treekemtestvectorerror",4],["result",4]]],null,null,null,null,null,null,null,null,[[],["string",3]],null,null,null,null,null,null,null,null,null,[[["u32",15]],["treemathtestvector",3]],[[["treemathtestvector",3]],[["result",4],["tmtestvectorerror",4]]],null,null,null,null,null,null,null,[[],["string",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["keypackagebundle",3]],["ratchettree",3]],[[],["ciphersuite",3]],[[["ratchettree",3]]],[[["keypackagebundle",3]],[["ratchettree",3],["result",4],["treeerror",4]]],[[],["privatetree",3]],[[],["privatetree",3]],[[],["nodeindex",3]],[[],[["option",4],["vec",3]]],[[],[["option",4],["vec",3]]],[[],["leafindex",3]],[[["hashset",3],["nodeindex",3]],[["vec",3],["nodeindex",3]]],[[],["leafindex",3]],[[],["keypackage",3]],[[],["keypackage",3]],[[["leafindex",3]]],[[],[["leafindex",3],["vec",3]]],[[["updatepath",3],["hashset",3],["leafindex",3],["leafindex",3]],[["treeerror",4],["commitsecret",3],["result",4]]],[[["keypackagebundle",3]],[["option",4],["commitsecret",3]]],[[["credentialbundle",3],["hashset",3],["leafindex",3]]],[[["hashset",3],["option",4],["keypackagebundle",3]],[["option",4],["updatepath",3]]],[[["hashset",3],["leafindex",3],["hpkepublickey",3],["vec",3]],[["treeerror",4],["vec",3],["result",4]]],[[["updatepath",3],["vec",3],["nodeindex",3]],[["treeerror",4],["result",4]]],[[],[["treeerror",4],["result",4]]],[[],[["treeerror",4],["result",4]]],[[["keypackage",3]]],[[],["vec",3]],[[["proposalqueue",3]],[["result",4],["applyproposalsvalues",3],["treeerror",4]]],[[]],[[],[["option",4],["commitsecret",3]]],[[["nodeindex",3]],[["option",4],["pathsecret",3]]],null,null,null,null,null,[[],[["hashset",3],["leafindex",3]]],null,null,null,null,null,null,[[["keypackage",3],["updatepathnode",3],["vec",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[],[["result",4],["vec",3],["codecerror",4]]],[[],[["codecerror",4],["result",4]]],[[["vecsize",4],["vec",3]],[["result",4],["codecerror",4]]],[[["vecsize",4],["cursor",3]],[["codecerror",4],["result",4],["vec",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["result",4],["extensionerror",4]]],[[],["extensiontype",4]],[[],["extensionstruct",3]],[[],["any",8]],[[],[["extensionerror",4],["parenthashextension",3],["result",4]]],[[],[["result",4],["extensionerror",4],["capabilitiesextension",3]]],[[],[["result",4],["lifetimeextension",3],["extensionerror",4]]],[[],[["result",4],["extensionerror",4],["keyidextension",3]]],[[],[["extensionerror",4],["result",4],["ratchettreeextension",3]]],null,[[],[["extension",8],["box",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ratchettree",3],["str",15]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["result",4],["ok",3]]],[[],[["result",4],["vec",3],["codecerror",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["codecerror",4],["result",4]]],[[["cursor",3]],[["result",4],["codecerror",4]]],[[["vec",3]],[["codecerror",4],["result",4]]],[[["cursor",3]],[["result",4],["codecerror",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[],["extensiontype",4]],[[],[["result",4],["extensionerror",4]]],[[],["extensionstruct",3]],[[],["any",8]],[[],["extensiontype",4]],[[],[["result",4],["extensionerror",4]]],[[],["extensionstruct",3]],[[],["any",8]],[[],["extensiontype",4]],[[],[["result",4],["extensionerror",4]]],[[],["extensionstruct",3]],[[],["any",8]],[[],["extensiontype",4]],[[],[["result",4],["extensionerror",4]]],[[],["extensionstruct",3]],[[],["any",8]],[[],["extensiontype",4]],[[],[["result",4],["extensionerror",4]]],[[],["extensionstruct",3]],[[],["any",8]],[[["string",3]]],[[["str",15]]],[[["vec",3],["u8",15]]],[[]],[[["ciphersuitename",4]]],[[]],[[["configerror",4]],["codecerror",4]],[[["persistentconfig",3]]],[[["configerror",4]]],[[["cryptoerror",4]]],[[["codecerror",4]]],[[["mlscredentialtype",4]]],[[["errorstring",3]]],[[["capabilitiesextensionerror",4]]],[[["lifetimeextensionerror",4]]],[[["keypackageiderror",4]]],[[["parenthasherror",4]]],[[["ratchettreeerror",4]]],[[["codecerror",4]]],[[["configerror",4]]],[[["invalidextensionerror",4]]],[[["mlsplaintexterror",4]]],[[["secrettreeerror",4]]],[[["codecerror",4]]],[[["codecerror",4]]],[[["credentialerror",4]]],[[["mlsplaintextcontenttype",4]]],[[["confirmationtag",3]]],[[["mlsciphertexterror",4]]],[[["welcomeerror",4]]],[[["applycommiterror",4]]],[[["createcommiterror",4]]],[[["configerror",4]]],[[["exportererror",4]]],[[["proposalqueueerror",4]]],[[["codecerror",4]]],[[["keyscheduleerror",4]]],[[["treematherror",4]]],[[["pskerror",4]]],[[["treeerror",4]]],[[["parenthasherror",4]]],[[["cryptoerror",4]]],[[["codecerror",4]]],[[["keyscheduleerror",4]]],[[["pskerror",4]]],[[["verificationerror",4]]],[[["treeerror",4]]],[[["codecerror",4]]],[[["keyscheduleerror",4]]],[[["pskerror",4]]],[[["psksecreterror",4]]],[[["errorstring",3]]],[[["codecerror",4]]],[[["configerror",4]]],[[["grouperror",4]]],[[["createcommiterror",4]]],[[["useaftereviction",4]]],[[["pendingproposalserror",4]]],[[["exportererror",4]]],[[["emptyinputerror",4]]],[[["keystoreerror",4]]],[[["invalidmessageerror",4]]],[[["mlsciphertexterror",4]]],[[["applycommiterror",4]]],[[["grouperror",4]]],[[["mlsplaintext",3]]],[[["mlsciphertext",3]]],[[["extensionerror",4]]],[[["configerror",4]]],[[["codecerror",4]]],[[["keypackageerror",4]]],[[["credentialerror",4]]],[[["queuedproposalerror",4]]],[[["proposalorreftypeerror",4]]],[[["secret",3]]],[[["errorstate",4]]],[[["cryptoerror",4]]],[[["u32",15]],["nodeindex",3]],[[["usize",15]],["nodeindex",3]],[[["leafindex",3]],["nodeindex",3]],[[["u32",15]],["leafindex",3]],[[["usize",15]],["leafindex",3]],[[["contenttype",4]],["secrettype",4]],[[["mlsplaintext",3]],["secrettype",4]],[[],["errorstring",3]],[[],["errorpayload",3]],[[],["hkdferror",4]],[[],["cryptoerror",4]],[[],["ciphersuitename",4]],[[],["signaturescheme",4]],[[],["hpkeciphertext",3]],[[],["secret",3]],[[],["mac",3]],[[],["reuseguard",3]],[[],["aeadnonce",3]],[[],["signature",3]],[[],["signatureprivatekey",3]],[[],["signaturepublickey",3]],[[],["signaturekeypair",3]],[[]],[[],["codecerror",4]],[[],["configerror",4]],[[],["constants",3]],[[],["config",3]],[[],["protocolversion",4]],[[],["credentialerror",4]],[[],["credentialtype",4]],[[],["certificate",3]],[[],["mlscredentialtype",4]],[[],["credential",3]],[[],["basiccredential",3]],[[],["capabilitiesextension",3]],[[],["extensionerror",4]],[[],["lifetimeextensionerror",4]],[[],["capabilitiesextensionerror",4]],[[],["keypackageiderror",4]],[[],["parenthasherror",4]],[[],["ratchettreeerror",4]],[[],["invalidextensionerror",4]],[[],["keyidextension",3]],[[],["lifetimeextension",3]],[[],["parenthashextension",3]],[[],["ratchettreeextension",3]],[[],["extensiontype",4]],[[],["extensionstruct",3]],[[],["mlsciphertext",3]],[[],["mlssenderdata",3]],[[],["mlssenderdataaad",3]],[[],["mlsciphertextcontent",3]],[[],["mlsciphertextcontentaad",3]],[[],["mlsplaintexterror",4]],[[],["mlsciphertexterror",4]],[[],["verificationerror",4]],[[],["mlsplaintext",3]],[[],["contenttype",4]],[[],["mlsplaintextcontenttype",4]],[[],["membershiptag",3]],[[],["sendertype",4]],[[],["sender",3]],[[],["grouperror",4]],[[],["welcomeerror",4]],[[],["applycommiterror",4]],[[],["createcommiterror",4]],[[],["exportererror",4]],[[],["pskerror",4]],[[],["managedgroupcallbacks",3]],[[],["handshakemessageformat",4]],[[],["managedgroupconfig",3]],[[],["updatepolicy",3]],[[],["managedgrouperror",4]],[[],["emptyinputerror",4]],[[],["useaftereviction",4]],[[],["pendingproposalserror",4]],[[],["invalidmessageerror",4]],[[],["groupevent",4]],[[],["memberaddedevent",3]],[[],["memberremovedevent",3]],[[],["memberupdatedevent",3]],[[],["pskreceivedevent",3]],[[],["reinitevent",3]],[[],["applicationmessageevent",3]],[[],["errorevent",3]],[[],["removal",4]],[[],["mlsmessage",4]],[[],["messagestestvector",3]],[[],["messagestestvectorerror",4]],[[],["transcripttestvector",3]],[[],["transcripttestvectorerror",4]],[[],["groupid",3]],[[],["groupepoch",3]],[[],["groupcontext",3]],[[],["groupconfig",3]],[[],["keypackageerror",4]],[[],["keypackage",3]],[[],["keystoreerror",4]],[[],["proposalqueueerror",4]],[[],["proposalorreftypeerror",4]],[[],["queuedproposalerror",4]],[[],["proposaltype",4]],[[],["proposalorreftype",4]],[[],["proposalorref",4]],[[],["proposal",4]],[[],["proposalreference",3]],[[],["queuedproposal",3]],[[],["addproposal",3]],[[],["updateproposal",3]],[[],["removeproposal",3]],[[],["presharedkeyproposal",3]],[[],["reinitproposal",3]],[[],["welcome",3]],[[],["encryptedgroupsecrets",3]],[[],["commit",3]],[[],["confirmationtag",3]],[[],["pathsecret",3]],[[],["errorstate",4]],[[],["keyscheduleerror",4]],[[],["psksecreterror",4]],[[],["kstestvectorerror",4]],[[],["psktype",4]],[[],["externalpsk",3]],[[],["reinitpsk",3]],[[],["branchpsk",3]],[[],["psk",4]],[[],["presharedkeyid",3]],[[],["epoch",3]],[[],["keyscheduletestvector",3]],[[],["resumptionsecret",3]],[[],["treeerror",4]],[[],["parenthasherror",4]],[[],["nodeindex",3]],[[],["leafindex",3]],[[],["nodetype",4]],[[],["node",3]],[[],["parentnode",3]],[[],["secrettreeerror",4]],[[],["secrettype",4]],[[],["secrettreenode",3]],[[],["senderratchet",3]],[[],["treematherror",4]],[[],["senderdatainfo",3]],[[],["ratchetstep",3]],[[],["leafsequence",3]],[[],["encryptiontestvector",3]],[[],["enctestvectorerror",4]],[[],["treekemtestvector",3]],[[],["treekemtestvectorerror",4]],[[],["treemathtestvector",3]],[[],["tmtestvectorerror",4]],[[],["updatepathnode",3]],[[],["updatepath",3]],[[]],[[]],[[]],[[],["keyidextension",3]],[[]],[[],["parenthashextension",3]],[[],["ratchettreeextension",3]],[[]],[[],["managedgroupcallbacks",3]],[[]],[[],["messagestestvector",3]],[[],["transcripttestvector",3]],[[]],[[],["keystore",3]],[[],["proposalqueue",3]],[[],["epoch",3]],[[],["keyscheduletestvector",3]],[[]],[[],["encryptionsecret",3]],[[],["nodeindex",3]],[[],["leafindex",3]],[[],["pathkeys",3]],[[],["senderdatainfo",3]],[[],["ratchetstep",3]],[[],["leafsequence",3]],[[["protocolversion",4]],["ordering",4]],[[["extensiontype",4]],["ordering",4]],[[],["ordering",4]],[[["nodeindex",3]],["ordering",4]],[[["leafindex",3]],["ordering",4]],[[["errorstring",3]],["bool",15]],[[["errorstring",3]],["bool",15]],[[["errorpayload",3]],["bool",15]],[[["errorpayload",3]],["bool",15]],[[["hkdferror",4]],["bool",15]],[[["cryptoerror",4]],["bool",15]],[[["ciphersuitename",4]],["bool",15]],[[["signaturescheme",4]],["bool",15]],[[["hpkeciphertext",3]],["bool",15]],[[["hpkeciphertext",3]],["bool",15]],[[["secret",3]],["bool",15]],[[["mac",3]],["bool",15]],[[["aeadnonce",3]],["bool",15]],[[["aeadnonce",3]],["bool",15]],[[["signature",3]],["bool",15]],[[["signature",3]],["bool",15]],[[["signaturepublickey",3]],["bool",15]],[[["signaturepublickey",3]],["bool",15]],[[["ciphersuite",3]],["bool",15]],[[["codecerror",4]],["bool",15]],[[["configerror",4]],["bool",15]],[[["constants",3]],["bool",15]],[[["constants",3]],["bool",15]],[[["config",3]],["bool",15]],[[["config",3]],["bool",15]],[[["protocolversion",4]],["bool",15]],[[["credentialerror",4]],["bool",15]],[[["credentialerror",4]],["bool",15]],[[["credentialtype",4]],["bool",15]],[[["certificate",3]],["bool",15]],[[["certificate",3]],["bool",15]],[[["mlscredentialtype",4]],["bool",15]],[[["mlscredentialtype",4]],["bool",15]],[[["credential",3]],["bool",15]],[[["credential",3]],["bool",15]],[[],["bool",15]],[[["capabilitiesextension",3]],["bool",15]],[[["capabilitiesextension",3]],["bool",15]],[[["extensionerror",4]],["bool",15]],[[["extensionerror",4]],["bool",15]],[[["lifetimeextensionerror",4]],["bool",15]],[[["capabilitiesextensionerror",4]],["bool",15]],[[["keypackageiderror",4]],["bool",15]],[[["parenthasherror",4]],["bool",15]],[[["ratchettreeerror",4]],["bool",15]],[[["invalidextensionerror",4]],["bool",15]],[[["keyidextension",3]],["bool",15]],[[["keyidextension",3]],["bool",15]],[[["lifetimeextension",3]],["bool",15]],[[["lifetimeextension",3]],["bool",15]],[[["parenthashextension",3]],["bool",15]],[[["parenthashextension",3]],["bool",15]],[[["ratchettreeextension",3]],["bool",15]],[[["ratchettreeextension",3]],["bool",15]],[[["extensiontype",4]],["bool",15]],[[["extensionstruct",3]],["bool",15]],[[["extensionstruct",3]],["bool",15]],[[],["bool",15]],[[["mlsciphertext",3]],["bool",15]],[[["mlsciphertext",3]],["bool",15]],[[["mlsplaintexterror",4]],["bool",15]],[[["mlsciphertexterror",4]],["bool",15]],[[["mlsciphertexterror",4]],["bool",15]],[[["verificationerror",4]],["bool",15]],[[["verificationerror",4]],["bool",15]],[[["mlsplaintext",3]],["bool",15]],[[["mlsplaintext",3]],["bool",15]],[[["contenttype",4]],["bool",15]],[[["mlsplaintextcontenttype",4]],["bool",15]],[[["mlsplaintextcontenttype",4]],["bool",15]],[[["membershiptag",3]],["bool",15]],[[["membershiptag",3]],["bool",15]],[[["sendertype",4]],["bool",15]],[[["sender",3]],["bool",15]],[[["sender",3]],["bool",15]],[[["grouperror",4]],["bool",15]],[[["grouperror",4]],["bool",15]],[[["welcomeerror",4]],["bool",15]],[[["welcomeerror",4]],["bool",15]],[[["applycommiterror",4]],["bool",15]],[[["applycommiterror",4]],["bool",15]],[[["createcommiterror",4]],["bool",15]],[[["exportererror",4]],["bool",15]],[[["pskerror",4]],["bool",15]],[[["pskerror",4]],["bool",15]],[[],["bool",15]],[[["handshakemessageformat",4]],["bool",15]],[[["managedgroupconfig",3]],["bool",15]],[[["managedgroupconfig",3]],["bool",15]],[[["updatepolicy",3]],["bool",15]],[[["updatepolicy",3]],["bool",15]],[[["managedgrouperror",4]],["bool",15]],[[["managedgrouperror",4]],["bool",15]],[[["emptyinputerror",4]],["bool",15]],[[["useaftereviction",4]],["bool",15]],[[["pendingproposalserror",4]],["bool",15]],[[["invalidmessageerror",4]],["bool",15]],[[["invalidmessageerror",4]],["bool",15]],[[["groupevent",4]],["bool",15]],[[["groupevent",4]],["bool",15]],[[["memberaddedevent",3]],["bool",15]],[[["memberaddedevent",3]],["bool",15]],[[["memberremovedevent",3]],["bool",15]],[[["memberremovedevent",3]],["bool",15]],[[["memberupdatedevent",3]],["bool",15]],[[["memberupdatedevent",3]],["bool",15]],[[["pskreceivedevent",3]],["bool",15]],[[["pskreceivedevent",3]],["bool",15]],[[["reinitevent",3]],["bool",15]],[[["reinitevent",3]],["bool",15]],[[["applicationmessageevent",3]],["bool",15]],[[["applicationmessageevent",3]],["bool",15]],[[["errorevent",3]],["bool",15]],[[["errorevent",3]],["bool",15]],[[["removal",4]],["bool",15]],[[["removal",4]],["bool",15]],[[["mlsmessage",4]],["bool",15]],[[["mlsmessage",4]],["bool",15]],[[["messagestestvectorerror",4]],["bool",15]],[[["transcripttestvectorerror",4]],["bool",15]],[[["groupid",3]],["bool",15]],[[["groupid",3]],["bool",15]],[[["groupepoch",3]],["bool",15]],[[["groupepoch",3]],["bool",15]],[[["groupcontext",3]],["bool",15]],[[["groupcontext",3]],["bool",15]],[[["keypackageerror",4]],["bool",15]],[[["keypackageerror",4]],["bool",15]],[[["keypackage",3]],["bool",15]],[[["keypackage",3]],["bool",15]],[[["keystoreerror",4]],["bool",15]],[[["keystoreerror",4]],["bool",15]],[[["proposalqueueerror",4]],["bool",15]],[[["proposalqueueerror",4]],["bool",15]],[[["proposalorreftypeerror",4]],["bool",15]],[[["queuedproposalerror",4]],["bool",15]],[[["proposaltype",4]],["bool",15]],[[["proposalorreftype",4]],["bool",15]],[[["proposalorref",4]],["bool",15]],[[["proposalorref",4]],["bool",15]],[[["proposal",4]],["bool",15]],[[["proposal",4]],["bool",15]],[[["proposalreference",3]],["bool",15]],[[["proposalreference",3]],["bool",15]],[[["addproposal",3]],["bool",15]],[[["addproposal",3]],["bool",15]],[[["updateproposal",3]],["bool",15]],[[["updateproposal",3]],["bool",15]],[[["removeproposal",3]],["bool",15]],[[["removeproposal",3]],["bool",15]],[[["presharedkeyproposal",3]],["bool",15]],[[["presharedkeyproposal",3]],["bool",15]],[[["reinitproposal",3]],["bool",15]],[[["reinitproposal",3]],["bool",15]],[[["welcome",3]],["bool",15]],[[["welcome",3]],["bool",15]],[[["encryptedgroupsecrets",3]],["bool",15]],[[["encryptedgroupsecrets",3]],["bool",15]],[[["commit",3]],["bool",15]],[[["commit",3]],["bool",15]],[[["confirmationtag",3]],["bool",15]],[[["confirmationtag",3]],["bool",15]],[[["pathsecret",3]],["bool",15]],[[["pathsecret",3]],["bool",15]],[[["publicgroupstate",3]],["bool",15]],[[["publicgroupstate",3]],["bool",15]],[[["errorstate",4]],["bool",15]],[[["keyscheduleerror",4]],["bool",15]],[[["keyscheduleerror",4]],["bool",15]],[[["psksecreterror",4]],["bool",15]],[[["kstestvectorerror",4]],["bool",15]],[[["psktype",4]],["bool",15]],[[["externalpsk",3]],["bool",15]],[[["externalpsk",3]],["bool",15]],[[["reinitpsk",3]],["bool",15]],[[["reinitpsk",3]],["bool",15]],[[["branchpsk",3]],["bool",15]],[[["branchpsk",3]],["bool",15]],[[["psk",4]],["bool",15]],[[["psk",4]],["bool",15]],[[["presharedkeyid",3]],["bool",15]],[[["presharedkeyid",3]],["bool",15]],[[["state",4]],["bool",15]],[[],["bool",15]],[[["treeerror",4]],["bool",15]],[[["treeerror",4]],["bool",15]],[[["parenthasherror",4]],["bool",15]],[[["nodeindex",3]],["bool",15]],[[["nodeindex",3]],["bool",15]],[[["leafindex",3]],["bool",15]],[[["leafindex",3]],["bool",15]],[[["nodetype",4]],["bool",15]],[[["node",3]],["bool",15]],[[["node",3]],["bool",15]],[[["parentnode",3]],["bool",15]],[[["parentnode",3]],["bool",15]],[[["pathkeys",3]],["bool",15]],[[["pathkeys",3]],["bool",15]],[[["secrettreeerror",4]],["bool",15]],[[["treematherror",4]],["bool",15]],[[["enctestvectorerror",4]],["bool",15]],[[["treekemtestvectorerror",4]],["bool",15]],[[["tmtestvectorerror",4]],["bool",15]],[[["updatepathnode",3]],["bool",15]],[[["updatepathnode",3]],["bool",15]],[[["updatepath",3]],["bool",15]],[[["updatepath",3]],["bool",15]],[[["protocolversion",4]],[["ordering",4],["option",4]]],[[["extensiontype",4]],[["ordering",4],["option",4]]],[[],[["option",4],["ordering",4]]],[[["nodeindex",3]],[["ordering",4],["option",4]]],[[["leafindex",3]],[["ordering",4],["option",4]]],[[],["config",3]],[[],["credentialbundle",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u16",15]],["result",4]],[[["u16",15]],["result",4]],[[["u8",15]],["result",4]],[[["u16",15]],["result",4]],[[["u16",15]],["result",4]],[[["u8",15]],[["codecerror",4],["result",4]]],[[["mlsplaintext",3]],["result",4]],[[["mlsplaintext",3]],["result",4]],[[["u8",15]],["result",4]],[[["u8",15]],["result",4]],[[["u8",15]],["result",4]],[[["u8",15]],["result",4]],[[["nodeindex",3]],["result",4]],[[["u8",15]],["result",4]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[["vec",3]],[["error",4],["result",4]]],[[["vec",3]],[["error",4],["result",4]]],[[["vec",3]],[["error",4],["result",4]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["contenttype",4],["cursor",3]],[["codecerror",4],["result",4]]],[[["groupid",3],["vec",3],["u8",15],["groupepoch",3]],[["codecerror",4],["result",4]]],[[["groupid",3],["vec",3],["u8",15],["ciphersuite",3]],[["codecerror",4],["result",4]]],[[]],[[],["groupid",3]],[[],["groupepoch",3]],[[["mlsplaintext",3],["option",4],["pskfetcher",6]],[["result",4],["applycommiterror",4]]],[[["option",4],["pskfetcher",6],["bool",15],["credentialbundle",3]],["createcommitresult",6]],[[["vec",3],["keypackagebundle",3],["option",4],["pskfetcher",6],["welcome",3],["option",4]],[["welcomeerror",4],["result",4]]],[[["keypackage",3]],[["option",4],["encryptedgroupsecrets",3]]],[[["nodeindex",3]],[["vec",3],["hpkepublickey",3]]],[[["leafindex",3]],[["vec",3],["u8",15]]],[[["node",3],["nodeindex",3]],[["parenthasherror",4],["result",4]]],[[],[["parenthasherror",4],["result",4]]],[[],[["vec",3],["u8",15]]]],"p":[[3,"ErrorString"],[3,"ErrorPayload"],[4,"HkdfError"],[4,"CryptoError"],[8,"Signable"],[4,"CiphersuiteName"],[4,"SignatureScheme"],[3,"HpkeCiphertext"],[3,"KdfLabel"],[3,"Secret"],[3,"Mac"],[3,"AeadKey"],[3,"ReuseGuard"],[3,"AeadNonce"],[3,"Signature"],[3,"SignaturePrivateKey"],[3,"SignaturePublicKey"],[3,"SignatureKeypair"],[3,"Ciphersuite"],[4,"CodecError"],[4,"VecSize"],[3,"Cursor"],[8,"Codec"],[4,"ConfigError"],[3,"CONFIG"],[3,"Constants"],[3,"PersistentConfig"],[3,"Config"],[4,"ProtocolVersion"],[4,"CredentialError"],[4,"CredentialType"],[3,"Certificate"],[4,"MlsCredentialType"],[3,"Credential"],[3,"BasicCredential"],[3,"CredentialBundle"],[3,"CapabilitiesExtension"],[4,"ExtensionError"],[4,"LifetimeExtensionError"],[4,"CapabilitiesExtensionError"],[4,"KeyPackageIdError"],[4,"ParentHashError"],[4,"RatchetTreeError"],[4,"InvalidExtensionError"],[3,"KeyIdExtension"],[3,"LifetimeExtension"],[3,"ParentHashExtension"],[3,"RatchetTreeExtension"],[4,"ExtensionType"],[3,"ExtensionStruct"],[8,"Extension"],[8,"ExtensionHelper"],[3,"MlsCiphertext"],[3,"MlsSenderData"],[3,"MlsSenderDataAad"],[3,"MlsCiphertextContent"],[3,"MlsCiphertextContentAad"],[4,"MlsPlaintextError"],[4,"MlsCiphertextError"],[4,"VerificationError"],[3,"MlsPlaintext"],[4,"ContentType"],[4,"MlsPlaintextContentType"],[3,"MlsPlaintextTbmPayload"],[3,"MembershipTag"],[3,"MlsPlaintextTbs"],[3,"MlsPlaintextTbsPayload"],[3,"MlsPlaintextCommitContent"],[3,"MlsPlaintextCommitAuthData"],[4,"SenderType"],[3,"Sender"],[4,"GroupError"],[4,"WelcomeError"],[4,"ApplyCommitError"],[4,"CreateCommitError"],[4,"ExporterError"],[4,"PskError"],[3,"ManagedGroupCallbacks"],[4,"HandshakeMessageFormat"],[3,"ManagedGroupConfig"],[3,"UpdatePolicy"],[4,"ManagedGroupError"],[4,"EmptyInputError"],[4,"UseAfterEviction"],[4,"PendingProposalsError"],[4,"InvalidMessageError"],[4,"GroupEvent"],[3,"MemberAddedEvent"],[3,"MemberRemovedEvent"],[3,"MemberUpdatedEvent"],[3,"PskReceivedEvent"],[3,"ReInitEvent"],[3,"ApplicationMessageEvent"],[3,"ErrorEvent"],[4,"Removal"],[3,"ResumptionSecretStore"],[3,"SerializedManagedGroup"],[3,"ManagedGroup"],[4,"MlsMessage"],[3,"PlaintextSecret"],[3,"MlsGroup"],[3,"MessagesTestVector"],[4,"MessagesTestVectorError"],[3,"TranscriptTestVector"],[4,"TranscriptTestVectorError"],[3,"GroupId"],[3,"GroupEpoch"],[3,"GroupContext"],[3,"GroupConfig"],[4,"KeyPackageError"],[3,"KeyPackage"],[3,"KeyPackageBundle"],[4,"KeyStoreError"],[3,"KeyStore"],[3,"CbGuard"],[4,"ProposalQueueError"],[4,"ProposalOrRefTypeError"],[4,"QueuedProposalError"],[4,"ProposalType"],[4,"ProposalOrRefType"],[4,"ProposalOrRef"],[4,"Proposal"],[3,"ProposalReference"],[3,"QueuedProposal"],[3,"ProposalQueue"],[3,"AddProposal"],[3,"UpdateProposal"],[3,"RemoveProposal"],[3,"PreSharedKeyProposal"],[3,"ReInitProposal"],[3,"Welcome"],[3,"EncryptedGroupSecrets"],[3,"Commit"],[3,"ConfirmationTag"],[3,"GroupInfo"],[3,"PathSecret"],[3,"GroupSecrets"],[3,"PublicGroupState"],[3,"PublicGroupStateTbs"],[4,"ErrorState"],[4,"KeyScheduleError"],[4,"PskSecretError"],[4,"KsTestVectorError"],[4,"PskType"],[3,"ExternalPsk"],[3,"ExternalPskBundle"],[3,"ReinitPsk"],[3,"BranchPsk"],[4,"Psk"],[3,"PreSharedKeyId"],[3,"PreSharedKeys"],[3,"PskLabel"],[3,"PskSecret"],[3,"Epoch"],[3,"KeyScheduleTestVector"],[3,"CommitSecret"],[3,"InitSecret"],[3,"JoinerSecret"],[4,"State"],[3,"KeySchedule"],[3,"IntermediateSecret"],[3,"WelcomeSecret"],[3,"EpochSecret"],[3,"EncryptionSecret"],[3,"ExporterSecret"],[3,"AuthenticationSecret"],[3,"ExternalSecret"],[3,"ConfirmationKey"],[3,"MembershipKey"],[3,"ResumptionSecret"],[3,"SenderDataSecret"],[3,"EpochSecrets"],[4,"TreeError"],[4,"ParentHashError"],[3,"ParentHashInput"],[3,"LeafNodeHashInput"],[3,"ParentNodeTreeHashInput"],[3,"NodeIndex"],[3,"LeafIndex"],[4,"NodeType"],[3,"Node"],[3,"ParentNode"],[3,"PathKeys"],[3,"PrivateTree"],[4,"SecretTreeError"],[4,"SecretType"],[3,"TreeContext"],[3,"SecretTreeNode"],[3,"SecretTree"],[3,"SenderRatchet"],[4,"TreeMathError"],[3,"SenderDataInfo"],[3,"RatchetStep"],[3,"LeafSequence"],[3,"EncryptionTestVector"],[4,"EncTestVectorError"],[3,"TreeKemTestVector"],[4,"TreeKemTestVectorError"],[3,"TreeMathTestVector"],[4,"TmTestVectorError"],[3,"RatchetTree"],[3,"ApplyProposalsValues"],[3,"UpdatePathNode"],[3,"UpdatePath"]]},\
"test_macros":{"doc":"","t":[3,12,12,12,14,14,5,11,11,11,11,11,11,11,11],"n":["TestInput","test_name","parameters","body","ctest","ctest_panic","impl_ciphersuite_tests","from","into","borrow","borrow_mut","try_from","try_into","type_id","parse"],"q":["test_macros","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","",""],"i":[0,1,1,1,0,0,0,1,1,1,1,1,1,1,1],"f":[null,null,null,null,null,null,[[["testinput",3],["tokenstream",3]],["tokenstream",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["parsestream",6]],["result",6]]],"p":[[3,"TestInput"]]},\
"tls_codec":{"doc":"TLS Codec","t":[0,0,0,0,3,12,11,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,3,12,3,12,3,12,24,24,4,13,13,13,13,8,10,8,10,11,8,10,11,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["arrays","hpke","primitives","tls_vec","TlsVecU8","vec","new","from_slice","as_slice","to_vec","push","pop","len_len","TlsVecU16","vec","new","from_slice","as_slice","to_vec","push","pop","len_len","TlsVecU32","vec","new","from_slice","as_slice","to_vec","push","pop","len_len","TlsVecU16","vec","TlsVecU32","vec","TlsVecU8","vec","TlsDeserialize","TlsSerialize","Error","EncodingError","InvalidVectorLength","InvalidInput","DecodingError","TlsSize","serialized_len","Serialize","tls_serialize","tls_serialize_detached","Deserialize","tls_deserialize","tls_deserialize_detached","Cursor","bytes","position","new","read","sub_cursor","is_empty","has_more","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","serialized_len","serialized_len","serialized_len","tls_serialize","tls_serialize","tls_serialize","tls_deserialize","tls_deserialize","tls_deserialize","from","from","from","from","from","from","from","from","from","clone","clone","clone","clone","default","default","default","eq","ne","eq","ne","eq","ne","eq","fmt","fmt","fmt","fmt","fmt","deserialize","deserialize","deserialize","serialize","serialize","serialize"],"q":["tls_codec","","","","tls_codec::tls_vec","","","","","","","","","","","","","","","","","","","","","","","","","","","tls_codec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tls_codec::tls_vec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tls_codec","","","","","","","","","","","","","","","","","","tls_codec::tls_vec","","","","","","","","","tls_codec","tls_codec::tls_vec","","","","","","tls_codec","","tls_codec::tls_vec","","","tls_codec","tls_codec::tls_vec","","","","","","","","","tls_codec","tls_codec::tls_vec","","","tls_codec","","tls_codec::tls_vec","","","","",""],"d":["Implement the TLS codec for some byte arrays.","TLS Codec for HPKE primitives","Codec implementations for unsigned integer primitives.","A vector with a length field for TLS serialisation. Use …","","","Create a new <code>TlsVec</code> from a Rust Vec.","Create a new <code>TlsVec</code> from a slice.","Get a slice to the raw vector.","Get a copy of the underlying vector.","Add an element to this.","Remove the last element.","Get the number of bytes used for the length encoding.","","","Create a new <code>TlsVec</code> from a Rust Vec.","Create a new <code>TlsVec</code> from a slice.","Get a slice to the raw vector.","Get a copy of the underlying vector.","Add an element to this.","Remove the last element.","Get the number of bytes used for the length encoding.","","","Create a new <code>TlsVec</code> from a Rust Vec.","Create a new <code>TlsVec</code> from a slice.","Get a slice to the raw vector.","Get a copy of the underlying vector.","Add an element to this.","Remove the last element.","Get the number of bytes used for the length encoding.","","","","","","","","","Errors that are thrown by this crate.","An error occurred during encoding.","The length of a vector is invalid.","Invalid input when trying to decode a primitive integer.","An error occurred during decoding.","The <code>TlsSize</code> trait needs to be implemented by any struct …","","The <code>Serialize</code> trait provides functions to serialize a …","","","The <code>Deserialize</code> trait provides functions to deserialize a …","","","The <code>Cursor</code> is a helper used to read byte slices when …","","","Create a new <code>Cursor</code> from a byte slice. This function …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,0,2,0,3,0,1,0,0,0,4,4,4,4,0,5,0,6,6,0,7,7,0,8,8,8,8,8,8,8,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,8,8,8,8,8,8,8,8,1,2,3,1,2,3,1,2,3,4,1,1,2,2,3,3,4,4,1,2,3,4,1,2,3,1,1,2,2,3,3,4,1,2,3,4,8,1,2,3,1,2,3],"f":[null,null,null,null,null,null,[[["vec",3]]],[[]],[[]],[[],["vec",3]],[[]],[[],["option",4]],[[],["usize",15]],null,null,[[["vec",3]]],[[]],[[]],[[],["vec",3]],[[]],[[],["option",4]],[[],["usize",15]],null,null,[[["vec",3]]],[[]],[[]],[[],["vec",3]],[[]],[[],["option",4]],[[],["usize",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["usize",15]],null,[[["vec",3]],[["result",4],["error",4]]],[[],[["result",4],["vec",3],["error",4]]],null,[[["cursor",3]],[["result",4],["error",4]]],[[],[["result",4],["error",4]]],null,null,null,[[],["cursor",3]],[[["usize",15]],[["error",4],["result",4]]],[[["usize",15]],[["result",4],["cursor",3],["error",4]]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["vec",3]],[["result",4],["error",4]]],[[["vec",3]],[["result",4],["error",4]]],[[["vec",3]],[["result",4],["error",4]]],[[["cursor",3]],[["result",4],["error",4]]],[[["cursor",3]],[["result",4],["error",4]]],[[["cursor",3]],[["result",4],["error",4]]],[[["tryfromsliceerror",3]]],[[["vec",3]]],[[]],[[["vec",3]]],[[]],[[["vec",3]]],[[]],[[["tryfrominterror",3]]],[[["infallible",4]]],[[],["tlsvecu8",3]],[[],["tlsvecu16",3]],[[],["tlsvecu32",3]],[[],["error",4]],[[]],[[]],[[]],[[["tlsvecu8",3]],["bool",15]],[[["tlsvecu8",3]],["bool",15]],[[["tlsvecu16",3]],["bool",15]],[[["tlsvecu16",3]],["bool",15]],[[["tlsvecu32",3]],["bool",15]],[[["tlsvecu32",3]],["bool",15]],[[["error",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]]],"p":[[3,"TlsVecU8"],[3,"TlsVecU16"],[3,"TlsVecU32"],[4,"Error"],[8,"TlsSize"],[8,"Serialize"],[8,"Deserialize"],[3,"Cursor"]]}\
}');
initSearch(searchIndex);