var searchIndex = JSON.parse('{\
"openmls":{"doc":"OpenMLSHigh-level APISee ManagedGroup","i":[[0,"utils","openmls","",null,null],[5,"randombytes","openmls::utils","",null,[[],["vec",3]]],[5,"random_u32","","",null,[[]]],[5,"zero","","",null,[[],["vec",3]]],[5,"_bytes_to_hex","","",null,[[],["string",3]]],[5,"_print_tree","","",null,[[["ratchettree",3]]]],[0,"error","openmls","OpenMLS ErrorsEach module has their own errors it is…",null,null],[3,"ErrorString","openmls::error","A wrapper struct for an error string. This can be used…",null,null],[12,"0","","",0,null],[3,"ErrorPayload","","A wrapper struct for an arbitrary error payload as byte…",null,null],[12,"0","","",1,null],[11,"_description","","",0,[[],["string",3]]],[11,"_description","","",1,[[],["string",3]]],[0,"ciphersuite","openmls","Ciphersuites for MLS",null,null],[3,"HpkeCiphertext","openmls::ciphersuite","7.7. Update Paths",null,null],[12,"kem_output","","",2,null],[12,"ciphertext","","",2,null],[3,"KdfLabel","","`KdfLabel` is later serialized and used in the `label`…",null,null],[12,"length","","",3,null],[12,"label","","",3,null],[12,"context","","",3,null],[3,"Secret","","A struct to contain secrets. This is to provide better…",null,null],[12,"value","","",4,null],[3,"AeadKey","","",null,null],[12,"aead_mode","","",5,null],[12,"value","","",5,null],[3,"ReuseGuard","","",null,null],[12,"value","","",6,null],[3,"AeadNonce","","",null,null],[12,"value","","",7,null],[3,"Signature","","",null,null],[12,"value","","",8,null],[3,"SignaturePrivateKey","","",null,null],[12,"signature_scheme","","",9,null],[12,"value","","",9,null],[3,"SignaturePublicKey","","",null,null],[12,"signature_scheme","","",10,null],[12,"value","","",10,null],[3,"SignatureKeypair","","",null,null],[12,"signature_scheme","","",11,null],[12,"private_key","","",11,null],[12,"public_key","","",11,null],[3,"Ciphersuite","","",null,null],[12,"name","","",12,null],[12,"signature_scheme","","",12,null],[12,"hpke","","",12,null],[12,"aead","","",12,null],[12,"hash","","",12,null],[12,"hmac","","",12,null],[4,"CiphersuiteName","","",null,null],[13,"MLS10_128_DHKEMX25519_AES128GCM_SHA256_Ed25519","","",13,null],[13,"MLS10_128_DHKEMP256_AES128GCM_SHA256_P256","","",13,null],[13,"MLS10_128_DHKEMX25519_CHACHA20POLY1305_SHA256_Ed25519","","",13,null],[13,"MLS10_256_DHKEMX448_AES256GCM_SHA512_Ed448","","",13,null],[13,"MLS10_256_DHKEMP521_AES256GCM_SHA512_P521","","",13,null],[13,"MLS10_256_DHKEMX448_CHACHA20POLY1305_SHA512_Ed448","","",13,null],[4,"SignatureScheme","","SignatureScheme according to IANA TLS parameters",null,null],[13,"ECDSA_SECP256R1_SHA256","","ECDSA_SECP256R1_SHA256",14,null],[13,"ECDSA_SECP521R1_SHA512","","ECDSA_SECP521R1_SHA512",14,null],[13,"ED25519","","ED25519",14,null],[13,"ED448","","ED448",14,null],[0,"ciphersuites","","",null,null],[5,"hash_from_suite","openmls::ciphersuite::ciphersuites","",null,[[["ciphersuitename",4]],["digestmode",4]]],[5,"aead_from_suite","","",null,[[["ciphersuitename",4]],["aeadmode",4]]],[5,"kem_from_suite","","",null,[[["ciphersuitename",4]],[["configerror",4],["hpkekemmode",4],["result",4]]]],[5,"kdf_from_suite","","",null,[[["ciphersuitename",4]],["hmacmode",4]]],[5,"hpke_kdf_from_suite","","",null,[[["ciphersuitename",4]],["hpkekdfmode",4]]],[5,"hpke_aead_from_suite","","",null,[[["ciphersuitename",4]],["hpkeaeadmode",4]]],[0,"codec","openmls::ciphersuite","Codec implementations for the ciphersuites. Provides…",null,null],[0,"errors","","Crypto errorsThis file defines a set of errors thrown by…",null,null],[4,"HKDFError","openmls::ciphersuite::errors","",null,null],[13,"InvalidLength","","The HKDF output is empty.",15,null],[4,"CryptoError","","",null,null],[13,"CryptoLibraryError","","Unrecoverable error in the crypto library.",16,null],[13,"HpkeDecryptionError","","Error while decrypting an HPKE ciphertext.",16,null],[13,"UnsupportedSignatureScheme","","This SignatureScheme is not supported.",16,null],[11,"_description","","",15,[[],["string",3]]],[11,"_description","","",16,[[],["string",3]]],[0,"signable","openmls::ciphersuite","",null,null],[8,"Signable","openmls::ciphersuite::signable","The `Signable` trait is implemented by all struct that are…",null,null],[10,"unsigned_payload","","",17,[[],[["codecerror",4],["result",4],["vec",3]]]],[11,"sign","","Sign the payload with the given `id`.",17,[[["credentialbundle",3]],["signature",3]]],[11,"verify","","Verifies the payload against the given `credential` and…",17,[[["signature",3],["credential",3]],[["credentialerror",4],["result",4]]]],[0,"ser","openmls::ciphersuite","",null,null],[7,"EMPTY_SECRET","","",null,null],[17,"NONCE_BYTES","","",null,null],[17,"REUSE_GUARD_BYTES","","",null,null],[17,"TAG_BYTES","","",null,null],[11,"new_keypair","","Create a new signature key pair and return it.",14,[[],[["cryptoerror",4],["result",4],["signaturekeypair",3]]]],[11,"serialized_label","","",3,[[],["vec",3]]],[11,"random","","Randomly sample a fresh `Secret`.",4,[[]]],[11,"kdf_expand_label","","Expand a `Secret` to a new `Secret` of length `length`…",4,[[["ciphersuite",3]],["secret",3]]],[11,"derive_secret","","Derive a new `Secret` from the this one by expanding it…",4,[[["ciphersuite",3]],["secret",3]]],[11,"to_bytes","","Returns the inner bytes of a secret",4,[[]]],[11,"from_random","","Samples a fresh reuse guard uniformly at random.",6,[[]]],[11,"new","","Create a new ciphersuite from the given `name`.",12,[[["ciphersuitename",4]],[["result",4],["configerror",4]]]],[11,"signature_scheme","","Get the signature scheme of this ciphersuite.",12,[[],["signaturescheme",4]]],[11,"name","","Get the name of this ciphersuite.",12,[[],["ciphersuitename",4]]],[11,"hash","","Hash `payload` and return the digest.",12,[[],["vec",3]]],[11,"hash_length","","Get the length of the used hash algorithm.",12,[[]]],[11,"mac","","HMAC-Hash(salt, IKM). For all supported ciphersuites this…",12,[[["secret",3]],["vec",3]]],[11,"hkdf_extract","","HKDF extract.",12,[[["option",4],["secret",3]],["secret",3]]],[11,"hkdf_expand","","HKDF expand",12,[[["secret",3]],[["hkdferror",4],["secret",3],["result",4]]]],[11,"aead_key_length","","Returns the key size of the used AEAD.",12,[[]]],[11,"aead_nonce_length","","Returns the length of the nonce in the AEAD.",12,[[]]],[11,"hpke_seal","","HPKE single-shot encryption of `ptxt` to `pk_r`, using…",12,[[["hpkepublickey",3]],["hpkeciphertext",3]]],[11,"hpke_seal_secret","","HPKE single-shot encryption specifically to seal a Secret…",12,[[["hpkepublickey",3],["secret",3]],["hpkeciphertext",3]]],[11,"hpke_open","","HPKE single-shot decryption of `input` with `sk_r`, using…",12,[[["hpkeciphertext",3],["hpkeprivatekey",3]],[["result",4],["vec",3],["cryptoerror",4]]]],[11,"derive_hpke_keypair","","Derive a new HPKE keypair from a given Secret.",12,[[["secret",3]],["hpkekeypair",3]]],[11,"from_secret","","Create an `AeadKey` from a `Secret`. TODO: This function…",5,[[["ciphersuite",3],["secret",3]]]],[11,"from_sender_data_secret","","Derive a new AEAD key from a `SenderDataSecret`.",5,[[["ciphersuite",3],["senderdatasecret",3]]]],[11,"from_welcome_secret","","Derive a new AEAD key from a `WelcomeSecret`.",5,[[["ciphersuite",3],["welcomesecret",3]],["aeadkey",3]]],[11,"aead_seal","","Encrypt a payload under the AeadKey given a nonce.",5,[[["aeadnonce",3]],[["aeaderror",4],["result",4],["vec",3]]]],[11,"aead_open","","AEAD decrypt `ciphertext` with `key`, `aad`, and `nonce`.",5,[[["aeadnonce",3]],[["aeaderror",4],["result",4],["vec",3]]]],[11,"from_secret","","Create an `AeadNonce` from a `Secret`. TODO: This function…",7,[[["secret",3]]]],[11,"from_sender_data_secret","","Derive a new AEAD nonce from a `SenderDataSecret`.",7,[[["ciphersuite",3],["senderdatasecret",3]]]],[11,"from_welcome_secret","","Derive a new AEAD key from a `WelcomeSecret`.",7,[[["ciphersuite",3],["welcomesecret",3]]]],[11,"from_random","","Generate a new random nonce.",7,[[]]],[11,"xor_with_reuse_guard","","Xor the first bytes of the nonce with the reuse_guard.",7,[[["reuseguard",3]]]],[11,"new_empty","","",8,[[],["signature",3]]],[11,"sign","","Sign the `payload` byte slice with this signature key.…",11,[[],[["signature",3],["signatureerror",4],["result",4]]]],[11,"verify","","Verify a `Signature` on the `payload` byte slice with the…",11,[[["signature",3]],[["result",4],["signatureerror",4]]]],[11,"into_tuple","","Get the private and public key objects",11,[[]]],[11,"new","","",11,[[["signaturescheme",4]],[["cryptoerror",4],["result",4],["signaturekeypair",3]]]],[11,"new","","Create a new signature public key from raw key bytes.",10,[[["vec",3],["signaturescheme",4]],[["signatureerror",4],["result",4]]]],[11,"verify","","Verify a `Signature` on the `payload` byte slice with the…",10,[[["signature",3]],[["result",4],["signatureerror",4]]]],[11,"sign","","Sign the `payload` byte slice with this signature key.…",9,[[],[["signature",3],["signatureerror",4],["result",4]]]],[0,"codec","openmls","",null,null],[3,"Cursor","openmls::codec","",null,null],[12,"buffer","","",18,null],[12,"position","","",18,null],[4,"VecSize","","",null,null],[13,"VecU8","","",19,null],[13,"VecU16","","",19,null],[13,"VecU32","","",19,null],[13,"VecU64","","",19,null],[5,"encode_vec","","",null,[[["vecsize",4],["vec",3]],[["result",4],["codecerror",4]]]],[5,"decode_vec","","",null,[[["vecsize",4],["cursor",3]],[["result",4],["vec",3],["codecerror",4]]]],[0,"errors","","",null,null],[4,"CodecError","openmls::codec::errors","",null,null],[13,"EncodingError","","Error encoding.",20,null],[13,"DecodingError","","Error decoding.",20,null],[13,"Other","","Some other error occurred.",20,null],[11,"_description","","",20,[[],["string",3]]],[8,"Codec","openmls::codec","",null,null],[11,"encode","","",21,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",21,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode_detached","","",21,[[],[["result",4],["vec",3],["codecerror",4]]]],[11,"decode_detached","","",21,[[],[["codecerror",4],["result",4]]]],[11,"new","","",18,[[],["cursor",3]]],[11,"consume","","",18,[[],[["codecerror",4],["result",4]]]],[11,"sub_cursor","","",18,[[],[["codecerror",4],["result",4],["cursor",3]]]],[11,"is_empty","","",18,[[]]],[11,"has_more","","",18,[[]]],[0,"config","openmls","This config contains all structs, enums and functions to…",null,null],[3,"CONFIG","openmls::config","",null,null],[12,"__private_field","","",22,null],[3,"Constants","","Constants that are used throughout the library.",null,null],[12,"default_key_package_lifetime","","The default lifetime of a key package in seconds.",23,null],[12,"key_package_lifetime_margin","","The amount of time (in seconds) the lifetime of a…",23,null],[3,"PersistentConfig","","The configuration we use for the library (`Config`) is not…",null,null],[12,"protocol_versions","","",24,null],[12,"ciphersuites","","",24,null],[12,"extensions","","",24,null],[12,"constants","","",24,null],[3,"Config","","OpenMLS ConfigurationThis is the global configuration for…",null,null],[12,"protocol_versions","","",25,null],[12,"ciphersuites","","",25,null],[12,"extensions","","",25,null],[12,"constants","","",25,null],[4,"ProtocolVersion","","Protocol VersionKey Packages",null,null],[13,"Reserved","","",26,null],[13,"Mls10","","",26,null],[0,"codec","","",null,null],[0,"errors","","Config errorsA `ConfigError` is thrown when either the…",null,null],[4,"ConfigError","openmls::config::errors","",null,null],[13,"InvalidConfig","","Invalid configuration.",27,null],[13,"UnsupportedMlsVersion","","MLS version is not supported by this configuration.",27,null],[13,"UnsupportedCiphersuite","","Ciphersuite is not supported by this configuration.",27,null],[13,"UnsupportedSignatureScheme","","Signature scheme is not supported by this configuration.",27,null],[11,"_description","","",27,[[],["string",3]]],[17,"DEFAULT_KEY_PACKAGE_LIFETIME","openmls::config","This value is used as the default lifetime of…",null,null],[17,"DEFAULT_KEY_PACKAGE_LIFETIME_MARGIN","","This value is used as the default amount of time (in…",null,null],[17,"SUPPORTED_CIPHERSUITE_NAMES","","Supported ciphersuites TODO #13: This should come from the…",null,null],[11,"supported_extensions","","Get a list of the supported extension types.",25,[[]]],[11,"supported_ciphersuites","","Get a list of the supported cipher suites.",25,[[]]],[11,"supported_ciphersuite_names","","Get a list of the supported cipher suites names.",25,[[]]],[11,"supported_versions","","Get a list of the supported protocol versions.",25,[[]]],[11,"ciphersuite","","Get the ciphersuite of the given name.",25,[[["ciphersuitename",4]],[["result",4],["ciphersuite",3],["configerror",4]]]],[11,"default_key_package_lifetime","","Get the default `KeyPackage` lifetime (in seconds).",25,[[]]],[11,"key_package_lifetime_margin","","Get the margin in which `KeyPackage` lifetimes are already…",25,[[]]],[11,"from","","Convert an integer to the corresponding protocol version.",26,[[],[["result",4],["protocolversion",4],["configerror",4]]]],[11,"is_supported","openmls::ciphersuite","Returns `true` if the ciphersuite is supported in the…",13,[[]]],[0,"credentials","openmls","",null,null],[3,"Certificate","openmls::credentials","Struct containing an X509 certificate chain, as per Spec.",null,null],[12,"cert_data","","",28,null],[3,"Credential","","Struct containing MLS credential data, where the data…",null,null],[12,"credential_type","","",29,null],[12,"credential","","",29,null],[3,"BasicCredential","","",null,null],[12,"identity","","",30,null],[12,"signature_scheme","","",30,null],[12,"public_key","","",30,null],[3,"CredentialBundle","","This struct contains a credential and the corresponding…",null,null],[12,"credential","","",31,null],[12,"signature_private_key","","",31,null],[4,"CredentialType","","Enum for Credential Types. We only need this for…",null,null],[13,"Basic","","",32,null],[13,"X509","","",32,null],[4,"MLSCredentialType","","This enum contains the different available credentials.",null,null],[13,"Basic","","",33,null],[13,"X509","","",33,null],[0,"codec","","",null,null],[0,"errors","","",null,null],[4,"CredentialError","openmls::credentials::errors","",null,null],[13,"ConfigError","","See `ConfigError` for details.",34,null],[13,"CryptoError","","See `CryptoError` for details.",34,null],[13,"UnsupportedCredentialType","","Unsupported credential type.",34,null],[13,"InvalidSignature","","Invalid signature.",34,null],[11,"_description","","",34,[[],["string",3]]],[11,"verify","openmls::credentials","Verify a signature of a given payload against the public…",29,[[["signature",3]],[["credentialerror",4],["result",4]]]],[11,"identity","","Get the identity of a given credential.",29,[[],["vec",3]]],[11,"verify","","",30,[[["signature",3]],[["credentialerror",4],["result",4]]]],[11,"new","","Create a new `CredentialBundle` of the given credential…",31,[[["signaturescheme",4],["vec",3],["credentialtype",4]],[["result",4],["credentialerror",4]]]],[11,"credential","","",31,[[],["credential",3]]],[11,"sign","","Sign a `msg` using the private key of the credential bundle.",31,[[],[["signature",3],["signatureerror",4],["result",4]]]],[0,"extensions","openmls","",null,null],[3,"ExtensionStruct","openmls::extensions","Extension structAn extension has an `ExtensionType` and an…",null,null],[12,"extension_type","","",35,null],[12,"extension_data","","",35,null],[4,"ExtensionType","","Extension typesIANA registrations",null,null],[13,"Reserved","","",36,null],[13,"Capabilities","","",36,null],[13,"Lifetime","","",36,null],[13,"KeyID","","",36,null],[13,"ParentHash","","",36,null],[13,"RatchetTree","","",36,null],[5,"from_bytes","","Build a new extension of the given type from a byte slice.",null,[[["extensiontype",4]],[["extensionerror",4],["result",4],["box",3]]]],[5,"extensions_vec_from_cursor","","Read a list of extensions from a `Cursor` into a vector of…",null,[[["cursor",3]],[["result",4],["vec",3],["codecerror",4]]]],[0,"capabilities_extension","","Capabilities ExtensionKey Package Extension",null,null],[3,"CapabilitiesExtension","openmls::extensions::capabilities_extension","",null,null],[12,"versions","","",37,null],[12,"ciphersuites","","",37,null],[12,"extensions","","",37,null],[5,"__init16518203259712514104","","",null,[[]]],[7,"__init16518203259712514104___rust_ctor___ctor","","",null,null],[11,"new","","Create a new capabilities extension with the given…",37,[[["option",4],["option",4],["option",4]]]],[11,"versions","","Get a reference to the list of versions in this extension.",37,[[]]],[11,"ciphersuites","","Get a reference to the list of cipher suites in this…",37,[[]]],[11,"extensions","","Get a reference to the list of supported extensions.",37,[[]]],[0,"errors","openmls::extensions","Extension errors.An `ExtensionError` is thrown when an…",null,null],[4,"ExtensionError","openmls::extensions::errors","",null,null],[13,"InvalidExtensionType","","Invalid extension type error.",38,null],[13,"Capabilities","","Capabilities extension error. See…",38,null],[13,"Lifetime","","Lifetime extension error. See `LifetimeExtensionError` for…",38,null],[13,"KeyPackageId","","Key package ID extension error. See `KeyPackageIdError`…",38,null],[13,"ParentHash","","Parent hash extension error. See `ParentHashError` for…",38,null],[13,"RatchetTree","","Ratchet tree extension error. See `RatchetTreeError` for…",38,null],[13,"CodecError","","Error decoding or encoding an extension.",38,null],[13,"ConfigError","","Configuration error. See `ConfigError` for details.",38,null],[13,"InvalidExtension","","The extension is malformed. See `InvalidExtensionError`…",38,null],[4,"LifetimeExtensionError","","",null,null],[13,"Invalid","","Invalid lifetime extensions.",39,null],[13,"Expired","","Lifetime extension is expired.",39,null],[4,"CapabilitiesExtensionError","","",null,null],[13,"Invalid","","Invalid capabilities extensions.",40,null],[13,"EmptyVersionsField","","Capabilities extension is missing a version field.",40,null],[13,"UnsupportedCiphersuite","","Capabilities contains only unsupported ciphersuites.",40,null],[4,"KeyPackageIdError","","",null,null],[13,"Invalid","","Invalid key package ID extensions.",41,null],[4,"ParentHashError","","",null,null],[13,"Invalid","","Invalid parent hash extensions.",42,null],[4,"RatchetTreeError","","",null,null],[13,"Invalid","","Invalid ratchet tree extensions.",43,null],[4,"InvalidExtensionError","","",null,null],[13,"Duplicate","","The provided extension list contains duplicate extensions.",44,null],[11,"_description","","",38,[[],["string",3]]],[11,"_description","","",39,[[],["string",3]]],[11,"_description","","",40,[[],["string",3]]],[11,"_description","","",41,[[],["string",3]]],[11,"_description","","",42,[[],["string",3]]],[11,"_description","","",43,[[],["string",3]]],[11,"_description","","",44,[[],["string",3]]],[0,"key_package_id_extension","openmls::extensions","KeyPackage IdentifiersKey Package Extension",null,null],[3,"KeyIDExtension","openmls::extensions::key_package_id_extension","",null,null],[12,"key_id","","",45,null],[5,"__init10090422225418277350","","",null,[[]]],[7,"__init10090422225418277350___rust_ctor___ctor","","",null,null],[11,"new","","Create a new key identifier extension from a byte slice.",45,[[]]],[11,"as_slice","","Get the value of the key id as byte slice.",45,[[]]],[0,"life_time_extension","openmls::extensions","Life time extensionKeyPackage Extension",null,null],[3,"LifetimeExtension","openmls::extensions::life_time_extension","The lifetime extension holds a not before and a not after…",null,null],[12,"not_before","","",46,null],[12,"not_after","","",46,null],[5,"__init6011765713567273734","","",null,[[]]],[7,"__init6011765713567273734___rust_ctor___ctor","","",null,null],[11,"new","","Create a new lifetime extensions with lifetime `t` (in…",46,[[]]],[11,"is_valid","","Returns true if this lifetime is valid.",46,[[]]],[0,"parent_hash_extension","openmls::extensions","Parent hash extensionKeyPackage Extension",null,null],[3,"ParentHashExtension","openmls::extensions::parent_hash_extension","",null,null],[12,"parent_hash","","",47,null],[5,"__init8216850123135685403","","",null,[[]]],[7,"__init8216850123135685403___rust_ctor___ctor","","",null,null],[11,"new","","",47,[[]]],[11,"parent_hash","","Get a reference to the parent hash value.",47,[[]]],[0,"ratchet_tree_extension","openmls::extensions","Ratchet tree extensionGroupInfo Extension",null,null],[3,"RatchetTreeExtension","openmls::extensions::ratchet_tree_extension","",null,null],[12,"tree","","",48,null],[5,"__init16993038184397398079","","",null,[[]]],[7,"__init16993038184397398079___rust_ctor___ctor","","",null,null],[11,"_new","","Build a new extension from a vector of `Node`s.",48,[[["option",4],["vec",3]]]],[11,"into_vector","","",48,[[],[["option",4],["vec",3]]]],[17,"_Extension_registry","openmls::extensions","",null,null],[8,"Extension","","ExtensionThis trait defines functions to interact with an…",null,null],[10,"new_from_bytes","","Build a new extension from a byte slice.",49,[[],[["extensionerror",4],["result",4]]]],[10,"extension_type","","Each extension has an extension type. This should be an…",49,[[],["extensiontype",4]]],[10,"to_extension_struct","","Get the extension as `ExtensionStruct` for encoding.",49,[[],["extensionstruct",3]]],[10,"as_any","","Get a generic trait object for downcasting.",49,[[],["any",8]]],[11,"to_parent_hash_extension","","Get a reference to the `ParentHashExtension`. Returns an…",49,[[],[["extensionerror",4],["parenthashextension",3],["result",4]]]],[11,"to_capabilities_extension","","Get a reference to the `CapabilitiesExtension`. Returns an…",49,[[],[["extensionerror",4],["capabilitiesextension",3],["result",4]]]],[11,"to_lifetime_extension","","Get a reference to the `LifetimeExtension`. Returns an…",49,[[],[["result",4],["lifetimeextension",3],["extensionerror",4]]]],[11,"to_key_id_extension","","Get a reference to the `KeyIDExtension`. Returns an…",49,[[],[["extensionerror",4],["keyidextension",3],["result",4]]]],[11,"as_ratchet_tree_extension","","Get a reference to the `RatchetTreeExtension`. Returns an…",49,[[],[["extensionerror",4],["result",4],["ratchettreeextension",3]]]],[8,"ExtensionHelper","","",null,null],[10,"clone_it","","",50,[[],[["extension",8],["box",3]]]],[11,"new","","Build a new `ExtensionStruct`.",35,[[["extensiontype",4],["vec",3]]]],[11,"_extension_data","","Get the type of this extension struct.",35,[[]]],[0,"framing","openmls","",null,null],[0,"ciphertext","openmls::framing","",null,null],[3,"MLSCiphertext","openmls::framing::ciphertext","`MLSCiphertext` is the framing struct for an encrypted…",null,null],[12,"group_id","","",51,null],[12,"epoch","","",51,null],[12,"content_type","","",51,null],[12,"authenticated_data","","",51,null],[12,"encrypted_sender_data","","",51,null],[12,"ciphertext","","",51,null],[3,"MLSSenderData","","",null,null],[12,"sender","","",52,null],[12,"generation","","",52,null],[12,"reuse_guard","","",52,null],[3,"MLSSenderDataAAD","","",null,null],[12,"group_id","","",53,null],[12,"epoch","","",53,null],[12,"content_type","","",53,null],[3,"MLSCiphertextContent","","",null,null],[12,"content","","",54,null],[12,"signature","","",54,null],[12,"confirmation_tag","","",54,null],[12,"padding","","",54,null],[3,"MLSCiphertextContentAAD","","",null,null],[12,"group_id","","",55,null],[12,"epoch","","",55,null],[12,"content_type","","",55,null],[12,"authenticated_data","","",55,null],[11,"try_from_plaintext","","Try to create a new `MLSCiphertext` from an `MLSPlaintext`",51,[[["groupcontext",3],["secrettree",3],["epochsecrets",3],["ciphersuite",3],["leafindex",3],["mlsplaintext",3]],[["result",4],["mlsciphertexterror",4],["mlsciphertext",3]]]],[11,"to_plaintext","","",51,[[["epochsecrets",3],["ciphersuite",3],["secrettree",3]],[["mlsciphertexterror",4],["result",4],["mlsplaintext",3]]]],[11,"is_handshake_message","","Returns `true` if this is a handshake message and `false`…",51,[[]]],[11,"encode_padded_ciphertext_content_detached","","Encodes the `MLSCiphertextContent` struct with padding",51,[[["mlsplaintext",3]],[["result",4],["vec",3],["codecerror",4]]]],[11,"new","","",52,[[["leafindex",3],["reuseguard",3]]]],[11,"new","","",53,[[["groupid",3],["groupepoch",3],["contenttype",4]]]],[0,"codec","openmls::framing","",null,null],[0,"errors","","Framing errors.`MLSPlaintextError` and…",null,null],[4,"MLSPlaintextError","openmls::framing::errors","",null,null],[13,"NotAnApplicationMessage","","The MLSPlaintext message is not an application message.",56,null],[13,"UnknownSender","","Sender is not part of the group",56,null],[13,"InvalidSignature","","The MLSPlaintext signature is invalid",56,null],[13,"InvalidMembershipTag","","The MLSPlaintext membership tag is invalid",56,null],[4,"MLSCiphertextError","","",null,null],[13,"PlaintextError","","MLSPlaintext error",57,null],[13,"SecretTreeError","","SecretTree error",57,null],[13,"CodecError","","Codec error",57,null],[13,"InvalidContentType","","The MLSCiphertext has an invalid content type.",57,null],[13,"GenerationOutOfBound","","Couldn\'t find a ratcheting secret for the given sender and…",57,null],[13,"EncryptionError","","An error occured while encrypting.",57,null],[13,"DecryptionError","","An error occured while decrypting.",57,null],[4,"VerificationError","","",null,null],[13,"CodecError","","Codec error",58,null],[13,"CredentialError","","Credential error",58,null],[13,"MissingMembershipTag","","The MLSPlaintext membership tag is missing",58,null],[13,"InvalidMembershipTag","","The MLSPlaintext membership tag is invalid",58,null],[11,"_description","","",56,[[],["string",3]]],[11,"_description","","",57,[[],["string",3]]],[11,"_description","","",58,[[],["string",3]]],[0,"plaintext","openmls::framing","",null,null],[3,"MLSPlaintext","openmls::framing::plaintext","`MLSPlaintext` is a framing structure for MLS messages. It…",null,null],[12,"group_id","","",59,null],[12,"epoch","","",59,null],[12,"sender","","",59,null],[12,"authenticated_data","","",59,null],[12,"content_type","","",59,null],[12,"content","","",59,null],[12,"signature","","",59,null],[12,"confirmation_tag","","",59,null],[12,"membership_tag","","",59,null],[3,"Mac","","9.2 Message framing",null,null],[12,"mac_value","","",60,null],[3,"MLSPlaintextTBMPayload","","9.1 Content Authentication",null,null],[12,"tbs_payload","","",61,null],[12,"signature","","",61,null],[12,"confirmation_tag","","",61,null],[3,"MembershipTag","","Wrapper around a `Mac` used for type safety.",null,null],[12,"0","","",62,null],[3,"MLSPlaintextTBS","","",null,null],[12,"serialized_context_option","","",63,null],[12,"group_id","","",63,null],[12,"epoch","","",63,null],[12,"sender","","",63,null],[12,"authenticated_data","","",63,null],[12,"content_type","","",63,null],[12,"payload","","",63,null],[3,"MLSPlaintextTBSPayload","","",null,null],[12,"payload","","",64,null],[3,"MLSPlaintextCommitContent","","",null,null],[12,"group_id","","",65,null],[12,"epoch","","",65,null],[12,"sender","","",65,null],[12,"content_type","","",65,null],[12,"commit","","",65,null],[12,"signature","","",65,null],[3,"MLSPlaintextCommitAuthData","","",null,null],[12,"confirmation_tag","","",66,null],[4,"ContentType","","",null,null],[13,"Application","","",67,null],[13,"Proposal","","",67,null],[13,"Commit","","",67,null],[4,"MLSPlaintextContentType","","",null,null],[13,"Application","","",68,null],[13,"Proposal","","",68,null],[13,"Commit","","",68,null],[11,"new_from_member","","This constructor builds a new `MLSPlaintext` from the…",59,[[["credentialbundle",3],["groupcontext",3],["leafindex",3],["mlsplaintextcontenttype",4]],[["codecerror",4],["result",4]]]],[11,"new_from_proposal_member","","This constructor builds an `MLSPlaintext` containing a…",59,[[["proposal",4],["credentialbundle",3],["groupcontext",3],["membershipkey",3],["ciphersuite",3],["leafindex",3]],[["codecerror",4],["result",4]]]],[11,"new_from_application","","This constructor builds an `MLSPlaintext` containing an…",59,[[["credentialbundle",3],["groupcontext",3],["membershipkey",3],["ciphersuite",3],["leafindex",3]],[["codecerror",4],["result",4]]]],[11,"content","","Returns a reference to the `content` field.",59,[[],["mlsplaintextcontenttype",4]]],[11,"sender","","Get the sender leaf index of this message.",59,[[],["leafindex",3]]],[11,"sign_from_external","","Sign this `MLSPlaintext`. This populates the `signature`…",59,[[["credentialbundle",3]]]],[11,"sign_from_member","","Sign this `MLSPlaintext` and add a membership tag. This…",59,[[["credentialbundle",3]],[["result",4],["codecerror",4]]]],[11,"add_membership_tag","","Adds a membership tag to this `MLSPlaintext`. The…",59,[[["ciphersuite",3],["membershipkey",3]],[["result",4],["codecerror",4]]]],[11,"verify_signature","","Verify the signature of an `MLSPlaintext` sent from an…",59,[[["credential",3]],[["verificationerror",4],["result",4]]]],[11,"verify_membership_tag","","Verify the membership tag of an `MLSPlaintext` sent from…",59,[[["ciphersuite",3],["membershipkey",3]],[["verificationerror",4],["result",4]]]],[11,"verify_from_member","","Verify the signature and the membership tag of an…",59,[[["ciphersuite",3],["membershipkey",3],["credential",3]],[["verificationerror",4],["result",4]]]],[11,"as_application_message","","Tries to extract an application messages from an…",59,[[],[["result",4],["mlsplaintexterror",4]]]],[11,"is_handshake_message","","Returns `true` if this is a handshake message and `false`…",59,[[]]],[11,"is_proposal","","Returns `true` if this is a proposal message and `false`…",59,[[]]],[11,"group_id","","Get the group ID.",59,[[],["groupid",3]]],[11,"epoch","","Get the group ID.",59,[[],["groupepoch",3]]],[11,"is_handshake_message","","",67,[[]]],[11,"is_proposal","","",67,[[]]],[11,"to_proposal","","",68,[[],["proposal",4]]],[11,"new","","",61,[[["signature",3],["mlsplaintexttbs",3],["option",4]],[["codecerror",4],["result",4]]]],[11,"into_bytes","","",61,[[],[["result",4],["vec",3],["codecerror",4]]]],[11,"new","","Create a new membership tag.",62,[[["ciphersuite",3],["membershipkey",3],["mlsplaintexttbmpayload",3]],[["codecerror",4],["result",4]]]],[11,"new_from","","",63,[[["mlsplaintext",3],["option",4]]]],[11,"sign","","",63,[[["credentialbundle",3]],[["codecerror",4],["result",4],["signature",3]]]],[11,"verify","","",63,[[["signature",3],["credential",3]],[["verificationerror",4],["result",4]]]],[11,"new_from_mls_plaintext","","",64,[[["option",4],["mlsplaintext",3]]]],[11,"sign","","",64,[[["credentialbundle",3]],["signature",3]]],[0,"sender","openmls::framing","Section  9. Message Framing",null,null],[3,"Sender","openmls::framing::sender","",null,null],[12,"sender_type","","",69,null],[12,"sender","","",69,null],[4,"SenderType","","",null,null],[13,"Member","","",70,null],[13,"Preconfigured","","",70,null],[13,"NewMember","","",70,null],[11,"is_member","","",69,[[]]],[11,"to_leaf_index","","",69,[[],["leafindex",3]]],[11,"member","","",69,[[["leafindex",3]]]],[0,"group","openmls","Group APIs for MLS",null,null],[3,"ManagedGroupCallbacks","openmls::group","Collection of callback functions that are passed to a…",null,null],[12,"validate_add","","",71,null],[12,"validate_remove","","",71,null],[12,"auto_save","","",71,null],[12,"member_added","","",71,null],[12,"member_removed","","",71,null],[12,"member_updated","","",71,null],[12,"psk_received","","",71,null],[12,"reinit_received","","",71,null],[12,"app_message_received","","",71,null],[12,"invalid_message_received","","",71,null],[12,"error_occured","","",71,null],[3,"ManagedGroupConfig","","Specifies the configuration parameters for a managed group",null,null],[12,"handshake_message_format","","Defines whether handshake messages should be encrypted",72,null],[12,"update_policy","","Defines the update policy",72,null],[12,"padding_size","","Size of padding in bytes",72,null],[12,"callbacks","","Callbacks",72,null],[3,"UpdatePolicy","","Specifies in which intervals the own leaf node should be…",null,null],[12,"maximum_time","","Maximum time before an update in seconds",73,null],[12,"maximum_sent_messages","","Maximum messages that are sent before an update in seconds",73,null],[12,"maximum_received_messages","","Maximum messages that are received before an update in…",73,null],[3,"ManagedGroup","","A `ManagedGroup` represents an [MlsGroup] with an easier,…",null,null],[12,"credential_bundle","","",74,null],[12,"managed_group_config","","",74,null],[12,"group","","",74,null],[12,"pending_proposals","","",74,null],[12,"own_kpbs","","",74,null],[12,"aad","","",74,null],[12,"active","","",74,null],[3,"MlsGroup","","",null,null],[12,"ciphersuite","","",75,null],[12,"group_context","","",75,null],[12,"epoch_secrets","","",75,null],[12,"init_secret","","",75,null],[12,"secret_tree","","",75,null],[12,"tree","","",75,null],[12,"interim_transcript_hash","","",75,null],[12,"add_ratchet_tree_extension","","",75,null],[3,"GroupId","","",null,null],[12,"value","","",76,null],[3,"GroupEpoch","","",null,null],[12,"0","","",77,null],[3,"GroupContext","","",null,null],[12,"group_id","","",78,null],[12,"epoch","","",78,null],[12,"tree_hash","","",78,null],[12,"confirmed_transcript_hash","","",78,null],[12,"extensions","","",78,null],[12,"serialized","","",78,null],[3,"GroupConfig","","Configuration for an MLS group.",null,null],[12,"add_ratchet_tree_extension","","Flag whether to send the ratchet tree along with the…",79,null],[12,"padding_block_size","","",79,null],[12,"additional_as_epochs","","",79,null],[4,"Removal","","This enum lists the 4 different variants of a removal,…",null,null],[13,"WeLeft","","We previously issued a RemoveProposal for ourselves and…",80,null],[13,"TheyLeft","","Another member issued a RemoveProposal for itself that was…",80,null],[13,"WeWereRemovedBy","","Another member issued a RemoveProposal for ourselves that…",80,null],[13,"TheyWereRemovedBy","","Member A issued a RemoveProposal for member B that was now…",80,null],[4,"HandshakeMessageFormat","","Defines whether handshake messages (Proposals & Commits)…",null,null],[13,"Plaintext","","",81,null],[13,"Ciphertext","","",81,null],[4,"EmptyInputError","","",null,null],[13,"AddMembers","","An empty list of KeyPackages was provided.",82,null],[13,"RemoveMembers","","An empty list of indexes was provided.",82,null],[4,"InvalidMessageError","","",null,null],[13,"InvalidCiphertext","","An invalid ciphertext was provided. The error returns the…",83,null],[13,"CommitWithInvalidProposals","","A commit contained an invalid proposal. Additional detail…",83,null],[13,"CommitError","","See `ApplyCommitError` for details",83,null],[13,"GroupError","","See `GroupError` for details",83,null],[13,"MembershipTagMismatch","","A Proposal with an invalid membership tag was received.",83,null],[4,"ManagedGroupError","","",null,null],[13,"LibraryError","","An internal library error occurred. Additional detail is…",84,null],[13,"Codec","","See `CodecError` for details",84,null],[13,"Config","","See `ConfigError` for details",84,null],[13,"Group","","See `GroupError` for details",84,null],[13,"CreateCommit","","See `CreateCommitError` for details",84,null],[13,"UseAfterEviction","","See `UseAfterEviction` for details",84,null],[13,"PendingProposalsExist","","See `PendingProposalsError` for details",84,null],[13,"Exporter","","See `ExporterError` for details",84,null],[13,"EmptyInput","","Empty input. Additional detail is provided.",84,null],[4,"PendingProposalsError","","",null,null],[13,"Exists","","Can\'t create message because a pending proposal exists.",85,null],[4,"UseAfterEviction","","",null,null],[13,"Error","","Tried to use a group after being evicted from it.",86,null],[4,"MLSMessage","","Unified message type",null,null],[13,"Plaintext","","An OpenMLS `MLSPlaintext`.",87,null],[13,"Ciphertext","","An OpenMLS `MLSCiphertext`.",87,null],[0,"codec","","",null,null],[0,"errors","","MLS Group errors`WelcomeError`, `ApplyCommitError`,…",null,null],[4,"GroupError","openmls::group::errors","",null,null],[13,"MLSCiphertextError","","See `MLSCiphertextError` for details.",88,null],[13,"WelcomeError","","See `WelcomeError` for details.",88,null],[13,"ApplyCommitError","","See `ApplyCommitError` for details.",88,null],[13,"CreateCommitError","","See `CreateCommitError` for details.",88,null],[13,"ConfigError","","See `ConfigError` for details.",88,null],[13,"ExporterError","","See `ExporterError` for details.",88,null],[13,"ProposalQueueError","","See `ProposalQueueError` for details.",88,null],[13,"CodecError","","Codec error occurred.",88,null],[4,"WelcomeError","","",null,null],[13,"InvalidRatchetTree","","Invalid ratchet tree in Welcome message.",89,null],[13,"ParentHashMismatch","","The parent hash verification failed.",89,null],[13,"GroupSecretsDecryptionFailure","","Unable to decrypt the EncryptedGroupSecrets.",89,null],[13,"CodecError","","Codec error occurred.",89,null],[13,"CiphersuiteMismatch","","Ciphersuites in the Welcome message and the corresponding…",89,null],[13,"JoinerSecretNotFound","","No joiner secret found in the Welcome message.",89,null],[13,"MissingRatchetTree","","No ratchet tree available to build initial tree after…",89,null],[13,"TreeHashMismatch","","The computed tree hash does not match the one in the…",89,null],[13,"ConfirmationTagMismatch","","The computed confirmation tag does not match the expected…",89,null],[13,"InvalidGroupInfoSignature","","The signature on the GroupInfo is not valid.",89,null],[13,"GroupInfoDecryptionFailure","","Unable to decrypt the GroupInfo.",89,null],[13,"DuplicateRatchetTreeExtension","","Found a duplicate ratchet tree extension in the Welcome…",89,null],[13,"UnsupportedMlsVersion","","The Welcome message uses an unsupported MLS version.",89,null],[13,"UnknownError","","An unknown error occurred.",89,null],[4,"ApplyCommitError","","",null,null],[13,"PlaintextSignatureFailure","","MLSPlaintext signature is invalid.",90,null],[13,"DecryptionFailure","","A matching EncryptedPathSecret failed to decrypt.",90,null],[13,"CodecError","","Codec error occurred.",90,null],[13,"EpochMismatch","","Couldn\'t apply Commit. The epoch of the group context and…",90,null],[13,"WrongPlaintextContentType","","apply_commit_internal was called with an MLSPlaintext that…",90,null],[13,"SelfRemoved","","Tried to apply a commit to a group we are not a part of.",90,null],[13,"PathKeyPackageVerificationFailure","","Unable to verify the key package signature.",90,null],[13,"NoParentHashExtension","","Parent hash extension is missing.",90,null],[13,"ParentHashMismatch","","Parent hash values don\'t match.",90,null],[13,"RequiredPathNotFound","","Unable to determine commit path.",90,null],[13,"ConfirmationTagMissing","","Confirmation Tag is missing.",90,null],[13,"ConfirmationTagMismatch","","Confirmation tag is invalid.",90,null],[13,"MissingOwnKeyPackage","","No key package provided to apply own commit.",90,null],[13,"MissingProposal","","The proposal queue is missing a proposal for the commit.",90,null],[13,"OwnKeyNotFound","","Missing own key to apply proposal.",90,null],[4,"CreateCommitError","","",null,null],[13,"CannotRemoveSelf","","The Commit tried to remove self from the group. This is…",91,null],[13,"OwnKeyNotFound","","Couldn\'t create the commit because there\'s no key to apply…",91,null],[4,"ExporterError","","",null,null],[13,"KeyLengthTooLong","","The requested key length is not supported (too large).",92,null],[11,"_description","","",88,[[],["string",3]]],[11,"_description","","",89,[[],["string",3]]],[11,"_description","","",90,[[],["string",3]]],[11,"_description","","",91,[[],["string",3]]],[11,"_description","","",92,[[],["string",3]]],[0,"group_context","openmls::group","",null,null],[11,"new","","Create a new group context",78,[[["groupid",3],["groupepoch",3],["vec",3]],[["codecerror",4],["result",4]]]],[11,"create_initial_group_context","","Create the `GroupContext` needed upon creation of a new…",78,[[["ciphersuite",3],["groupid",3],["vec",3]],[["codecerror",4],["result",4]]]],[11,"serialized","","Return the serialized group context",78,[[]]],[11,"group_id","","Return the group ID",78,[[],["groupid",3]]],[11,"epoch","","Return the epoch",78,[[],["groupepoch",3]]],[0,"managed_group","","",null,null],[3,"ManagedGroup","openmls::group::managed_group","A `ManagedGroup` represents an [MlsGroup] with an easier,…",null,null],[12,"credential_bundle","","",74,null],[12,"managed_group_config","","",74,null],[12,"group","","",74,null],[12,"pending_proposals","","",74,null],[12,"own_kpbs","","",74,null],[12,"aad","","",74,null],[12,"active","","",74,null],[4,"MLSMessage","","Unified message type",null,null],[13,"Plaintext","","An OpenMLS `MLSPlaintext`.",87,null],[13,"Ciphertext","","An OpenMLS `MLSCiphertext`.",87,null],[0,"callbacks","","",null,null],[3,"ManagedGroupCallbacks","openmls::group::managed_group::callbacks","Collection of callback functions that are passed to a…",null,null],[12,"validate_add","","",71,null],[12,"validate_remove","","",71,null],[12,"auto_save","","",71,null],[12,"member_added","","",71,null],[12,"member_removed","","",71,null],[12,"member_updated","","",71,null],[12,"psk_received","","",71,null],[12,"reinit_received","","",71,null],[12,"app_message_received","","",71,null],[12,"invalid_message_received","","",71,null],[12,"error_occured","","",71,null],[4,"Removal","","This enum lists the 4 different variants of a removal,…",null,null],[13,"WeLeft","","We previously issued a RemoveProposal for ourselves and…",80,null],[13,"TheyLeft","","Another member issued a RemoveProposal for itself that was…",80,null],[13,"WeWereRemovedBy","","Another member issued a RemoveProposal for ourselves that…",80,null],[13,"TheyWereRemovedBy","","Member A issued a RemoveProposal for member B that was now…",80,null],[6,"ValidateAdd","","",null,null],[6,"ValidateRemove","","",null,null],[6,"AutoSave","","",null,null],[6,"MemberAdded","","",null,null],[6,"MemberRemoved","","",null,null],[6,"MemberUpdated","","",null,null],[6,"PskReceived","","",null,null],[6,"ReInitReceived","","",null,null],[6,"AppMessageReceived","","",null,null],[6,"InvalidMessageReceived","","",null,null],[6,"ErrorOccured","","",null,null],[11,"new","openmls::group","",71,[[]]],[11,"with_validate_add","","Validator function for AddProposals",71,[[["validateadd",6]]]],[11,"with_validate_remove","","Validator function for RemoveProposals",71,[[["validateremove",6]]]],[11,"with_auto_save","","Auto-save callback",71,[[["autosave",6]]]],[11,"with_member_added","","Event listener function for AddProposals",71,[[["memberadded",6]]]],[11,"with_member_removed","","Event listener function for RemoveProposals when a member…",71,[[["memberremoved",6]]]],[11,"with_member_updated","","Event listener function for UpdateProposals",71,[[["memberupdated",6]]]],[11,"with_psk_received","","Event listener function for PreSharedKeyProposals",71,[[["pskreceived",6]]]],[11,"with_reinit_received","","Event listener function for ReInitProposals",71,[[["reinitreceived",6]]]],[11,"with_app_message_received","","Event listener function for application messages",71,[[["appmessagereceived",6]]]],[11,"with_invalid_message_received","","Event listener function for invalid messages",71,[[["invalidmessagereceived",6]]]],[11,"with_error_occured","","Event listener function for errors that occur",71,[[["erroroccured",6]]]],[11,"new","","",80,[[["credential",3]]]],[0,"config","openmls::group::managed_group","",null,null],[3,"ManagedGroupConfig","openmls::group::managed_group::config","Specifies the configuration parameters for a managed group",null,null],[12,"handshake_message_format","","Defines whether handshake messages should be encrypted",72,null],[12,"update_policy","","Defines the update policy",72,null],[12,"padding_size","","Size of padding in bytes",72,null],[12,"callbacks","","Callbacks",72,null],[3,"UpdatePolicy","","Specifies in which intervals the own leaf node should be…",null,null],[12,"maximum_time","","Maximum time before an update in seconds",73,null],[12,"maximum_sent_messages","","Maximum messages that are sent before an update in seconds",73,null],[12,"maximum_received_messages","","Maximum messages that are received before an update in…",73,null],[4,"HandshakeMessageFormat","","Defines whether handshake messages (Proposals & Commits)…",null,null],[13,"Plaintext","","",81,null],[13,"Ciphertext","","",81,null],[11,"new","openmls::group","",72,[[["handshakemessageformat",4],["managedgroupcallbacks",3],["updatepolicy",3]]]],[11,"padding_size","","",72,[[]]],[11,"callbacks","","",72,[[],["managedgroupcallbacks",3]]],[11,"set_callbacks","","",72,[[["managedgroupcallbacks",3]]]],[0,"errors","openmls::group::managed_group","MLS Managed Group errors`WelcomeError`,…",null,null],[4,"ManagedGroupError","openmls::group::managed_group::errors","",null,null],[13,"LibraryError","","An internal library error occurred. Additional detail is…",84,null],[13,"Codec","","See `CodecError` for details",84,null],[13,"Config","","See `ConfigError` for details",84,null],[13,"Group","","See `GroupError` for details",84,null],[13,"CreateCommit","","See `CreateCommitError` for details",84,null],[13,"UseAfterEviction","","See `UseAfterEviction` for details",84,null],[13,"PendingProposalsExist","","See `PendingProposalsError` for details",84,null],[13,"Exporter","","See `ExporterError` for details",84,null],[13,"EmptyInput","","Empty input. Additional detail is provided.",84,null],[4,"EmptyInputError","","",null,null],[13,"AddMembers","","An empty list of KeyPackages was provided.",82,null],[13,"RemoveMembers","","An empty list of indexes was provided.",82,null],[4,"UseAfterEviction","","",null,null],[13,"Error","","Tried to use a group after being evicted from it.",86,null],[4,"PendingProposalsError","","",null,null],[13,"Exists","","Can\'t create message because a pending proposal exists.",85,null],[4,"InvalidMessageError","","",null,null],[13,"InvalidCiphertext","","An invalid ciphertext was provided. The error returns the…",83,null],[13,"CommitWithInvalidProposals","","A commit contained an invalid proposal. Additional detail…",83,null],[13,"CommitError","","See `ApplyCommitError` for details",83,null],[13,"GroupError","","See `GroupError` for details",83,null],[13,"MembershipTagMismatch","","A Proposal with an invalid membership tag was received.",83,null],[11,"_description","openmls::group","",84,[[],["string",3]]],[11,"_description","","",82,[[],["string",3]]],[11,"_description","","",86,[[],["string",3]]],[11,"_description","","",85,[[],["string",3]]],[11,"_description","","",83,[[],["string",3]]],[0,"ser","openmls::group::managed_group","",null,null],[3,"SerializedManagedGroup","openmls::group::managed_group::ser","",null,null],[12,"managed_group_config","","",93,null],[12,"group","","",93,null],[12,"pending_proposals","","",93,null],[12,"own_kpbs","","",93,null],[12,"aad","","",93,null],[12,"active","","",93,null],[11,"into_managed_group","","",93,[[["credentialbundle",3],["managedgroupcallbacks",3]],["managedgroup",3]]],[11,"new","openmls::group","Creates a new group from scratch with only the creator as…",74,[[["managedgroupconfig",3],["groupid",3],["keypackagebundle",3],["credentialbundle",3]],[["managedgrouperror",4],["result",4]]]],[11,"new_from_welcome","","Creates a new group from a `Welcome` message",74,[[["option",4],["managedgroupconfig",3],["welcome",3],["keypackagebundle",3],["credentialbundle",3],["vec",3]],[["grouperror",4],["result",4]]]],[11,"add_members","","Adds members to the group",74,[[],[["managedgrouperror",4],["result",4]]]],[11,"remove_members","","Removes members from the group",74,[[],[["result",4],["managedgrouperror",4]]]],[11,"propose_add_members","","Creates proposals to add members to the group",74,[[],[["vec",3],["result",4],["managedgrouperror",4]]]],[11,"propose_remove_members","","Creates proposals to remove members from the group",74,[[],[["vec",3],["result",4],["managedgrouperror",4]]]],[11,"leave_group","","Leave the group",74,[[],[["vec",3],["result",4],["managedgrouperror",4]]]],[11,"members","","Gets the current list of members",74,[[],[["vec",3],["credential",3]]]],[11,"process_messages","","Processes any incoming messages from the DS (MLSPlaintext…",74,[[["vec",3],["mlsmessage",4]],[["managedgrouperror",4],["result",4]]]],[11,"create_message","","Creates an application message. Returns…",74,[[],[["result",4],["managedgrouperror",4],["mlsmessage",4]]]],[11,"process_pending_proposals","","Process pending proposals",74,[[],[["result",4],["managedgrouperror",4]]]],[11,"export_secret","","Exports a secret from the current epoch",74,[[],[["managedgrouperror",4],["vec",3],["result",4]]]],[11,"authentication_secret","","Returns the authentication secret",74,[[],["vec",3]]],[11,"configuration","","Gets the configuration",74,[[],["managedgroupconfig",3]]],[11,"set_configuration","","Sets the configuration",74,[[["managedgroupconfig",3]]]],[11,"aad","","Gets the AAD used in the framing",74,[[]]],[11,"set_aad","","Sets the AAD used in the framing",74,[[]]],[11,"ciphersuite","","Returns the group\'s ciphersuite",74,[[],["ciphersuite",3]]],[11,"is_active","","Returns whether the own client is still a member of the…",74,[[]]],[11,"set_credential_bundle","","Sets a different `CredentialBundle`",74,[[["credentialbundle",3]]]],[11,"credential","","Returns own credential",74,[[],["credential",3]]],[11,"group_id","","Get group ID",74,[[],["groupid",3]]],[11,"self_update","","Updates the own leaf node",74,[[["keypackagebundle",3],["option",4]],[["result",4],["managedgrouperror",4]]]],[11,"propose_self_update","","Creates a proposal to update the own leaf node",74,[[["keypackagebundle",3],["option",4]],[["vec",3],["result",4],["managedgrouperror",4]]]],[11,"pending_proposals","","Returns a list of proposal",74,[[]]],[11,"load","","Loads the state from persisted state",74,[[["read",8],["credentialbundle",3],["managedgroupcallbacks",3]],[["result",4],["error",3],["managedgroup",3]]]],[11,"save","","Persists the state",74,[[],[["error",3],["result",4]]]],[11,"export_ratchet_tree","","Export the Ratchet Tree",74,[[],[["option",4],["vec",3]]]],[11,"plaintext_to_mls_messages","","Converts MLSPlaintext to MLSMessage. Depending on whether…",74,[[["vec",3],["mlsplaintext",3]],[["vec",3],["result",4],["managedgrouperror",4]]]],[11,"validate_proposal","","Validate all pending proposals. The function returns…",74,[[["proposal",4],["leafindex",3],["hashmap",3]]]],[11,"validate_inline_proposals","","Validates the inline proposals from a Commit message",74,[[["hashmap",3],["leafindex",3]]]],[11,"send_events","","Send out the corresponding events for the proposals…",74,[[["ciphersuite",3],["leafindex",3],["hashmap",3]]]],[11,"send_proposal_event","","Send out the corresponding events for the pending proposal…",74,[[["proposal",4],["leafindex",3],["hashmap",3]]]],[11,"invalid_message_event","","Send an event when an invalid message was received",74,[[["invalidmessageerror",4]]]],[11,"auto_save","","Auto-save function",74,[[]]],[11,"indexed_members","","Return a list (LeafIndex, Credential)",74,[[],[["hashmap",3],["leafindex",3],["credential",3]]]],[11,"group_id","","Get the group ID as plain byte vector.",87,[[],["vec",3]]],[11,"epoch","","Get the epoch as plain u64.",87,[[]]],[11,"is_handshake_message","","Returns `true` if this is a handshake message and `false`…",87,[[]]],[0,"mls_group","","",null,null],[3,"MlsGroup","openmls::group::mls_group","",null,null],[12,"ciphersuite","","",75,null],[12,"group_context","","",75,null],[12,"epoch_secrets","","",75,null],[12,"init_secret","","",75,null],[12,"secret_tree","","",75,null],[12,"tree","","",75,null],[12,"interim_transcript_hash","","",75,null],[12,"add_ratchet_tree_extension","","",75,null],[5,"update_confirmed_transcript_hash","","",null,[[["ciphersuite",3],["mlsplaintextcommitcontent",3]],[["result",4],["vec",3],["codecerror",4]]]],[5,"update_interim_transcript_hash","","",null,[[["ciphersuite",3],["mlsplaintextcommitauthdata",3]],[["result",4],["vec",3],["codecerror",4]]]],[0,"apply_commit","","",null,null],[11,"apply_commit_internal","openmls::group","",75,[[["mlsplaintext",3]],[["applycommiterror",4],["result",4]]]],[0,"create_commit","openmls::group::mls_group","",null,null],[11,"create_commit_internal","openmls::group","",75,[[["credentialbundle",3]],["createcommitresult",6]]],[0,"new_from_welcome","openmls::group::mls_group","",null,null],[11,"new_from_welcome_internal","openmls::group","",75,[[["option",4],["welcome",3],["keypackagebundle",3],["vec",3]],[["result",4],["welcomeerror",4]]]],[11,"find_key_package_from_welcome_secrets","","",75,[[["keypackage",3]],[["option",4],["encryptedgroupsecrets",3]]]],[11,"decrypt_group_info","","",75,[[["encryptedgroupsecrets",3],["ciphersuite",3],["hpkeprivatekey",3]],[["welcomeerror",4],["result",4]]]],[6,"CreateCommitResult","openmls::group::mls_group","",null,null],[11,"new","openmls::group","",75,[[["keypackagebundle",3],["ciphersuitename",4],["groupconfig",3]],[["grouperror",4],["result",4]]]],[11,"new_from_welcome","","",75,[[["option",4],["welcome",3],["keypackagebundle",3],["vec",3]],[["grouperror",4],["result",4]]]],[11,"create_add_proposal","","",75,[[["credentialbundle",3],["keypackage",3]],[["result",4],["grouperror",4],["mlsplaintext",3]]]],[11,"create_update_proposal","","",75,[[["credentialbundle",3],["keypackage",3]],[["result",4],["grouperror",4],["mlsplaintext",3]]]],[11,"create_remove_proposal","","",75,[[["credentialbundle",3],["leafindex",3]],[["result",4],["grouperror",4],["mlsplaintext",3]]]],[11,"create_commit","","",75,[[["credentialbundle",3]],["createcommitresult",6]]],[11,"apply_commit","","",75,[[["mlsplaintext",3]],[["grouperror",4],["result",4]]]],[11,"create_application_message","","",75,[[["credentialbundle",3]],[["result",4],["grouperror",4],["mlsciphertext",3]]]],[11,"encrypt","","",75,[[["mlsplaintext",3]],[["result",4],["grouperror",4],["mlsciphertext",3]]]],[11,"decrypt","","Decrypt an MLSCiphertext into an MLSPlaintext",75,[[["mlsciphertext",3]],[["mlsciphertexterror",4],["result",4],["mlsplaintext",3]]]],[11,"verify_signature","","Verify the signature of an MLSPlaintext",75,[[["mlsplaintext",3]],[["result",4],["mlsplaintexterror",4]]]],[11,"verify_membership_tag","","Verify the membership tag an MLSPlaintext",75,[[["mlsplaintext",3]],[["result",4],["mlsplaintexterror",4]]]],[11,"export_secret","","Exporter",75,[[],[["grouperror",4],["result",4],["vec",3]]]],[11,"authentication_secret","","Returns the authentication secret",75,[[],["vec",3]]],[11,"load","","Loads the state from persisted state",75,[[["read",8]],[["mlsgroup",3],["error",3],["result",4]]]],[11,"save","","Persists the state",75,[[],[["error",3],["result",4]]]],[11,"tree","","Returns the ratchet tree",75,[[],[["ratchettree",3],["ref",3]]]],[11,"ciphersuite","","Get the ciphersuite implementation used in this group.",75,[[],["ciphersuite",3]]],[11,"context","","Get the group context",75,[[],["groupcontext",3]]],[11,"group_id","","Get the group ID",75,[[],["groupid",3]]],[11,"sender_index","","",75,[[],["leafindex",3]]],[11,"epoch_secrets","","",75,[[],["epochsecrets",3]]],[11,"secret_tree_mut","","",75,[[],[["refmut",3],["secrettree",3]]]],[0,"callbacks","","",null,null],[3,"ManagedGroupCallbacks","openmls::group::callbacks","Collection of callback functions that are passed to a…",null,null],[12,"validate_add","","",71,null],[12,"validate_remove","","",71,null],[12,"auto_save","","",71,null],[12,"member_added","","",71,null],[12,"member_removed","","",71,null],[12,"member_updated","","",71,null],[12,"psk_received","","",71,null],[12,"reinit_received","","",71,null],[12,"app_message_received","","",71,null],[12,"invalid_message_received","","",71,null],[12,"error_occured","","",71,null],[4,"Removal","","This enum lists the 4 different variants of a removal,…",null,null],[13,"WeLeft","","We previously issued a RemoveProposal for ourselves and…",80,null],[13,"TheyLeft","","Another member issued a RemoveProposal for itself that was…",80,null],[13,"WeWereRemovedBy","","Another member issued a RemoveProposal for ourselves that…",80,null],[13,"TheyWereRemovedBy","","Member A issued a RemoveProposal for member B that was now…",80,null],[6,"ValidateAdd","","",null,null],[6,"ValidateRemove","","",null,null],[6,"AutoSave","","",null,null],[6,"MemberAdded","","",null,null],[6,"MemberRemoved","","",null,null],[6,"MemberUpdated","","",null,null],[6,"PskReceived","","",null,null],[6,"ReInitReceived","","",null,null],[6,"AppMessageReceived","","",null,null],[6,"InvalidMessageReceived","","",null,null],[6,"ErrorOccured","","",null,null],[0,"config","openmls::group","",null,null],[3,"ManagedGroupConfig","openmls::group::config","Specifies the configuration parameters for a managed group",null,null],[12,"handshake_message_format","","Defines whether handshake messages should be encrypted",72,null],[12,"update_policy","","Defines the update policy",72,null],[12,"padding_size","","Size of padding in bytes",72,null],[12,"callbacks","","Callbacks",72,null],[3,"UpdatePolicy","","Specifies in which intervals the own leaf node should be…",null,null],[12,"maximum_time","","Maximum time before an update in seconds",73,null],[12,"maximum_sent_messages","","Maximum messages that are sent before an update in seconds",73,null],[12,"maximum_received_messages","","Maximum messages that are received before an update in…",73,null],[4,"HandshakeMessageFormat","","Defines whether handshake messages (Proposals & Commits)…",null,null],[13,"Plaintext","","",81,null],[13,"Ciphertext","","",81,null],[0,"errors","openmls::group","MLS Managed Group errors`WelcomeError`,…",null,null],[4,"ManagedGroupError","openmls::group::errors","",null,null],[13,"LibraryError","","An internal library error occurred. Additional detail is…",84,null],[13,"Codec","","See `CodecError` for details",84,null],[13,"Config","","See `ConfigError` for details",84,null],[13,"Group","","See `GroupError` for details",84,null],[13,"CreateCommit","","See `CreateCommitError` for details",84,null],[13,"UseAfterEviction","","See `UseAfterEviction` for details",84,null],[13,"PendingProposalsExist","","See `PendingProposalsError` for details",84,null],[13,"Exporter","","See `ExporterError` for details",84,null],[13,"EmptyInput","","Empty input. Additional detail is provided.",84,null],[4,"EmptyInputError","","",null,null],[13,"AddMembers","","An empty list of KeyPackages was provided.",82,null],[13,"RemoveMembers","","An empty list of indexes was provided.",82,null],[4,"UseAfterEviction","","",null,null],[13,"Error","","Tried to use a group after being evicted from it.",86,null],[4,"PendingProposalsError","","",null,null],[13,"Exists","","Can\'t create message because a pending proposal exists.",85,null],[4,"InvalidMessageError","","",null,null],[13,"InvalidCiphertext","","An invalid ciphertext was provided. The error returns the…",83,null],[13,"CommitWithInvalidProposals","","A commit contained an invalid proposal. Additional detail…",83,null],[13,"CommitError","","See `ApplyCommitError` for details",83,null],[13,"GroupError","","See `GroupError` for details",83,null],[13,"MembershipTagMismatch","","A Proposal with an invalid membership tag was received.",83,null],[6,"ValidateAdd","openmls::group","",null,null],[6,"ValidateRemove","","",null,null],[6,"AutoSave","","",null,null],[6,"MemberAdded","","",null,null],[6,"MemberRemoved","","",null,null],[6,"MemberUpdated","","",null,null],[6,"PskReceived","","",null,null],[6,"ReInitReceived","","",null,null],[6,"AppMessageReceived","","",null,null],[6,"InvalidMessageReceived","","",null,null],[6,"ErrorOccured","","",null,null],[6,"CreateCommitResult","","",null,null],[11,"random","","",76,[[]]],[11,"from_slice","","",76,[[]]],[11,"as_slice","","",76,[[],["vec",3]]],[11,"increment","","",77,[[]]],[11,"padding_block_size","","Get the padding block size used in this config.",79,[[]]],[0,"key_packages","openmls","",null,null],[3,"KeyPackage","openmls::key_packages","",null,null],[12,"protocol_version","","",94,null],[12,"ciphersuite","","",94,null],[12,"hpke_init_key","","",94,null],[12,"credential","","",94,null],[12,"extensions","","",94,null],[12,"signature","","",94,null],[3,"KeyPackageBundle","","",null,null],[12,"key_package","","",95,null],[12,"private_key","","",95,null],[12,"leaf_secret","","",95,null],[0,"codec","","",null,null],[0,"errors","","Key Package errors`KeyPackageError` are thrown on errors…",null,null],[4,"KeyPackageError","openmls::key_packages::errors","",null,null],[13,"ExtensionError","","See `ExtensionError` for details.",96,null],[13,"ConfigError","","See `ConfigError` for details.",96,null],[13,"UnsupportedCiphersuite","","The requested ciphersuite is not supported.",96,null],[13,"UnknownConfigError","","An unknown configuration error occurred.",96,null],[13,"MandatoryExtensionsMissing","","A mandatory extension is missing in the key package.",96,null],[13,"InvalidLifetimeExtension","","The lifetime extension of the key package is not valid.",96,null],[13,"InvalidSignature","","The key package signature is not valid.",96,null],[13,"LibraryError","","An unknown OpenMLS library error occurred.",96,null],[13,"DuplicateExtension","","Duplicate extensions are not allowed.",96,null],[13,"NoCiphersuitesSupplied","","Creating a new key package requires at least one…",96,null],[13,"CiphersuiteMismatch","","The list of ciphersuites is not consistent with the…",96,null],[11,"_description","","",96,[[],["string",3]]],[17,"MANDATORY_EXTENSIONS","openmls::key_packages","Mandatory extensions for key packages.",null,null],[11,"verify","","Verify that this key package is valid:",94,[[],[["result",4],["keypackageerror",4]]]],[11,"hash","","Compute the hash of the encoding of this key package.",94,[[],["vec",3]]],[11,"key_id","","Get the ID of this key package as byte slice. Returns an…",94,[[],[["result",4],["keypackageerror",4]]]],[11,"add_extension","","Add (or replace) an extension to the KeyPackage. Make sure…",94,[[["box",3],["extension",8]]]],[11,"extensions","","Get a reference to the extensions of this key package.",94,[[]]],[11,"credential","","Get a reference to the credential.",94,[[],["credential",3]]],[11,"sign","","Populate the `signature` field using the…",94,[[["credentialbundle",3]]]],[11,"new","","Create a new key package but only with the given…",94,[[["credentialbundle",3],["box",3],["ciphersuitename",4],["hpkepublickey",3],["vec",3]],[["result",4],["keypackageerror",4]]]],[11,"unsigned_payload","","Compile the unsigned payload to create the signature…",94,[[],[["result",4],["vec",3],["codecerror",4]]]],[11,"extension_with_type","","Get a reference to the extension of `extension_type`.…",94,[[["extensiontype",4]],[["option",4],["box",3]]]],[11,"update_parent_hash","","Update the parent hash extension of this key package.",94,[[]]],[11,"remove_extension","","Remove an extension from the KeyPackage Make sure to…",94,[[["extensiontype",4]]]],[11,"hpke_init_key","","Get a reference to the HPKE init key.",94,[[],["hpkepublickey",3]]],[11,"set_hpke_init_key","","Set a new HPKE init key.",94,[[["hpkepublickey",3]]]],[11,"ciphersuite","","Get the `Ciphersuite`.",94,[[],["ciphersuite",3]]],[11,"ciphersuite_name","","Get the `CiphersuiteName`.",94,[[],["ciphersuitename",4]]],[11,"new","","Create a new `KeyPackageBundle` with a fresh…",95,[[["credentialbundle",3],["vec",3],["box",3]],[["result",4],["keypackageerror",4]]]],[11,"from_rekeyed_key_package","","Replace the init key in the `KeyPackage` with a random one…",95,[[["keypackage",3]]]],[11,"new_with_keypair","","Create a new `KeyPackageBundle` for the given…",95,[[["credentialbundle",3],["hpkekeypair",3],["secret",3],["vec",3],["box",3]],[["result",4],["keypackageerror",4]]]],[11,"key_package","","Get a reference to the `KeyPackage`.",95,[[],["keypackage",3]]],[11,"new_from_leaf_secret","","",95,[[["credentialbundle",3],["secret",3],["vec",3],["box",3]],[["result",4],["keypackageerror",4]]]],[11,"new_from_values","","Assembles a new KeyPackageBundle from a KeyPackage, a…",95,[[["hpkeprivatekey",3],["keypackage",3],["secret",3]]]],[11,"_set_private_key","","Update the private key in the bundle.",95,[[["hpkeprivatekey",3]]]],[11,"set_key_package","","Update the key package in the bundle.",95,[[["keypackage",3]]]],[11,"key_package_mut","","Get a mutable reference to the `KeyPackage`.",95,[[],["keypackage",3]]],[11,"private_key","","Get a reference to the `HPKEPrivateKey`.",95,[[],["hpkeprivatekey",3]]],[11,"leaf_secret","","Get a reference to the `leaf_secret`.",95,[[],["secret",3]]],[11,"derive_leaf_node_secret","","This function derives the leaf_node_secret from the…",95,[[["ciphersuite",3],["secret",3]],["secret",3]]],[11,"sign","","Sign the KeyPackageBundle",95,[[["credentialbundle",3]]]],[0,"messages","openmls","",null,null],[3,"Welcome","openmls::messages","Welcome Messages",null,null],[12,"version","","",97,null],[12,"cipher_suite","","",97,null],[12,"secrets","","",97,null],[12,"encrypted_group_info","","",97,null],[3,"EncryptedGroupSecrets","","EncryptedGroupSecrets",null,null],[12,"key_package_hash","","",98,null],[12,"encrypted_group_secrets","","",98,null],[3,"Commit","","",null,null],[12,"proposals","","",99,null],[12,"path","","",99,null],[3,"ConfirmationTag","","Confirmation tag field of MLSPlaintext. For type saftey…",null,null],[12,"0","","",100,null],[3,"GroupInfo","","GroupInfo",null,null],[12,"group_id","","",101,null],[12,"epoch","","",101,null],[12,"tree_hash","","",101,null],[12,"confirmed_transcript_hash","","",101,null],[12,"extensions","","",101,null],[12,"confirmation_tag","","",101,null],[12,"signer_index","","",101,null],[12,"signature","","",101,null],[3,"PathSecret","","PathSecret",null,null],[12,"path_secret","","",102,null],[3,"GroupSecrets","","GroupSecrets",null,null],[12,"joiner_secret","","",103,null],[12,"path_secret","","",103,null],[12,"_psks","","",103,null],[0,"codec","","Codec implementations for message structs.",null,null],[0,"errors","","",null,null],[4,"ProposalQueueError","openmls::messages::errors","",null,null],[13,"NotAProposal","","The given MLS Plaintext was not a Proposal.",104,null],[13,"ProposalNotFound","","Not all proposals in the Commit were found locally.",104,null],[4,"ProposalOrRefTypeError","","",null,null],[13,"UnknownValue","","Invalid value for ProposalOrRefType was found.",105,null],[4,"QueuedProposalError","","",null,null],[13,"WrongContentType","","API misuse. Only proposals can end up in the proposal queue",106,null],[11,"_description","","",104,[[],["string",3]]],[11,"_description","","",105,[[],["string",3]]],[11,"_description","","",106,[[],["string",3]]],[0,"proposals","openmls::messages","",null,null],[3,"ProposalReference","openmls::messages::proposals","Reference to a Proposal. This can be used in Commit…",null,null],[12,"value","","",107,null],[3,"QueuedProposal","","Alternative representation of a Proposal, where the sender…",null,null],[12,"proposal","","",108,null],[12,"proposal_reference","","",108,null],[12,"sender","","",108,null],[12,"proposal_or_ref_type","","",108,null],[3,"ProposalQueue","","Proposal queue that helps filtering and sorting the…",null,null],[12,"proposal_references","","`proposal_references` holds references to the proposals in…",109,null],[12,"queued_proposals","","`queued_proposals` contains the actual proposals in the…",109,null],[3,"AddProposal","","",null,null],[12,"key_package","","",110,null],[3,"UpdateProposal","","",null,null],[12,"key_package","","",111,null],[3,"RemoveProposal","","",null,null],[12,"removed","","",112,null],[3,"PreSharedKeyProposal","","Preshared Key proposal 11.1.4 struct { PreSharedKeyID psk;…",null,null],[12,"psk","","",113,null],[3,"ReInitProposal","","ReInit proposal 11.1.5 struct { opaque group_id<0..255>;…",null,null],[12,"group_id","","",114,null],[12,"version","","",114,null],[12,"ciphersuite","","",114,null],[12,"extensions","","",114,null],[4,"ProposalType","","",null,null],[13,"Add","","",115,null],[13,"Update","","",115,null],[13,"Remove","","",115,null],[13,"Presharedkey","","",115,null],[13,"Reinit","","",115,null],[4,"ProposalOrRefType","","11.2 Commit",null,null],[13,"Proposal","","",116,null],[13,"Reference","","",116,null],[4,"ProposalOrRef","","Type of Proposal, either by value or by reference",null,null],[13,"Proposal","","",117,null],[13,"Reference","","",117,null],[4,"Proposal","","Proposal",null,null],[13,"Add","","",118,null],[13,"Update","","",118,null],[13,"Remove","","",118,null],[13,"PreSharedKey","","",118,null],[13,"ReInit","","",118,null],[11,"proposal_or_ref_type","","",117,[[],["proposalorreftype",4]]],[11,"proposal_type","","",118,[[],["proposaltype",4]]],[11,"is_type","","",118,[[["proposaltype",4]]]],[11,"as_add","","",118,[[],[["addproposal",3],["option",4]]]],[11,"as_update","","",118,[[],[["updateproposal",3],["option",4]]]],[11,"as_remove","","",118,[[],[["removeproposal",3],["option",4]]]],[11,"from_proposal","","",107,[[["ciphersuite",3],["proposal",4]]]],[11,"from_mls_plaintext","","Creates a new `QueuedProposal` from an `MLSPlaintext`",108,[[["ciphersuite",3],["mlsplaintext",3]],[["result",4],["queuedproposalerror",4]]]],[11,"from_proposal_and_sender","","Creates a new `QueuedProposal` from a `Proposal` and…",108,[[["ciphersuite",3],["sender",3],["proposal",4]]]],[11,"proposal","","Returns the `Proposal` as a reference",108,[[],["proposal",4]]],[11,"proposal_reference","","Returns the `ProposalReference` as a reference",108,[[],["proposalreference",3]]],[11,"sender","","Returns the `Sender` as a reference",108,[[],["sender",3]]],[11,"from_proposals_by_reference","","Returns a new `ProposalQueue` from proposals that were…",109,[[["ciphersuite",3]]]],[11,"from_committed_proposals","","Returns a new `ProposalQueue` from proposals that were…",109,[[["ciphersuite",3],["sender",3]],[["result",4],["proposalqueueerror",4]]]],[11,"filter_proposals","","Filters received proposals",109,[[["ciphersuite",3],["leafindex",3]],[["result",4],["proposalqueueerror",4]]]],[11,"get","","Returns proposal for a given proposal ID",109,[[["proposalreference",3]],[["option",4],["queuedproposal",3]]]],[11,"add","","Add a new `QueuedProposal` to the queue",109,[[["queuedproposal",3]]]],[11,"commit_list","","Returns the list of all proposals that are covered by a…",109,[[],[["vec",3],["proposalorref",4]]]],[11,"filtered_by_type","","Returns an iterator over a list of `QueuedProposal`…",109,[[["proposaltype",4]]]],[11,"new","openmls::messages","Create a new welcome message from the provided data. Note…",97,[[["protocolversion",4],["vec",3],["vec",3],["ciphersuite",3],["encryptedgroupsecrets",3]]]],[11,"ciphersuite","","Get a reference to the ciphersuite in this Welcome message.",97,[[],["ciphersuite",3]]],[11,"secrets","","Get a reference to the encrypted group secrets in this…",97,[[]]],[11,"encrypted_group_info","","Get a reference to the encrypted group info.",97,[[]]],[11,"has_path","","Returns `true` if the commit contains an update path.…",99,[[]]],[11,"new","","Create a new confirmation tag.",100,[[["ciphersuite",3],["confirmationkey",3]]]],[11,"new","","",101,[[["leafindex",3],["groupid",3],["groupepoch",3],["vec",3],["confirmationtag",3],["vec",3],["box",3]]]],[11,"tree_hash","","Get the tree hash as byte slice.",101,[[]]],[11,"signer_index","","Get the signer index.",101,[[],["leafindex",3]]],[11,"signature","","Get the signature.",101,[[],["signature",3]]],[11,"set_signature","","Set the signature.",101,[[["signature",3]]]],[11,"group_id","","Get the group ID.",101,[[],["groupid",3]]],[11,"epoch","","Get the epoch.",101,[[],["groupepoch",3]]],[11,"confirmed_transcript_hash","","Get the confirmed transcript hash.",101,[[]]],[11,"confirmation_tag","","Get the confirmed tag.",101,[[],["confirmationtag",3]]],[11,"extensions","","Get the extensions.",101,[[]]],[11,"extensions_mut","","Get the extensions as mutable reference.",101,[[],["vec",3]]],[11,"new_encoded","","Create new encoded group secrets.",103,[[["pathsecret",3],["joinersecret",3],["presharedkeys",3],["option",4],["option",4]],[["result",4],["vec",3],["codecerror",4]]]],[0,"schedule","openmls","This module represents the key schedule as introduced in…",null,null],[3,"InitSecret","openmls::schedule","The `InitSecret` is used to connect the next epoch to the…",null,null],[12,"secret","","",119,null],[3,"JoinerSecret","","",null,null],[12,"secret","","",120,null],[3,"PlaintextSecret","","",null,null],[12,"public_key","","",121,null],[12,"group_secrets_bytes","","",121,null],[12,"key_package_hash","","",121,null],[3,"IntermediateSecret","","The intermediate secret includes the optional PSK and is…",null,null],[12,"secret","","",122,null],[3,"WelcomeSecret","","",null,null],[12,"secret","","",123,null],[3,"EpochSecret","","An intermediate secret in the key schedule, the…",null,null],[12,"secret","","",124,null],[3,"EncryptionSecret","","The `EncryptionSecret` is used to create a `SecretTree`.",null,null],[12,"secret","","",125,null],[3,"ExporterSecret","","A secret that we can derive secrets from, that are used…",null,null],[12,"secret","","",126,null],[3,"AuthenticationSecret","","A secret that can be used among members to make sure…",null,null],[12,"secret","","",127,null],[3,"ExternalSecret","","A secret used when joining a group with an external Commit.",null,null],[12,"secret","","",128,null],[3,"ConfirmationKey","","The confirmation key is used to calculate the…",null,null],[12,"secret","","",129,null],[3,"MembershipKey","","The membership key is used to calculate the `MembershipTag`.",null,null],[12,"secret","","",130,null],[3,"ResumptionSecret","","A secret used in cross-group operations.",null,null],[12,"secret","","",131,null],[3,"SenderDataSecret","","A key that can be used to derive an `AeadKey` and an…",null,null],[12,"secret","","",132,null],[3,"EpochSecrets","","The `EpochSecrets` contain keys (or secrets), which are…",null,null],[12,"sender_data_secret","","",133,null],[12,"exporter_secret","","",133,null],[12,"authentication_secret","","",133,null],[12,"external_secret","","",133,null],[12,"confirmation_key","","",133,null],[12,"membership_key","","",133,null],[12,"resumption_secret","","",133,null],[0,"codec","","",null,null],[0,"psk","","Pre shared keys.",null,null],[3,"ExternalPsk","openmls::schedule::psk","",null,null],[12,"psk_id","","",134,null],[3,"ReinitPsk","","",null,null],[12,"psk_group_id","","",135,null],[12,"psk_epoch","","",135,null],[3,"BranchPsk","","",null,null],[12,"psk_group_id","","",136,null],[12,"psk_epoch","","",136,null],[3,"PreSharedKeyID","","",null,null],[12,"psk_type","","",137,null],[12,"psk","","",137,null],[12,"psk_nonce","","",137,null],[3,"PreSharedKeys","","struct { PreSharedKeyID psks<0..2^16-1>; } PreSharedKeys;",null,null],[12,"psks","","",138,null],[4,"PSKType","","enum { reserved(0), external(1), reinit(2), branch(3),…",null,null],[13,"External","","",139,null],[13,"Reinit","","",139,null],[13,"Branch","","",139,null],[4,"Psk","","",null,null],[13,"External","","",140,null],[13,"Reinit","","",140,null],[13,"Branch","","",140,null],[11,"psk_id","","",134,[[]]],[11,"psk_group_id","","",135,[[]]],[11,"psk_epoch","","",135,[[]]],[11,"psk_group_id","","",136,[[]]],[11,"psk_epoch","","",136,[[]]],[11,"psktype","","",137,[[],["psktype",4]]],[11,"psk","","",137,[[],["psk",4]]],[11,"psk_nonce","","",137,[[]]],[11,"psks","","",138,[[],["vec",3]]],[11,"new","openmls::schedule","Derive an `InitSecret` from an `EpochSecret`.",119,[[["ciphersuite",3],["epochsecret",3]]]],[11,"random","","Sample a fresh, random `InitSecret` for the creation of a…",119,[[]]],[11,"from_commit_and_init_secret","","Derive a `JoinerSecret` from an optional `CommitSecret`…",120,[[["initsecret",3],["ciphersuite",3],["commitsecret",3],["option",4]]]],[11,"group_secrets","","Create the `GroupSecrets` for a number of…",120,[[["vec",3],["vec",3],["ratchettree",3],["option",4]],[["vec",3],["result",4],["codecerror",4]]]],[11,"new","","Derive ans `IntermediateSecret` from a `JoinerSecret` and…",122,[[["secret",3],["joinersecret",3],["option",4],["ciphersuite",3]]]],[11,"new","","Derive a `WelcomeSecret` from to decrypt a `Welcome`…",123,[[["ciphersuite",3],["intermediatesecret",3]]]],[11,"secret","","Get the `Secret` of the `WelcomeSecret`.",123,[[],["secret",3]]],[11,"derive_welcome_key_nonce","","Derive an `AeadKey` and an `AeadNonce` from the…",123,[[["ciphersuite",3]]]],[11,"new","","Derive an `EpochSecret` from a `JoinerSecret`",124,[[["ciphersuite",3],["intermediatesecret",3],["groupcontext",3]]]],[11,"new","","Derive an encryption secret from a reference to an…",125,[[["ciphersuite",3],["epochsecret",3]]]],[11,"create_secret_tree","","Create a `SecretTree` from the `encryption_secret`…",125,[[["leafindex",3]],["secrettree",3]]],[11,"consume_secret","","",125,[[],["secret",3]]],[11,"new","","Derive an `ExporterSecret` from an `EpochSecret`.",126,[[["ciphersuite",3],["epochsecret",3]]]],[11,"secret","","Get the `Secret` of the `ExporterSecret`.",126,[[],["secret",3]]],[11,"new","","Derive an `AuthenticationSecret` from an `EpochSecret`.",127,[[["ciphersuite",3],["epochsecret",3]]]],[11,"secret","","Get the internal `Secret`.",127,[[],["secret",3]]],[11,"new","","Derive an `ExternalSecret` from an `EpochSecret`.",128,[[["ciphersuite",3],["epochsecret",3]]]],[11,"_secret","","Get the internal `Secret`.",128,[[],["secret",3]]],[11,"new","","Derive an `ConfirmationKey` from an `EpochSecret`.",129,[[["ciphersuite",3],["epochsecret",3]]]],[11,"secret","","Get the internal `Secret`.",129,[[],["secret",3]]],[11,"new","","Derive an `MembershipKey` from an `EpochSecret`.",130,[[["ciphersuite",3],["epochsecret",3]]]],[11,"secret","","Get the internal `Secret`.",130,[[],["secret",3]]],[11,"new","","Derive an `ResumptionSecret` from an `EpochSecret`.",131,[[["ciphersuite",3],["epochsecret",3]]]],[11,"_secret","","Get the internal `Secret`.",131,[[],["secret",3]]],[11,"new","","Derive an `ExporterSecret` from an `EpochSecret`.",132,[[["ciphersuite",3],["epochsecret",3]]]],[11,"secret","","Get the `Secret` of the `ExporterSecret`.",132,[[],["secret",3]]],[11,"sender_data_secret","","Get the sender_data secret.",133,[[],["senderdatasecret",3]]],[11,"confirmation_key","","Get the confirmation key.",133,[[],["confirmationkey",3]]],[11,"authentication_secret","","Authentication secret",133,[[],["authenticationsecret",3]]],[11,"derive_epoch_secrets","","Derive `EpochSecrets`, as well as an `EncryptionSecret`…",133,[[["ciphersuite",3],["epochsecret",3]]]],[0,"tree","openmls","",null,null],[3,"LeafNodeHashInput","openmls::tree","",null,null],[12,"node_index","","",141,null],[12,"key_package","","",141,null],[3,"ParentNodeTreeHashInput","","",null,null],[12,"node_index","","",142,null],[12,"parent_node","","",142,null],[12,"left_hash","","",142,null],[12,"right_hash","","",142,null],[3,"RatchetTree","","The ratchet tree.",null,null],[12,"ciphersuite","","The ciphersuite used in this tree.",143,null],[12,"nodes","","All nodes in the tree. Note that these only hold public…",143,null],[12,"private_tree","","This holds all private values in the tree. See…",143,null],[3,"ApplyProposalsValues","","This struct contain the return vallues of the…",null,null],[12,"path_required","","",144,null],[12,"self_removed","","",144,null],[12,"invitation_list","","",144,null],[3,"UpdatePathNode","","7.7. Update Paths",null,null],[12,"public_key","","",145,null],[12,"encrypted_path_secret","","",145,null],[3,"UpdatePath","","7.7. Update Paths",null,null],[12,"leaf_key_package","","",146,null],[12,"nodes","","",146,null],[0,"codec","","",null,null],[0,"errors","","",null,null],[4,"TreeError","openmls::tree::errors","",null,null],[13,"PathSecretDecryptionError","","Error while decrypting `PathSecret`.",147,null],[13,"InvalidArguments","","Invalid arguments.",147,null],[13,"InvalidUpdatePath","","The computed update path is invalid.",147,null],[13,"InvalidTree","","The tree is not valid.",147,null],[13,"NotAParentNode","","The node is not a parent node.",147,null],[4,"ParentHashError","","",null,null],[13,"EndedWithLeafNode","","The search for a valid child ended with a leaf node.",148,null],[13,"AllChecksFailed","","All checks failed: Neither child has the right parent hash.",148,null],[13,"InputNotParentNode","","The input node is not a parent node.",148,null],[13,"NotAParentNode","","The node is not a parent node.",148,null],[13,"EmptyParentNode","","The parent node was blank.",148,null],[11,"_description","","",147,[[],["string",3]]],[11,"_description","","",148,[[],["string",3]]],[0,"hashes","openmls::tree","7.4. Parent Hash",null,null],[3,"ParentHashInput","openmls::tree::hashes","",null,null],[12,"public_key","","",149,null],[12,"parent_hash","","",149,null],[12,"original_child_resolution","","",149,null],[3,"LeafNodeHashInput","","",null,null],[12,"node_index","","",141,null],[12,"key_package","","",141,null],[3,"ParentNodeTreeHashInput","","",null,null],[12,"node_index","","",142,null],[12,"parent_node","","",142,null],[12,"left_hash","","",142,null],[12,"right_hash","","",142,null],[11,"new","","",149,[[["nodeindex",3],["ratchettree",3]],[["result",4],["parenthasherror",4]]]],[11,"hash","","",149,[[["ciphersuite",3]],["vec",3]]],[11,"new","openmls::tree","",141,[[["option",4],["nodeindex",3]]]],[11,"hash","","",141,[[["ciphersuite",3]],["vec",3]]],[11,"new","","",142,[[["option",4]]]],[11,"hash","","",142,[[["ciphersuite",3]],["vec",3]]],[11,"original_child_resolution","","The list of HPKEPublicKey values of the nodes in the…",143,[[["nodeindex",3]],[["hpkepublickey",3],["vec",3]]]],[11,"set_parent_hashes","","Computes the parent hashes for a leaf node and returns the…",143,[[["leafindex",3]],["vec",3]]],[11,"verify_parent_hash","","Verify the parent hash of a tree node. Returns `Ok(())` if…",143,[[["nodeindex",3],["node",3]],[["parenthasherror",4],["result",4]]]],[11,"verify_parent_hashes","","Verify the parent hashes of the tree nodes. Returns `true`…",143,[[],[["parenthasherror",4],["result",4]]]],[11,"tree_hash","","Computes and returns the tree hash",143,[[],["vec",3]]],[0,"index","","",null,null],[3,"NodeIndex","openmls::tree::index","NodeIndex is an index to the nodes of a tree, both parent…",null,null],[12,"0","","",150,null],[3,"LeafIndex","","LeafIndex is an index to the leaves of a tree.",null,null],[12,"0","","",151,null],[11,"as_u32","","",150,[[]]],[11,"as_usize","","",150,[[]]],[11,"is_leaf","","",150,[[]]],[11,"is_parent","","",150,[[]]],[11,"as_u32","","",151,[[]]],[11,"as_usize","","",151,[[]]],[0,"node","openmls::tree","",null,null],[3,"Node","openmls::tree::node","Ratchet tree node. A `Node` can either be a leaf node (in…",null,null],[12,"node_type","","",152,null],[12,"key_package","","",152,null],[12,"node","","",152,null],[3,"ParentNode","","Content of a parent node.",null,null],[12,"public_key","","",153,null],[12,"unmerged_leaves","","",153,null],[12,"parent_hash","","",153,null],[4,"NodeType","","Node type. Can be either `Leaf` or `Parent`.",null,null],[13,"Leaf","","",154,null],[13,"Parent","","",154,null],[11,"is_leaf","","Returns `true` if the node type is `Leaf` and `false`…",154,[[]]],[11,"is_parent","","Returns `true` if the node type is `Parent` and `false`…",154,[[]]],[11,"new_leaf","","Creates a new leaf node. It can either be blank or contain…",152,[[["keypackage",3],["option",4]]]],[11,"new_blank_parent_node","","Creates a new blank parent node.",152,[[]]],[11,"public_hpke_key","","Returns the public HPKE key of either node type.",152,[[],[["option",4],["hpkepublickey",3]]]],[11,"blank","","Blanks the node.",152,[[]]],[11,"is_blank","","Returns `true` if the node is blank and `false` otherwise.",152,[[]]],[11,"is_full_parent","","Returns `true` if the node is a non-blank parent node and…",152,[[]]],[11,"parent_hash","","Returns the parent hash of a node. Returns `None` if the…",152,[[],["option",4]]],[11,"key_package","","Get a reference to the key package in this node.",152,[[],[["keypackage",3],["option",4]]]],[11,"key_package_mut","","Get a mutable reference to the key package in this node.",152,[[],[["keypackage",3],["option",4]]]],[11,"new","","Creates a new `ParentNode` from the provided values.",153,[[["hpkepublickey",3]]]],[11,"public_key","","Returns the node\'s HPKE public key",153,[[],["hpkepublickey",3]]],[11,"set_parent_hash","","Sets the node\'s parent hash",153,[[["vec",3]]]],[11,"unmerged_leaves","","Returns the node\'s unmerged leaves",153,[[]]],[11,"add_unmerged_leaf","","Adds a leaf to the node\'s unmerged leaves",153,[[]]],[0,"path_keys","openmls::tree","A data structure holding HPKE key pairs for a path in the…",null,null],[3,"PathKeys","openmls::tree::path_keys","A set of keys for a path stored as `HashMap` with entries…",null,null],[12,"keys","","",155,null],[11,"add","","Add a slice of `HPKEPrivateKey`s with the indices given in…",155,[[["hpkeprivatekey",3],["vec",3]]]],[11,"get","","Get an HPKE private key for a given node index.",155,[[["nodeindex",3]],[["option",4],["hpkeprivatekey",3]]]],[0,"private_tree","openmls::tree","A data structure holding information about the leaf node…",null,null],[3,"CommitSecret","openmls::tree::private_tree","",null,null],[12,"secret","","",156,null],[3,"PrivateTree","","",null,null],[12,"leaf_index","","",157,null],[12,"hpke_private_key","","",157,null],[12,"path_keys","","",157,null],[12,"commit_secret","","",157,null],[12,"path_secrets","","",157,null],[6,"PathSecrets","","",null,null],[11,"secret","","",156,[[],["secret",3]]],[11,"zero_secret","","Create a CommitSecret consisting of an all-zero string of…",156,[[["ciphersuite",3]]]],[11,"new","","Create a new empty placeholder `PrivateTree` with default…",157,[[["leafindex",3]],["privatetree",3]]],[11,"from_key_package_bundle","","Create a minimal `PrivateTree` setting only the private…",157,[[["leafindex",3],["keypackagebundle",3]]]],[11,"new_with_keys","","Creates a `PrivateTree` with a new private key, leaf…",157,[[["ciphersuite",3],["leafindex",3],["keypackagebundle",3]]]],[11,"hpke_private_key","","",157,[[],["hpkeprivatekey",3]]],[11,"leaf_index","","",157,[[],["leafindex",3]]],[11,"path_keys","","",157,[[],["pathkeys",3]]],[11,"commit_secret","","",157,[[],["commitsecret",3]]],[11,"path_secrets","","",157,[[]]],[11,"generate_path_secrets","","Generate `n` path secrets with the given `leaf_secret`.",157,[[["ciphersuite",3],["secret",3]],[["vec",3],["hpkepublickey",3]]]],[11,"continue_path_secrets","","Generate `n` path secrets with the given `start_secret`.",157,[[["ciphersuite",3],["secret",3]],[["vec",3],["hpkepublickey",3]]]],[11,"derive_path_secrets","","This function generates the path secrets internally and is…",157,[[["vec",3],["ciphersuite",3],["secret",3]],[["vec",3],["hpkepublickey",3]]]],[11,"generate_commit_secret","","Generate the commit secret for the given `path_secret`.",157,[[["ciphersuite",3]]]],[11,"generate_path_keypairs","","Generate HPKE key pairs for all path secrets in…",157,[[["ciphersuite",3]],[["vec",3],["hpkepublickey",3]]]],[0,"secret_tree","openmls::tree","",null,null],[3,"TreeContext","openmls::tree::secret_tree","",null,null],[12,"node","","",158,null],[12,"generation","","",158,null],[3,"SecretTreeNode","","",null,null],[12,"secret","","",159,null],[3,"SecretTree","","",null,null],[12,"nodes","","",160,null],[12,"handshake_sender_ratchets","","",160,null],[12,"application_sender_ratchets","","",160,null],[12,"size","","",160,null],[4,"SecretTreeError","","",null,null],[13,"TooDistantInThePast","","Generation is too old to be processed.",161,null],[13,"TooDistantInTheFuture","","Generation is too far in the future to be processed.",161,null],[13,"IndexOutOfBounds","","Index out of bounds",161,null],[4,"SecretType","","",null,null],[13,"HandshakeSecret","","",162,null],[13,"ApplicationSecret","","",162,null],[5,"derive_tree_secret","","Derives secrets for inner nodes of a SecretTree",null,[[["ciphersuite",3],["secret",3]],["secret",3]]],[11,"_description","","",161,[[],["string",3]]],[11,"new","","Creates a new SecretTree based on an `encryption_secret`…",160,[[["encryptionsecret",3],["leafindex",3]]]],[11,"initialize_sender_ratchets","","Initializes a specific SenderRatchet pair for a given…",160,[[["ciphersuite",3],["leafindex",3]],[["result",4],["secrettreeerror",4]]]],[11,"secret_for_decryption","","Return RatchetSecrets for a given index and generation.…",160,[[["ciphersuite",3],["leafindex",3],["secrettype",4]],[["result",4],["secrettreeerror",4]]]],[11,"secret_for_encryption","","Return the next RatchetSecrets that should be used for…",160,[[["ciphersuite",3],["leafindex",3],["secrettype",4]],[["secrettreeerror",4],["result",4]]]],[11,"ratchet_mut","","Returns a mutable reference to a specific SenderRatchet.…",160,[[["secrettype",4],["leafindex",3]],["senderratchet",3]]],[11,"ratchet_opt","","Returns an optional reference to a specific SenderRatchet",160,[[["secrettype",4],["leafindex",3]],[["option",4],["secrettreeerror",4],["result",4]]]],[11,"derive_down","","Derives the secrets for the child leaves in a SecretTree…",160,[[["ciphersuite",3],["nodeindex",3]]]],[0,"sender_ratchet","openmls::tree","",null,null],[3,"SenderRatchet","openmls::tree::sender_ratchet","",null,null],[12,"index","","",163,null],[12,"generation","","",163,null],[12,"past_secrets","","",163,null],[6,"RatchetSecrets","","",null,null],[17,"OUT_OF_ORDER_TOLERANCE","","",null,null],[17,"MAXIMUM_FORWARD_DISTANCE","","",null,null],[11,"new","","Creates e new SenderRatchet",163,[[["leafindex",3],["secret",3]]]],[11,"secret_for_decryption","","Gets a secret from the SenderRatchet. Returns an error if…",163,[[["ciphersuite",3]],[["result",4],["secrettreeerror",4]]]],[11,"secret_for_encryption","","Gets a secret from the SenderRatchet and ratchets forward",163,[[["ciphersuite",3]]]],[11,"ratchet_secret","","Computes the new secret",163,[[["ciphersuite",3],["secret",3]],["secret",3]]],[11,"derive_key_nonce","","Derives a key & nonce from a secret",163,[[["ciphersuite",3],["secret",3]]]],[0,"treemath","openmls::tree","",null,null],[4,"TreeMathError","openmls::tree::treemath","",null,null],[13,"LeafHasNoChildren","","Leaf nodes don\'t have children.",164,null],[13,"RootHasNoParent","","Root nodes don\'t have parents.",164,null],[13,"NotAParentNode","","Node index was not a parent node.",164,null],[5,"log2","","",null,[[]]],[5,"level","","",null,[[["nodeindex",3]]]],[5,"node_width","","",null,[[]]],[5,"root","","",null,[[["leafindex",3]],["nodeindex",3]]],[5,"left","","",null,[[["nodeindex",3]],[["result",4],["nodeindex",3],["treematherror",4]]]],[5,"right","","",null,[[["nodeindex",3],["leafindex",3]],[["result",4],["nodeindex",3],["treematherror",4]]]],[5,"parent_step","","",null,[[]]],[5,"parent","","",null,[[["nodeindex",3],["leafindex",3]],[["result",4],["nodeindex",3],["treematherror",4]]]],[5,"sibling","","",null,[[["nodeindex",3],["leafindex",3]],[["result",4],["nodeindex",3],["treematherror",4]]]],[5,"leaf_direct_path","","Direct path from a leaf node to the root. Does not include…",null,[[["leafindex",3]],[["result",4],["vec",3],["treematherror",4]]]],[5,"parent_direct_path","","Direct path from a parent node to the root. Includes the…",null,[[["nodeindex",3],["leafindex",3]],[["result",4],["vec",3],["treematherror",4]]]],[5,"copath","","Copath of a leaf. Ordered from leaf to root.",null,[[["leafindex",3]],[["result",4],["vec",3],["treematherror",4]]]],[5,"common_ancestor_index","","",null,[[["nodeindex",3]],["nodeindex",3]]],[5,"leaf_count","","Returns the number of leaves in a tree",null,[[["nodeindex",3]],["leafindex",3]]],[5,"_descendants","","Returns the list of nodes that are descendants of a given…",null,[[["nodeindex",3],["leafindex",3]],[["vec",3],["nodeindex",3]]]],[5,"_descendants_alt","","Returns the list of nodes that are descendants of a given…",null,[[["nodeindex",3],["leafindex",3]],[["vec",3],["nodeindex",3]]]],[11,"_description","","",164,[[],["string",3]]],[11,"new","openmls::tree","Create a new empty `RatchetTree`.",143,[[["keypackagebundle",3],["ciphersuite",3]],["ratchettree",3]]],[11,"new_from_public_tree","","Create a new `RatchetTree` by cloning the public tree…",143,[[["ratchettree",3]]]],[11,"new_from_nodes","","Generate a new `RatchetTree` from `Node`s with the…",143,[[["keypackagebundle",3],["ciphersuite",3]],[["ratchettree",3],["treeerror",4],["result",4]]]],[11,"private_tree_mut","","Return a mutable reference to the `PrivateTree`.",143,[[],["privatetree",3]]],[11,"private_tree","","Return a reference to the `PrivateTree`.",143,[[],["privatetree",3]]],[11,"tree_size","","",143,[[],["nodeindex",3]]],[11,"public_key_tree","","Get a vector with all nodes in the tree, containing `None`…",143,[[],[["option",4],["vec",3]]]],[11,"public_key_tree_copy","","Get a vector with a copy of all nodes in the tree,…",143,[[],[["option",4],["vec",3]]]],[11,"leaf_count","","Returns the number of leaves in a tree",143,[[],["leafindex",3]]],[11,"resolve","","Compute the resolution for a given node index. Nodes…",143,[[["hashset",3],["nodeindex",3]],[["vec",3],["nodeindex",3]]]],[11,"own_node_index","","Get the index of the own node.",143,[[],["leafindex",3]]],[11,"own_key_package","","Get a reference to the own key package.",143,[[],["keypackage",3]]],[11,"own_key_package_mut","","Get a mutable reference to the own key package.",143,[[],["keypackage",3]]],[11,"blank_member","","Blanks all the nodes in the direct path of a member",143,[[["leafindex",3]]]],[11,"free_leaves","","Returns the list of blank leaves within the tree",143,[[],[["vec",3],["leafindex",3]]]],[11,"update_path","","7.7. Update Paths",143,[[["updatepath",3],["hashset",3],["nodeindex",3],["leafindex",3]],[["result",4],["commitsecret",3],["treeerror",4]]]],[11,"replace_private_tree","","Update the private tree with the new `KeyPackageBundle`.",143,[[["keypackagebundle",3]],["commitsecret",3]]],[11,"refresh_private_tree","","Update the private tree.",143,[[["credentialbundle",3],["hashset",3],["nodeindex",3]]]],[11,"replace_private_tree_","","Replace the private tree with a new one based on the…",143,[[["hashset",3],["option",4],["keypackagebundle",3]],[["option",4],["updatepath",3]]]],[11,"encrypt_to_copath","","Encrypt the path secrets to the co path and return the…",143,[[["hashset",3],["nodeindex",3],["vec",3],["hpkepublickey",3]],[["vec",3],["treeerror",4],["result",4]]]],[11,"merge_direct_path_keys","","Merge public keys from a direct path to this tree along…",143,[[["updatepath",3],["vec",3],["nodeindex",3]],[["result",4],["treeerror",4]]]],[11,"validate_public_keys","","Validates that the `public_keys` matches the public keys…",143,[[],[["result",4],["treeerror",4]]]],[11,"merge_public_keys","","Merges `public_keys` into the tree along the `path`",143,[[],[["result",4],["treeerror",4]]]],[11,"add_nodes","","Add nodes for the provided key packages.",143,[[],["vec",3]]],[11,"apply_proposals","","Applies a list of proposals from a Commit to the tree.…",143,[[["proposalqueue",3]],[["treeerror",4],["result",4],["applyproposalsvalues",3]]]],[11,"trim_tree","","Trims the tree from the right when there are empty leaf…",143,[[]]],[11,"exclusion_list","","This function creates a `HashSet` of node indexes of the…",144,[[],[["hashset",3],["nodeindex",3]]]],[11,"new","","Create a new update path.",146,[[["vec",3],["keypackage",3],["updatepathnode",3]]]],[0,"prelude","openmls","Single place, re-exporting the most used public functions.…",null,null],[3,"MlsGroup","openmls::prelude","",null,null],[12,"ciphersuite","","",75,null],[12,"group_context","","",75,null],[12,"epoch_secrets","","",75,null],[12,"init_secret","","",75,null],[12,"secret_tree","","",75,null],[12,"tree","","",75,null],[12,"interim_transcript_hash","","",75,null],[12,"add_ratchet_tree_extension","","",75,null],[3,"ManagedGroup","","A `ManagedGroup` represents an [MlsGroup] with an easier,…",null,null],[12,"credential_bundle","","",74,null],[12,"managed_group_config","","",74,null],[12,"group","","",74,null],[12,"pending_proposals","","",74,null],[12,"own_kpbs","","",74,null],[12,"aad","","",74,null],[12,"active","","",74,null],[3,"ManagedGroupCallbacks","","Collection of callback functions that are passed to a…",null,null],[12,"validate_add","","",71,null],[12,"validate_remove","","",71,null],[12,"auto_save","","",71,null],[12,"member_added","","",71,null],[12,"member_removed","","",71,null],[12,"member_updated","","",71,null],[12,"psk_received","","",71,null],[12,"reinit_received","","",71,null],[12,"app_message_received","","",71,null],[12,"invalid_message_received","","",71,null],[12,"error_occured","","",71,null],[3,"ManagedGroupConfig","","Specifies the configuration parameters for a managed group",null,null],[12,"handshake_message_format","","Defines whether handshake messages should be encrypted",72,null],[12,"update_policy","","Defines the update policy",72,null],[12,"padding_size","","Size of padding in bytes",72,null],[12,"callbacks","","Callbacks",72,null],[3,"UpdatePolicy","","Specifies in which intervals the own leaf node should be…",null,null],[12,"maximum_time","","Maximum time before an update in seconds",73,null],[12,"maximum_sent_messages","","Maximum messages that are sent before an update in seconds",73,null],[12,"maximum_received_messages","","Maximum messages that are received before an update in…",73,null],[3,"HpkeCiphertext","","7.7. Update Paths",null,null],[12,"kem_output","","",2,null],[12,"ciphertext","","",2,null],[3,"Secret","","A struct to contain secrets. This is to provide better…",null,null],[12,"value","","",4,null],[3,"AeadKey","","",null,null],[12,"aead_mode","","",5,null],[12,"value","","",5,null],[3,"ReuseGuard","","",null,null],[12,"value","","",6,null],[3,"AeadNonce","","",null,null],[12,"value","","",7,null],[3,"Signature","","",null,null],[12,"value","","",8,null],[3,"SignaturePrivateKey","","",null,null],[12,"signature_scheme","","",9,null],[12,"value","","",9,null],[3,"SignaturePublicKey","","",null,null],[12,"signature_scheme","","",10,null],[12,"value","","",10,null],[3,"SignatureKeypair","","",null,null],[12,"signature_scheme","","",11,null],[12,"private_key","","",11,null],[12,"public_key","","",11,null],[3,"Ciphersuite","","",null,null],[12,"name","","",12,null],[12,"signature_scheme","","",12,null],[12,"hpke","","",12,null],[12,"aead","","",12,null],[12,"hash","","",12,null],[12,"hmac","","",12,null],[3,"Cursor","","",null,null],[12,"buffer","","",18,null],[12,"position","","",18,null],[3,"Certificate","","Struct containing an X509 certificate chain, as per Spec.",null,null],[12,"cert_data","","",28,null],[3,"Credential","","Struct containing MLS credential data, where the data…",null,null],[12,"credential_type","","",29,null],[12,"credential","","",29,null],[3,"BasicCredential","","",null,null],[12,"identity","","",30,null],[12,"signature_scheme","","",30,null],[12,"public_key","","",30,null],[3,"CredentialBundle","","This struct contains a credential and the corresponding…",null,null],[12,"credential","","",31,null],[12,"signature_private_key","","",31,null],[3,"CapabilitiesExtension","","",null,null],[12,"versions","","",37,null],[12,"ciphersuites","","",37,null],[12,"extensions","","",37,null],[3,"KeyIDExtension","","",null,null],[12,"key_id","","",45,null],[3,"LifetimeExtension","","The lifetime extension holds a not before and a not after…",null,null],[12,"not_before","","",46,null],[12,"not_after","","",46,null],[3,"ExtensionStruct","","Extension structAn extension has an `ExtensionType` and an…",null,null],[12,"extension_type","","",35,null],[12,"extension_data","","",35,null],[3,"KeyPackage","","",null,null],[12,"protocol_version","","",94,null],[12,"ciphersuite","","",94,null],[12,"hpke_init_key","","",94,null],[12,"credential","","",94,null],[12,"extensions","","",94,null],[12,"signature","","",94,null],[3,"KeyPackageBundle","","",null,null],[12,"key_package","","",95,null],[12,"private_key","","",95,null],[12,"leaf_secret","","",95,null],[3,"AddProposal","","",null,null],[12,"key_package","","",110,null],[3,"PreSharedKeyProposal","","Preshared Key proposal 11.1.4 struct { PreSharedKeyID psk;…",null,null],[12,"psk","","",113,null],[3,"ReInitProposal","","ReInit proposal 11.1.5 struct { opaque group_id<0..255>;…",null,null],[12,"group_id","","",114,null],[12,"version","","",114,null],[12,"ciphersuite","","",114,null],[12,"extensions","","",114,null],[3,"RemoveProposal","","",null,null],[12,"removed","","",112,null],[3,"UpdateProposal","","",null,null],[12,"key_package","","",111,null],[3,"BranchPsk","","",null,null],[12,"psk_group_id","","",136,null],[12,"psk_epoch","","",136,null],[3,"ExternalPsk","","",null,null],[12,"psk_id","","",134,null],[3,"PreSharedKeyID","","",null,null],[12,"psk_type","","",137,null],[12,"psk","","",137,null],[12,"psk_nonce","","",137,null],[3,"PreSharedKeys","","struct { PreSharedKeyID psks<0..2^16-1>; } PreSharedKeys;",null,null],[12,"psks","","",138,null],[3,"ReinitPsk","","",null,null],[12,"psk_group_id","","",135,null],[12,"psk_epoch","","",135,null],[4,"HandshakeMessageFormat","","Defines whether handshake messages (Proposals & Commits)…",null,null],[13,"Plaintext","","",81,null],[13,"Ciphertext","","",81,null],[4,"InvalidMessageError","","",null,null],[13,"InvalidCiphertext","","An invalid ciphertext was provided. The error returns the…",83,null],[13,"CommitWithInvalidProposals","","A commit contained an invalid proposal. Additional detail…",83,null],[13,"CommitError","","See `ApplyCommitError` for details",83,null],[13,"GroupError","","See `GroupError` for details",83,null],[13,"MembershipTagMismatch","","A Proposal with an invalid membership tag was received.",83,null],[4,"MLSMessage","","Unified message type",null,null],[13,"Plaintext","","An OpenMLS `MLSPlaintext`.",87,null],[13,"Ciphertext","","An OpenMLS `MLSCiphertext`.",87,null],[4,"ManagedGroupError","","",null,null],[13,"LibraryError","","An internal library error occurred. Additional detail is…",84,null],[13,"Codec","","See `CodecError` for details",84,null],[13,"Config","","See `ConfigError` for details",84,null],[13,"Group","","See `GroupError` for details",84,null],[13,"CreateCommit","","See `CreateCommitError` for details",84,null],[13,"UseAfterEviction","","See `UseAfterEviction` for details",84,null],[13,"PendingProposalsExist","","See `PendingProposalsError` for details",84,null],[13,"Exporter","","See `ExporterError` for details",84,null],[13,"EmptyInput","","Empty input. Additional detail is provided.",84,null],[4,"Removal","","This enum lists the 4 different variants of a removal,…",null,null],[13,"WeLeft","","We previously issued a RemoveProposal for ourselves and…",80,null],[13,"TheyLeft","","Another member issued a RemoveProposal for itself that was…",80,null],[13,"WeWereRemovedBy","","Another member issued a RemoveProposal for ourselves that…",80,null],[13,"TheyWereRemovedBy","","Member A issued a RemoveProposal for member B that was now…",80,null],[4,"CiphersuiteName","","",null,null],[13,"MLS10_128_DHKEMX25519_AES128GCM_SHA256_Ed25519","","",13,null],[13,"MLS10_128_DHKEMP256_AES128GCM_SHA256_P256","","",13,null],[13,"MLS10_128_DHKEMX25519_CHACHA20POLY1305_SHA256_Ed25519","","",13,null],[13,"MLS10_256_DHKEMX448_AES256GCM_SHA512_Ed448","","",13,null],[13,"MLS10_256_DHKEMP521_AES256GCM_SHA512_P521","","",13,null],[13,"MLS10_256_DHKEMX448_CHACHA20POLY1305_SHA512_Ed448","","",13,null],[4,"SignatureScheme","","SignatureScheme according to IANA TLS parameters",null,null],[13,"ECDSA_SECP256R1_SHA256","","ECDSA_SECP256R1_SHA256",14,null],[13,"ECDSA_SECP521R1_SHA512","","ECDSA_SECP521R1_SHA512",14,null],[13,"ED25519","","ED25519",14,null],[13,"ED448","","ED448",14,null],[4,"CodecError","","",null,null],[13,"EncodingError","","Error encoding.",20,null],[13,"DecodingError","","Error decoding.",20,null],[13,"Other","","Some other error occurred.",20,null],[4,"VecSize","","",null,null],[13,"VecU8","","",19,null],[13,"VecU16","","",19,null],[13,"VecU32","","",19,null],[13,"VecU64","","",19,null],[4,"CredentialError","","",null,null],[13,"ConfigError","","See `ConfigError` for details.",34,null],[13,"CryptoError","","See `CryptoError` for details.",34,null],[13,"UnsupportedCredentialType","","Unsupported credential type.",34,null],[13,"InvalidSignature","","Invalid signature.",34,null],[4,"CredentialType","","Enum for Credential Types. We only need this for…",null,null],[13,"Basic","","",32,null],[13,"X509","","",32,null],[4,"MLSCredentialType","","This enum contains the different available credentials.",null,null],[13,"Basic","","",33,null],[13,"X509","","",33,null],[4,"ExtensionType","","Extension typesIANA registrations",null,null],[13,"Reserved","","",36,null],[13,"Capabilities","","",36,null],[13,"Lifetime","","",36,null],[13,"KeyID","","",36,null],[13,"ParentHash","","",36,null],[13,"RatchetTree","","",36,null],[4,"PSKType","","enum { reserved(0), external(1), reinit(2), branch(3),…",null,null],[13,"External","","",139,null],[13,"Reinit","","",139,null],[13,"Branch","","",139,null],[4,"Psk","","",null,null],[13,"External","","",140,null],[13,"Reinit","","",140,null],[13,"Branch","","",140,null],[5,"encode_vec","","",null,[[["vecsize",4],["vec",3]],[["result",4],["codecerror",4]]]],[5,"decode_vec","","",null,[[["vecsize",4],["cursor",3]],[["result",4],["vec",3],["codecerror",4]]]],[5,"_print_tree","","",null,[[["ratchettree",3]]]],[0,"errors","","Extension errors.An `ExtensionError` is thrown when an…",null,null],[4,"ExtensionError","openmls::prelude::errors","",null,null],[13,"InvalidExtensionType","","Invalid extension type error.",38,null],[13,"Capabilities","","Capabilities extension error. See…",38,null],[13,"Lifetime","","Lifetime extension error. See `LifetimeExtensionError` for…",38,null],[13,"KeyPackageId","","Key package ID extension error. See `KeyPackageIdError`…",38,null],[13,"ParentHash","","Parent hash extension error. See `ParentHashError` for…",38,null],[13,"RatchetTree","","Ratchet tree extension error. See `RatchetTreeError` for…",38,null],[13,"CodecError","","Error decoding or encoding an extension.",38,null],[13,"ConfigError","","Configuration error. See `ConfigError` for details.",38,null],[13,"InvalidExtension","","The extension is malformed. See `InvalidExtensionError`…",38,null],[4,"LifetimeExtensionError","","",null,null],[13,"Invalid","","Invalid lifetime extensions.",39,null],[13,"Expired","","Lifetime extension is expired.",39,null],[4,"CapabilitiesExtensionError","","",null,null],[13,"Invalid","","Invalid capabilities extensions.",40,null],[13,"EmptyVersionsField","","Capabilities extension is missing a version field.",40,null],[13,"UnsupportedCiphersuite","","Capabilities contains only unsupported ciphersuites.",40,null],[4,"KeyPackageIdError","","",null,null],[13,"Invalid","","Invalid key package ID extensions.",41,null],[4,"ParentHashError","","",null,null],[13,"Invalid","","Invalid parent hash extensions.",42,null],[4,"RatchetTreeError","","",null,null],[13,"Invalid","","Invalid ratchet tree extensions.",43,null],[4,"InvalidExtensionError","","",null,null],[13,"Duplicate","","The provided extension list contains duplicate extensions.",44,null],[0,"errors","openmls::prelude","Key Package errors`KeyPackageError` are thrown on errors…",null,null],[4,"KeyPackageError","openmls::prelude::errors","",null,null],[13,"ExtensionError","","See `ExtensionError` for details.",96,null],[13,"ConfigError","","See `ConfigError` for details.",96,null],[13,"UnsupportedCiphersuite","","The requested ciphersuite is not supported.",96,null],[13,"UnknownConfigError","","An unknown configuration error occurred.",96,null],[13,"MandatoryExtensionsMissing","","A mandatory extension is missing in the key package.",96,null],[13,"InvalidLifetimeExtension","","The lifetime extension of the key package is not valid.",96,null],[13,"InvalidSignature","","The key package signature is not valid.",96,null],[13,"LibraryError","","An unknown OpenMLS library error occurred.",96,null],[13,"DuplicateExtension","","Duplicate extensions are not allowed.",96,null],[13,"NoCiphersuitesSupplied","","Creating a new key package requires at least one…",96,null],[13,"CiphersuiteMismatch","","The list of ciphersuites is not consistent with the…",96,null],[8,"Codec","openmls::prelude","",null,null],[11,"encode","openmls::codec","",21,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",21,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode_detached","","",21,[[],[["result",4],["vec",3],["codecerror",4]]]],[11,"decode_detached","","",21,[[],[["codecerror",4],["result",4]]]],[8,"Extension","openmls::prelude","ExtensionThis trait defines functions to interact with an…",null,null],[10,"new_from_bytes","","Build a new extension from a byte slice.",49,[[],[["extensionerror",4],["result",4]]]],[10,"extension_type","","Each extension has an extension type. This should be an…",49,[[],["extensiontype",4]]],[10,"to_extension_struct","","Get the extension as `ExtensionStruct` for encoding.",49,[[],["extensionstruct",3]]],[10,"as_any","","Get a generic trait object for downcasting.",49,[[],["any",8]]],[11,"to_parent_hash_extension","openmls::extensions","Get a reference to the `ParentHashExtension`. Returns an…",49,[[],[["extensionerror",4],["parenthashextension",3],["result",4]]]],[11,"to_capabilities_extension","","Get a reference to the `CapabilitiesExtension`. Returns an…",49,[[],[["extensionerror",4],["capabilitiesextension",3],["result",4]]]],[11,"to_lifetime_extension","","Get a reference to the `LifetimeExtension`. Returns an…",49,[[],[["result",4],["lifetimeextension",3],["extensionerror",4]]]],[11,"to_key_id_extension","","Get a reference to the `KeyIDExtension`. Returns an…",49,[[],[["extensionerror",4],["keyidextension",3],["result",4]]]],[11,"as_ratchet_tree_extension","","Get a reference to the `RatchetTreeExtension`. Returns an…",49,[[],[["extensionerror",4],["result",4],["ratchettreeextension",3]]]],[8,"ExtensionHelper","openmls::prelude","",null,null],[10,"clone_it","","",50,[[],[["extension",8],["box",3]]]],[11,"from","openmls::error","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","openmls::ciphersuite","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"erased_serialize","","",2,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"erased_serialize","","",4,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"erased_serialize","","",8,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"erased_serialize","","",10,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"erased_serialize","","",12,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"erased_serialize","","",13,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"erased_serialize","","",14,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","openmls::ciphersuite::errors","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","openmls::codec","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","openmls::codec::errors","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","openmls::config","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"erased_serialize","","",23,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"erased_serialize","","",25,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"erased_serialize","","",26,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","openmls::config::errors","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","openmls::credentials","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"erased_serialize","","",28,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"erased_serialize","","",29,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"erased_serialize","","",30,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"erased_serialize","","",32,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"erased_serialize","","",33,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","openmls::credentials::errors","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","openmls::extensions","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"erased_serialize","","",35,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"erased_serialize","","",36,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","openmls::extensions::capabilities_extension","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"erased_serialize","","",37,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","openmls::extensions::errors","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"to_string","","",38,[[],["string",3]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"to_string","","",39,[[],["string",3]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"to_string","","",41,[[],["string",3]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"to_string","","",42,[[],["string",3]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"to_string","","",43,[[],["string",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"to_string","","",44,[[],["string",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","openmls::extensions::key_package_id_extension","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"erased_serialize","","",45,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","openmls::extensions::life_time_extension","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"erased_serialize","","",46,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","openmls::extensions::parent_hash_extension","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"erased_serialize","","",47,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","openmls::extensions::ratchet_tree_extension","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"erased_serialize","","",48,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","openmls::framing::ciphertext","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from","openmls::framing::errors","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"to_string","","",56,[[],["string",3]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"to_string","","",57,[[],["string",3]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"to_string","","",58,[[],["string",3]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"from","openmls::framing::plaintext","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"erased_serialize","","",59,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"erased_serialize","","",60,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"erased_serialize","","",62,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"erased_serialize","","",67,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"erased_serialize","","",68,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","openmls::framing::sender","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"erased_serialize","","",69,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"erased_serialize","","",70,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","openmls::group","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"erased_serialize","","",72,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"vzip","","",73,[[]]],[11,"erased_serialize","","",73,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"erased_serialize","","",74,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"erased_serialize","","",75,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"erased_serialize","","",76,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"erased_serialize","","",77,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"erased_serialize","","",78,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"erased_serialize","","",81,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"to_string","","",82,[[],["string",3]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"to_string","","",83,[[],["string",3]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"to_string","","",84,[[],["string",3]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"to_string","","",85,[[],["string",3]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"vzip","","",85,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"to_string","","",86,[[],["string",3]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"from","openmls::group::errors","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"to_string","","",88,[[],["string",3]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"to_string","","",89,[[],["string",3]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"to_string","","",90,[[],["string",3]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"to_string","","",91,[[],["string",3]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"vzip","","",91,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"to_string","","",92,[[],["string",3]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"vzip","","",92,[[]]],[11,"from","openmls::group::managed_group::ser","",93,[[]]],[11,"into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"erased_serialize","","",93,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","openmls::key_packages","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"vzip","","",94,[[]]],[11,"erased_serialize","","",94,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"vzip","","",95,[[]]],[11,"erased_serialize","","",95,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","openmls::key_packages::errors","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"to_string","","",96,[[],["string",3]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"vzip","","",96,[[]]],[11,"from","openmls::messages","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"vzip","","",97,[[]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"vzip","","",98,[[]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"vzip","","",99,[[]]],[11,"erased_serialize","","",99,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"vzip","","",100,[[]]],[11,"erased_serialize","","",100,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"vzip","","",101,[[]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"vzip","","",102,[[]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"vzip","","",103,[[]]],[11,"from","openmls::messages::errors","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"to_string","","",104,[[],["string",3]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"vzip","","",104,[[]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"to_string","","",105,[[],["string",3]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"vzip","","",105,[[]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"to_string","","",106,[[],["string",3]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"vzip","","",106,[[]]],[11,"from","openmls::messages::proposals","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"vzip","","",107,[[]]],[11,"erased_serialize","","",107,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"vzip","","",108,[[]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"vzip","","",109,[[]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"vzip","","",110,[[]]],[11,"erased_serialize","","",110,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"vzip","","",111,[[]]],[11,"erased_serialize","","",111,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"vzip","","",112,[[]]],[11,"erased_serialize","","",112,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"vzip","","",113,[[]]],[11,"erased_serialize","","",113,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"vzip","","",114,[[]]],[11,"erased_serialize","","",114,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"vzip","","",115,[[]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"vzip","","",116,[[]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"vzip","","",117,[[]]],[11,"erased_serialize","","",117,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"vzip","","",118,[[]]],[11,"erased_serialize","","",118,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","openmls::schedule","",119,[[]]],[11,"into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"vzip","","",119,[[]]],[11,"erased_serialize","","",119,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"vzip","","",120,[[]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"vzip","","",121,[[]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"vzip","","",122,[[]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"vzip","","",123,[[]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"vzip","","",124,[[]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"vzip","","",125,[[]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"vzip","","",126,[[]]],[11,"erased_serialize","","",126,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"vzip","","",127,[[]]],[11,"erased_serialize","","",127,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"vzip","","",128,[[]]],[11,"erased_serialize","","",128,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"vzip","","",129,[[]]],[11,"erased_serialize","","",129,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"vzip","","",130,[[]]],[11,"erased_serialize","","",130,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"vzip","","",131,[[]]],[11,"erased_serialize","","",131,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"vzip","","",132,[[]]],[11,"erased_serialize","","",132,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"vzip","","",133,[[]]],[11,"erased_serialize","","",133,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","openmls::schedule::psk","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"vzip","","",134,[[]]],[11,"erased_serialize","","",134,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"vzip","","",135,[[]]],[11,"erased_serialize","","",135,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"vzip","","",136,[[]]],[11,"erased_serialize","","",136,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"vzip","","",137,[[]]],[11,"erased_serialize","","",137,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"vzip","","",138,[[]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"vzip","","",139,[[]]],[11,"erased_serialize","","",139,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"vzip","","",140,[[]]],[11,"erased_serialize","","",140,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","openmls::tree","",141,[[]]],[11,"into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"vzip","","",141,[[]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"vzip","","",142,[[]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"vzip","","",143,[[]]],[11,"erased_serialize","","",143,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"vzip","","",144,[[]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"vzip","","",145,[[]]],[11,"erased_serialize","","",145,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"vzip","","",146,[[]]],[11,"erased_serialize","","",146,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","openmls::tree::errors","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"to_string","","",147,[[],["string",3]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"vzip","","",147,[[]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"to_string","","",148,[[],["string",3]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"vzip","","",148,[[]]],[11,"from","openmls::tree::hashes","",149,[[]]],[11,"into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"vzip","","",149,[[]]],[11,"from","openmls::tree::index","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"vzip","","",150,[[]]],[11,"erased_serialize","","",150,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"vzip","","",151,[[]]],[11,"erased_serialize","","",151,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","openmls::tree::node","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"vzip","","",152,[[]]],[11,"erased_serialize","","",152,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"vzip","","",153,[[]]],[11,"erased_serialize","","",153,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"vzip","","",154,[[]]],[11,"erased_serialize","","",154,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","openmls::tree::path_keys","",155,[[]]],[11,"into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"vzip","","",155,[[]]],[11,"erased_serialize","","",155,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","openmls::tree::private_tree","",156,[[]]],[11,"into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"vzip","","",156,[[]]],[11,"erased_serialize","","",156,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"vzip","","",157,[[]]],[11,"erased_serialize","","",157,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","openmls::tree::secret_tree","",158,[[]]],[11,"into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"vzip","","",158,[[]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"vzip","","",159,[[]]],[11,"erased_serialize","","",159,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"vzip","","",160,[[]]],[11,"erased_serialize","","",160,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"to_string","","",161,[[],["string",3]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"vzip","","",161,[[]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"vzip","","",162,[[]]],[11,"from","openmls::tree::sender_ratchet","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"vzip","","",163,[[]]],[11,"erased_serialize","","",163,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"from","openmls::tree::treemath","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"to_string","","",164,[[],["string",3]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"vzip","","",164,[[]]],[11,"unsigned_payload","openmls::messages","",101,[[],[["result",4],["vec",3],["codecerror",4]]]],[11,"encode","openmls::ciphersuite","",13,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",13,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",14,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",14,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",10,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",8,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",8,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",2,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",2,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",6,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",6,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",4,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",4,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",3,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::config","",26,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",26,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::credentials","",32,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",32,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",29,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",29,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",30,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",30,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::extensions","",36,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",36,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",35,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",35,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::framing::plaintext","",59,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",59,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::framing::ciphertext","",51,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",51,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::framing::plaintext","",67,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",67,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",68,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",68,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",60,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",60,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",62,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",62,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",63,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::framing::ciphertext","",52,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",52,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",53,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",53,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",54,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",55,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",55,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::framing::plaintext","",65,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",66,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::framing::sender","",70,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",70,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",69,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",69,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::group","",76,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",76,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",77,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",77,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",78,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::key_packages","",94,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",94,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::messages","",99,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",99,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",100,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",100,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",101,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",101,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",102,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",102,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",98,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",98,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",97,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",97,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",103,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::messages::proposals","",115,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",116,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",117,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",117,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",118,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",118,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",107,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",107,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",110,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",110,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",111,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",111,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",112,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",112,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",113,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",113,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",114,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",114,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::schedule::psk","",139,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",139,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",134,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",134,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",135,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",135,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",136,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",136,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",137,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",137,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",138,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",138,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::schedule","",120,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",120,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::tree::node","",154,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",154,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",152,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",152,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",153,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",153,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::tree","",145,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",145,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",146,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",146,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::tree::secret_tree","",159,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::tree::hashes","",149,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::tree","",142,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",141,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::tree::index","",151,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::tree::secret_tree","",158,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"extension_type","openmls::extensions::capabilities_extension","",37,[[],["extensiontype",4]]],[11,"new_from_bytes","","Build a new CapabilitiesExtension from a byte slice.…",37,[[],[["extensionerror",4],["result",4]]]],[11,"to_extension_struct","","",37,[[],["extensionstruct",3]]],[11,"as_any","","",37,[[],["any",8]]],[11,"extension_type","openmls::extensions::key_package_id_extension","",45,[[],["extensiontype",4]]],[11,"new_from_bytes","","Build a new KeyIDExtension from a byte slice.",45,[[],[["extensionerror",4],["result",4]]]],[11,"to_extension_struct","","",45,[[],["extensionstruct",3]]],[11,"as_any","","",45,[[],["any",8]]],[11,"extension_type","openmls::extensions::life_time_extension","",46,[[],["extensiontype",4]]],[11,"new_from_bytes","","Build a new LifetimeExtension from a byte slice.",46,[[],[["extensionerror",4],["result",4]]]],[11,"to_extension_struct","","",46,[[],["extensionstruct",3]]],[11,"as_any","","",46,[[],["any",8]]],[11,"extension_type","openmls::extensions::parent_hash_extension","",47,[[],["extensiontype",4]]],[11,"new_from_bytes","","Build a new ParentHashExtension from a byte slice.",47,[[],[["extensionerror",4],["result",4]]]],[11,"to_extension_struct","","",47,[[],["extensionstruct",3]]],[11,"as_any","","",47,[[],["any",8]]],[11,"extension_type","openmls::extensions::ratchet_tree_extension","",48,[[],["extensiontype",4]]],[11,"new_from_bytes","","Build a new RatchetTreeExtension from a byte slice.",48,[[],[["extensionerror",4],["result",4]]]],[11,"to_extension_struct","","",48,[[],["extensionstruct",3]]],[11,"as_any","","",48,[[],["any",8]]],[11,"from","openmls::error","",0,[[["string",3]]]],[11,"from","","",0,[[]]],[11,"from","","",1,[[["vec",3]]]],[11,"from","","",1,[[]]],[11,"from","openmls::ciphersuite","",14,[[["ciphersuitename",4]]]],[11,"from","","",4,[[["vec",3]]]],[11,"from","","",4,[[]]],[11,"from","openmls::codec::errors","",20,[[["configerror",4]],["codecerror",4]]],[11,"from","openmls::config","",25,[[["persistentconfig",3]]]],[11,"from","openmls::credentials::errors","",34,[[["configerror",4]]]],[11,"from","","",34,[[["cryptoerror",4]]]],[11,"from","openmls::credentials","",29,[[["mlscredentialtype",4]]]],[11,"from","openmls::extensions::errors","",38,[[["errorstring",3]]]],[11,"from","","",38,[[["capabilitiesextensionerror",4]]]],[11,"from","","",38,[[["lifetimeextensionerror",4]]]],[11,"from","","",38,[[["keypackageiderror",4]]]],[11,"from","","",38,[[["parenthasherror",4]]]],[11,"from","","",38,[[["ratchettreeerror",4]]]],[11,"from","","",38,[[["codecerror",4]]]],[11,"from","","",38,[[["configerror",4]]]],[11,"from","","",38,[[["invalidextensionerror",4]]]],[11,"from","openmls::framing::errors","",57,[[["mlsplaintexterror",4]]]],[11,"from","","",57,[[["secrettreeerror",4]]]],[11,"from","","",57,[[["codecerror",4]]]],[11,"from","","",58,[[["codecerror",4]]]],[11,"from","","",58,[[["credentialerror",4]]]],[11,"from","openmls::framing::plaintext","",67,[[["mlsplaintextcontenttype",4]]]],[11,"from","","",60,[[["vec",3]]]],[11,"from","","",66,[[["confirmationtag",3]]]],[11,"from","openmls::group::errors","",88,[[["mlsciphertexterror",4]]]],[11,"from","","",88,[[["welcomeerror",4]]]],[11,"from","","",88,[[["applycommiterror",4]]]],[11,"from","","",88,[[["createcommiterror",4]]]],[11,"from","","",88,[[["configerror",4]]]],[11,"from","","",88,[[["exportererror",4]]]],[11,"from","","",88,[[["proposalqueueerror",4]]]],[11,"from","","",88,[[["codecerror",4]]]],[11,"from","","",89,[[["treeerror",4]]]],[11,"from","","",89,[[["parenthasherror",4]]]],[11,"from","","",89,[[["cryptoerror",4]]]],[11,"from","","",89,[[["codecerror",4]]]],[11,"from","","",90,[[["verificationerror",4]]]],[11,"from","","",90,[[["treeerror",4]]]],[11,"from","","",90,[[["codecerror",4]]]],[11,"from","openmls::group","",84,[[["errorstring",3]]]],[11,"from","","",84,[[["codecerror",4]]]],[11,"from","","",84,[[["configerror",4]]]],[11,"from","","",84,[[["grouperror",4]]]],[11,"from","","",84,[[["createcommiterror",4]]]],[11,"from","","",84,[[["useaftereviction",4]]]],[11,"from","","",84,[[["pendingproposalserror",4]]]],[11,"from","","",84,[[["exportererror",4]]]],[11,"from","","",84,[[["emptyinputerror",4]]]],[11,"from","","",83,[[["errorpayload",3]]]],[11,"from","","",83,[[["errorstring",3]]]],[11,"from","","",83,[[["applycommiterror",4]]]],[11,"from","","",83,[[["grouperror",4]]]],[11,"from","","",87,[[["mlsplaintext",3]]]],[11,"from","","",87,[[["mlsciphertext",3]]]],[11,"from","openmls::key_packages::errors","",96,[[["extensionerror",4]]]],[11,"from","","",96,[[["configerror",4]]]],[11,"from","openmls::messages::errors","",104,[[["queuedproposalerror",4]]]],[11,"from","openmls::codec::errors","",20,[[["proposalorreftypeerror",4]]]],[11,"from","openmls::messages","",100,[[["vec",3]]]],[11,"from","openmls::tree::errors","",147,[[["cryptoerror",4]]]],[11,"from","openmls::tree::index","",150,[[],["nodeindex",3]]],[11,"from","","",150,[[],["nodeindex",3]]],[11,"from","","",150,[[["leafindex",3]],["nodeindex",3]]],[11,"from","","",151,[[],["leafindex",3]]],[11,"from","","",151,[[],["leafindex",3]]],[11,"from","openmls::tree::secret_tree","",162,[[["contenttype",4]],["secrettype",4]]],[11,"from","","",162,[[["mlsplaintext",3]],["secrettype",4]]],[11,"into","openmls::tree::index","",151,[[]]],[11,"into","","",151,[[]]],[11,"clone","openmls::error","",0,[[],["errorstring",3]]],[11,"clone","","",1,[[],["errorpayload",3]]],[11,"clone","openmls::ciphersuite::errors","",15,[[],["hkdferror",4]]],[11,"clone","","",16,[[],["cryptoerror",4]]],[11,"clone","openmls::ciphersuite","",13,[[],["ciphersuitename",4]]],[11,"clone","","",14,[[],["signaturescheme",4]]],[11,"clone","","",2,[[],["hpkeciphertext",3]]],[11,"clone","","",4,[[],["secret",3]]],[11,"clone","","",6,[[],["reuseguard",3]]],[11,"clone","","",7,[[],["aeadnonce",3]]],[11,"clone","","",8,[[],["signature",3]]],[11,"clone","","",9,[[],["signatureprivatekey",3]]],[11,"clone","","",10,[[],["signaturepublickey",3]]],[11,"clone","","",11,[[],["signaturekeypair",3]]],[11,"clone","","",12,[[]]],[11,"clone","openmls::codec::errors","",20,[[],["codecerror",4]]],[11,"clone","openmls::config::errors","",27,[[],["configerror",4]]],[11,"clone","openmls::config","",23,[[],["constants",3]]],[11,"clone","","",25,[[],["config",3]]],[11,"clone","","",26,[[],["protocolversion",4]]],[11,"clone","openmls::credentials::errors","",34,[[],["credentialerror",4]]],[11,"clone","openmls::credentials","",32,[[],["credentialtype",4]]],[11,"clone","","",28,[[],["certificate",3]]],[11,"clone","","",33,[[],["mlscredentialtype",4]]],[11,"clone","","",29,[[],["credential",3]]],[11,"clone","","",30,[[],["basiccredential",3]]],[11,"clone","openmls::extensions::capabilities_extension","",37,[[],["capabilitiesextension",3]]],[11,"clone","openmls::extensions::errors","",38,[[],["extensionerror",4]]],[11,"clone","","",39,[[],["lifetimeextensionerror",4]]],[11,"clone","","",40,[[],["capabilitiesextensionerror",4]]],[11,"clone","","",41,[[],["keypackageiderror",4]]],[11,"clone","","",42,[[],["parenthasherror",4]]],[11,"clone","","",43,[[],["ratchettreeerror",4]]],[11,"clone","","",44,[[],["invalidextensionerror",4]]],[11,"clone","openmls::extensions::key_package_id_extension","",45,[[],["keyidextension",3]]],[11,"clone","openmls::extensions::life_time_extension","",46,[[],["lifetimeextension",3]]],[11,"clone","openmls::extensions::parent_hash_extension","",47,[[],["parenthashextension",3]]],[11,"clone","openmls::extensions::ratchet_tree_extension","",48,[[],["ratchettreeextension",3]]],[11,"clone","openmls::extensions","",36,[[],["extensiontype",4]]],[11,"clone","","",35,[[],["extensionstruct",3]]],[11,"clone","openmls::framing::ciphertext","",51,[[],["mlsciphertext",3]]],[11,"clone","","",52,[[],["mlssenderdata",3]]],[11,"clone","","",53,[[],["mlssenderdataaad",3]]],[11,"clone","","",54,[[],["mlsciphertextcontent",3]]],[11,"clone","","",55,[[],["mlsciphertextcontentaad",3]]],[11,"clone","openmls::framing::errors","",56,[[],["mlsplaintexterror",4]]],[11,"clone","","",57,[[],["mlsciphertexterror",4]]],[11,"clone","","",58,[[],["verificationerror",4]]],[11,"clone","openmls::framing::plaintext","",59,[[],["mlsplaintext",3]]],[11,"clone","","",67,[[],["contenttype",4]]],[11,"clone","","",68,[[],["mlsplaintextcontenttype",4]]],[11,"clone","","",60,[[],["mac",3]]],[11,"clone","","",62,[[],["membershiptag",3]]],[11,"clone","openmls::framing::sender","",70,[[],["sendertype",4]]],[11,"clone","","",69,[[],["sender",3]]],[11,"clone","openmls::group::errors","",88,[[],["grouperror",4]]],[11,"clone","","",89,[[],["welcomeerror",4]]],[11,"clone","","",90,[[],["applycommiterror",4]]],[11,"clone","","",91,[[],["createcommiterror",4]]],[11,"clone","","",92,[[],["exportererror",4]]],[11,"clone","openmls::group","",71,[[],["managedgroupcallbacks",3]]],[11,"clone","","",81,[[],["handshakemessageformat",4]]],[11,"clone","","",72,[[],["managedgroupconfig",3]]],[11,"clone","","",73,[[],["updatepolicy",3]]],[11,"clone","","",84,[[],["managedgrouperror",4]]],[11,"clone","","",82,[[],["emptyinputerror",4]]],[11,"clone","","",86,[[],["useaftereviction",4]]],[11,"clone","","",85,[[],["pendingproposalserror",4]]],[11,"clone","","",83,[[],["invalidmessageerror",4]]],[11,"clone","","",87,[[],["mlsmessage",4]]],[11,"clone","","",76,[[],["groupid",3]]],[11,"clone","","",77,[[],["groupepoch",3]]],[11,"clone","","",78,[[],["groupcontext",3]]],[11,"clone","","",79,[[],["groupconfig",3]]],[11,"clone","openmls::key_packages::errors","",96,[[],["keypackageerror",4]]],[11,"clone","openmls::key_packages","",94,[[],["keypackage",3]]],[11,"clone","openmls::messages::errors","",104,[[],["proposalqueueerror",4]]],[11,"clone","","",105,[[],["proposalorreftypeerror",4]]],[11,"clone","","",106,[[],["queuedproposalerror",4]]],[11,"clone","openmls::messages::proposals","",115,[[],["proposaltype",4]]],[11,"clone","","",116,[[],["proposalorreftype",4]]],[11,"clone","","",117,[[],["proposalorref",4]]],[11,"clone","","",118,[[],["proposal",4]]],[11,"clone","","",107,[[],["proposalreference",3]]],[11,"clone","","",108,[[],["queuedproposal",3]]],[11,"clone","","",110,[[],["addproposal",3]]],[11,"clone","","",111,[[],["updateproposal",3]]],[11,"clone","","",112,[[],["removeproposal",3]]],[11,"clone","","",113,[[],["presharedkeyproposal",3]]],[11,"clone","","",114,[[],["reinitproposal",3]]],[11,"clone","openmls::messages","",97,[[],["welcome",3]]],[11,"clone","","",98,[[],["encryptedgroupsecrets",3]]],[11,"clone","","",99,[[],["commit",3]]],[11,"clone","","",100,[[],["confirmationtag",3]]],[11,"clone","openmls::schedule::psk","",139,[[],["psktype",4]]],[11,"clone","","",134,[[],["externalpsk",3]]],[11,"clone","","",135,[[],["reinitpsk",3]]],[11,"clone","","",136,[[],["branchpsk",3]]],[11,"clone","","",140,[[],["psk",4]]],[11,"clone","","",137,[[],["presharedkeyid",3]]],[11,"clone","openmls::tree::errors","",147,[[],["treeerror",4]]],[11,"clone","","",148,[[],["parenthasherror",4]]],[11,"clone","openmls::tree::index","",150,[[],["nodeindex",3]]],[11,"clone","","",151,[[],["leafindex",3]]],[11,"clone","openmls::tree::node","",154,[[],["nodetype",4]]],[11,"clone","","",152,[[],["node",3]]],[11,"clone","","",153,[[],["parentnode",3]]],[11,"clone","openmls::tree::secret_tree","",161,[[],["secrettreeerror",4]]],[11,"clone","","",162,[[],["secrettype",4]]],[11,"clone","","",159,[[],["secrettreenode",3]]],[11,"clone","openmls::tree::sender_ratchet","",163,[[],["senderratchet",3]]],[11,"clone","openmls::tree::treemath","",164,[[],["treematherror",4]]],[11,"clone","openmls::tree","",145,[[],["updatepathnode",3]]],[11,"clone","","",146,[[],["updatepath",3]]],[11,"default","openmls::ciphersuite","",4,[[]]],[11,"default","openmls::config","",26,[[]]],[11,"default","openmls::extensions::capabilities_extension","",37,[[]]],[11,"default","openmls::extensions::key_package_id_extension","",45,[[],["keyidextension",3]]],[11,"default","openmls::extensions::life_time_extension","",46,[[]]],[11,"default","openmls::extensions::parent_hash_extension","",47,[[],["parenthashextension",3]]],[11,"default","openmls::extensions::ratchet_tree_extension","",48,[[],["ratchettreeextension",3]]],[11,"default","openmls::extensions","",36,[[]]],[11,"default","openmls::group","",71,[[],["managedgroupcallbacks",3]]],[11,"default","","",73,[[]]],[11,"default","","",79,[[]]],[11,"default","openmls::messages::proposals","",109,[[],["proposalqueue",3]]],[11,"default","openmls::tree::index","",150,[[],["nodeindex",3]]],[11,"default","","",151,[[],["leafindex",3]]],[11,"default","openmls::tree::path_keys","",155,[[],["pathkeys",3]]],[11,"default","openmls::tree::private_tree","",156,[[]]],[11,"cmp","openmls::config","",26,[[["protocolversion",4]],["ordering",4]]],[11,"cmp","openmls::extensions","",36,[[["extensiontype",4]],["ordering",4]]],[11,"cmp","","",49,[[],["ordering",4]]],[11,"cmp","openmls::tree::index","",150,[[["nodeindex",3]],["ordering",4]]],[11,"cmp","","",151,[[["leafindex",3]],["ordering",4]]],[11,"eq","openmls::error","",0,[[["errorstring",3]]]],[11,"ne","","",0,[[["errorstring",3]]]],[11,"eq","","",1,[[["errorpayload",3]]]],[11,"ne","","",1,[[["errorpayload",3]]]],[11,"eq","openmls::ciphersuite::errors","",15,[[["hkdferror",4]]]],[11,"eq","","",16,[[["cryptoerror",4]]]],[11,"eq","openmls::ciphersuite","",13,[[["ciphersuitename",4]]]],[11,"eq","","",14,[[["signaturescheme",4]]]],[11,"eq","","",2,[[["hpkeciphertext",3]]]],[11,"ne","","",2,[[["hpkeciphertext",3]]]],[11,"eq","","",7,[[["aeadnonce",3]]]],[11,"ne","","",7,[[["aeadnonce",3]]]],[11,"eq","","",8,[[["signature",3]]]],[11,"ne","","",8,[[["signature",3]]]],[11,"eq","","",12,[[["ciphersuite",3]]]],[11,"eq","","",10,[[]]],[11,"eq","openmls::codec::errors","",20,[[["codecerror",4]]]],[11,"eq","openmls::config::errors","",27,[[["configerror",4]]]],[11,"eq","openmls::config","",23,[[["constants",3]]]],[11,"ne","","",23,[[["constants",3]]]],[11,"eq","","",25,[[["config",3]]]],[11,"ne","","",25,[[["config",3]]]],[11,"eq","","",26,[[["protocolversion",4]]]],[11,"eq","openmls::credentials::errors","",34,[[["credentialerror",4]]]],[11,"ne","","",34,[[["credentialerror",4]]]],[11,"eq","openmls::credentials","",32,[[["credentialtype",4]]]],[11,"eq","","",28,[[["certificate",3]]]],[11,"ne","","",28,[[["certificate",3]]]],[11,"eq","","",33,[[["mlscredentialtype",4]]]],[11,"ne","","",33,[[["mlscredentialtype",4]]]],[11,"eq","","",29,[[["credential",3]]]],[11,"ne","","",29,[[["credential",3]]]],[11,"eq","","",30,[[]]],[11,"eq","openmls::extensions::capabilities_extension","",37,[[["capabilitiesextension",3]]]],[11,"ne","","",37,[[["capabilitiesextension",3]]]],[11,"eq","openmls::extensions::errors","",38,[[["extensionerror",4]]]],[11,"ne","","",38,[[["extensionerror",4]]]],[11,"eq","","",39,[[["lifetimeextensionerror",4]]]],[11,"eq","","",40,[[["capabilitiesextensionerror",4]]]],[11,"eq","","",41,[[["keypackageiderror",4]]]],[11,"eq","","",42,[[["parenthasherror",4]]]],[11,"eq","","",43,[[["ratchettreeerror",4]]]],[11,"eq","","",44,[[["invalidextensionerror",4]]]],[11,"eq","openmls::extensions::key_package_id_extension","",45,[[["keyidextension",3]]]],[11,"ne","","",45,[[["keyidextension",3]]]],[11,"eq","openmls::extensions::life_time_extension","",46,[[["lifetimeextension",3]]]],[11,"ne","","",46,[[["lifetimeextension",3]]]],[11,"eq","openmls::extensions::parent_hash_extension","",47,[[["parenthashextension",3]]]],[11,"ne","","",47,[[["parenthashextension",3]]]],[11,"eq","openmls::extensions::ratchet_tree_extension","",48,[[["ratchettreeextension",3]]]],[11,"ne","","",48,[[["ratchettreeextension",3]]]],[11,"eq","openmls::extensions","",36,[[["extensiontype",4]]]],[11,"eq","","",35,[[["extensionstruct",3]]]],[11,"ne","","",35,[[["extensionstruct",3]]]],[11,"eq","","",49,[[]]],[11,"eq","openmls::framing::ciphertext","",51,[[["mlsciphertext",3]]]],[11,"ne","","",51,[[["mlsciphertext",3]]]],[11,"eq","openmls::framing::errors","",56,[[["mlsplaintexterror",4]]]],[11,"eq","","",57,[[["mlsciphertexterror",4]]]],[11,"ne","","",57,[[["mlsciphertexterror",4]]]],[11,"eq","","",58,[[["verificationerror",4]]]],[11,"ne","","",58,[[["verificationerror",4]]]],[11,"eq","openmls::framing::plaintext","",59,[[["mlsplaintext",3]]]],[11,"ne","","",59,[[["mlsplaintext",3]]]],[11,"eq","","",67,[[["contenttype",4]]]],[11,"eq","","",68,[[["mlsplaintextcontenttype",4]]]],[11,"ne","","",68,[[["mlsplaintextcontenttype",4]]]],[11,"eq","","",60,[[["mac",3]]]],[11,"ne","","",60,[[["mac",3]]]],[11,"eq","","",62,[[["membershiptag",3]]]],[11,"ne","","",62,[[["membershiptag",3]]]],[11,"eq","openmls::framing::sender","",70,[[["sendertype",4]]]],[11,"eq","","",69,[[["sender",3]]]],[11,"ne","","",69,[[["sender",3]]]],[11,"eq","openmls::group::errors","",88,[[["grouperror",4]]]],[11,"ne","","",88,[[["grouperror",4]]]],[11,"eq","","",89,[[["welcomeerror",4]]]],[11,"ne","","",89,[[["welcomeerror",4]]]],[11,"eq","","",90,[[["applycommiterror",4]]]],[11,"ne","","",90,[[["applycommiterror",4]]]],[11,"eq","","",91,[[["createcommiterror",4]]]],[11,"eq","","",92,[[["exportererror",4]]]],[11,"eq","openmls::group","",71,[[]]],[11,"eq","","",81,[[["handshakemessageformat",4]]]],[11,"eq","","",72,[[["managedgroupconfig",3]]]],[11,"ne","","",72,[[["managedgroupconfig",3]]]],[11,"eq","","",73,[[["updatepolicy",3]]]],[11,"ne","","",73,[[["updatepolicy",3]]]],[11,"eq","","",84,[[["managedgrouperror",4]]]],[11,"ne","","",84,[[["managedgrouperror",4]]]],[11,"eq","","",82,[[["emptyinputerror",4]]]],[11,"eq","","",86,[[["useaftereviction",4]]]],[11,"eq","","",85,[[["pendingproposalserror",4]]]],[11,"eq","","",83,[[["invalidmessageerror",4]]]],[11,"ne","","",83,[[["invalidmessageerror",4]]]],[11,"eq","","",87,[[["mlsmessage",4]]]],[11,"ne","","",87,[[["mlsmessage",4]]]],[11,"eq","","",76,[[["groupid",3]]]],[11,"ne","","",76,[[["groupid",3]]]],[11,"eq","","",77,[[["groupepoch",3]]]],[11,"ne","","",77,[[["groupepoch",3]]]],[11,"eq","","",78,[[["groupcontext",3]]]],[11,"ne","","",78,[[["groupcontext",3]]]],[11,"eq","openmls::key_packages::errors","",96,[[["keypackageerror",4]]]],[11,"ne","","",96,[[["keypackageerror",4]]]],[11,"eq","openmls::key_packages","",94,[[["keypackage",3]]]],[11,"ne","","",94,[[["keypackage",3]]]],[11,"eq","openmls::messages::errors","",104,[[["proposalqueueerror",4]]]],[11,"ne","","",104,[[["proposalqueueerror",4]]]],[11,"eq","","",105,[[["proposalorreftypeerror",4]]]],[11,"eq","","",106,[[["queuedproposalerror",4]]]],[11,"eq","openmls::messages::proposals","",115,[[["proposaltype",4]]]],[11,"eq","","",116,[[["proposalorreftype",4]]]],[11,"eq","","",117,[[["proposalorref",4]]]],[11,"ne","","",117,[[["proposalorref",4]]]],[11,"eq","","",118,[[["proposal",4]]]],[11,"ne","","",118,[[["proposal",4]]]],[11,"eq","","",107,[[["proposalreference",3]]]],[11,"ne","","",107,[[["proposalreference",3]]]],[11,"eq","","",110,[[["addproposal",3]]]],[11,"ne","","",110,[[["addproposal",3]]]],[11,"eq","","",111,[[["updateproposal",3]]]],[11,"ne","","",111,[[["updateproposal",3]]]],[11,"eq","","",112,[[["removeproposal",3]]]],[11,"ne","","",112,[[["removeproposal",3]]]],[11,"eq","","",113,[[["presharedkeyproposal",3]]]],[11,"ne","","",113,[[["presharedkeyproposal",3]]]],[11,"eq","","",114,[[["reinitproposal",3]]]],[11,"ne","","",114,[[["reinitproposal",3]]]],[11,"eq","openmls::messages","",97,[[["welcome",3]]]],[11,"ne","","",97,[[["welcome",3]]]],[11,"eq","","",98,[[["encryptedgroupsecrets",3]]]],[11,"ne","","",98,[[["encryptedgroupsecrets",3]]]],[11,"eq","","",99,[[["commit",3]]]],[11,"ne","","",99,[[["commit",3]]]],[11,"eq","","",100,[[["confirmationtag",3]]]],[11,"ne","","",100,[[["confirmationtag",3]]]],[11,"eq","openmls::schedule::psk","",139,[[["psktype",4]]]],[11,"eq","","",134,[[["externalpsk",3]]]],[11,"ne","","",134,[[["externalpsk",3]]]],[11,"eq","","",135,[[["reinitpsk",3]]]],[11,"ne","","",135,[[["reinitpsk",3]]]],[11,"eq","","",136,[[["branchpsk",3]]]],[11,"ne","","",136,[[["branchpsk",3]]]],[11,"eq","","",140,[[["psk",4]]]],[11,"ne","","",140,[[["psk",4]]]],[11,"eq","","",137,[[["presharedkeyid",3]]]],[11,"ne","","",137,[[["presharedkeyid",3]]]],[11,"eq","openmls::tree::errors","",147,[[["treeerror",4]]]],[11,"ne","","",147,[[["treeerror",4]]]],[11,"eq","","",148,[[["parenthasherror",4]]]],[11,"eq","openmls::tree::index","",150,[[["nodeindex",3]]]],[11,"ne","","",150,[[["nodeindex",3]]]],[11,"eq","","",151,[[["leafindex",3]]]],[11,"ne","","",151,[[["leafindex",3]]]],[11,"eq","openmls::tree::node","",154,[[["nodetype",4]]]],[11,"eq","","",152,[[["node",3]]]],[11,"ne","","",152,[[["node",3]]]],[11,"eq","","",153,[[["parentnode",3]]]],[11,"ne","","",153,[[["parentnode",3]]]],[11,"eq","openmls::tree::path_keys","",155,[[["pathkeys",3]]]],[11,"ne","","",155,[[["pathkeys",3]]]],[11,"eq","openmls::tree::secret_tree","",161,[[["secrettreeerror",4]]]],[11,"eq","openmls::tree::treemath","",164,[[["treematherror",4]]]],[11,"eq","openmls::tree","",145,[[["updatepathnode",3]]]],[11,"ne","","",145,[[["updatepathnode",3]]]],[11,"eq","","",146,[[["updatepath",3]]]],[11,"ne","","",146,[[["updatepath",3]]]],[11,"partial_cmp","openmls::config","",26,[[["protocolversion",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","openmls::extensions","",36,[[["extensiontype",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",49,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","openmls::tree::index","",150,[[["nodeindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",150,[[["nodeindex",3]]]],[11,"le","","",150,[[["nodeindex",3]]]],[11,"gt","","",150,[[["nodeindex",3]]]],[11,"ge","","",150,[[["nodeindex",3]]]],[11,"partial_cmp","","",151,[[["leafindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",151,[[["leafindex",3]]]],[11,"le","","",151,[[["leafindex",3]]]],[11,"gt","","",151,[[["leafindex",3]]]],[11,"ge","","",151,[[["leafindex",3]]]],[11,"deref","openmls::config","",22,[[],["config",3]]],[11,"fmt","openmls::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::ciphersuite::errors","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::ciphersuite","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::codec::errors","",20,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::codec","",18,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::config::errors","",27,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::config","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::credentials::errors","",34,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::credentials","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::capabilities_extension","",37,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::errors","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::key_package_id_extension","",45,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::life_time_extension","",46,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::parent_hash_extension","",47,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::ratchet_tree_extension","",48,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::framing::ciphertext","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::framing::errors","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::framing::plaintext","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::framing::sender","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::group::errors","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::group","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::key_packages::errors","",96,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::key_packages","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::messages::errors","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::messages::proposals","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::messages","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::schedule::psk","",139,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","","",140,[[["formatter",3]],["result",6]]],[11,"fmt","","",137,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::schedule","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::errors","",147,[[["formatter",3]],["result",6]]],[11,"fmt","","",148,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::index","",150,[[["formatter",3]],["result",6]]],[11,"fmt","","",151,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::node","",154,[[["formatter",3]],["result",6]]],[11,"fmt","","",152,[[["formatter",3]],["result",6]]],[11,"fmt","","",153,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::path_keys","",155,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::private_tree","",156,[[["formatter",3]],["result",6]]],[11,"fmt","","",157,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::secret_tree","",161,[[["formatter",3]],["result",6]]],[11,"fmt","","",162,[[["formatter",3]],["result",6]]],[11,"fmt","","",159,[[["formatter",3]],["result",6]]],[11,"fmt","","",160,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::sender_ratchet","",163,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::treemath","",164,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",145,[[["formatter",3]],["result",6]]],[11,"fmt","","",146,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::ciphersuite::errors","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::ciphersuite","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::codec::errors","",20,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::config::errors","",27,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::credentials::errors","",34,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::errors","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::framing::errors","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::group::errors","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::group","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::key_packages::errors","",96,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::messages::errors","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::errors","",147,[[["formatter",3]],["result",6]]],[11,"fmt","","",148,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::secret_tree","",161,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::treemath","",164,[[["formatter",3]],["result",6]]],[11,"hash","openmls::ciphersuite","",13,[[]]],[11,"hash","openmls::extensions","",36,[[]]],[11,"hash","","",35,[[]]],[11,"hash","openmls::group","",76,[[]]],[11,"hash","openmls::messages::proposals","",107,[[]]],[11,"hash","openmls::tree::index","",150,[[]]],[11,"hash","","",151,[[]]],[11,"try_from","openmls::ciphersuite","",13,[[],["result",4]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_from","openmls::credentials","",32,[[],["result",4]]],[11,"try_from","openmls::extensions","Get the `ExtensionType` from a u16. Returns an error if…",36,[[],["result",4]]],[11,"try_from","openmls::framing::plaintext","",67,[[],[["codecerror",4],["result",4]]]],[11,"try_from","","",65,[[["mlsplaintext",3]],["result",4]]],[11,"try_from","","",66,[[["mlsplaintext",3]],["result",4]]],[11,"try_from","openmls::framing::sender","",70,[[],["result",4]]],[11,"try_from","openmls::messages::proposals","",115,[[],["result",4]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_from","openmls::schedule::psk","",139,[[],["result",4]]],[11,"try_from","openmls::tree::index","",151,[[["nodeindex",3]],["result",4]]],[11,"try_from","openmls::tree::node","",154,[[],["result",4]]],[11,"source","openmls::ciphersuite::errors","",15,[[],[["option",4],["error",8]]]],[11,"source","","",16,[[],[["option",4],["error",8]]]],[11,"source","openmls::codec::errors","",20,[[],[["option",4],["error",8]]]],[11,"source","openmls::config::errors","",27,[[],[["option",4],["error",8]]]],[11,"source","openmls::credentials::errors","",34,[[],[["option",4],["error",8]]]],[11,"source","openmls::extensions::errors","",38,[[],[["option",4],["error",8]]]],[11,"source","","",39,[[],[["option",4],["error",8]]]],[11,"source","","",40,[[],[["option",4],["error",8]]]],[11,"source","","",41,[[],[["option",4],["error",8]]]],[11,"source","","",42,[[],[["option",4],["error",8]]]],[11,"source","","",43,[[],[["option",4],["error",8]]]],[11,"source","","",44,[[],[["option",4],["error",8]]]],[11,"source","openmls::framing::errors","",56,[[],[["option",4],["error",8]]]],[11,"source","","",57,[[],[["option",4],["error",8]]]],[11,"source","","",58,[[],[["option",4],["error",8]]]],[11,"source","openmls::group::errors","",88,[[],[["option",4],["error",8]]]],[11,"source","","",89,[[],[["option",4],["error",8]]]],[11,"source","","",90,[[],[["option",4],["error",8]]]],[11,"source","","",91,[[],[["option",4],["error",8]]]],[11,"source","","",92,[[],[["option",4],["error",8]]]],[11,"source","openmls::group","",84,[[],[["option",4],["error",8]]]],[11,"source","","",82,[[],[["option",4],["error",8]]]],[11,"source","","",86,[[],[["option",4],["error",8]]]],[11,"source","","",85,[[],[["option",4],["error",8]]]],[11,"source","","",83,[[],[["option",4],["error",8]]]],[11,"source","openmls::key_packages::errors","",96,[[],[["option",4],["error",8]]]],[11,"source","openmls::messages::errors","",104,[[],[["option",4],["error",8]]]],[11,"source","","",105,[[],[["option",4],["error",8]]]],[11,"source","","",106,[[],[["option",4],["error",8]]]],[11,"source","openmls::tree::errors","",147,[[],[["option",4],["error",8]]]],[11,"source","","",148,[[],[["option",4],["error",8]]]],[11,"source","openmls::tree::secret_tree","",161,[[],[["option",4],["error",8]]]],[11,"source","openmls::tree::treemath","",164,[[],[["option",4],["error",8]]]],[11,"deserialize","openmls::ciphersuite","",12,[[],["result",4]]],[11,"deserialize","","",13,[[],["result",4]]],[11,"deserialize","","",14,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"deserialize","openmls::config","",23,[[],["result",4]]],[11,"deserialize","","",24,[[],["result",4]]],[11,"deserialize","","",25,[[],["result",4]]],[11,"deserialize","","",26,[[],["result",4]]],[11,"deserialize","openmls::credentials","",32,[[],["result",4]]],[11,"deserialize","","",28,[[],["result",4]]],[11,"deserialize","","",33,[[],["result",4]]],[11,"deserialize","","",29,[[],["result",4]]],[11,"deserialize","","",30,[[],["result",4]]],[11,"deserialize","openmls::extensions::capabilities_extension","",37,[[],["result",4]]],[11,"deserialize","openmls::extensions::key_package_id_extension","",45,[[],["result",4]]],[11,"deserialize","openmls::extensions::life_time_extension","",46,[[],["result",4]]],[11,"deserialize","openmls::extensions::parent_hash_extension","",47,[[],["result",4]]],[11,"deserialize","openmls::extensions::ratchet_tree_extension","",48,[[],["result",4]]],[11,"deserialize","openmls::extensions","",36,[[],["result",4]]],[11,"deserialize","","",35,[[],["result",4]]],[11,"deserialize","openmls::framing::plaintext","",59,[[],["result",4]]],[11,"deserialize","","",67,[[],["result",4]]],[11,"deserialize","","",68,[[],["result",4]]],[11,"deserialize","","",60,[[],["result",4]]],[11,"deserialize","","",62,[[],["result",4]]],[11,"deserialize","openmls::framing::sender","",70,[[],["result",4]]],[11,"deserialize","","",69,[[],["result",4]]],[11,"deserialize","openmls::group","",81,[[],["result",4]]],[11,"deserialize","","",72,[[],["result",4]]],[11,"deserialize","","",73,[[],["result",4]]],[11,"deserialize","openmls::group::managed_group::ser","",93,[[],["result",4]]],[11,"deserialize","openmls::group","",75,[[],["result",4]]],[11,"deserialize","","",76,[[],["result",4]]],[11,"deserialize","","",77,[[],["result",4]]],[11,"deserialize","","",78,[[],["result",4]]],[11,"deserialize","openmls::key_packages","",94,[[],["result",4]]],[11,"deserialize","","",95,[[],["result",4]]],[11,"deserialize","openmls::messages::proposals","",117,[[],["result",4]]],[11,"deserialize","","",118,[[],["result",4]]],[11,"deserialize","","",107,[[],["result",4]]],[11,"deserialize","","",110,[[],["result",4]]],[11,"deserialize","","",111,[[],["result",4]]],[11,"deserialize","","",112,[[],["result",4]]],[11,"deserialize","","",113,[[],["result",4]]],[11,"deserialize","","",114,[[],["result",4]]],[11,"deserialize","openmls::messages","",99,[[],["result",4]]],[11,"deserialize","","",100,[[],["result",4]]],[11,"deserialize","openmls::schedule::psk","",139,[[],["result",4]]],[11,"deserialize","","",134,[[],["result",4]]],[11,"deserialize","","",135,[[],["result",4]]],[11,"deserialize","","",136,[[],["result",4]]],[11,"deserialize","","",140,[[],["result",4]]],[11,"deserialize","","",137,[[],["result",4]]],[11,"deserialize","openmls::schedule","",119,[[],["result",4]]],[11,"deserialize","","",126,[[],["result",4]]],[11,"deserialize","","",127,[[],["result",4]]],[11,"deserialize","","",128,[[],["result",4]]],[11,"deserialize","","",129,[[],["result",4]]],[11,"deserialize","","",130,[[],["result",4]]],[11,"deserialize","","",131,[[],["result",4]]],[11,"deserialize","","",132,[[],["result",4]]],[11,"deserialize","","",133,[[],["result",4]]],[11,"deserialize","openmls::tree::index","",150,[[],["result",4]]],[11,"deserialize","","",151,[[],["result",4]]],[11,"deserialize","openmls::tree::node","",154,[[],["result",4]]],[11,"deserialize","","",152,[[],["result",4]]],[11,"deserialize","","",153,[[],["result",4]]],[11,"deserialize","openmls::tree::path_keys","",155,[[],["result",4]]],[11,"deserialize","openmls::tree::private_tree","",156,[[],["result",4]]],[11,"deserialize","","",157,[[],["result",4]]],[11,"deserialize","openmls::tree::secret_tree","",159,[[],["result",4]]],[11,"deserialize","","",160,[[],["result",4]]],[11,"deserialize","openmls::tree::sender_ratchet","",163,[[],["result",4]]],[11,"deserialize","openmls::tree","",143,[[],["result",4]]],[11,"deserialize","","",145,[[],["result",4]]],[11,"deserialize","","",146,[[],["result",4]]],[11,"serialize","openmls::ciphersuite","",12,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"serialize","","",14,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","openmls::config","",23,[[],["result",4]]],[11,"serialize","","",25,[[],["result",4]]],[11,"serialize","","",26,[[],["result",4]]],[11,"serialize","openmls::credentials","",32,[[],["result",4]]],[11,"serialize","","",28,[[],["result",4]]],[11,"serialize","","",33,[[],["result",4]]],[11,"serialize","","",29,[[],["result",4]]],[11,"serialize","","",30,[[],["result",4]]],[11,"serialize","openmls::extensions::capabilities_extension","",37,[[],["result",4]]],[11,"serialize","openmls::extensions::key_package_id_extension","",45,[[],["result",4]]],[11,"serialize","openmls::extensions::life_time_extension","",46,[[],["result",4]]],[11,"serialize","openmls::extensions::parent_hash_extension","",47,[[],["result",4]]],[11,"serialize","openmls::extensions::ratchet_tree_extension","",48,[[],["result",4]]],[11,"serialize","openmls::extensions","",36,[[],["result",4]]],[11,"serialize","","",35,[[],["result",4]]],[11,"serialize","","",49,[[],["result",4]]],[11,"serialize","","",49,[[],["result",4]]],[11,"serialize","","",49,[[],["result",4]]],[11,"serialize","","",49,[[],["result",4]]],[11,"serialize","openmls::framing::plaintext","",59,[[],["result",4]]],[11,"serialize","","",67,[[],["result",4]]],[11,"serialize","","",68,[[],["result",4]]],[11,"serialize","","",60,[[],["result",4]]],[11,"serialize","","",62,[[],["result",4]]],[11,"serialize","openmls::framing::sender","",70,[[],["result",4]]],[11,"serialize","","",69,[[],["result",4]]],[11,"serialize","openmls::group","",81,[[],["result",4]]],[11,"serialize","","",72,[[],["result",4]]],[11,"serialize","","",73,[[],["result",4]]],[11,"serialize","openmls::group::managed_group::ser","",93,[[],["result",4]]],[11,"serialize","openmls::group","",74,[[],["result",4]]],[11,"serialize","","",75,[[],["result",4]]],[11,"serialize","","",76,[[],["result",4]]],[11,"serialize","","",77,[[],["result",4]]],[11,"serialize","","",78,[[],["result",4]]],[11,"serialize","openmls::key_packages","",94,[[],["result",4]]],[11,"serialize","","",95,[[],["result",4]]],[11,"serialize","openmls::messages::proposals","",117,[[],["result",4]]],[11,"serialize","","",118,[[],["result",4]]],[11,"serialize","","",107,[[],["result",4]]],[11,"serialize","","",110,[[],["result",4]]],[11,"serialize","","",111,[[],["result",4]]],[11,"serialize","","",112,[[],["result",4]]],[11,"serialize","","",113,[[],["result",4]]],[11,"serialize","","",114,[[],["result",4]]],[11,"serialize","openmls::messages","",99,[[],["result",4]]],[11,"serialize","","",100,[[],["result",4]]],[11,"serialize","openmls::schedule::psk","",139,[[],["result",4]]],[11,"serialize","","",134,[[],["result",4]]],[11,"serialize","","",135,[[],["result",4]]],[11,"serialize","","",136,[[],["result",4]]],[11,"serialize","","",140,[[],["result",4]]],[11,"serialize","","",137,[[],["result",4]]],[11,"serialize","openmls::schedule","",119,[[],["result",4]]],[11,"serialize","","",126,[[],["result",4]]],[11,"serialize","","",127,[[],["result",4]]],[11,"serialize","","",128,[[],["result",4]]],[11,"serialize","","",129,[[],["result",4]]],[11,"serialize","","",130,[[],["result",4]]],[11,"serialize","","",131,[[],["result",4]]],[11,"serialize","","",132,[[],["result",4]]],[11,"serialize","","",133,[[],["result",4]]],[11,"serialize","openmls::tree::index","",150,[[],["result",4]]],[11,"serialize","","",151,[[],["result",4]]],[11,"serialize","openmls::tree::node","",154,[[],["result",4]]],[11,"serialize","","",152,[[],["result",4]]],[11,"serialize","","",153,[[],["result",4]]],[11,"serialize","openmls::tree::path_keys","",155,[[],["result",4]]],[11,"serialize","openmls::tree::private_tree","",156,[[],["result",4]]],[11,"serialize","","",157,[[],["result",4]]],[11,"serialize","openmls::tree::secret_tree","",159,[[],["result",4]]],[11,"serialize","","",160,[[],["result",4]]],[11,"serialize","openmls::tree::sender_ratchet","",163,[[],["result",4]]],[11,"serialize","openmls::tree","",143,[[],["result",4]]],[11,"serialize","","",145,[[],["result",4]]],[11,"serialize","","",146,[[],["result",4]]],[11,"initialize","openmls::config","",22,[[]]],[11,"derive_exported_secret","openmls::schedule","Derive a `Secret` from the exporter secret. We return…",126,[[["ciphersuite",3],["groupcontext",3]],["vec",3]]]],"p":[[3,"ErrorString"],[3,"ErrorPayload"],[3,"HpkeCiphertext"],[3,"KdfLabel"],[3,"Secret"],[3,"AeadKey"],[3,"ReuseGuard"],[3,"AeadNonce"],[3,"Signature"],[3,"SignaturePrivateKey"],[3,"SignaturePublicKey"],[3,"SignatureKeypair"],[3,"Ciphersuite"],[4,"CiphersuiteName"],[4,"SignatureScheme"],[4,"HKDFError"],[4,"CryptoError"],[8,"Signable"],[3,"Cursor"],[4,"VecSize"],[4,"CodecError"],[8,"Codec"],[3,"CONFIG"],[3,"Constants"],[3,"PersistentConfig"],[3,"Config"],[4,"ProtocolVersion"],[4,"ConfigError"],[3,"Certificate"],[3,"Credential"],[3,"BasicCredential"],[3,"CredentialBundle"],[4,"CredentialType"],[4,"MLSCredentialType"],[4,"CredentialError"],[3,"ExtensionStruct"],[4,"ExtensionType"],[3,"CapabilitiesExtension"],[4,"ExtensionError"],[4,"LifetimeExtensionError"],[4,"CapabilitiesExtensionError"],[4,"KeyPackageIdError"],[4,"ParentHashError"],[4,"RatchetTreeError"],[4,"InvalidExtensionError"],[3,"KeyIDExtension"],[3,"LifetimeExtension"],[3,"ParentHashExtension"],[3,"RatchetTreeExtension"],[8,"Extension"],[8,"ExtensionHelper"],[3,"MLSCiphertext"],[3,"MLSSenderData"],[3,"MLSSenderDataAAD"],[3,"MLSCiphertextContent"],[3,"MLSCiphertextContentAAD"],[4,"MLSPlaintextError"],[4,"MLSCiphertextError"],[4,"VerificationError"],[3,"MLSPlaintext"],[3,"Mac"],[3,"MLSPlaintextTBMPayload"],[3,"MembershipTag"],[3,"MLSPlaintextTBS"],[3,"MLSPlaintextTBSPayload"],[3,"MLSPlaintextCommitContent"],[3,"MLSPlaintextCommitAuthData"],[4,"ContentType"],[4,"MLSPlaintextContentType"],[3,"Sender"],[4,"SenderType"],[3,"ManagedGroupCallbacks"],[3,"ManagedGroupConfig"],[3,"UpdatePolicy"],[3,"ManagedGroup"],[3,"MlsGroup"],[3,"GroupId"],[3,"GroupEpoch"],[3,"GroupContext"],[3,"GroupConfig"],[4,"Removal"],[4,"HandshakeMessageFormat"],[4,"EmptyInputError"],[4,"InvalidMessageError"],[4,"ManagedGroupError"],[4,"PendingProposalsError"],[4,"UseAfterEviction"],[4,"MLSMessage"],[4,"GroupError"],[4,"WelcomeError"],[4,"ApplyCommitError"],[4,"CreateCommitError"],[4,"ExporterError"],[3,"SerializedManagedGroup"],[3,"KeyPackage"],[3,"KeyPackageBundle"],[4,"KeyPackageError"],[3,"Welcome"],[3,"EncryptedGroupSecrets"],[3,"Commit"],[3,"ConfirmationTag"],[3,"GroupInfo"],[3,"PathSecret"],[3,"GroupSecrets"],[4,"ProposalQueueError"],[4,"ProposalOrRefTypeError"],[4,"QueuedProposalError"],[3,"ProposalReference"],[3,"QueuedProposal"],[3,"ProposalQueue"],[3,"AddProposal"],[3,"UpdateProposal"],[3,"RemoveProposal"],[3,"PreSharedKeyProposal"],[3,"ReInitProposal"],[4,"ProposalType"],[4,"ProposalOrRefType"],[4,"ProposalOrRef"],[4,"Proposal"],[3,"InitSecret"],[3,"JoinerSecret"],[3,"PlaintextSecret"],[3,"IntermediateSecret"],[3,"WelcomeSecret"],[3,"EpochSecret"],[3,"EncryptionSecret"],[3,"ExporterSecret"],[3,"AuthenticationSecret"],[3,"ExternalSecret"],[3,"ConfirmationKey"],[3,"MembershipKey"],[3,"ResumptionSecret"],[3,"SenderDataSecret"],[3,"EpochSecrets"],[3,"ExternalPsk"],[3,"ReinitPsk"],[3,"BranchPsk"],[3,"PreSharedKeyID"],[3,"PreSharedKeys"],[4,"PSKType"],[4,"Psk"],[3,"LeafNodeHashInput"],[3,"ParentNodeTreeHashInput"],[3,"RatchetTree"],[3,"ApplyProposalsValues"],[3,"UpdatePathNode"],[3,"UpdatePath"],[4,"TreeError"],[4,"ParentHashError"],[3,"ParentHashInput"],[3,"NodeIndex"],[3,"LeafIndex"],[3,"Node"],[3,"ParentNode"],[4,"NodeType"],[3,"PathKeys"],[3,"CommitSecret"],[3,"PrivateTree"],[3,"TreeContext"],[3,"SecretTreeNode"],[3,"SecretTree"],[4,"SecretTreeError"],[4,"SecretType"],[3,"SenderRatchet"],[4,"TreeMathError"]]},\
"test_macros":{"doc":"","i":[[3,"TestInput","test_macros","",null,null],[12,"test_name","","",0,null],[12,"body","","",0,null],[5,"impl_ciphersuite_tests","","",null,[[["testinput",3],["tokenstream",3]],[["tokenstream",3],["result",6]]]],[14,"ctest","","",null,null],[14,"ctest_panic","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"parse","","",0,[[["parsestream",6]],["result",6]]]],"p":[[3,"TestInput"]]},\
"tls_codec":{"doc":"TLS CodecThis crate implements the TLS codec as defined in…","i":[[24,"TlsDeserialize","tls_codec","",null,null],[24,"TlsSerialize","","",null,null],[3,"TlsVecU16","","",null,null],[12,"vec","","",0,null],[3,"TlsVecU32","","",null,null],[12,"vec","","",1,null],[3,"TlsVecU8","","",null,null],[12,"vec","","",2,null],[3,"Cursor","","The `Cursor` is a helper used to read byte slices when…",null,null],[12,"bytes","","",3,null],[12,"position","","",3,null],[4,"Error","","Errors that are thrown by this crate.",null,null],[13,"EncodingError","","An error occurred during encoding.",4,null],[13,"InvalidVectorLength","","The length of a vector is invalid.",4,null],[13,"InvalidInput","","Invalid input when trying to decode a primitive integer.",4,null],[13,"DecodingError","","An error occurred during decoding.",4,null],[0,"arrays","","Implement the TLS codec for some byte arrays.",null,null],[0,"hpke","","TLS Codec for HPKE primitives",null,null],[0,"primitives","","Codec implementations for unsigned integer primitives.",null,null],[0,"tls_vec","","A vector with a length field for TLS serialisation. Use…",null,null],[3,"TlsVecU8","tls_codec::tls_vec","",null,null],[12,"vec","","",2,null],[3,"TlsVecU16","","",null,null],[12,"vec","","",0,null],[3,"TlsVecU32","","",null,null],[12,"vec","","",1,null],[11,"new","tls_codec","Create a new `TlsVec` from a Rust Vec.",2,[[["vec",3]]]],[11,"from_slice","","Create a new `TlsVec` from a slice.",2,[[]]],[11,"as_slice","","Get a slice to the raw vector.",2,[[]]],[11,"to_vec","","Get a copy of the underlying vector.",2,[[],["vec",3]]],[11,"push","","Add an element to this.",2,[[]]],[11,"pop","","Remove the last element.",2,[[],["option",4]]],[11,"new","","Create a new `TlsVec` from a Rust Vec.",0,[[["vec",3]]]],[11,"from_slice","","Create a new `TlsVec` from a slice.",0,[[]]],[11,"as_slice","","Get a slice to the raw vector.",0,[[]]],[11,"to_vec","","Get a copy of the underlying vector.",0,[[],["vec",3]]],[11,"push","","Add an element to this.",0,[[]]],[11,"pop","","Remove the last element.",0,[[],["option",4]]],[11,"new","","Create a new `TlsVec` from a Rust Vec.",1,[[["vec",3]]]],[11,"from_slice","","Create a new `TlsVec` from a slice.",1,[[]]],[11,"as_slice","","Get a slice to the raw vector.",1,[[]]],[11,"to_vec","","Get a copy of the underlying vector.",1,[[],["vec",3]]],[11,"push","","Add an element to this.",1,[[]]],[11,"pop","","Remove the last element.",1,[[],["option",4]]],[8,"Serialize","","The `Serialize` trait provides functions to serialize a…",null,null],[10,"tls_serialize","","",5,[[["vec",3]],[["result",4],["error",4]]]],[11,"tls_serialize_detached","","",5,[[],[["error",4],["result",4],["vec",3]]]],[8,"Deserialize","","The `Deserialize` trait provides functions to deserialize…",null,null],[10,"tls_deserialize","","",6,[[["cursor",3]],[["error",4],["result",4]]]],[11,"tls_deserialize_detached","","",6,[[],[["error",4],["result",4]]]],[11,"new","","Create a new `Cursor` from a byte slice. This function…",3,[[],["cursor",3]]],[11,"read","","",3,[[],[["result",4],["error",4]]]],[11,"sub_cursor","","",3,[[],[["error",4],["result",4],["cursor",3]]]],[11,"is_empty","","",3,[[]]],[11,"has_more","","",3,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"tls_serialize","","",2,[[["vec",3]],[["result",4],["error",4]]]],[11,"tls_serialize","","",0,[[["vec",3]],[["result",4],["error",4]]]],[11,"tls_serialize","","",1,[[["vec",3]],[["result",4],["error",4]]]],[11,"tls_deserialize","","",2,[[["cursor",3]],[["error",4],["result",4]]]],[11,"tls_deserialize","","",0,[[["cursor",3]],[["error",4],["result",4]]]],[11,"tls_deserialize","","",1,[[["cursor",3]],[["error",4],["result",4]]]],[11,"from","","",4,[[["tryfromsliceerror",3]]]],[11,"from","","",2,[[["vec",3]]]],[11,"from","","",2,[[]]],[11,"from","","",0,[[["vec",3]]]],[11,"from","","",0,[[]]],[11,"from","","",1,[[["vec",3]]]],[11,"from","","",1,[[]]],[11,"from","","",4,[[["tryfrominterror",3]]]],[11,"from","","",4,[[["infallible",4]]]],[11,"clone","","",2,[[],["tlsvecu8",3]]],[11,"clone","","",0,[[],["tlsvecu16",3]]],[11,"clone","","",1,[[],["tlsvecu32",3]]],[11,"clone","","",4,[[],["error",4]]],[11,"default","","",2,[[]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"eq","","",2,[[["tlsvecu8",3]]]],[11,"ne","","",2,[[["tlsvecu8",3]]]],[11,"eq","","",0,[[["tlsvecu16",3]]]],[11,"ne","","",0,[[["tlsvecu16",3]]]],[11,"eq","","",1,[[["tlsvecu32",3]]]],[11,"ne","","",1,[[["tlsvecu32",3]]]],[11,"eq","","",4,[[["error",4]]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]]],"p":[[3,"TlsVecU16"],[3,"TlsVecU32"],[3,"TlsVecU8"],[3,"Cursor"],[4,"Error"],[8,"Serialize"],[8,"Deserialize"]]},\
"tls_codec_derive":{"doc":"","i":[[5,"impl_serialize","tls_codec_derive","",null,[[["deriveinput",3]],[["tokenstream",3],["result",6]]]],[5,"impl_deserialize","","",null,[[["deriveinput",3]],[["tokenstream",3],["result",6]]]],[24,"TlsSerialize","","",null,null],[24,"TlsDeserialize","","",null,null]],"p":[]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);