var searchIndex = JSON.parse('{\
"openmls":{"doc":"OpenMLSHigh-level APISee ManagedGroup","i":[[0,"utils","openmls","",null,null],[5,"randombytes","openmls::utils","",null,[[],["vec",3]]],[5,"random_u32","","",null,[[]]],[5,"random_u64","","",null,[[]]],[5,"zero","","",null,[[],["vec",3]]],[5,"_bytes_to_hex","","",null,[[],["string",3]]],[5,"_print_tree","","",null,[[["ratchettree",3]]]],[0,"error","openmls","OpenMLS ErrorsEach module has their own errors it is …",null,null],[3,"ErrorString","openmls::error","A wrapper struct for an error string. This can be used …",null,null],[12,"0","","",0,null],[11,"_description","","",0,[[],["string",3]]],[3,"ErrorPayload","","A wrapper struct for an arbitrary error payload as byte …",null,null],[12,"0","","",1,null],[11,"_description","","",1,[[],["string",3]]],[0,"test_util","openmls","Test utilities",null,null],[5,"write","openmls::test_util","",null,[[]]],[5,"read","","",null,[[],["deserializeowned",8]]],[5,"bytes_to_hex","","Convert <code>bytes</code> to a hex string.",null,[[],["string",3]]],[5,"hex_to_bytes","","Convert a hex string to a byte vector.",null,[[],["vec",3]]],[5,"hex_to_bytes_option","","Convert a hex string to a byte vector. If the input is …",null,[[["string",3],["option",4]],["vec",3]]],[0,"ciphersuite","openmls","Ciphersuites for MLS",null,null],[0,"ciphersuites","openmls::ciphersuite","",null,null],[5,"hash_from_suite","openmls::ciphersuite::ciphersuites","",null,[[["ciphersuitename",4]],["digestmode",4]]],[5,"aead_from_suite","","",null,[[["ciphersuitename",4]],["aeadmode",4]]],[5,"kem_from_suite","","",null,[[["ciphersuitename",4]],[["configerror",4],["result",4],["hpkekemmode",4]]]],[5,"kdf_from_suite","","",null,[[["ciphersuitename",4]],["hmacmode",4]]],[5,"hpke_kdf_from_suite","","",null,[[["ciphersuitename",4]],["hpkekdfmode",4]]],[5,"hpke_aead_from_suite","","",null,[[["ciphersuitename",4]],["hpkeaeadmode",4]]],[0,"codec","openmls::ciphersuite","Codec implementations for the ciphersuites. Provides …",null,null],[0,"errors","","Crypto errorsThis file defines a set of errors thrown by …",null,null],[4,"HKDFError","openmls::ciphersuite::errors","",null,null],[13,"InvalidLength","","The HKDF output is empty.",2,null],[11,"_description","","",2,[[],["string",3]]],[4,"CryptoError","","",null,null],[13,"CryptoLibraryError","","Unrecoverable error in the crypto library.",3,null],[13,"HpkeDecryptionError","","Error while decrypting an HPKE ciphertext.",3,null],[13,"UnsupportedSignatureScheme","","This SignatureScheme is not supported.",3,null],[11,"_description","","",3,[[],["string",3]]],[0,"signable","openmls::ciphersuite","",null,null],[8,"Signable","openmls::ciphersuite::signable","The <code>Signable</code> trait is implemented by all struct that are …",null,null],[10,"unsigned_payload","","",4,[[],[["vec",3],["codecerror",4],["result",4]]]],[11,"sign","","Sign the payload with the given <code>id</code>.",4,[[["credentialbundle",3]],["signature",3]]],[11,"verify","","Verifies the payload against the given <code>credential</code> and …",4,[[["signature",3],["credential",3]],[["credentialerror",4],["result",4]]]],[0,"ser","openmls::ciphersuite","",null,null],[17,"NONCE_BYTES","","",null,null],[17,"REUSE_GUARD_BYTES","","",null,null],[4,"CiphersuiteName","","",null,null],[13,"MLS10_128_DHKEMX25519_AES128GCM_SHA256_Ed25519","","",5,null],[13,"MLS10_128_DHKEMP256_AES128GCM_SHA256_P256","","",5,null],[13,"MLS10_128_DHKEMX25519_CHACHA20POLY1305_SHA256_Ed25519","","",5,null],[13,"MLS10_256_DHKEMX448_AES256GCM_SHA512_Ed448","","",5,null],[13,"MLS10_256_DHKEMP521_AES256GCM_SHA512_P521","","",5,null],[13,"MLS10_256_DHKEMX448_CHACHA20POLY1305_SHA512_Ed448","","",5,null],[4,"SignatureScheme","","SignatureScheme according to IANA TLS parameters",null,null],[13,"ECDSA_SECP256R1_SHA256","","ECDSA_SECP256R1_SHA256",6,null],[13,"ECDSA_SECP521R1_SHA512","","ECDSA_SECP521R1_SHA512",6,null],[13,"ED25519","","ED25519",6,null],[13,"ED448","","ED448",6,null],[11,"new_keypair","","Create a new signature key pair and return it.",6,[[],[["cryptoerror",4],["result",4],["signaturekeypair",3]]]],[3,"HpkeCiphertext","","7.7. Update Paths",null,null],[12,"kem_output","","",7,null],[12,"ciphertext","","",7,null],[3,"KdfLabel","","<code>KdfLabel</code> is later serialized and used in the <code>label</code> field …",null,null],[12,"length","","",8,null],[12,"label","","",8,null],[12,"context","","",8,null],[11,"serialized_label","","",8,[[],["vec",3]]],[3,"Secret","","A struct to contain secrets. This is to provide better …",null,null],[12,"value","","",9,null],[11,"random","","Randomly sample a fresh <code>Secret</code>.",9,[[]]],[11,"kdf_expand_label","","Expand a <code>Secret</code> to a new <code>Secret</code> of length <code>length</code> …",9,[[["ciphersuite",3]],["secret",3]]],[11,"derive_secret","","Derive a new <code>Secret</code> from the this one by expanding it …",9,[[["ciphersuite",3]],["secret",3]]],[11,"to_bytes","","Returns the inner bytes of a secret",9,[[]]],[7,"EMPTY_SECRET","","",null,null],[3,"AeadKey","","",null,null],[12,"aead_mode","","",10,null],[12,"value","","",10,null],[12,"mac_len","","",10,null],[3,"ReuseGuard","","",null,null],[12,"value","","",11,null],[11,"from_random","","Samples a fresh reuse guard uniformly at random.",11,[[]]],[3,"AeadNonce","","",null,null],[12,"value","","",12,null],[3,"Signature","","",null,null],[12,"value","","",13,null],[3,"SignaturePrivateKey","","",null,null],[12,"signature_scheme","","",14,null],[12,"value","","",14,null],[3,"SignaturePublicKey","","",null,null],[12,"signature_scheme","","",15,null],[12,"value","","",15,null],[3,"SignatureKeypair","","",null,null],[12,"signature_scheme","","",16,null],[12,"private_key","","",16,null],[12,"public_key","","",16,null],[3,"Ciphersuite","","",null,null],[12,"name","","",17,null],[12,"signature_scheme","","",17,null],[12,"hpke","","",17,null],[12,"aead","","",17,null],[12,"hash","","",17,null],[12,"hmac","","",17,null],[11,"new","","Create a new ciphersuite from the given <code>name</code>.",17,[[["ciphersuitename",4]],[["configerror",4],["result",4]]]],[11,"signature_scheme","","Get the signature scheme of this ciphersuite.",17,[[],["signaturescheme",4]]],[11,"name","","Get the name of this ciphersuite.",17,[[],["ciphersuitename",4]]],[11,"hash","","Hash <code>payload</code> and return the digest.",17,[[],["vec",3]]],[11,"hash_length","","Get the length of the used hash algorithm.",17,[[]]],[11,"mac","","HMAC-Hash(salt, IKM). For all supported ciphersuites this …",17,[[["secret",3]],["vec",3]]],[11,"mac_length","","Get the length of the AEAD tag.",17,[[]]],[11,"hkdf_extract","","HKDF extract.",17,[[["secret",3],["option",4]],["secret",3]]],[11,"hkdf_expand","","HKDF expand",17,[[["secret",3]],[["secret",3],["hkdferror",4],["result",4]]]],[11,"aead_key_length","","Returns the key size of the used AEAD.",17,[[]]],[11,"aead_nonce_length","","Returns the length of the nonce in the AEAD.",17,[[]]],[11,"hpke_seal","","HPKE single-shot encryption of <code>ptxt</code> to <code>pk_r</code>, using <code>info</code> …",17,[[["hpkepublickey",3]],["hpkeciphertext",3]]],[11,"hpke_seal_secret","","HPKE single-shot encryption specifically to seal a Secret …",17,[[["hpkepublickey",3],["secret",3]],["hpkeciphertext",3]]],[11,"hpke_open","","HPKE single-shot decryption of <code>input</code> with <code>sk_r</code>, using <code>info</code>…",17,[[["hpkeciphertext",3],["hpkeprivatekey",3]],[["vec",3],["result",4],["cryptoerror",4]]]],[11,"derive_hpke_keypair","","Derive a new HPKE keypair from a given Secret.",17,[[["secret",3]],["hpkekeypair",3]]],[11,"from_secret","","Create an <code>AeadKey</code> from a <code>Secret</code>. TODO: This function …",10,[[["secret",3],["ciphersuite",3]]]],[11,"as_slice","","Get a slice to the key value.",10,[[]]],[11,"aead_seal","","Encrypt a payload under the AeadKey given a nonce.",10,[[["aeadnonce",3]],[["result",4],["vec",3],["aeaderror",4]]]],[11,"aead_open","","AEAD decrypt <code>ciphertext</code> with <code>key</code>, <code>aad</code>, and <code>nonce</code>.",10,[[["aeadnonce",3]],[["result",4],["vec",3],["aeaderror",4]]]],[11,"from_secret","","Create an <code>AeadNonce</code> from a <code>Secret</code>. TODO: This function …",12,[[["secret",3]]]],[11,"from_random","","Generate a new random nonce.",12,[[]]],[11,"as_slice","","Get a slice to the nonce value.",12,[[]]],[11,"xor_with_reuse_guard","","Xor the first bytes of the nonce with the reuse_guard.",12,[[["reuseguard",3]]]],[11,"new_empty","","",13,[[],["signature",3]]],[11,"sign","","Sign the <code>payload</code> byte slice with this signature key. …",16,[[],[["signatureerror",4],["result",4],["signature",3]]]],[11,"verify","","Verify a <code>Signature</code> on the <code>payload</code> byte slice with the key …",16,[[["signature",3]],[["result",4],["signatureerror",4]]]],[11,"into_tuple","","Get the private and public key objects",16,[[]]],[11,"new","","",16,[[["signaturescheme",4]],[["cryptoerror",4],["result",4],["signaturekeypair",3]]]],[11,"new","","Create a new signature public key from raw key bytes.",15,[[["vec",3],["signaturescheme",4]],[["result",4],["signatureerror",4]]]],[11,"verify","","Verify a <code>Signature</code> on the <code>payload</code> byte slice with the key …",15,[[["signature",3]],[["result",4],["signatureerror",4]]]],[11,"sign","","Sign the <code>payload</code> byte slice with this signature key. …",14,[[],[["signatureerror",4],["result",4],["signature",3]]]],[0,"codec","openmls","",null,null],[0,"errors","openmls::codec","",null,null],[4,"CodecError","openmls::codec::errors","",null,null],[13,"EncodingError","","Error encoding.",18,null],[13,"DecodingError","","Error decoding.",18,null],[13,"Other","","Some other error occurred.",18,null],[11,"_description","","",18,[[],["string",3]]],[4,"VecSize","openmls::codec","",null,null],[13,"VecU8","","",19,null],[13,"VecU16","","",19,null],[13,"VecU32","","",19,null],[13,"VecU64","","",19,null],[3,"Cursor","","",null,null],[12,"buffer","","",20,null],[12,"position","","",20,null],[11,"new","","",20,[[],["cursor",3]]],[11,"consume","","",20,[[],[["codecerror",4],["result",4]]]],[11,"sub_cursor","","",20,[[],[["codecerror",4],["cursor",3],["result",4]]]],[11,"is_empty","","",20,[[]]],[11,"has_more","","",20,[[]]],[11,"raw","","Get a slice of the underlying raw buffer.",20,[[]]],[8,"Codec","","",null,null],[11,"encode","","",21,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",21,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode_detached","","",21,[[],[["vec",3],["codecerror",4],["result",4]]]],[11,"decode_detached","","",21,[[],[["codecerror",4],["result",4]]]],[5,"encode_vec","","",null,[[["vecsize",4],["vec",3]],[["result",4],["codecerror",4]]]],[5,"decode_vec","","",null,[[["cursor",3],["vecsize",4]],[["vec",3],["codecerror",4],["result",4]]]],[0,"config","openmls","This config contains all structs, enums and functions to …",null,null],[0,"codec","openmls::config","",null,null],[0,"errors","","Config errorsA <code>ConfigError</code> is thrown when either the …",null,null],[4,"ConfigError","openmls::config::errors","",null,null],[13,"InvalidConfig","","Invalid configuration.",22,null],[13,"UnsupportedMlsVersion","","MLS version is not supported by this configuration.",22,null],[13,"UnsupportedCiphersuite","","Ciphersuite is not supported by this configuration.",22,null],[13,"UnsupportedSignatureScheme","","Signature scheme is not supported by this configuration.",22,null],[11,"_description","","",22,[[],["string",3]]],[17,"DEFAULT_KEY_PACKAGE_LIFETIME","openmls::config","This value is used as the default lifetime of <code>KeyPackage</code>s …",null,null],[17,"DEFAULT_KEY_PACKAGE_LIFETIME_MARGIN","","This value is used as the default amount of time (in …",null,null],[17,"SUPPORTED_CIPHERSUITE_NAMES","","Supported ciphersuites TODO #13: This should come from …",null,null],[3,"CONFIG","","",null,null],[12,"__private_field","","",23,null],[3,"Constants","","Constants that are used throughout the library.",null,null],[12,"default_key_package_lifetime","","The default lifetime of a key package in seconds.",24,null],[12,"key_package_lifetime_margin","","The amount of time (in seconds) the lifetime of a …",24,null],[3,"PersistentConfig","","The configuration we use for the library (<code>Config</code>) is not …",null,null],[12,"protocol_versions","","",25,null],[12,"ciphersuites","","",25,null],[12,"extensions","","",25,null],[12,"constants","","",25,null],[3,"Config","","OpenMLS ConfigurationThis is the global configuration for …",null,null],[12,"protocol_versions","","",26,null],[12,"ciphersuites","","",26,null],[12,"extensions","","",26,null],[12,"constants","","",26,null],[11,"supported_extensions","","Get a list of the supported extension types.",26,[[]]],[11,"supported_ciphersuites","","Get a list of the supported cipher suites.",26,[[]]],[11,"supported_ciphersuite_names","","Get a list of the supported cipher suites names.",26,[[]]],[11,"supported_versions","","Get a list of the supported protocol versions.",26,[[]]],[11,"ciphersuite","","Get the ciphersuite of the given name.",26,[[["ciphersuitename",4]],[["configerror",4],["result",4],["ciphersuite",3]]]],[11,"default_key_package_lifetime","","Get the default <code>KeyPackage</code> lifetime (in seconds).",26,[[]]],[11,"key_package_lifetime_margin","","Get the margin in which <code>KeyPackage</code> lifetimes are already …",26,[[]]],[4,"ProtocolVersion","","Protocol VersionKey Packages",null,null],[13,"Reserved","","",27,null],[13,"Mls10","","",27,null],[11,"from","","Convert an integer to the corresponding protocol version.",27,[[],[["protocolversion",4],["configerror",4],["result",4]]]],[11,"is_supported","openmls::ciphersuite","Returns <code>true</code> if the ciphersuite is supported in the …",5,[[]]],[0,"credentials","openmls","",null,null],[0,"codec","openmls::credentials","",null,null],[0,"errors","","",null,null],[4,"CredentialError","openmls::credentials::errors","",null,null],[13,"ConfigError","","See <code>ConfigError</code> for details.",28,null],[13,"CryptoError","","See <code>CryptoError</code> for details.",28,null],[13,"CodecError","","See <code>CodecError</code> for details.",28,null],[13,"UnsupportedCredentialType","","Unsupported credential type.",28,null],[13,"InvalidSignature","","Invalid signature.",28,null],[13,"SignatureError","","Error while signing.",28,null],[11,"_description","","",28,[[],["string",3]]],[4,"CredentialType","openmls::credentials","Enum for Credential Types. We only need this for …",null,null],[13,"Basic","","",29,null],[13,"X509","","",29,null],[3,"Certificate","","Struct containing an X509 certificate chain, as per Spec.",null,null],[12,"cert_data","","",30,null],[4,"MLSCredentialType","","This enum contains the different available credentials.",null,null],[13,"Basic","","",31,null],[13,"X509","","",31,null],[3,"Credential","","Struct containing MLS credential data, where the data …",null,null],[12,"credential_type","","",32,null],[12,"credential","","",32,null],[11,"verify","","Verify a signature of a given payload against the public …",32,[[["signature",3]],[["credentialerror",4],["result",4]]]],[11,"identity","","Get the identity of a given credential.",32,[[],["vec",3]]],[11,"signature_scheme","","Get the signature scheme used by the credential.",32,[[],["signaturescheme",4]]],[11,"signature_key","","Get the public key contained in the credential.",32,[[],["signaturepublickey",3]]],[3,"BasicCredential","","",null,null],[12,"identity","","",33,null],[12,"signature_scheme","","",33,null],[12,"public_key","","",33,null],[11,"verify","","",33,[[["signature",3]],[["credentialerror",4],["result",4]]]],[3,"CredentialBundle","","This struct contains a credential and the corresponding …",null,null],[12,"credential","","",34,null],[12,"signature_private_key","","",34,null],[11,"new","","Create a new <code>CredentialBundle</code> of the given credential …",34,[[["vec",3],["credentialtype",4],["signaturescheme",4]],[["credentialerror",4],["result",4]]]],[11,"credential","","",34,[[],["credential",3]]],[11,"sign","","Sign a <code>msg</code> using the private key of the credential bundle.",34,[[],[["signatureerror",4],["result",4],["signature",3]]]],[0,"extensions","openmls","",null,null],[0,"capabilities_extension","openmls::extensions","Capabilities ExtensionKey Package Extension",null,null],[3,"CapabilitiesExtension","openmls::extensions::capabilities_extension","",null,null],[12,"versions","","",35,null],[12,"ciphersuites","","",35,null],[12,"extensions","","",35,null],[11,"new","","Create a new capabilities extension with the given …",35,[[["option",4],["option",4],["option",4]]]],[11,"versions","","Get a reference to the list of versions in this extension.",35,[[]]],[11,"ciphersuites","","Get a reference to the list of cipher suites in this …",35,[[]]],[11,"extensions","","Get a reference to the list of supported extensions.",35,[[]]],[5,"__init16518203259712514104","","",null,[[]]],[7,"__init16518203259712514104___rust_ctor___ctor","","",null,null],[0,"errors","openmls::extensions","Extension errors.An <code>ExtensionError</code> is thrown when an …",null,null],[4,"ExtensionError","openmls::extensions::errors","",null,null],[13,"InvalidExtensionType","","Invalid extension type error.",36,null],[13,"Capabilities","","Capabilities extension error. See …",36,null],[13,"Lifetime","","Lifetime extension error. See <code>LifetimeExtensionError</code> for …",36,null],[13,"KeyPackageId","","Key package ID extension error. See <code>KeyPackageIdError</code> for …",36,null],[13,"ParentHash","","Parent hash extension error. See <code>ParentHashError</code> for …",36,null],[13,"RatchetTree","","Ratchet tree extension error. See <code>RatchetTreeError</code> for …",36,null],[13,"CodecError","","Error decoding or encoding an extension.",36,null],[13,"ConfigError","","Configuration error. See <code>ConfigError</code> for details.",36,null],[13,"InvalidExtension","","The extension is malformed. See <code>InvalidExtensionError</code> for …",36,null],[11,"_description","","",36,[[],["string",3]]],[4,"LifetimeExtensionError","","",null,null],[13,"Invalid","","Invalid lifetime extensions.",37,null],[13,"Expired","","Lifetime extension is expired.",37,null],[11,"_description","","",37,[[],["string",3]]],[4,"CapabilitiesExtensionError","","",null,null],[13,"Invalid","","Invalid capabilities extensions.",38,null],[13,"EmptyVersionsField","","Capabilities extension is missing a version field.",38,null],[13,"UnsupportedCiphersuite","","Capabilities contains only unsupported ciphersuites.",38,null],[11,"_description","","",38,[[],["string",3]]],[4,"KeyPackageIdError","","",null,null],[13,"Invalid","","Invalid key package ID extensions.",39,null],[11,"_description","","",39,[[],["string",3]]],[4,"ParentHashError","","",null,null],[13,"Invalid","","Invalid parent hash extensions.",40,null],[11,"_description","","",40,[[],["string",3]]],[4,"RatchetTreeError","","",null,null],[13,"Invalid","","Invalid ratchet tree extensions.",41,null],[11,"_description","","",41,[[],["string",3]]],[4,"InvalidExtensionError","","",null,null],[13,"Duplicate","","The provided extension list contains duplicate extensions.",42,null],[11,"_description","","",42,[[],["string",3]]],[0,"key_package_id_extension","openmls::extensions","KeyPackage IdentifiersKey Package Extension",null,null],[3,"KeyIDExtension","openmls::extensions::key_package_id_extension","",null,null],[12,"key_id","","",43,null],[11,"new","","Create a new key identifier extension from a byte slice.",43,[[]]],[11,"as_slice","","Get the value of the key id as byte slice.",43,[[]]],[5,"__init10090422225418277350","","",null,[[]]],[7,"__init10090422225418277350___rust_ctor___ctor","","",null,null],[0,"life_time_extension","openmls::extensions","Life time extensionKeyPackage Extension",null,null],[3,"LifetimeExtension","openmls::extensions::life_time_extension","The lifetime extension holds a not before and a not after …",null,null],[12,"not_before","","",44,null],[12,"not_after","","",44,null],[11,"new","","Create a new lifetime extensions with lifetime <code>t</code> (in …",44,[[]]],[11,"is_valid","","Returns true if this lifetime is valid.",44,[[]]],[5,"__init6011765713567273734","","",null,[[]]],[7,"__init6011765713567273734___rust_ctor___ctor","","",null,null],[0,"parent_hash_extension","openmls::extensions","Parent hash extensionKeyPackage Extension",null,null],[3,"ParentHashExtension","openmls::extensions::parent_hash_extension","",null,null],[12,"parent_hash","","",45,null],[11,"new","","",45,[[]]],[11,"parent_hash","","Get a reference to the parent hash value.",45,[[]]],[5,"__init8216850123135685403","","",null,[[]]],[7,"__init8216850123135685403___rust_ctor___ctor","","",null,null],[0,"ratchet_tree_extension","openmls::extensions","Ratchet tree extensionGroupInfo Extension",null,null],[3,"RatchetTreeExtension","openmls::extensions::ratchet_tree_extension","",null,null],[12,"tree","","",46,null],[11,"new","","Build a new extension from a vector of <code>Node</code>s.",46,[[["vec",3],["option",4]]]],[11,"into_vector","","",46,[[],[["vec",3],["option",4]]]],[5,"__init16993038184397398079","","",null,[[]]],[7,"__init16993038184397398079___rust_ctor___ctor","","",null,null],[4,"ExtensionType","openmls::extensions","Extension typesIANA registrations",null,null],[13,"Reserved","","",47,null],[13,"Capabilities","","",47,null],[13,"Lifetime","","",47,null],[13,"KeyID","","",47,null],[13,"ParentHash","","",47,null],[13,"RatchetTree","","",47,null],[3,"ExtensionStruct","","Extension structAn extension has an <code>ExtensionType</code> and an …",null,null],[12,"extension_type","","",48,null],[12,"extension_data","","",48,null],[11,"new","","Build a new <code>ExtensionStruct</code>.",48,[[["vec",3],["extensiontype",4]]]],[11,"_extension_data","","Get the type of this extension struct.",48,[[]]],[5,"from_bytes","","Build a new extension of the given type from a byte slice.",null,[[["extensiontype",4]],[["extensionerror",4],["result",4],["box",3]]]],[5,"encode_extensions","","Encode extensions with TLS encoding. This is used …",null,[[["vec",3]],[["result",4],["codecerror",4]]]],[5,"extensions_vec_from_cursor","","Read a list of extensions from a <code>Cursor</code> into a vector of …",null,[[["cursor",3]],[["vec",3],["codecerror",4],["result",4]]]],[8,"Extension","","ExtensionThis trait defines functions to interact with an …",null,null],[10,"new_from_bytes","","Build a new extension from a byte slice.",49,[[],[["result",4],["extensionerror",4]]]],[10,"extension_type","","Each extension has an extension type. This should be an …",49,[[],["extensiontype",4]]],[10,"to_extension_struct","","Get the extension as <code>ExtensionStruct</code> for encoding.",49,[[],["extensionstruct",3]]],[10,"as_any","","Get a generic trait object for downcasting.",49,[[],["any",8]]],[11,"to_parent_hash_extension","","Get a reference to the <code>ParentHashExtension</code>. Returns an …",49,[[],[["result",4],["extensionerror",4],["parenthashextension",3]]]],[11,"to_capabilities_extension","","Get a reference to the <code>CapabilitiesExtension</code>. Returns an …",49,[[],[["capabilitiesextension",3],["result",4],["extensionerror",4]]]],[11,"to_lifetime_extension","","Get a reference to the <code>LifetimeExtension</code>. Returns an …",49,[[],[["extensionerror",4],["result",4],["lifetimeextension",3]]]],[11,"to_key_id_extension","","Get a reference to the <code>KeyIDExtension</code>. Returns an …",49,[[],[["extensionerror",4],["result",4],["keyidextension",3]]]],[11,"as_ratchet_tree_extension","","Get a reference to the <code>RatchetTreeExtension</code>. Returns an …",49,[[],[["ratchettreeextension",3],["extensionerror",4],["result",4]]]],[17,"_Extension_registry","","",null,null],[8,"ExtensionHelper","","",null,null],[10,"clone_it","","",50,[[],[["extension",8],["box",3]]]],[0,"framing","openmls","",null,null],[0,"ciphertext","openmls::framing","",null,null],[3,"MLSCiphertext","openmls::framing::ciphertext","<code>MLSCiphertext</code> is the framing struct for an encrypted …",null,null],[12,"group_id","","",51,null],[12,"epoch","","",51,null],[12,"content_type","","",51,null],[12,"authenticated_data","","",51,null],[12,"encrypted_sender_data","","",51,null],[12,"ciphertext","","",51,null],[11,"try_from_plaintext","","Try to create a new <code>MLSCiphertext</code> from an <code>MLSPlaintext</code>",51,[[["leafindex",3],["epochsecrets",3],["groupcontext",3],["mlsplaintext",3],["secrettree",3],["ciphersuite",3]],[["mlsciphertexterror",4],["result",4],["mlsciphertext",3]]]],[11,"to_plaintext","","",51,[[["secrettree",3],["ciphersuite",3],["epochsecrets",3]],[["result",4],["mlsplaintext",3],["mlsciphertexterror",4]]]],[11,"is_handshake_message","","Returns <code>true</code> if this is a handshake message and <code>false</code> …",51,[[]]],[11,"encode_padded_ciphertext_content_detached","","Encodes the <code>MLSCiphertextContent</code> struct with padding",51,[[["mlsplaintext",3]],[["vec",3],["codecerror",4],["result",4]]]],[3,"MLSSenderData","","",null,null],[12,"sender","","",52,null],[12,"generation","","",52,null],[12,"reuse_guard","","",52,null],[11,"new","","",52,[[["leafindex",3],["reuseguard",3]]]],[3,"MLSSenderDataAAD","","",null,null],[12,"group_id","","",53,null],[12,"epoch","","",53,null],[12,"content_type","","",53,null],[11,"new","","",53,[[["groupepoch",3],["contenttype",4],["groupid",3]]]],[3,"MLSCiphertextContent","","",null,null],[12,"content","","",54,null],[12,"signature","","",54,null],[12,"confirmation_tag","","",54,null],[12,"padding","","",54,null],[3,"MLSCiphertextContentAAD","","",null,null],[12,"group_id","","",55,null],[12,"epoch","","",55,null],[12,"content_type","","",55,null],[12,"authenticated_data","","",55,null],[0,"codec","openmls::framing","",null,null],[11,"decode","openmls::framing::ciphertext","",54,[[["cursor",3],["contenttype",4]],[["codecerror",4],["result",4]]]],[0,"errors","openmls::framing","Framing errors.<code>MLSPlaintextError</code> and <code>MLSCiphertextError</code> …",null,null],[4,"MLSPlaintextError","openmls::framing::errors","",null,null],[13,"NotAnApplicationMessage","","The MLSPlaintext message is not an application message.",56,null],[13,"UnknownSender","","Sender is not part of the group",56,null],[13,"InvalidSignature","","The MLSPlaintext signature is invalid",56,null],[13,"InvalidMembershipTag","","The MLSPlaintext membership tag is invalid",56,null],[11,"_description","","",56,[[],["string",3]]],[4,"MLSCiphertextError","","",null,null],[13,"PlaintextError","","MLSPlaintext error",57,null],[13,"SecretTreeError","","SecretTree error",57,null],[13,"CodecError","","Codec error",57,null],[13,"InvalidContentType","","The MLSCiphertext has an invalid content type.",57,null],[13,"GenerationOutOfBound","","Couldn\'t find a ratcheting secret for the given sender …",57,null],[13,"EncryptionError","","An error occured while encrypting.",57,null],[13,"DecryptionError","","An error occured while decrypting.",57,null],[11,"_description","","",57,[[],["string",3]]],[4,"VerificationError","","",null,null],[13,"CodecError","","Codec error",58,null],[13,"CredentialError","","Credential error",58,null],[13,"MissingMembershipTag","","The MLSPlaintext membership tag is missing",58,null],[13,"InvalidMembershipTag","","The MLSPlaintext membership tag is invalid",58,null],[11,"_description","","",58,[[],["string",3]]],[0,"plaintext","openmls::framing","",null,null],[3,"MLSPlaintext","openmls::framing::plaintext","<code>MLSPlaintext</code> is a framing structure for MLS messages. It …",null,null],[12,"group_id","","",59,null],[12,"epoch","","",59,null],[12,"sender","","",59,null],[12,"authenticated_data","","",59,null],[12,"content_type","","",59,null],[12,"content","","",59,null],[12,"signature","","",59,null],[12,"confirmation_tag","","",59,null],[12,"membership_tag","","",59,null],[11,"new_from_member","","This constructor builds a new <code>MLSPlaintext</code> from the …",59,[[["credentialbundle",3],["leafindex",3],["mlsplaintextcontenttype",4],["groupcontext",3]],[["codecerror",4],["result",4]]]],[11,"new_from_proposal_member","","This constructor builds an <code>MLSPlaintext</code> containing a …",59,[[["credentialbundle",3],["leafindex",3],["membershipkey",3],["groupcontext",3],["ciphersuite",3],["proposal",4]],[["codecerror",4],["result",4]]]],[11,"new_from_application","","This constructor builds an <code>MLSPlaintext</code> containing an …",59,[[["credentialbundle",3],["leafindex",3],["groupcontext",3],["ciphersuite",3],["membershipkey",3]],[["codecerror",4],["result",4]]]],[11,"content","","Returns a reference to the <code>content</code> field.",59,[[],["mlsplaintextcontenttype",4]]],[11,"sender","","Get the sender leaf index of this message.",59,[[],["leafindex",3]]],[11,"sign_from_external","","Sign this <code>MLSPlaintext</code>. This populates the <code>signature</code> …",59,[[["credentialbundle",3]]]],[11,"sign_from_member","","Sign this <code>MLSPlaintext</code> and add a membership tag. This …",59,[[["credentialbundle",3]],[["result",4],["codecerror",4]]]],[11,"add_membership_tag","","Adds a membership tag to this <code>MLSPlaintext</code>. The …",59,[[["ciphersuite",3],["membershipkey",3]],[["result",4],["codecerror",4]]]],[11,"verify_signature","","Verify the signature of an <code>MLSPlaintext</code> sent from an …",59,[[["credential",3]],[["result",4],["verificationerror",4]]]],[11,"verify_membership_tag","","Verify the membership tag of an <code>MLSPlaintext</code> sent from …",59,[[["ciphersuite",3],["membershipkey",3]],[["result",4],["verificationerror",4]]]],[11,"verify_from_member","","Verify the signature and the membership tag of an …",59,[[["membershipkey",3],["ciphersuite",3],["credential",3]],[["result",4],["verificationerror",4]]]],[11,"as_application_message","","Tries to extract an application messages from an …",59,[[],[["result",4],["mlsplaintexterror",4]]]],[11,"is_handshake_message","","Returns <code>true</code> if this is a handshake message and <code>false</code> …",59,[[]]],[11,"is_proposal","","Returns <code>true</code> if this is a proposal message and <code>false</code> …",59,[[]]],[11,"group_id","","Get the group ID.",59,[[],["groupid",3]]],[11,"epoch","","Get the group ID.",59,[[],["groupepoch",3]]],[4,"ContentType","","",null,null],[13,"Application","","",60,null],[13,"Proposal","","",60,null],[13,"Commit","","",60,null],[11,"is_handshake_message","","",60,[[]]],[11,"is_proposal","","",60,[[]]],[4,"MLSPlaintextContentType","","",null,null],[13,"Application","","",61,null],[13,"Proposal","","",61,null],[13,"Commit","","",61,null],[11,"to_proposal","","",61,[[],["proposal",4]]],[3,"Mac","","9.2 Message framing",null,null],[12,"mac_value","","",62,null],[3,"MLSPlaintextTBMPayload","","9.1 Content Authentication",null,null],[12,"tbs_payload","","",63,null],[12,"signature","","",63,null],[12,"confirmation_tag","","",63,null],[11,"new","","",63,[[["mlsplaintexttbs",3],["signature",3],["option",4]],[["codecerror",4],["result",4]]]],[11,"into_bytes","","",63,[[],[["vec",3],["codecerror",4],["result",4]]]],[3,"MembershipTag","","Wrapper around a <code>Mac</code> used for type safety.",null,null],[12,"0","","",64,null],[11,"new","","Create a new membership tag.",64,[[["mlsplaintexttbmpayload",3],["ciphersuite",3],["membershipkey",3]],[["codecerror",4],["result",4]]]],[3,"MLSPlaintextTBS","","",null,null],[12,"serialized_context_option","","",65,null],[12,"group_id","","",65,null],[12,"epoch","","",65,null],[12,"sender","","",65,null],[12,"authenticated_data","","",65,null],[12,"content_type","","",65,null],[12,"payload","","",65,null],[11,"new_from","","",65,[[["mlsplaintext",3],["option",4]]]],[11,"sign","","",65,[[["credentialbundle",3]],[["codecerror",4],["result",4],["signature",3]]]],[11,"verify","","",65,[[["signature",3],["credential",3]],[["result",4],["verificationerror",4]]]],[3,"MLSPlaintextTBSPayload","","",null,null],[12,"payload","","",66,null],[11,"new_from_mls_plaintext","","",66,[[["mlsplaintext",3],["option",4]]]],[11,"sign","","",66,[[["credentialbundle",3]],["signature",3]]],[3,"MLSPlaintextCommitContent","","",null,null],[12,"group_id","","",67,null],[12,"epoch","","",67,null],[12,"sender","","",67,null],[12,"content_type","","",67,null],[12,"commit","","",67,null],[12,"signature","","",67,null],[3,"MLSPlaintextCommitAuthData","","",null,null],[12,"confirmation_tag","","",68,null],[0,"sender","openmls::framing","Section  9. Message Framing",null,null],[4,"SenderType","openmls::framing::sender","",null,null],[13,"Member","","",69,null],[13,"Preconfigured","","",69,null],[13,"NewMember","","",69,null],[3,"Sender","","",null,null],[12,"sender_type","","",70,null],[12,"sender","","",70,null],[11,"is_member","","",70,[[]]],[11,"to_leaf_index","","",70,[[],["leafindex",3]]],[11,"member","","",70,[[["leafindex",3]]]],[0,"group","openmls","Group APIs for MLS",null,null],[0,"codec","openmls::group","",null,null],[0,"errors","","MLS Group errors<code>WelcomeError</code>, <code>ApplyCommitError</code>, …",null,null],[4,"GroupError","openmls::group::errors","",null,null],[13,"MLSCiphertextError","","See <code>MLSCiphertextError</code> for details.",71,null],[13,"WelcomeError","","See <code>WelcomeError</code> for details.",71,null],[13,"ApplyCommitError","","See <code>ApplyCommitError</code> for details.",71,null],[13,"CreateCommitError","","See <code>CreateCommitError</code> for details.",71,null],[13,"ConfigError","","See <code>ConfigError</code> for details.",71,null],[13,"ExporterError","","See <code>ExporterError</code> for details.",71,null],[13,"ProposalQueueError","","See <code>ProposalQueueError</code> for details.",71,null],[13,"CodecError","","Codec error occurred.",71,null],[13,"KeyScheduleError","","An error occurred in the key schedule.",71,null],[13,"MathError","","An error occurred during a tree math operation.",71,null],[13,"PskError","","A PSK error occured.",71,null],[13,"InitSecretNotFound","","Missing init secret when creating commit.",71,null],[11,"_description","","",71,[[],["string",3]]],[4,"WelcomeError","","",null,null],[13,"InvalidRatchetTree","","Invalid ratchet tree in Welcome message.",72,null],[13,"ParentHashMismatch","","The parent hash verification failed.",72,null],[13,"GroupSecretsDecryptionFailure","","Unable to decrypt the EncryptedGroupSecrets.",72,null],[13,"CodecError","","Codec error occurred.",72,null],[13,"KeyScheduleError","","An error occurred in the key schedule.",72,null],[13,"PskError","","A PSK error occured.",72,null],[13,"CiphersuiteMismatch","","Ciphersuites in the Welcome message and the corresponding …",72,null],[13,"JoinerSecretNotFound","","No joiner secret found in the Welcome message.",72,null],[13,"MissingRatchetTree","","No ratchet tree available to build initial tree after …",72,null],[13,"TreeHashMismatch","","The computed tree hash does not match the one in the …",72,null],[13,"ConfirmationTagMismatch","","The computed confirmation tag does not match the expected …",72,null],[13,"InvalidGroupInfoSignature","","The signature on the GroupInfo is not valid.",72,null],[13,"GroupInfoDecryptionFailure","","Unable to decrypt the GroupInfo.",72,null],[13,"DuplicateRatchetTreeExtension","","Found a duplicate ratchet tree extension in the Welcome …",72,null],[13,"UnsupportedMlsVersion","","The Welcome message uses an unsupported MLS version.",72,null],[13,"UnknownError","","An unknown error occurred.",72,null],[11,"_description","","",72,[[],["string",3]]],[4,"ApplyCommitError","","",null,null],[13,"PlaintextSignatureFailure","","MLSPlaintext signature is invalid.",73,null],[13,"DecryptionFailure","","A matching EncryptedPathSecret failed to decrypt.",73,null],[13,"CodecError","","Codec error occurred.",73,null],[13,"KeyScheduleError","","An error occurred in the key schedule.",73,null],[13,"PskError","","A PSK error occured.",73,null],[13,"EpochMismatch","","Couldn\'t apply Commit. The epoch of the group context and …",73,null],[13,"WrongPlaintextContentType","","apply_commit_internal was called with an MLSPlaintext …",73,null],[13,"SelfRemoved","","Tried to apply a commit to a group we are not a part of.",73,null],[13,"PathKeyPackageVerificationFailure","","Unable to verify the key package signature.",73,null],[13,"NoParentHashExtension","","Parent hash extension is missing.",73,null],[13,"ParentHashMismatch","","Parent hash values don\'t match.",73,null],[13,"RequiredPathNotFound","","Unable to determine commit path.",73,null],[13,"ConfirmationTagMissing","","Confirmation Tag is missing.",73,null],[13,"ConfirmationTagMismatch","","Confirmation tag is invalid.",73,null],[13,"MissingOwnKeyPackage","","No key package provided to apply own commit.",73,null],[13,"MissingProposal","","The proposal queue is missing a proposal for the commit.",73,null],[13,"OwnKeyNotFound","","Missing own key to apply proposal.",73,null],[13,"InitSecretNotFound","","Missing init secret to apply proposal.",73,null],[11,"_description","","",73,[[],["string",3]]],[4,"CreateCommitError","","",null,null],[13,"CannotRemoveSelf","","The Commit tried to remove self from the group. This is …",74,null],[13,"OwnKeyNotFound","","Couldn\'t create the commit because there\'s no key to …",74,null],[11,"_description","","",74,[[],["string",3]]],[4,"ExporterError","","",null,null],[13,"KeyLengthTooLong","","The requested key length is not supported (too large).",75,null],[11,"_description","","",75,[[],["string",3]]],[4,"PskError","","",null,null],[13,"PskSecretError","","An error occured when concatenating the PSKs.",76,null],[13,"NoPskFetcherProvided","","A PSK was needed, but no PSK fetcher function was …",76,null],[13,"PskIdNotFound","","No PSK was found for PSK ID.",76,null],[11,"_description","","",76,[[],["string",3]]],[0,"group_context","openmls::group","",null,null],[0,"managed_group","","",null,null],[0,"callbacks","openmls::group::managed_group","",null,null],[3,"ManagedGroupCallbacks","openmls::group::managed_group::callbacks","Collection of callback functions that are passed to a …",null,null],[12,"validate_add","","",77,null],[12,"validate_remove","","",77,null],[12,"auto_save","","",77,null],[11,"new","","",77,[[]]],[11,"with_validate_add","","Validator function for AddProposals",77,[[["validateadd",6]]]],[11,"with_validate_remove","","Validator function for RemoveProposals",77,[[["validateremove",6]]]],[11,"with_auto_save","","Auto-save callback",77,[[["autosave",6]]]],[6,"ValidateAdd","","",null,null],[6,"ValidateRemove","","",null,null],[6,"AutoSave","","",null,null],[0,"config","openmls::group::managed_group","",null,null],[4,"HandshakeMessageFormat","openmls::group::managed_group::config","Defines whether handshake messages (Proposals & Commits) …",null,null],[13,"Plaintext","","",78,null],[13,"Ciphertext","","",78,null],[3,"ManagedGroupConfig","","Specifies the configuration parameters for a managed group",null,null],[12,"handshake_message_format","","Defines whether handshake messages should be encrypted",79,null],[12,"update_policy","","Defines the update policy",79,null],[12,"padding_size","","Size of padding in bytes",79,null],[12,"number_of_resumption_secrets","","Number of resumtion secrets to keep",79,null],[12,"callbacks","","Callbacks",79,null],[11,"new","","",79,[[["updatepolicy",3],["managedgroupcallbacks",3],["handshakemessageformat",4]]]],[11,"padding_size","","",79,[[]]],[11,"callbacks","","",79,[[],["managedgroupcallbacks",3]]],[11,"set_callbacks","","",79,[[["managedgroupcallbacks",3]]]],[3,"UpdatePolicy","","Specifies in which intervals the own leaf node should be …",null,null],[12,"maximum_time","","Maximum time before an update in seconds",80,null],[12,"maximum_sent_messages","","Maximum messages that are sent before an update in seconds",80,null],[12,"maximum_received_messages","","Maximum messages that are received before an update in …",80,null],[0,"errors","openmls::group::managed_group","MLS Managed Group errors<code>WelcomeError</code>, <code>ApplyCommitError</code>, …",null,null],[4,"ManagedGroupError","openmls::group::managed_group::errors","",null,null],[13,"LibraryError","","An internal library error occurred. Additional detail is …",81,null],[13,"Codec","","See <code>CodecError</code> for details",81,null],[13,"Config","","See <code>ConfigError</code> for details",81,null],[13,"Group","","See <code>GroupError</code> for details",81,null],[13,"CreateCommit","","See <code>CreateCommitError</code> for details",81,null],[13,"UseAfterEviction","","See <code>UseAfterEviction</code> for details",81,null],[13,"PendingProposalsExist","","See <code>PendingProposalsError</code> for details",81,null],[13,"Exporter","","See <code>ExporterError</code> for details",81,null],[13,"EmptyInput","","Empty input. Additional detail is provided.",81,null],[11,"_description","","",81,[[],["string",3]]],[4,"EmptyInputError","","",null,null],[13,"AddMembers","","An empty list of KeyPackages was provided.",82,null],[13,"RemoveMembers","","An empty list of indexes was provided.",82,null],[11,"_description","","",82,[[],["string",3]]],[4,"UseAfterEviction","","",null,null],[13,"Error","","Tried to use a group after being evicted from it.",83,null],[11,"_description","","",83,[[],["string",3]]],[4,"PendingProposalsError","","",null,null],[13,"Exists","","Can\'t create message because a pending proposal exists.",84,null],[11,"_description","","",84,[[],["string",3]]],[4,"InvalidMessageError","","",null,null],[13,"InvalidCiphertext","","An invalid ciphertext was provided. The error returns the …",85,null],[13,"CommitWithInvalidProposals","","A commit contained an invalid proposal. Additional detail …",85,null],[13,"CommitError","","See <code>ApplyCommitError</code> for details",85,null],[13,"GroupError","","See <code>GroupError</code> for details",85,null],[13,"MembershipTagMismatch","","A Proposal with an invalid membership tag was received.",85,null],[11,"_description","","",85,[[],["string",3]]],[0,"events","openmls::group::managed_group","",null,null],[4,"GroupEvent","openmls::group::managed_group::events","Group event that occured while processing messages in …",null,null],[13,"MemberAdded","","",86,null],[13,"MemberRemoved","","",86,null],[13,"MemberUpdated","","",86,null],[13,"PskReceived","","",86,null],[13,"ReInit","","",86,null],[13,"ApplicationMessage","","",86,null],[13,"InvalidMessage","","",86,null],[13,"Error","","",86,null],[3,"MemberAddedEvent","","Event that occurs when member <code>sender</code> adds member …",null,null],[12,"aad","","",87,null],[12,"sender","","",87,null],[12,"added_member","","",87,null],[11,"new","","",87,[[["vec",3],["credential",3]]]],[11,"aad","","Get a reference to the event\'s aad.",87,[[]]],[11,"sender","","Get a reference to the event\'s sender.",87,[[],["credential",3]]],[11,"added_member","","Get a reference to the event\'s added member credential.",87,[[],["credential",3]]],[3,"MemberRemovedEvent","","Event that occurs when a member leaves/is removed from …",null,null],[12,"aad","","",88,null],[12,"removal","","",88,null],[11,"new","","",88,[[["vec",3],["removal",4]]]],[11,"aad","","Get a reference to the event\'s aad.",88,[[]]],[11,"removal","","Get a reference to the event\'s removal.",88,[[],["removal",4]]],[3,"MemberUpdatedEvent","","Event that occurs when a member updates its leaf. …",null,null],[12,"aad","","",89,null],[12,"updated_member","","",89,null],[11,"new","","",89,[[["vec",3],["credential",3]]]],[11,"aad","","Get a reference to the event\'s aad.",89,[[]]],[11,"updated_member","","Get a reference to the event\'s updated member.",89,[[],["credential",3]]],[3,"PskReceivedEvent","","Event that occurs when  a PSK is received. <code>psk_id</code> …",null,null],[12,"aad","","",90,null],[12,"psk_id","","",90,null],[11,"new","","",90,[[["vec",3],["presharedkeyid",3]]]],[11,"aad","","Get a reference to the event\'s aad.",90,[[]]],[11,"psk_id","","Get a reference to the event\'s psk id.",90,[[],["presharedkeyid",3]]],[3,"ReInitEvent","","Event that occurs when a <code>ReInitProposal</code> is received. …",null,null],[12,"aad","","",91,null],[12,"re_init_proposal","","",91,null],[11,"new","","",91,[[["vec",3],["reinitproposal",3]]]],[11,"aad","","Get a reference to the event\'s aad.",91,[[]]],[11,"psk_id","","Get a reference to the event\'s psk id.",91,[[],["reinitproposal",3]]],[3,"ApplicationMessageEvent","","Event that occurs when an application message is received.…",null,null],[12,"aad","","",92,null],[12,"sender","","",92,null],[12,"message","","",92,null],[11,"new","","",92,[[["vec",3],["credential",3]]]],[11,"aad","","Get a reference to the event\'s aad.",92,[[]]],[11,"sender","","Get a reference to the event\'s sender.",92,[[],["credential",3]]],[11,"message","","Get a reference to the event\'s message.",92,[[]]],[3,"InvalidMessageEvent","","Event that occurs when an invalid message is received. …",null,null],[12,"error","","",93,null],[11,"new","","",93,[[["invalidmessageerror",4]]]],[11,"error","","Get a reference to the event\'s error.",93,[[],["invalidmessageerror",4]]],[3,"ErrorEvent","","Event that occurs when an error occurred while processing …",null,null],[12,"error","","",94,null],[11,"new","","",94,[[["managedgrouperror",4]]]],[11,"error","","Get a reference to the event\'s error.",94,[[],["managedgrouperror",4]]],[4,"Removal","","This enum lists the 4 different variants of a removal, …",null,null],[13,"WeLeft","","We previously issued a RemoveProposal for ourselves and …",95,null],[13,"TheyLeft","","Another member issued a RemoveProposal for itself that …",95,null],[13,"WeWereRemovedBy","","Another member issued a RemoveProposal for ourselves that …",95,null],[13,"TheyWereRemovedBy","","Member A issued a RemoveProposal for member B that was …",95,null],[11,"new","","",95,[[["credential",3]]]],[0,"resumption","openmls::group::managed_group","",null,null],[3,"ResumptionSecretStore","openmls::group::managed_group::resumption","Resumption secrets store. This is where the resumption …",null,null],[12,"number_of_secrets","","",96,null],[12,"resumption_secrets","","",96,null],[12,"cursor","","",96,null],[11,"new","","Create e new store with a given maximum size of …",96,[[]]],[11,"add","","Add a new entry to the store.",96,[[["groupepoch",3],["resumptionsecret",3]]]],[11,"get","","Find an entry for a give epoch number and optionally …",96,[[["groupepoch",3]],[["option",4],["resumptionsecret",3]]]],[0,"ser","openmls::group::managed_group","",null,null],[3,"SerializedManagedGroup","openmls::group::managed_group::ser","",null,null],[12,"managed_group_config","","",97,null],[12,"group","","",97,null],[12,"pending_proposals","","",97,null],[12,"own_kpbs","","",97,null],[12,"aad","","",97,null],[12,"resumption_secret_store","","",97,null],[12,"active","","",97,null],[11,"into_managed_group","","",97,[[["credentialbundle",3],["managedgroupcallbacks",3]],["managedgroup",3]]],[3,"ManagedGroup","openmls::group::managed_group","A <code>ManagedGroup</code> represents an [MlsGroup] with an easier, …",null,null],[12,"credential_bundle","","",98,null],[12,"managed_group_config","","",98,null],[12,"group","","",98,null],[12,"pending_proposals","","",98,null],[12,"own_kpbs","","",98,null],[12,"aad","","",98,null],[12,"resumption_secret_store","","",98,null],[12,"active","","",98,null],[11,"new","","Creates a new group from scratch with only the creator as …",98,[[["credentialbundle",3],["keypackagebundle",3],["managedgroupconfig",3],["groupid",3]],[["result",4],["managedgrouperror",4]]]],[11,"new_from_welcome","","Creates a new group from a <code>Welcome</code> message",98,[[["credentialbundle",3],["welcome",3],["managedgroupconfig",3],["vec",3],["keypackagebundle",3],["option",4]],[["grouperror",4],["result",4]]]],[11,"add_members","","Adds members to the group",98,[[],[["managedgrouperror",4],["result",4]]]],[11,"remove_members","","Removes members from the group",98,[[],[["result",4],["managedgrouperror",4]]]],[11,"propose_add_members","","Creates proposals to add members to the group",98,[[],[["result",4],["vec",3],["managedgrouperror",4]]]],[11,"propose_remove_members","","Creates proposals to remove members from the group",98,[[],[["result",4],["vec",3],["managedgrouperror",4]]]],[11,"leave_group","","Leave the group",98,[[],[["result",4],["vec",3],["managedgrouperror",4]]]],[11,"members","","Gets the current list of members",98,[[],[["vec",3],["credential",3]]]],[11,"process_messages","","Processes any incoming messages from the DS (MLSPlaintext …",98,[[["vec",3],["mlsmessage",4]],[["managedgrouperror",4],["result",4],["vec",3]]]],[11,"create_message","","Creates an application message. Returns …",98,[[],[["result",4],["mlsmessage",4],["managedgrouperror",4]]]],[11,"process_pending_proposals","","Process pending proposals",98,[[],[["result",4],["managedgrouperror",4]]]],[11,"export_secret","","Exports a secret from the current epoch",98,[[],[["vec",3],["managedgrouperror",4],["result",4]]]],[11,"authentication_secret","","Returns the authentication secret",98,[[],["vec",3]]],[11,"get_resumption_secret","","Returns a resumption secret for a given epoch. If no …",98,[[["groupepoch",3]],[["option",4],["resumptionsecret",3]]]],[11,"configuration","","Gets the configuration",98,[[],["managedgroupconfig",3]]],[11,"set_configuration","","Sets the configuration",98,[[["managedgroupconfig",3]]]],[11,"aad","","Gets the AAD used in the framing",98,[[]]],[11,"set_aad","","Sets the AAD used in the framing",98,[[]]],[11,"ciphersuite","","Returns the group\'s ciphersuite",98,[[],["ciphersuite",3]]],[11,"is_active","","Returns whether the own client is still a member of the …",98,[[]]],[11,"set_credential_bundle","","Sets a different <code>CredentialBundle</code>",98,[[["credentialbundle",3]]]],[11,"credential","","Returns own credential",98,[[],["credential",3]]],[11,"group_id","","Get group ID",98,[[],["groupid",3]]],[11,"self_update","","Updates the own leaf node",98,[[["keypackagebundle",3],["option",4]],[["result",4],["managedgrouperror",4]]]],[11,"propose_self_update","","Creates a proposal to update the own leaf node",98,[[["keypackagebundle",3],["option",4]],[["result",4],["vec",3],["managedgrouperror",4]]]],[11,"pending_proposals","","Returns a list of proposal",98,[[]]],[11,"load","","Loads the state from persisted state",98,[[["read",8],["credentialbundle",3],["managedgroupcallbacks",3]],[["managedgroup",3],["result",4],["error",3]]]],[11,"save","","Persists the state",98,[[],[["result",4],["error",3]]]],[11,"export_ratchet_tree","","Export the Ratchet Tree",98,[[],[["vec",3],["option",4]]]],[11,"plaintext_to_mls_messages","","Converts MLSPlaintext to MLSMessage. Depending on whether …",98,[[["mlsplaintext",3],["vec",3]],[["result",4],["vec",3],["managedgrouperror",4]]]],[11,"validate_proposal","","Validate all pending proposals. The function returns <code>true</code> …",98,[[["leafindex",3],["hashmap",3],["proposal",4]]]],[11,"validate_inline_proposals","","Validates the inline proposals from a Commit message",98,[[["hashmap",3],["leafindex",3]]]],[11,"prepare_events","","Prepare the corresponding events for the proposals …",98,[[["leafindex",3],["ciphersuite",3],["hashmap",3]],[["groupevent",4],["vec",3]]]],[11,"prepare_proposal_event","","Prepare the corresponding events for the pending proposal …",98,[[["leafindex",3],["hashmap",3],["proposal",4]],["groupevent",4]]],[11,"auto_save","","Auto-save function",98,[[]]],[11,"indexed_members","","Return a list (LeafIndex, Credential)",98,[[],[["leafindex",3],["hashmap",3],["credential",3]]]],[4,"MLSMessage","","Unified message type",null,null],[13,"Plaintext","","An OpenMLS <code>MLSPlaintext</code>.",99,null],[13,"Ciphertext","","An OpenMLS <code>MLSCiphertext</code>.",99,null],[11,"group_id","","Get the group ID as plain byte vector.",99,[[],["vec",3]]],[11,"epoch","","Get the epoch as plain u64.",99,[[]]],[11,"is_handshake_message","","Returns <code>true</code> if this is a handshake message and <code>false</code> …",99,[[]]],[0,"mls_group","openmls::group","",null,null],[0,"apply_commit","openmls::group::mls_group","",null,null],[0,"create_commit","","",null,null],[3,"PlaintextSecret","openmls::group::mls_group::create_commit","Helper struct holding values that are encryptedin the …",null,null],[12,"public_key","","",100,null],[12,"group_secrets_bytes","","",100,null],[12,"key_package_hash","","",100,null],[11,"new","","Prepare the <code>GroupSecrets</code> for a number of <code>invited_members</code> …",100,[[["vec",3],["presharedkeys",3],["ratchettree",3],["joinersecret",3]],[["grouperror",4],["result",4],["vec",3]]]],[0,"new_from_welcome","openmls::group::mls_group","",null,null],[6,"CreateCommitResult","","",null,null],[3,"MlsGroup","","",null,null],[12,"ciphersuite","","",101,null],[12,"group_context","","",101,null],[12,"epoch_secrets","","",101,null],[12,"secret_tree","","",101,null],[12,"tree","","",101,null],[12,"interim_transcript_hash","","",101,null],[12,"use_ratchet_tree_extension","","",101,null],[11,"new","","",101,[[["keypackagebundle",3],["ciphersuitename",4],["groupconfig",3]],[["grouperror",4],["result",4]]]],[11,"new_from_welcome","","",101,[[["vec",3],["welcome",3],["keypackagebundle",3],["option",4],["pskfetcher",6],["option",4]],[["grouperror",4],["result",4]]]],[11,"create_add_proposal","","",101,[[["credentialbundle",3],["keypackage",3]],[["mlsplaintext",3],["result",4],["grouperror",4]]]],[11,"create_update_proposal","","",101,[[["credentialbundle",3],["keypackage",3]],[["mlsplaintext",3],["result",4],["grouperror",4]]]],[11,"create_remove_proposal","","",101,[[["credentialbundle",3],["leafindex",3]],[["mlsplaintext",3],["result",4],["grouperror",4]]]],[11,"create_presharedkey_proposal","","",101,[[["credentialbundle",3],["presharedkeyid",3]],[["mlsplaintext",3],["result",4],["grouperror",4]]]],[11,"create_commit","","",101,[[["credentialbundle",3],["pskfetcher",6],["option",4]],["createcommitresult",6]]],[11,"apply_commit","","",101,[[["mlsplaintext",3],["pskfetcher",6],["option",4]],[["grouperror",4],["result",4]]]],[11,"create_application_message","","",101,[[["credentialbundle",3]],[["mlsciphertext",3],["grouperror",4],["result",4]]]],[11,"encrypt","","",101,[[["mlsplaintext",3]],[["mlsciphertext",3],["grouperror",4],["result",4]]]],[11,"decrypt","","Decrypt an MLSCiphertext into an MLSPlaintext",101,[[["mlsciphertext",3]],[["result",4],["mlsplaintext",3],["mlsciphertexterror",4]]]],[11,"verify_signature","","Verify the signature of an MLSPlaintext",101,[[["mlsplaintext",3]],[["mlsplaintexterror",4],["result",4]]]],[11,"verify_membership_tag","","Verify the membership tag an MLSPlaintext",101,[[["mlsplaintext",3]],[["mlsplaintexterror",4],["result",4]]]],[11,"export_secret","","Exporter",101,[[],[["result",4],["vec",3],["grouperror",4]]]],[11,"authentication_secret","","Returns the authentication secret",101,[[],["vec",3]]],[11,"load","","Loads the state from persisted state",101,[[["read",8]],[["result",4],["error",3],["mlsgroup",3]]]],[11,"save","","Persists the state",101,[[],[["result",4],["error",3]]]],[11,"tree","","Returns the ratchet tree",101,[[],[["ratchettree",3],["ref",3]]]],[11,"ciphersuite","","Get the ciphersuite implementation used in this group.",101,[[],["ciphersuite",3]]],[11,"context","","Get the group context",101,[[],["groupcontext",3]]],[11,"group_id","","Get the group ID",101,[[],["groupid",3]]],[11,"extensions","","Get the groups extensions. Right now this is limited to …",101,[[],[["vec",3],["box",3]]]],[11,"export_public_group_state","","Export the <code>PublicGroupState</code>",101,[[["credentialbundle",3]],[["credentialerror",4],["publicgroupstate",3],["result",4]]]],[11,"use_ratchet_tree_extension","","Returns <code>true</code> if the group uses the ratchet tree extension …",101,[[]]],[11,"sender_index","","",101,[[],["leafindex",3]]],[11,"epoch_secrets","","",101,[[],["epochsecrets",3]]],[11,"secret_tree_mut","","",101,[[],[["secrettree",3],["refmut",3]]]],[11,"interim_transcript_hash","","Current interim transcript hash of the group",101,[[]]],[11,"epoch_secrets_mut","","",101,[[],["epochsecrets",3]]],[11,"context_mut","","",101,[[],["groupcontext",3]]],[6,"PskFetcher","","This callback function is used in several places in …",null,null],[5,"update_confirmed_transcript_hash","","",null,[[["mlsplaintextcommitcontent",3],["ciphersuite",3]],[["vec",3],["codecerror",4],["result",4]]]],[5,"update_interim_transcript_hash","","",null,[[["mlsplaintextcommitauthdata",3],["ciphersuite",3]],[["vec",3],["codecerror",4],["result",4]]]],[5,"psk_output","","",null,[[["presharedkeys",3],["pskfetcher",6],["ciphersuite",3],["option",4]],[["option",4],["result",4],["pskerror",4]]]],[0,"tests","openmls::group","Unit tests for the MLS group",null,null],[0,"kat_transcripts","openmls::group::tests","Known Answer Tests for the transcript hashesSee …",null,null],[3,"TranscriptTestVector","openmls::group::tests::kat_transcripts","",null,null],[12,"cipher_suite","","",102,null],[12,"group_id","","",102,null],[12,"epoch","","",102,null],[12,"tree_hash_before","","",102,null],[12,"confirmed_transcript_hash_before","","",102,null],[12,"interim_transcript_hash_before","","",102,null],[12,"membership_key","","",102,null],[12,"confirmation_key","","",102,null],[12,"commit","","",102,null],[12,"confirmed_transcript_hash_after","","",102,null],[12,"interim_transcript_hash_after","","",102,null],[5,"generate_test_vector","","",null,[[["ciphersuite",3]],["transcripttestvector",3]]],[5,"run_test_vector","","",null,[[["transcripttestvector",3]],[["transcripttestvectorerror",4],["result",4]]]],[4,"TranscriptTestVectorError","","",null,null],[13,"MembershipTagVerificationError","","Membership tag could not be verified.",103,null],[13,"ConfirmationTagMismatch","","The computed confirmation tag doesn\'t match the one in …",103,null],[13,"ConfirmedTranscriptHashMismatch","","The computed transcript hash doesn\'t match the one in the …",103,null],[13,"InterimTranscriptHashMismatch","","The computed interim transcript hash doesn\'t match the …",103,null],[11,"_description","","",103,[[],["string",3]]],[0,"callbacks","openmls::group","",null,null],[3,"ManagedGroupCallbacks","openmls::group::callbacks","Collection of callback functions that are passed to a …",null,null],[12,"validate_add","","",77,null],[12,"validate_remove","","",77,null],[12,"auto_save","","",77,null],[6,"ValidateAdd","","",null,null],[6,"ValidateRemove","","",null,null],[6,"AutoSave","","",null,null],[0,"config","openmls::group","",null,null],[4,"HandshakeMessageFormat","openmls::group::config","Defines whether handshake messages (Proposals & Commits) …",null,null],[13,"Plaintext","","",78,null],[13,"Ciphertext","","",78,null],[3,"ManagedGroupConfig","","Specifies the configuration parameters for a managed group",null,null],[12,"handshake_message_format","","Defines whether handshake messages should be encrypted",79,null],[12,"update_policy","","Defines the update policy",79,null],[12,"padding_size","","Size of padding in bytes",79,null],[12,"number_of_resumption_secrets","","Number of resumtion secrets to keep",79,null],[12,"callbacks","","Callbacks",79,null],[3,"UpdatePolicy","","Specifies in which intervals the own leaf node should be …",null,null],[12,"maximum_time","","Maximum time before an update in seconds",80,null],[12,"maximum_sent_messages","","Maximum messages that are sent before an update in seconds",80,null],[12,"maximum_received_messages","","Maximum messages that are received before an update in …",80,null],[0,"errors","openmls::group","MLS Managed Group errors<code>WelcomeError</code>, <code>ApplyCommitError</code>, …",null,null],[4,"ManagedGroupError","openmls::group::errors","",null,null],[13,"LibraryError","","An internal library error occurred. Additional detail is …",81,null],[13,"Codec","","See <code>CodecError</code> for details",81,null],[13,"Config","","See <code>ConfigError</code> for details",81,null],[13,"Group","","See <code>GroupError</code> for details",81,null],[13,"CreateCommit","","See <code>CreateCommitError</code> for details",81,null],[13,"UseAfterEviction","","See <code>UseAfterEviction</code> for details",81,null],[13,"PendingProposalsExist","","See <code>PendingProposalsError</code> for details",81,null],[13,"Exporter","","See <code>ExporterError</code> for details",81,null],[13,"EmptyInput","","Empty input. Additional detail is provided.",81,null],[4,"EmptyInputError","","",null,null],[13,"AddMembers","","An empty list of KeyPackages was provided.",82,null],[13,"RemoveMembers","","An empty list of indexes was provided.",82,null],[4,"UseAfterEviction","","",null,null],[13,"Error","","Tried to use a group after being evicted from it.",83,null],[4,"PendingProposalsError","","",null,null],[13,"Exists","","Can\'t create message because a pending proposal exists.",84,null],[4,"InvalidMessageError","","",null,null],[13,"InvalidCiphertext","","An invalid ciphertext was provided. The error returns the …",85,null],[13,"CommitWithInvalidProposals","","A commit contained an invalid proposal. Additional detail …",85,null],[13,"CommitError","","See <code>ApplyCommitError</code> for details",85,null],[13,"GroupError","","See <code>GroupError</code> for details",85,null],[13,"MembershipTagMismatch","","A Proposal with an invalid membership tag was received.",85,null],[0,"events","openmls::group","",null,null],[4,"GroupEvent","openmls::group::events","Group event that occured while processing messages in …",null,null],[13,"MemberAdded","","",86,null],[13,"MemberRemoved","","",86,null],[13,"MemberUpdated","","",86,null],[13,"PskReceived","","",86,null],[13,"ReInit","","",86,null],[13,"ApplicationMessage","","",86,null],[13,"InvalidMessage","","",86,null],[13,"Error","","",86,null],[3,"MemberAddedEvent","","Event that occurs when member <code>sender</code> adds member …",null,null],[12,"aad","","",87,null],[12,"sender","","",87,null],[12,"added_member","","",87,null],[3,"MemberRemovedEvent","","Event that occurs when a member leaves/is removed from …",null,null],[12,"aad","","",88,null],[12,"removal","","",88,null],[3,"MemberUpdatedEvent","","Event that occurs when a member updates its leaf. …",null,null],[12,"aad","","",89,null],[12,"updated_member","","",89,null],[3,"PskReceivedEvent","","Event that occurs when  a PSK is received. <code>psk_id</code> …",null,null],[12,"aad","","",90,null],[12,"psk_id","","",90,null],[3,"ReInitEvent","","Event that occurs when a <code>ReInitProposal</code> is received. …",null,null],[12,"aad","","",91,null],[12,"re_init_proposal","","",91,null],[3,"ApplicationMessageEvent","","Event that occurs when an application message is received.…",null,null],[12,"aad","","",92,null],[12,"sender","","",92,null],[12,"message","","",92,null],[3,"InvalidMessageEvent","","Event that occurs when an invalid message is received. …",null,null],[12,"error","","",93,null],[3,"ErrorEvent","","Event that occurs when an error occurred while processing …",null,null],[12,"error","","",94,null],[4,"Removal","","This enum lists the 4 different variants of a removal, …",null,null],[13,"WeLeft","","We previously issued a RemoveProposal for ourselves and …",95,null],[13,"TheyLeft","","Another member issued a RemoveProposal for itself that …",95,null],[13,"WeWereRemovedBy","","Another member issued a RemoveProposal for ourselves that …",95,null],[13,"TheyWereRemovedBy","","Member A issued a RemoveProposal for member B that was …",95,null],[3,"ManagedGroupCallbacks","openmls::group","Collection of callback functions that are passed to a …",null,null],[12,"validate_add","","",77,null],[12,"validate_remove","","",77,null],[12,"auto_save","","",77,null],[6,"ValidateAdd","","",null,null],[6,"ValidateRemove","","",null,null],[6,"AutoSave","","",null,null],[4,"HandshakeMessageFormat","","Defines whether handshake messages (Proposals & Commits) …",null,null],[13,"Plaintext","","",78,null],[13,"Ciphertext","","",78,null],[3,"ManagedGroupConfig","","Specifies the configuration parameters for a managed group",null,null],[12,"handshake_message_format","","Defines whether handshake messages should be encrypted",79,null],[12,"update_policy","","Defines the update policy",79,null],[12,"padding_size","","Size of padding in bytes",79,null],[12,"number_of_resumption_secrets","","Number of resumtion secrets to keep",79,null],[12,"callbacks","","Callbacks",79,null],[3,"UpdatePolicy","","Specifies in which intervals the own leaf node should be …",null,null],[12,"maximum_time","","Maximum time before an update in seconds",80,null],[12,"maximum_sent_messages","","Maximum messages that are sent before an update in seconds",80,null],[12,"maximum_received_messages","","Maximum messages that are received before an update in …",80,null],[4,"EmptyInputError","","",null,null],[13,"AddMembers","","An empty list of KeyPackages was provided.",82,null],[13,"RemoveMembers","","An empty list of indexes was provided.",82,null],[4,"InvalidMessageError","","",null,null],[13,"InvalidCiphertext","","An invalid ciphertext was provided. The error returns the …",85,null],[13,"CommitWithInvalidProposals","","A commit contained an invalid proposal. Additional detail …",85,null],[13,"CommitError","","See <code>ApplyCommitError</code> for details",85,null],[13,"GroupError","","See <code>GroupError</code> for details",85,null],[13,"MembershipTagMismatch","","A Proposal with an invalid membership tag was received.",85,null],[4,"ManagedGroupError","","",null,null],[13,"LibraryError","","An internal library error occurred. Additional detail is …",81,null],[13,"Codec","","See <code>CodecError</code> for details",81,null],[13,"Config","","See <code>ConfigError</code> for details",81,null],[13,"Group","","See <code>GroupError</code> for details",81,null],[13,"CreateCommit","","See <code>CreateCommitError</code> for details",81,null],[13,"UseAfterEviction","","See <code>UseAfterEviction</code> for details",81,null],[13,"PendingProposalsExist","","See <code>PendingProposalsError</code> for details",81,null],[13,"Exporter","","See <code>ExporterError</code> for details",81,null],[13,"EmptyInput","","Empty input. Additional detail is provided.",81,null],[4,"PendingProposalsError","","",null,null],[13,"Exists","","Can\'t create message because a pending proposal exists.",84,null],[4,"UseAfterEviction","","",null,null],[13,"Error","","Tried to use a group after being evicted from it.",83,null],[4,"GroupEvent","","Group event that occured while processing messages in …",null,null],[13,"MemberAdded","","",86,null],[13,"MemberRemoved","","",86,null],[13,"MemberUpdated","","",86,null],[13,"PskReceived","","",86,null],[13,"ReInit","","",86,null],[13,"ApplicationMessage","","",86,null],[13,"InvalidMessage","","",86,null],[13,"Error","","",86,null],[3,"MemberAddedEvent","","Event that occurs when member <code>sender</code> adds member …",null,null],[12,"aad","","",87,null],[12,"sender","","",87,null],[12,"added_member","","",87,null],[3,"MemberRemovedEvent","","Event that occurs when a member leaves/is removed from …",null,null],[12,"aad","","",88,null],[12,"removal","","",88,null],[3,"MemberUpdatedEvent","","Event that occurs when a member updates its leaf. …",null,null],[12,"aad","","",89,null],[12,"updated_member","","",89,null],[3,"PskReceivedEvent","","Event that occurs when  a PSK is received. <code>psk_id</code> …",null,null],[12,"aad","","",90,null],[12,"psk_id","","",90,null],[3,"ReInitEvent","","Event that occurs when a <code>ReInitProposal</code> is received. …",null,null],[12,"aad","","",91,null],[12,"re_init_proposal","","",91,null],[3,"ApplicationMessageEvent","","Event that occurs when an application message is received.…",null,null],[12,"aad","","",92,null],[12,"sender","","",92,null],[12,"message","","",92,null],[3,"InvalidMessageEvent","","Event that occurs when an invalid message is received. …",null,null],[12,"error","","",93,null],[3,"ErrorEvent","","Event that occurs when an error occurred while processing …",null,null],[12,"error","","",94,null],[4,"Removal","","This enum lists the 4 different variants of a removal, …",null,null],[13,"WeLeft","","We previously issued a RemoveProposal for ourselves and …",95,null],[13,"TheyLeft","","Another member issued a RemoveProposal for itself that …",95,null],[13,"WeWereRemovedBy","","Another member issued a RemoveProposal for ourselves that …",95,null],[13,"TheyWereRemovedBy","","Member A issued a RemoveProposal for member B that was …",95,null],[3,"ManagedGroup","","A <code>ManagedGroup</code> represents an [MlsGroup] with an easier, …",null,null],[12,"credential_bundle","","",98,null],[12,"managed_group_config","","",98,null],[12,"group","","",98,null],[12,"pending_proposals","","",98,null],[12,"own_kpbs","","",98,null],[12,"aad","","",98,null],[12,"resumption_secret_store","","",98,null],[12,"active","","",98,null],[4,"MLSMessage","","Unified message type",null,null],[13,"Plaintext","","An OpenMLS <code>MLSPlaintext</code>.",99,null],[13,"Ciphertext","","An OpenMLS <code>MLSCiphertext</code>.",99,null],[6,"CreateCommitResult","","",null,null],[3,"MlsGroup","","",null,null],[12,"ciphersuite","","",101,null],[12,"group_context","","",101,null],[12,"epoch_secrets","","",101,null],[12,"secret_tree","","",101,null],[12,"tree","","",101,null],[12,"interim_transcript_hash","","",101,null],[12,"use_ratchet_tree_extension","","",101,null],[6,"PskFetcher","","This callback function is used in several places in …",null,null],[3,"GroupId","","",null,null],[12,"value","","",104,null],[11,"random","","",104,[[]]],[11,"from_slice","","",104,[[]]],[11,"as_slice","","",104,[[],["vec",3]]],[3,"GroupEpoch","","",null,null],[12,"0","","",105,null],[11,"increment","","",105,[[]]],[3,"GroupContext","","",null,null],[12,"group_id","","",106,null],[12,"epoch","","",106,null],[12,"tree_hash","","",106,null],[12,"confirmed_transcript_hash","","",106,null],[12,"extensions","","",106,null],[12,"serialized","","",106,null],[11,"set_epoch","","",106,[[["groupepoch",3]]]],[3,"GroupConfig","","Configuration for an MLS group.",null,null],[12,"add_ratchet_tree_extension","","Flag whether to send the ratchet tree along with the …",107,null],[12,"padding_block_size","","",107,null],[12,"additional_as_epochs","","",107,null],[11,"padding_block_size","","Get the padding block size used in this config.",107,[[]]],[0,"key_packages","openmls","",null,null],[0,"codec","openmls::key_packages","",null,null],[0,"errors","","Key Package errors<code>KeyPackageError</code> are thrown on errors …",null,null],[4,"KeyPackageError","openmls::key_packages::errors","",null,null],[13,"ExtensionError","","See <code>ExtensionError</code> for details.",108,null],[13,"ConfigError","","See <code>ConfigError</code> for details.",108,null],[13,"UnsupportedCiphersuite","","The requested ciphersuite is not supported.",108,null],[13,"UnknownConfigError","","An unknown configuration error occurred.",108,null],[13,"MandatoryExtensionsMissing","","A mandatory extension is missing in the key package.",108,null],[13,"InvalidLifetimeExtension","","The lifetime extension of the key package is not valid.",108,null],[13,"InvalidSignature","","The key package signature is not valid.",108,null],[13,"LibraryError","","An unknown OpenMLS library error occurred.",108,null],[13,"DuplicateExtension","","Duplicate extensions are not allowed.",108,null],[13,"NoCiphersuitesSupplied","","Creating a new key package requires at least one …",108,null],[13,"CiphersuiteMismatch","","The list of ciphersuites is not consistent with the …",108,null],[13,"CiphersuiteSignatureSchemeMismatch","","The ciphersuite does not match the signature scheme.",108,null],[11,"_description","","",108,[[],["string",3]]],[3,"KeyPackage","openmls::key_packages","",null,null],[12,"protocol_version","","",109,null],[12,"ciphersuite","","",109,null],[12,"hpke_init_key","","",109,null],[12,"credential","","",109,null],[12,"extensions","","",109,null],[12,"signature","","",109,null],[17,"MANDATORY_EXTENSIONS","","Mandatory extensions for key packages.",null,null],[11,"verify","","Verify that this key package is valid:",109,[[],[["keypackageerror",4],["result",4]]]],[11,"hash","","Compute the hash of the encoding of this key package.",109,[[],["vec",3]]],[11,"key_id","","Get the ID of this key package as byte slice. Returns an …",109,[[],[["keypackageerror",4],["result",4]]]],[11,"add_extension","","Add (or replace) an extension to the KeyPackage. Make …",109,[[["extension",8],["box",3]]]],[11,"extensions","","Get a reference to the extensions of this key package.",109,[[]]],[11,"credential","","Get a reference to the credential.",109,[[],["credential",3]]],[11,"sign","","Populate the <code>signature</code> field using the <code>credential_bundle</code>.",109,[[["credentialbundle",3]]]],[11,"new","","Create a new key package but only with the given …",109,[[["credentialbundle",3],["hpkepublickey",3],["box",3],["vec",3],["ciphersuitename",4]],[["result",4],["keypackageerror",4]]]],[11,"unsigned_payload","","Compile the unsigned payload to create the signature …",109,[[],[["vec",3],["codecerror",4],["result",4]]]],[11,"extension_with_type","","Get a reference to the extension of <code>extension_type</code>. …",109,[[["extensiontype",4]],[["option",4],["box",3]]]],[11,"update_parent_hash","","Update the parent hash extension of this key package.",109,[[]]],[11,"remove_extension","","Remove an extension from the KeyPackage Make sure to …",109,[[["extensiontype",4]]]],[11,"hpke_init_key","","Get a reference to the HPKE init key.",109,[[],["hpkepublickey",3]]],[11,"set_hpke_init_key","","Set a new HPKE init key.",109,[[["hpkepublickey",3]]]],[11,"ciphersuite","","Get the <code>Ciphersuite</code>.",109,[[],["ciphersuite",3]]],[11,"ciphersuite_name","","Get the <code>CiphersuiteName</code>.",109,[[],["ciphersuitename",4]]],[3,"KeyPackageBundle","","",null,null],[12,"key_package","","",110,null],[12,"private_key","","",110,null],[12,"leaf_secret","","",110,null],[11,"new","","Create a new <code>KeyPackageBundle</code> with a fresh <code>HPKEKeyPair</code>. …",110,[[["credentialbundle",3],["vec",3],["box",3]],[["result",4],["keypackageerror",4]]]],[11,"from_rekeyed_key_package","","Replace the init key in the <code>KeyPackage</code> with a random one …",110,[[["keypackage",3]]]],[11,"new_with_keypair","","Create a new <code>KeyPackageBundle</code> for the given <code>ciphersuite</code>, …",110,[[["credentialbundle",3],["secret",3],["box",3],["vec",3],["hpkekeypair",3]],[["result",4],["keypackageerror",4]]]],[11,"key_package","","Get a reference to the <code>KeyPackage</code>.",110,[[],["keypackage",3]]],[11,"new_from_leaf_secret","","",110,[[["credentialbundle",3],["secret",3],["box",3],["vec",3]],[["result",4],["keypackageerror",4]]]],[11,"new_from_values","","Assembles a new KeyPackageBundle from a KeyPackage, a …",110,[[["hpkeprivatekey",3],["secret",3],["keypackage",3]]]],[11,"_set_private_key","","Update the private key in the bundle.",110,[[["hpkeprivatekey",3]]]],[11,"set_key_package","","Update the key package in the bundle.",110,[[["keypackage",3]]]],[11,"key_package_mut","","Get a mutable reference to the <code>KeyPackage</code>.",110,[[],["keypackage",3]]],[11,"private_key","","Get a reference to the <code>HPKEPrivateKey</code>.",110,[[],["hpkeprivatekey",3]]],[11,"leaf_secret","","Get a reference to the <code>leaf_secret</code>.",110,[[],["secret",3]]],[11,"derive_leaf_node_secret","","This function derives the leaf_node_secret from the …",110,[[["secret",3],["ciphersuite",3]],["secret",3]]],[11,"sign","","Sign the KeyPackageBundle",110,[[["credentialbundle",3]]]],[0,"messages","openmls","",null,null],[0,"codec","openmls::messages","Codec implementations for message structs.",null,null],[0,"errors","","",null,null],[4,"ProposalQueueError","openmls::messages::errors","",null,null],[13,"NotAProposal","","The given MLS Plaintext was not a Proposal.",111,null],[13,"ProposalNotFound","","Not all proposals in the Commit were found locally.",111,null],[11,"_description","","",111,[[],["string",3]]],[4,"ProposalOrRefTypeError","","",null,null],[13,"UnknownValue","","Invalid value for ProposalOrRefType was found.",112,null],[11,"_description","","",112,[[],["string",3]]],[4,"QueuedProposalError","","",null,null],[13,"WrongContentType","","API misuse. Only proposals can end up in the proposal …",113,null],[11,"_description","","",113,[[],["string",3]]],[0,"proposals","openmls::messages","",null,null],[4,"ProposalType","openmls::messages::proposals","",null,null],[13,"Add","","",114,null],[13,"Update","","",114,null],[13,"Remove","","",114,null],[13,"Presharedkey","","",114,null],[13,"Reinit","","",114,null],[4,"ProposalOrRefType","","11.2 Commit",null,null],[13,"Proposal","","",115,null],[13,"Reference","","",115,null],[4,"ProposalOrRef","","Type of Proposal, either by value or by reference",null,null],[13,"Proposal","","",116,null],[13,"Reference","","",116,null],[11,"proposal_or_ref_type","","",116,[[],["proposalorreftype",4]]],[4,"Proposal","","Proposal",null,null],[13,"Add","","",117,null],[13,"Update","","",117,null],[13,"Remove","","",117,null],[13,"PreSharedKey","","",117,null],[13,"ReInit","","",117,null],[11,"proposal_type","","",117,[[],["proposaltype",4]]],[11,"is_type","","",117,[[["proposaltype",4]]]],[11,"as_add","","",117,[[],[["option",4],["addproposal",3]]]],[11,"as_update","","",117,[[],[["option",4],["updateproposal",3]]]],[11,"as_remove","","",117,[[],[["removeproposal",3],["option",4]]]],[11,"as_presharedkey","","",117,[[],[["option",4],["presharedkeyproposal",3]]]],[3,"ProposalReference","","Reference to a Proposal. This can be used in Commit …",null,null],[12,"value","","",118,null],[11,"from_proposal","","",118,[[["ciphersuite",3],["proposal",4]]]],[3,"QueuedProposal","","Alternative representation of a Proposal, where the …",null,null],[12,"proposal","","",119,null],[12,"proposal_reference","","",119,null],[12,"sender","","",119,null],[12,"proposal_or_ref_type","","",119,null],[11,"from_mls_plaintext","","Creates a new <code>QueuedProposal</code> from an <code>MLSPlaintext</code>",119,[[["mlsplaintext",3],["ciphersuite",3]],[["result",4],["queuedproposalerror",4]]]],[11,"from_proposal_and_sender","","Creates a new <code>QueuedProposal</code> from a <code>Proposal</code> and <code>Sender</code>",119,[[["proposal",4],["ciphersuite",3],["sender",3]]]],[11,"proposal","","Returns the <code>Proposal</code> as a reference",119,[[],["proposal",4]]],[11,"proposal_reference","","Returns the <code>ProposalReference</code> as a reference",119,[[],["proposalreference",3]]],[11,"sender","","Returns the <code>Sender</code> as a reference",119,[[],["sender",3]]],[3,"ProposalQueue","","Proposal queue that helps filtering and sorting the …",null,null],[12,"proposal_references","","<code>proposal_references</code> holds references to the proposals in …",120,null],[12,"queued_proposals","","<code>queued_proposals</code> contains the actual proposals in the …",120,null],[11,"from_proposals_by_reference","","Returns a new <code>ProposalQueue</code> from proposals that were …",120,[[["ciphersuite",3]]]],[11,"from_committed_proposals","","Returns a new <code>ProposalQueue</code> from proposals that were …",120,[[["ciphersuite",3],["sender",3]],[["result",4],["proposalqueueerror",4]]]],[11,"filter_proposals","","Filters received proposals",120,[[["leafindex",3],["ciphersuite",3]],[["result",4],["proposalqueueerror",4]]]],[11,"get","","Returns proposal for a given proposal ID",120,[[["proposalreference",3]],[["option",4],["queuedproposal",3]]]],[11,"add","","Add a new <code>QueuedProposal</code> to the queue",120,[[["queuedproposal",3]]]],[11,"commit_list","","Returns the list of all proposals that are covered by a …",120,[[],[["vec",3],["proposalorref",4]]]],[11,"filtered_by_type","","Returns an iterator over a list of <code>QueuedProposal</code> …",120,[[["proposaltype",4]]]],[3,"AddProposal","","",null,null],[12,"key_package","","",121,null],[3,"UpdateProposal","","",null,null],[12,"key_package","","",122,null],[3,"RemoveProposal","","",null,null],[12,"removed","","",123,null],[3,"PreSharedKeyProposal","","Preshared Key proposal 11.1.4 struct { PreSharedKeyID psk;…",null,null],[12,"psk","","",124,null],[3,"ReInitProposal","","ReInit proposal 11.1.5 struct { opaque group_id<0..255>; …",null,null],[12,"group_id","","",125,null],[12,"version","","",125,null],[12,"ciphersuite","","",125,null],[12,"extensions","","",125,null],[3,"Welcome","openmls::messages","Welcome Messages",null,null],[12,"version","","",126,null],[12,"cipher_suite","","",126,null],[12,"secrets","","",126,null],[12,"encrypted_group_info","","",126,null],[3,"EncryptedGroupSecrets","","EncryptedGroupSecrets",null,null],[12,"key_package_hash","","",127,null],[12,"encrypted_group_secrets","","",127,null],[11,"new","","Create a new welcome message from the provided data. Note …",126,[[["vec",3],["vec",3],["ciphersuite",3],["protocolversion",4],["encryptedgroupsecrets",3]]]],[11,"ciphersuite","","Get a reference to the ciphersuite in this Welcome …",126,[[],["ciphersuite",3]]],[11,"secrets","","Get a reference to the encrypted group secrets in this …",126,[[]]],[11,"encrypted_group_info","","Get a reference to the encrypted group info.",126,[[]]],[3,"Commit","","",null,null],[12,"proposals","","",128,null],[12,"path","","",128,null],[11,"has_path","","Returns <code>true</code> if the commit contains an update path. <code>false</code> …",128,[[]]],[3,"ConfirmationTag","","Confirmation tag field of MLSPlaintext. For type saftey …",null,null],[12,"0","","",129,null],[3,"GroupInfo","","GroupInfo",null,null],[12,"group_id","","",130,null],[12,"epoch","","",130,null],[12,"tree_hash","","",130,null],[12,"confirmed_transcript_hash","","",130,null],[12,"extensions","","",130,null],[12,"confirmation_tag","","",130,null],[12,"signer_index","","",130,null],[12,"signature","","",130,null],[11,"new","","",130,[[["vec",3],["groupepoch",3],["leafindex",3],["groupid",3],["vec",3],["box",3],["confirmationtag",3]]]],[11,"tree_hash","","Get the tree hash as byte slice.",130,[[]]],[11,"signer_index","","Get the signer index.",130,[[],["leafindex",3]]],[11,"signature","","Get the signature.",130,[[],["signature",3]]],[11,"set_signature","","Set the signature.",130,[[["signature",3]]]],[11,"group_id","","Get the group ID.",130,[[],["groupid",3]]],[11,"epoch","","Get the epoch.",130,[[],["groupepoch",3]]],[11,"confirmed_transcript_hash","","Get the confirmed transcript hash.",130,[[]]],[11,"confirmation_tag","","Get the confirmed tag.",130,[[],["confirmationtag",3]]],[11,"extensions","","Get the extensions.",130,[[]]],[3,"PathSecret","","PathSecret",null,null],[12,"path_secret","","",131,null],[3,"GroupSecrets","","GroupSecrets",null,null],[12,"joiner_secret","","",132,null],[12,"path_secret","","",132,null],[12,"psks","","",132,null],[11,"new_encoded","","Create new encoded group secrets.",132,[[["joinersecret",3],["option",4],["pathsecret",3]],[["vec",3],["codecerror",4],["result",4]]]],[3,"PublicGroupState","","PublicGroupState",null,null],[12,"ciphersuite","","",133,null],[12,"group_id","","",133,null],[12,"epoch","","",133,null],[12,"tree_hash","","",133,null],[12,"interim_transcript_hash","","",133,null],[12,"extensions","","",133,null],[12,"external_pub","","",133,null],[12,"signer_index","","",133,null],[12,"signature","","",133,null],[11,"new","","Creates a new <code>PublicGroupState</code> struct from the current …",133,[[["credentialbundle",3],["mlsgroup",3]],[["credentialerror",4],["result",4]]]],[11,"verify","","Verifies the signature of the <code>PublicGroupState</code>. Returns …",133,[[["credentialbundle",3]],[["credentialerror",4],["result",4]]]],[3,"PublicGroupStateTBS","","PublicGroupStateTBS",null,null],[12,"group_id","","",134,null],[12,"epoch","","",134,null],[12,"tree_hash","","",134,null],[12,"interim_transcript_hash","","",134,null],[12,"extensions","","",134,null],[12,"external_pub","","",134,null],[11,"sign","","Signs the <code>PublicGroupStateTBS</code> with a <code>CredentialBundle</code>.",134,[[["credentialbundle",3]],[["credentialerror",4],["result",4],["signature",3]]]],[0,"schedule","openmls","This module represents the key schedule as introduced in …",null,null],[0,"codec","openmls::schedule","",null,null],[0,"errors","","",null,null],[4,"ErrorState","openmls::schedule::errors","",null,null],[13,"NotInit","","Expected to be in initial state.",135,null],[13,"NotEpoch","","Expected to be in epoch state.",135,null],[13,"NotContext","","Expected to be in a state where the context is added.",135,null],[11,"_description","","",135,[[],["string",3]]],[4,"KeyScheduleError","","",null,null],[13,"InvalidState","","The requested operation is not valid on the key schedule …",136,null],[11,"_description","","",136,[[],["string",3]]],[4,"PskSecretError","","",null,null],[13,"TooManyKeys","","More than 2^16 PSKS were provided.",137,null],[13,"DifferentLength","","The IDs and secrets vectors have different lengths.",137,null],[11,"_description","","",137,[[],["string",3]]],[4,"KSTestVectorError","","",null,null],[13,"JoinerSecretMismatch","","The computed joiner secret doesn\'t match the one in the …",138,null],[13,"WelcomeSecretMismatch","","The computed welcome secret doesn\'t match the one in the …",138,null],[13,"InitSecretMismatch","","The computed init secret doesn\'t match the one in the …",138,null],[13,"GroupContextMismatch","","The group context doesn\'t match the one in the test …",138,null],[13,"SenderDataSecretMismatch","","The computed sender data secret doesn\'t match the one in …",138,null],[13,"EncryptionSecretMismatch","","The computed encryption secret doesn\'t match the one in …",138,null],[13,"ExporterSecretMismatch","","The computed exporter secret doesn\'t match the one in the …",138,null],[13,"AuthenticationSecretMismatch","","The computed authentication secret doesn\'t match the one …",138,null],[13,"ExternalSecretMismatch","","The computed external secret doesn\'t match the one in the …",138,null],[13,"ConfirmationKeyMismatch","","The computed confirmation key doesn\'t match the one in …",138,null],[13,"MembershipKeyMismatch","","The computed membership key doesn\'t match the one in the …",138,null],[13,"ResumptionSecretMismatch","","The computed resumption secret doesn\'t match the one in …",138,null],[13,"ExternalPubMismatch","","The computed external public key doesn\'t match the one in …",138,null],[11,"_description","","",138,[[],["string",3]]],[0,"psk","openmls::schedule","Pre shared keys.",null,null],[4,"PSKType","openmls::schedule::psk","Type of PSK.",null,null],[13,"External","","",139,null],[13,"Reinit","","",139,null],[13,"Branch","","",139,null],[3,"ExternalPsk","","External PSK.",null,null],[12,"psk_id","","",140,null],[11,"new","","Create a new <code>ExternalPsk</code> from a PSK ID",140,[[["vec",3]]]],[11,"psk_id","","Return the PSK ID",140,[[]]],[3,"ExternalPskBundle","","External PSK Bundle. This contains the secret part of the …",null,null],[12,"secret","","",141,null],[12,"nonce","","",141,null],[12,"external_psk","","",141,null],[11,"new","","Create a new bundle",141,[[["vec",3],["secret",3],["ciphersuite",3]]]],[11,"to_presharedkey_id","","Return the <code>PreSharedKeyID</code>",141,[[],["presharedkeyid",3]]],[11,"secret","","Return the secret",141,[[],["secret",3]]],[3,"ReinitPsk","","ReInit PSK.",null,null],[12,"psk_group_id","","",142,null],[12,"psk_epoch","","",142,null],[11,"psk_group_id","","Return the <code>GroupId</code>",142,[[],["groupid",3]]],[11,"psk_epoch","","Return the <code>GroupEpoch</code>",142,[[],["groupepoch",3]]],[3,"BranchPsk","","Branch PSK",null,null],[12,"psk_group_id","","",143,null],[12,"psk_epoch","","",143,null],[11,"psk_group_id","","Return the <code>GroupId</code>",143,[[],["groupid",3]]],[11,"psk_epoch","","Return the <code>GroupEpoch</code>",143,[[],["groupepoch",3]]],[4,"Psk","","PSK enum that can contain the different PSK types",null,null],[13,"External","","",144,null],[13,"Reinit","","",144,null],[13,"Branch","","",144,null],[3,"PreSharedKeyID","","A <code>PreSharedKeyID</code> is used to uniquely identify the PSKs …",null,null],[12,"psk_type","","",145,null],[12,"psk","","",145,null],[12,"psk_nonce","","",145,null],[11,"new","","Create a new <code>PreSharedKeyID</code>",145,[[["psktype",4],["vec",3],["psk",4]]]],[11,"psktype","","Return the type of the PSK",145,[[],["psktype",4]]],[11,"psk","","Return the PSK",145,[[],["psk",4]]],[11,"psk_nonce","","Return the PSK nonce",145,[[]]],[3,"PreSharedKeys","","<code>PreSharedKeys</code> is a vector of <code>PreSharedKeyID</code>s. struct { …",null,null],[12,"psks","","",146,null],[11,"psks","","Return the <code>PreSharedKeyID</code>s",146,[[],["vec",3]]],[3,"PskLabel","","<code>PskLabel</code> is used in the final concatentation of PSKs …",null,null],[12,"id","","",147,null],[12,"index","","",147,null],[12,"count","","",147,null],[11,"new","","Create a new <code>PskLabel</code>",147,[[["presharedkeyid",3]]]],[3,"PskSecret","","This contains the <code>psk-secret</code> calculated from the PSKs …",null,null],[12,"secret","","",148,null],[11,"new","","Create a new <code>PskSecret</code> from PSK IDs and PSKs",148,[[["ciphersuite",3]],[["result",4],["psksecreterror",4]]]],[11,"secret","","Return the inner secret",148,[[],["secret",3]]],[11,"random","","",148,[[]]],[11,"as_slice","","",148,[[]]],[11,"clone","","",148,[[]]],[11,"from_slice","","",148,[[]]],[0,"kat_key_schedule","openmls::schedule","Known Answer Tests for the key scheduleSee …",null,null],[3,"Epoch","openmls::schedule::kat_key_schedule","",null,null],[12,"tree_hash","","",149,null],[12,"commit_secret","","",149,null],[12,"psk_secret","","",149,null],[12,"confirmed_transcript_hash","","",149,null],[12,"group_context","","",149,null],[12,"joiner_secret","","",149,null],[12,"welcome_secret","","",149,null],[12,"init_secret","","",149,null],[12,"sender_data_secret","","",149,null],[12,"encryption_secret","","",149,null],[12,"exporter_secret","","",149,null],[12,"authentication_secret","","",149,null],[12,"external_secret","","",149,null],[12,"confirmation_key","","",149,null],[12,"membership_key","","",149,null],[12,"resumption_secret","","",149,null],[12,"external_pub","","",149,null],[3,"KeyScheduleTestVector","","",null,null],[12,"cipher_suite","","",150,null],[12,"group_id","","",150,null],[12,"initial_init_secret","","",150,null],[12,"epochs","","",150,null],[5,"generate","","",null,[[["initsecret",3],["ciphersuite",3]]]],[5,"generate_test_vector","","",null,[[["ciphersuite",3]],["keyscheduletestvector",3]]],[5,"run_test_vector","","",null,[[["keyscheduletestvector",3]],[["result",4],["kstestvectorerror",4]]]],[3,"CommitSecret","openmls::schedule","",null,null],[12,"secret","","",151,null],[11,"new","","",151,[[["secret",3],["ciphersuite",3]]]],[11,"zero_secret","","Create a CommitSecret consisting of an all-zero string of …",151,[[["ciphersuite",3]]]],[11,"random","","",151,[[]]],[11,"as_slice","","",151,[[]]],[11,"from_slice","","",151,[[]]],[3,"InitSecret","","The <code>InitSecret</code> is used to connect the next epoch to the …",null,null],[12,"secret","","",152,null],[11,"new","","Derive an <code>InitSecret</code> from an <code>EpochSecret</code>.",152,[[["epochsecret",3],["ciphersuite",3]]]],[11,"random","","Sample a fresh, random <code>InitSecret</code> for the creation of a …",152,[[]]],[11,"clone","","",152,[[]]],[11,"as_slice","","",152,[[]]],[11,"from_slice","","",152,[[]]],[3,"JoinerSecret","","",null,null],[12,"secret","","",153,null],[11,"new","","Derive a <code>JoinerSecret</code> from an optional <code>CommitSecret</code> and an…",153,[[["initsecret",3],["ciphersuite",3]]]],[11,"clone","","",153,[[]]],[11,"as_slice","","",153,[[]]],[4,"State","","",null,null],[13,"Initial","","",154,null],[13,"Context","","",154,null],[13,"Done","","",154,null],[3,"KeySchedule","","",null,null],[12,"ciphersuite","","",155,null],[12,"intermediate_secret","","",155,null],[12,"epoch_secret","","",155,null],[12,"state","","",155,null],[11,"init","","Initialize the key schedule and return it.",155,[[["joinersecret",3],["ciphersuite",3]]]],[11,"welcome","","Derive the welcome secret. Note that this has to be …",155,[[],[["keyscheduleerror",4],["welcomesecret",3],["result",4]]]],[11,"add_context","","Add the group context to the key schedule.",155,[[["groupcontext",3]],[["result",4],["keyscheduleerror",4]]]],[11,"epoch_secrets","","Derive the epoch secrets. If the <code>init_secret</code> argument is …",155,[[],[["result",4],["keyscheduleerror",4],["epochsecrets",3]]]],[3,"IntermediateSecret","","The intermediate secret includes the optional PSK and is …",null,null],[12,"secret","","",156,null],[11,"new","","Derive an <code>IntermediateSecret</code> from a <code>JoinerSecret</code> and an …",156,[[["psksecret",3],["option",4],["joinersecret",3],["ciphersuite",3]]]],[3,"WelcomeSecret","","",null,null],[12,"secret","","",157,null],[11,"new","","Derive a <code>WelcomeSecret</code> from to decrypt a <code>Welcome</code> message.",157,[[["ciphersuite",3],["intermediatesecret",3]]]],[11,"derive_welcome_key_nonce","","Derive an <code>AeadKey</code> and an <code>AeadNonce</code> from the <code>WelcomeSecret</code>,…",157,[[["ciphersuite",3]]]],[11,"derive_aead_key","","Derive a new AEAD key from a <code>WelcomeSecret</code>.",157,[[["ciphersuite",3]],["aeadkey",3]]],[11,"derive_aead_nonce","","Derive a new AEAD nonce from a <code>WelcomeSecret</code>.",157,[[["ciphersuite",3]],["aeadnonce",3]]],[11,"as_slice","","",157,[[]]],[3,"EpochSecret","","An intermediate secret in the key schedule, the …",null,null],[12,"secret","","",158,null],[11,"new","","Derive an <code>EpochSecret</code> from a <code>JoinerSecret</code>",158,[[["intermediatesecret",3],["ciphersuite",3],["groupcontext",3]]]],[3,"EncryptionSecret","","The <code>EncryptionSecret</code> is used to create a <code>SecretTree</code>.",null,null],[12,"secret","","",159,null],[11,"new","","Derive an encryption secret from a reference to an …",159,[[["epochsecret",3],["ciphersuite",3]]]],[11,"create_secret_tree","","Create a <code>SecretTree</code> from the <code>encryption_secret</code> contained …",159,[[["leafindex",3]],["secrettree",3]]],[11,"consume_secret","","",159,[[],["secret",3]]],[11,"as_slice","","",159,[[]]],[3,"ExporterSecret","","A secret that we can derive secrets from, that are used …",null,null],[12,"secret","","",160,null],[11,"new","","Derive an <code>ExporterSecret</code> from an <code>EpochSecret</code>.",160,[[["epochsecret",3],["ciphersuite",3]]]],[11,"as_slice","","",160,[[]]],[11,"derive_exported_secret","","Derive a <code>Secret</code> from the exporter secret. We return …",160,[[["ciphersuite",3]],["vec",3]]],[3,"AuthenticationSecret","","A secret that can be used among members to make sure …",null,null],[12,"secret","","",161,null],[11,"new","","Derive an <code>AuthenticationSecret</code> from an <code>EpochSecret</code>.",161,[[["epochsecret",3],["ciphersuite",3]]]],[11,"export","","☣️ Get a copy of the secret bytes.",161,[[],["vec",3]]],[11,"as_slice","","",161,[[]]],[3,"ExternalSecret","","A secret used when joining a group with an external …",null,null],[12,"secret","","",162,null],[11,"new","","Derive an <code>ExternalSecret</code> from an <code>EpochSecret</code>.",162,[[["epochsecret",3],["ciphersuite",3]]]],[11,"derive_external_keypair","","Derive the external keypair for External Commits",162,[[["ciphersuite",3]],["hpkekeypair",3]]],[11,"as_slice","","",162,[[]]],[3,"ConfirmationKey","","The confirmation key is used to calculate the …",null,null],[12,"secret","","",163,null],[11,"new","","Derive an <code>ConfirmationKey</code> from an <code>EpochSecret</code>.",163,[[["epochsecret",3],["ciphersuite",3]]]],[11,"tag","","Create a new confirmation tag.",163,[[["ciphersuite",3]],["confirmationtag",3]]],[11,"from_secret","","",163,[[["secret",3]]]],[11,"as_slice","","",163,[[]]],[3,"MembershipKey","","The membership key is used to calculate the <code>MembershipTag</code>.",null,null],[12,"secret","","",164,null],[11,"new","","Derive an <code>MembershipKey</code> from an <code>EpochSecret</code>.",164,[[["epochsecret",3],["ciphersuite",3]]]],[11,"secret","","Get the internal <code>Secret</code>.",164,[[],["secret",3]]],[11,"from_secret","","",164,[[["secret",3]]]],[11,"as_slice","","",164,[[]]],[3,"ResumptionSecret","","A secret used in cross-group operations.",null,null],[12,"secret","","",165,null],[11,"new","","Derive an <code>ResumptionSecret</code> from an <code>EpochSecret</code>.",165,[[["epochsecret",3],["ciphersuite",3]]]],[11,"as_slice","","",165,[[]]],[5,"ciphertext_sample","","",null,[[["ciphersuite",3]]]],[3,"SenderDataSecret","","A key that can be used to derive an <code>AeadKey</code> and an …",null,null],[12,"secret","","",166,null],[11,"new","","Derive an <code>ExporterSecret</code> from an <code>EpochSecret</code>.",166,[[["epochsecret",3],["ciphersuite",3]]]],[11,"derive_aead_key","","Derive a new AEAD key from a <code>SenderDataSecret</code>.",166,[[["ciphersuite",3]],["aeadkey",3]]],[11,"derive_aead_nonce","","Derive a new AEAD nonce from a <code>SenderDataSecret</code>.",166,[[["ciphersuite",3]],["aeadnonce",3]]],[11,"as_slice","","",166,[[]]],[3,"EpochSecrets","","The <code>EpochSecrets</code> contain keys (or secrets), which are …",null,null],[12,"init_secret","","",167,null],[12,"sender_data_secret","","",167,null],[12,"encryption_secret","","",167,null],[12,"exporter_secret","","",167,null],[12,"authentication_secret","","",167,null],[12,"external_secret","","",167,null],[12,"confirmation_key","","",167,null],[12,"membership_key","","",167,null],[12,"resumption_secret","","",167,null],[11,"sender_data_secret","","Get the sender_data secret.",167,[[],["senderdatasecret",3]]],[11,"confirmation_key","","Get the confirmation key.",167,[[],["confirmationkey",3]]],[11,"authentication_secret","","Authentication secret",167,[[],["authenticationsecret",3]]],[11,"exporter_secret","","Exporter secret",167,[[],["exportersecret",3]]],[11,"membership_key","","Membership key",167,[[],["membershipkey",3]]],[11,"external_secret","","External secret",167,[[],["externalsecret",3]]],[11,"resumption_secret","","External secret",167,[[],["resumptionsecret",3]]],[11,"init_secret","","Init secret",167,[[],[["initsecret",3],["option",4]]]],[11,"encryption_secret","","Encryption secret Note that this consumes the encryption …",167,[[],["encryptionsecret",3]]],[11,"new","","Derive <code>EpochSecrets</code> from an <code>EpochSecret</code>. If the …",167,[[["epochsecret",3],["ciphersuite",3]]]],[0,"tree","openmls","",null,null],[0,"codec","openmls::tree","",null,null],[0,"errors","","",null,null],[4,"TreeError","openmls::tree::errors","",null,null],[13,"PathSecretDecryptionError","","Error while decrypting <code>PathSecret</code>.",168,null],[13,"InvalidArguments","","Invalid arguments.",168,null],[13,"InvalidUpdatePath","","The computed update path is invalid.",168,null],[13,"InvalidTree","","The tree is not valid.",168,null],[13,"NotAParentNode","","The node is not a parent node.",168,null],[11,"_description","","",168,[[],["string",3]]],[4,"ParentHashError","","",null,null],[13,"EndedWithLeafNode","","The search for a valid child ended with a leaf node.",169,null],[13,"AllChecksFailed","","All checks failed: Neither child has the right parent …",169,null],[13,"InputNotParentNode","","The input node is not a parent node.",169,null],[13,"NotAParentNode","","The node is not a parent node.",169,null],[13,"EmptyParentNode","","The parent node was blank.",169,null],[11,"_description","","",169,[[],["string",3]]],[0,"hashes","openmls::tree","7.4. Parent Hash",null,null],[3,"ParentHashInput","openmls::tree::hashes","",null,null],[12,"public_key","","",170,null],[12,"parent_hash","","",170,null],[12,"original_child_resolution","","",170,null],[11,"new","","",170,[[["ratchettree",3],["nodeindex",3]],[["parenthasherror",4],["result",4]]]],[11,"hash","","",170,[[["ciphersuite",3]],["vec",3]]],[3,"LeafNodeHashInput","","",null,null],[12,"node_index","","",171,null],[12,"key_package","","",171,null],[11,"new","","",171,[[["nodeindex",3],["option",4]]]],[11,"hash","","",171,[[["ciphersuite",3]],["vec",3]]],[3,"ParentNodeTreeHashInput","","",null,null],[12,"node_index","","",172,null],[12,"parent_node","","",172,null],[12,"left_hash","","",172,null],[12,"right_hash","","",172,null],[11,"new","","",172,[[["option",4]]]],[11,"hash","","",172,[[["ciphersuite",3]],["vec",3]]],[0,"index","openmls::tree","",null,null],[3,"NodeIndex","openmls::tree::index","NodeIndex is an index to the nodes of a tree, both parent …",null,null],[12,"0","","",173,null],[11,"as_u32","","",173,[[]]],[11,"as_usize","","",173,[[]]],[11,"is_leaf","","",173,[[]]],[11,"is_parent","","",173,[[]]],[3,"LeafIndex","","LeafIndex is an index to the leaves of a tree.",null,null],[12,"0","","",174,null],[11,"as_u32","","",174,[[]]],[11,"as_usize","","",174,[[]]],[0,"node","openmls::tree","",null,null],[4,"NodeType","openmls::tree::node","Node type. Can be either <code>Leaf</code> or <code>Parent</code>.",null,null],[13,"Leaf","","",175,null],[13,"Parent","","",175,null],[11,"is_leaf","","Returns <code>true</code> if the node type is <code>Leaf</code> and <code>false</code> otherwise.",175,[[]]],[11,"is_parent","","Returns <code>true</code> if the node type is <code>Parent</code> and <code>false</code> …",175,[[]]],[3,"Node","","Ratchet tree node. A <code>Node</code> can either be a leaf node (in …",null,null],[12,"node_type","","",176,null],[12,"key_package","","",176,null],[12,"node","","",176,null],[11,"new_leaf","","Creates a new leaf node. It can either be blank or …",176,[[["option",4],["keypackage",3]]]],[11,"new_blank_parent_node","","Creates a new blank parent node.",176,[[]]],[11,"public_hpke_key","","Returns the public HPKE key of either node type.",176,[[],[["hpkepublickey",3],["option",4]]]],[11,"blank","","Blanks the node.",176,[[]]],[11,"is_blank","","Returns <code>true</code> if the node is blank and <code>false</code> otherwise.",176,[[]]],[11,"is_full_parent","","Returns <code>true</code> if the node is a non-blank parent node and …",176,[[]]],[11,"parent_hash","","Returns the parent hash of a node. Returns <code>None</code> if the …",176,[[],["option",4]]],[11,"key_package","","Get a reference to the key package in this node.",176,[[],[["keypackage",3],["option",4]]]],[11,"key_package_mut","","Get a mutable reference to the key package in this node.",176,[[],[["option",4],["keypackage",3]]]],[3,"ParentNode","","Content of a parent node.",null,null],[12,"public_key","","",177,null],[12,"unmerged_leaves","","",177,null],[12,"parent_hash","","",177,null],[11,"new","","Creates a new <code>ParentNode</code> from the provided values.",177,[[["hpkepublickey",3]]]],[11,"public_key","","Returns the node\'s HPKE public key",177,[[],["hpkepublickey",3]]],[11,"set_parent_hash","","Sets the node\'s parent hash",177,[[["vec",3]]]],[11,"unmerged_leaves","","Returns the node\'s unmerged leaves",177,[[]]],[11,"add_unmerged_leaf","","Adds a leaf to the node\'s unmerged leaves",177,[[]]],[0,"path_keys","openmls::tree","A data structure holding HPKE key pairs for a path in the …",null,null],[3,"PathKeys","openmls::tree::path_keys","A set of keys for a path stored as <code>HashMap</code> with entries …",null,null],[12,"keys","","",178,null],[11,"add","","Add a slice of <code>HPKEPrivateKey</code>s with the indices given in …",178,[[["hpkeprivatekey",3],["vec",3]]]],[11,"get","","Get an HPKE private key for a given node index.",178,[[["nodeindex",3]],[["hpkeprivatekey",3],["option",4]]]],[0,"private_tree","openmls::tree","A data structure holding information about the leaf node …",null,null],[6,"PathSecrets","openmls::tree::private_tree","",null,null],[3,"PrivateTree","","",null,null],[12,"leaf_index","","",179,null],[12,"hpke_private_key","","",179,null],[12,"path_keys","","",179,null],[12,"commit_secret","","",179,null],[12,"path_secrets","","",179,null],[11,"new","","Create a new empty placeholder <code>PrivateTree</code> with default …",179,[[["leafindex",3]],["privatetree",3]]],[11,"from_key_package_bundle","","Create a minimal <code>PrivateTree</code> setting only the private key.…",179,[[["leafindex",3],["keypackagebundle",3]]]],[11,"new_with_keys","","Creates a <code>PrivateTree</code> with a new private key, leaf secret …",179,[[["leafindex",3],["ciphersuite",3],["keypackagebundle",3]]]],[11,"hpke_private_key","","",179,[[],["hpkeprivatekey",3]]],[11,"leaf_index","","",179,[[],["leafindex",3]]],[11,"path_keys","","",179,[[],["pathkeys",3]]],[11,"commit_secret","","",179,[[],[["option",4],["commitsecret",3]]]],[11,"path_secrets","","",179,[[]]],[11,"generate_path_secrets","","Generate <code>n</code> path secrets with the given <code>leaf_secret</code>.",179,[[["secret",3],["ciphersuite",3]],[["vec",3],["hpkepublickey",3]]]],[11,"continue_path_secrets","","Generate <code>n</code> path secrets with the given <code>start_secret</code>.",179,[[["secret",3],["ciphersuite",3]],[["vec",3],["hpkepublickey",3]]]],[11,"derive_path_secrets","","This function generates the path secrets internally and …",179,[[["vec",3],["ciphersuite",3],["secret",3]],[["vec",3],["hpkepublickey",3]]]],[11,"generate_commit_secret","","Generate the commit secret for the given <code>path_secret</code>.",179,[[["ciphersuite",3]]]],[11,"generate_path_keypairs","","Generate HPKE key pairs for all path secrets in …",179,[[["ciphersuite",3]],[["vec",3],["hpkepublickey",3]]]],[0,"secret_tree","openmls::tree","",null,null],[4,"SecretTreeError","openmls::tree::secret_tree","",null,null],[13,"TooDistantInThePast","","Generation is too old to be processed.",180,null],[13,"TooDistantInTheFuture","","Generation is too far in the future to be processed.",180,null],[13,"IndexOutOfBounds","","Index out of bounds",180,null],[11,"_description","","",180,[[],["string",3]]],[4,"SecretType","","",null,null],[13,"HandshakeSecret","","",181,null],[13,"ApplicationSecret","","",181,null],[5,"derive_tree_secret","","Derives secrets for inner nodes of a SecretTree",null,[[["secret",3],["ciphersuite",3]],["secret",3]]],[3,"TreeContext","","",null,null],[12,"node","","",182,null],[12,"generation","","",182,null],[3,"SecretTreeNode","","",null,null],[12,"secret","","",183,null],[3,"SecretTree","","",null,null],[12,"nodes","","",184,null],[12,"handshake_sender_ratchets","","",184,null],[12,"application_sender_ratchets","","",184,null],[12,"size","","",184,null],[11,"new","","Creates a new SecretTree based on an <code>encryption_secret</code> …",184,[[["encryptionsecret",3],["leafindex",3]]]],[11,"initialize_sender_ratchets","","Initializes a specific SenderRatchet pair for a given …",184,[[["leafindex",3],["ciphersuite",3]],[["secrettreeerror",4],["result",4]]]],[11,"secret_for_decryption","","Return RatchetSecrets for a given index and generation. …",184,[[["secrettype",4],["leafindex",3],["ciphersuite",3]],[["secrettreeerror",4],["result",4]]]],[11,"secret_for_encryption","","Return the next RatchetSecrets that should be used for …",184,[[["secrettype",4],["leafindex",3],["ciphersuite",3]],[["secrettreeerror",4],["result",4]]]],[11,"ratchet_mut","","Returns a mutable reference to a specific SenderRatchet. …",184,[[["secrettype",4],["leafindex",3]],["senderratchet",3]]],[11,"ratchet_opt","","Returns an optional reference to a specific SenderRatchet",184,[[["secrettype",4],["leafindex",3]],[["secrettreeerror",4],["option",4],["result",4]]]],[11,"derive_down","","Derives the secrets for the child leaves in a SecretTree …",184,[[["nodeindex",3],["ciphersuite",3]]]],[0,"sender_ratchet","openmls::tree","",null,null],[17,"OUT_OF_ORDER_TOLERANCE","openmls::tree::sender_ratchet","",null,null],[17,"MAXIMUM_FORWARD_DISTANCE","","",null,null],[6,"RatchetSecrets","","",null,null],[3,"SenderRatchet","","",null,null],[12,"index","","",185,null],[12,"generation","","",185,null],[12,"past_secrets","","",185,null],[11,"new","","Creates e new SenderRatchet",185,[[["leafindex",3],["secret",3]]]],[11,"secret_for_decryption","","Gets a secret from the SenderRatchet. Returns an error if …",185,[[["ciphersuite",3]],[["secrettreeerror",4],["result",4]]]],[11,"secret_for_encryption","","Gets a secret from the SenderRatchet and ratchets forward",185,[[["ciphersuite",3]]]],[11,"ratchet_secret","","Computes the new secret",185,[[["secret",3],["ciphersuite",3]],["secret",3]]],[11,"derive_key_nonce","","Derives a key & nonce from a secret",185,[[["secret",3],["ciphersuite",3]]]],[0,"treemath","openmls::tree","",null,null],[4,"TreeMathError","openmls::tree::treemath","",null,null],[13,"LeafHasNoChildren","","Leaf nodes don\'t have children.",186,null],[13,"RootHasNoParent","","Root nodes don\'t have parents.",186,null],[13,"NotAParentNode","","Node index was not a parent node.",186,null],[11,"_description","","",186,[[],["string",3]]],[5,"log2","","",null,[[]]],[5,"level","","",null,[[["nodeindex",3]]]],[5,"node_width","","",null,[[]]],[5,"root","","",null,[[["leafindex",3]],["nodeindex",3]]],[5,"left","","",null,[[["nodeindex",3]],[["result",4],["nodeindex",3],["treematherror",4]]]],[5,"right","","",null,[[["nodeindex",3],["leafindex",3]],[["result",4],["nodeindex",3],["treematherror",4]]]],[5,"parent_step","","",null,[[]]],[5,"parent","","",null,[[["nodeindex",3],["leafindex",3]],[["result",4],["nodeindex",3],["treematherror",4]]]],[5,"sibling","","",null,[[["nodeindex",3],["leafindex",3]],[["result",4],["nodeindex",3],["treematherror",4]]]],[5,"leaf_direct_path","","Direct path from a leaf node to the root. Does not …",null,[[["leafindex",3]],[["treematherror",4],["result",4],["vec",3]]]],[5,"parent_direct_path","","Direct path from a parent node to the root. Includes the …",null,[[["nodeindex",3],["leafindex",3]],[["treematherror",4],["result",4],["vec",3]]]],[5,"copath","","Copath of a leaf. Ordered from leaf to root.",null,[[["leafindex",3]],[["treematherror",4],["result",4],["vec",3]]]],[5,"common_ancestor_index","","",null,[[["nodeindex",3]],["nodeindex",3]]],[5,"leaf_count","","Returns the number of leaves in a tree",null,[[["nodeindex",3]],["leafindex",3]]],[0,"tests","openmls::tree","Tree unit tests.",null,null],[0,"kat_encryption","openmls::tree::tests","Known Answer Tests for encrypting to tree nodesSee …",null,null],[3,"SenderDataInfo","openmls::tree::tests::kat_encryption","",null,null],[12,"ciphertext","","",187,null],[12,"key","","",187,null],[12,"nonce","","",187,null],[3,"RatchetStep","","",null,null],[12,"key","","",188,null],[12,"nonce","","",188,null],[12,"plaintext","","",188,null],[12,"ciphertext","","",188,null],[3,"LeafSequence","","",null,null],[12,"generations","","",189,null],[12,"handshake","","",189,null],[12,"application","","",189,null],[3,"EncryptionTestVector","","",null,null],[12,"cipher_suite","","",190,null],[12,"n_leaves","","",190,null],[12,"encryption_secret","","",190,null],[12,"sender_data_secret","","",190,null],[12,"sender_data_info","","",190,null],[12,"leaves","","",190,null],[5,"group","","",null,[[["ciphersuite",3]],["mlsgroup",3]]],[5,"receiver_group","","",null,[[["ciphersuite",3],["groupid",3]],["mlsgroup",3]]],[5,"build_handshake_messages","","",null,[[["leafindex",3],["mlsgroup",3]]]],[5,"build_application_messages","","",null,[[["leafindex",3],["mlsgroup",3]]]],[5,"generate_test_vector","","",null,[[["ciphersuite",3]],["encryptiontestvector",3]]],[5,"run_test_vector","","",null,[[["encryptiontestvector",3]],[["enctestvectorerror",4],["result",4]]]],[4,"EncTestVectorError","","",null,null],[13,"LeafNumberMismatch","","The test vector does not contain as many leaves as …",191,null],[13,"SenderDataKeyMismatch","","The computed sender data key doesn\'t match the one in the …",191,null],[13,"SenderDataNonceMismatch","","The computed sender data nonce doesn\'t match the one in …",191,null],[13,"InvalidLeafSequenceApplication","","The number of generations in leaf sequence doesn\'t match …",191,null],[13,"InvalidLeafSequenceHandshake","","The number of generations in leaf sequence doesn\'t match …",191,null],[13,"ApplicationSecretKeyMismatch","","The computed application secret key doesn\'t match the one …",191,null],[13,"ApplicationSecretNonceMismatch","","The computed application secret nonce doesn\'t match the …",191,null],[13,"DecryptedApplicationMessageMismatch","","The decrypted application message doesn\'t match the one …",191,null],[13,"HandshakeSecretKeyMismatch","","The computed handshake secret key doesn\'t match the one …",191,null],[13,"HandshakeSecretNonceMismatch","","The computed handshake secret nonce doesn\'t match the one …",191,null],[13,"DecryptedHandshakeMessageMismatch","","The decrypted handshake message doesn\'t match the one in …",191,null],[11,"_description","","",191,[[],["string",3]]],[0,"kat_treemath","openmls::tree::tests","Known Answer Tests for treemathThis test file generates …",null,null],[3,"TreeMathTestVector","openmls::tree::tests::kat_treemath","",null,null],[12,"n_leaves","","",192,null],[12,"n_nodes","","",192,null],[12,"root","","",192,null],[12,"left","","",192,null],[12,"right","","",192,null],[12,"parent","","",192,null],[12,"sibling","","",192,null],[5,"generate_test_vector","","",null,[[],["treemathtestvector",3]]],[5,"run_test_vector","","",null,[[["treemathtestvector",3]],[["tmtestvectorerror",4],["result",4]]]],[4,"TMTestVectorError","","",null,null],[13,"TreeSizeMismatch","","The computed tree size doesn\'t match the one in the test …",193,null],[13,"RootIndexMismatch","","The computed root index doesn\'t match the one in the test …",193,null],[13,"LeftIndexMismatch","","A computed left child index doesn\'t match the one in the …",193,null],[13,"RightIndexMismatch","","A computed right child index doesn\'t match the one in the …",193,null],[13,"ParentIndexMismatch","","A computed parent index doesn\'t match the one in the test …",193,null],[13,"SiblingIndexMismatch","","A computed sibling index doesn\'t match the one in the …",193,null],[11,"_description","","",193,[[],["string",3]]],[3,"LeafNodeHashInput","openmls::tree","",null,null],[12,"node_index","","",171,null],[12,"key_package","","",171,null],[3,"ParentNodeTreeHashInput","","",null,null],[12,"node_index","","",172,null],[12,"parent_node","","",172,null],[12,"left_hash","","",172,null],[12,"right_hash","","",172,null],[3,"RatchetTree","","The ratchet tree.",null,null],[12,"ciphersuite","","The ciphersuite used in this tree.",194,null],[12,"nodes","","All nodes in the tree. Note that these only hold public …",194,null],[12,"private_tree","","This holds all private values in the tree. See <code>PrivateTree</code>…",194,null],[11,"new","","Create a new empty <code>RatchetTree</code>.",194,[[["keypackagebundle",3],["ciphersuite",3]],["ratchettree",3]]],[11,"new_from_public_tree","","Create a new <code>RatchetTree</code> by cloning the public tree nodes …",194,[[["ratchettree",3]]]],[11,"new_from_nodes","","Generate a new <code>RatchetTree</code> from <code>Node</code>s with the client\'s …",194,[[["keypackagebundle",3],["ciphersuite",3]],[["ratchettree",3],["result",4],["treeerror",4]]]],[11,"private_tree_mut","","Return a mutable reference to the <code>PrivateTree</code>.",194,[[],["privatetree",3]]],[11,"private_tree","","Return a reference to the <code>PrivateTree</code>.",194,[[],["privatetree",3]]],[11,"tree_size","","",194,[[],["nodeindex",3]]],[11,"public_key_tree","","Get a vector with all nodes in the tree, containing <code>None</code> …",194,[[],[["option",4],["vec",3]]]],[11,"public_key_tree_copy","","Get a vector with a copy of all nodes in the tree, …",194,[[],[["vec",3],["option",4]]]],[11,"leaf_count","","Returns the number of leaves in a tree",194,[[],["leafindex",3]]],[11,"resolve","","Compute the resolution for a given node index. Nodes …",194,[[["nodeindex",3],["hashset",3]],[["nodeindex",3],["vec",3]]]],[11,"own_node_index","","Get the index of the own node.",194,[[],["leafindex",3]]],[11,"own_key_package","","Get a reference to the own key package.",194,[[],["keypackage",3]]],[11,"own_key_package_mut","","Get a mutable reference to the own key package.",194,[[],["keypackage",3]]],[11,"blank_member","","Blanks all the nodes in the direct path of a member",194,[[["leafindex",3]]]],[11,"free_leaves","","Returns the list of blank leaves within the tree",194,[[],[["vec",3],["leafindex",3]]]],[11,"update_path","","7.7. Update Paths",194,[[["hashset",3],["leafindex",3],["nodeindex",3],["updatepath",3]],[["result",4],["commitsecret",3],["treeerror",4]]]],[11,"replace_private_tree","","Update the private tree with the new <code>KeyPackageBundle</code>.",194,[[["keypackagebundle",3]],[["option",4],["commitsecret",3]]]],[11,"refresh_private_tree","","Update the private tree.",194,[[["credentialbundle",3],["hashset",3],["nodeindex",3]]]],[11,"replace_private_tree_","","Replace the private tree with a new one based on the …",194,[[["hashset",3],["keypackagebundle",3],["option",4]],[["option",4],["updatepath",3]]]],[11,"encrypt_to_copath","","Encrypt the path secrets to the co path and return the …",194,[[["hashset",3],["nodeindex",3],["hpkepublickey",3],["vec",3]],[["vec",3],["treeerror",4],["result",4]]]],[11,"merge_direct_path_keys","","Merge public keys from a direct path to this tree along …",194,[[["updatepath",3],["nodeindex",3],["vec",3]],[["result",4],["treeerror",4]]]],[11,"validate_public_keys","","Validates that the <code>public_keys</code> matches the public keys in …",194,[[],[["result",4],["treeerror",4]]]],[11,"merge_public_keys","","Merges <code>public_keys</code> into the tree along the <code>path</code>",194,[[],[["result",4],["treeerror",4]]]],[11,"add_nodes","","Add nodes for the provided key packages.",194,[[],["vec",3]]],[11,"apply_proposals","","Applies a list of proposals from a Commit to the tree. …",194,[[["proposalqueue",3]],[["applyproposalsvalues",3],["treeerror",4],["result",4]]]],[11,"trim_tree","","Trims the tree from the right when there are empty leaf …",194,[[]]],[11,"commit_secret","","Get a reference to the commit secret.",194,[[],[["option",4],["commitsecret",3]]]],[11,"path_secrets","","Get a slice with the path secrets.",194,[[]]],[3,"ApplyProposalsValues","","This struct contain the return vallues of the …",null,null],[12,"path_required","","",195,null],[12,"self_removed","","",195,null],[12,"invitation_list","","",195,null],[12,"presharedkeys","","",195,null],[11,"exclusion_list","","This function creates a <code>HashSet</code> of node indexes of the …",195,[[],[["hashset",3],["nodeindex",3]]]],[3,"UpdatePathNode","","7.7. Update Paths",null,null],[12,"public_key","","",196,null],[12,"encrypted_path_secret","","",196,null],[3,"UpdatePath","","7.7. Update Paths",null,null],[12,"leaf_key_package","","",197,null],[12,"nodes","","",197,null],[11,"new","","Create a new update path.",197,[[["vec",3],["keypackage",3],["updatepathnode",3]]]],[0,"prelude","openmls","Single place, re-exporting the most used public functions.…",null,null],[0,"errors","openmls::prelude","Extension errors.An <code>ExtensionError</code> is thrown when an …",null,null],[4,"ExtensionError","openmls::prelude::errors","",null,null],[13,"InvalidExtensionType","","Invalid extension type error.",36,null],[13,"Capabilities","","Capabilities extension error. See …",36,null],[13,"Lifetime","","Lifetime extension error. See <code>LifetimeExtensionError</code> for …",36,null],[13,"KeyPackageId","","Key package ID extension error. See <code>KeyPackageIdError</code> for …",36,null],[13,"ParentHash","","Parent hash extension error. See <code>ParentHashError</code> for …",36,null],[13,"RatchetTree","","Ratchet tree extension error. See <code>RatchetTreeError</code> for …",36,null],[13,"CodecError","","Error decoding or encoding an extension.",36,null],[13,"ConfigError","","Configuration error. See <code>ConfigError</code> for details.",36,null],[13,"InvalidExtension","","The extension is malformed. See <code>InvalidExtensionError</code> for …",36,null],[4,"LifetimeExtensionError","","",null,null],[13,"Invalid","","Invalid lifetime extensions.",37,null],[13,"Expired","","Lifetime extension is expired.",37,null],[4,"CapabilitiesExtensionError","","",null,null],[13,"Invalid","","Invalid capabilities extensions.",38,null],[13,"EmptyVersionsField","","Capabilities extension is missing a version field.",38,null],[13,"UnsupportedCiphersuite","","Capabilities contains only unsupported ciphersuites.",38,null],[4,"KeyPackageIdError","","",null,null],[13,"Invalid","","Invalid key package ID extensions.",39,null],[4,"ParentHashError","","",null,null],[13,"Invalid","","Invalid parent hash extensions.",40,null],[4,"RatchetTreeError","","",null,null],[13,"Invalid","","Invalid ratchet tree extensions.",41,null],[4,"InvalidExtensionError","","",null,null],[13,"Duplicate","","The provided extension list contains duplicate extensions.",42,null],[0,"errors","openmls::prelude","Key Package errors<code>KeyPackageError</code> are thrown on errors …",null,null],[4,"KeyPackageError","openmls::prelude::errors","",null,null],[13,"ExtensionError","","See <code>ExtensionError</code> for details.",108,null],[13,"ConfigError","","See <code>ConfigError</code> for details.",108,null],[13,"UnsupportedCiphersuite","","The requested ciphersuite is not supported.",108,null],[13,"UnknownConfigError","","An unknown configuration error occurred.",108,null],[13,"MandatoryExtensionsMissing","","A mandatory extension is missing in the key package.",108,null],[13,"InvalidLifetimeExtension","","The lifetime extension of the key package is not valid.",108,null],[13,"InvalidSignature","","The key package signature is not valid.",108,null],[13,"LibraryError","","An unknown OpenMLS library error occurred.",108,null],[13,"DuplicateExtension","","Duplicate extensions are not allowed.",108,null],[13,"NoCiphersuitesSupplied","","Creating a new key package requires at least one …",108,null],[13,"CiphersuiteMismatch","","The list of ciphersuites is not consistent with the …",108,null],[13,"CiphersuiteSignatureSchemeMismatch","","The ciphersuite does not match the signature scheme.",108,null],[3,"MlsGroup","openmls::prelude","",null,null],[12,"ciphersuite","","",101,null],[12,"group_context","","",101,null],[12,"epoch_secrets","","",101,null],[12,"secret_tree","","",101,null],[12,"tree","","",101,null],[12,"interim_transcript_hash","","",101,null],[12,"use_ratchet_tree_extension","","",101,null],[4,"GroupEvent","","Group event that occured while processing messages in …",null,null],[13,"MemberAdded","","",86,null],[13,"MemberRemoved","","",86,null],[13,"MemberUpdated","","",86,null],[13,"PskReceived","","",86,null],[13,"ReInit","","",86,null],[13,"ApplicationMessage","","",86,null],[13,"InvalidMessage","","",86,null],[13,"Error","","",86,null],[4,"HandshakeMessageFormat","","Defines whether handshake messages (Proposals & Commits) …",null,null],[13,"Plaintext","","",78,null],[13,"Ciphertext","","",78,null],[4,"InvalidMessageError","","",null,null],[13,"InvalidCiphertext","","An invalid ciphertext was provided. The error returns the …",85,null],[13,"CommitWithInvalidProposals","","A commit contained an invalid proposal. Additional detail …",85,null],[13,"CommitError","","See <code>ApplyCommitError</code> for details",85,null],[13,"GroupError","","See <code>GroupError</code> for details",85,null],[13,"MembershipTagMismatch","","A Proposal with an invalid membership tag was received.",85,null],[4,"MLSMessage","","Unified message type",null,null],[13,"Plaintext","","An OpenMLS <code>MLSPlaintext</code>.",99,null],[13,"Ciphertext","","An OpenMLS <code>MLSCiphertext</code>.",99,null],[3,"ManagedGroup","","A <code>ManagedGroup</code> represents an [MlsGroup] with an easier, …",null,null],[12,"credential_bundle","","",98,null],[12,"managed_group_config","","",98,null],[12,"group","","",98,null],[12,"pending_proposals","","",98,null],[12,"own_kpbs","","",98,null],[12,"aad","","",98,null],[12,"resumption_secret_store","","",98,null],[12,"active","","",98,null],[3,"ManagedGroupCallbacks","","Collection of callback functions that are passed to a …",null,null],[12,"validate_add","","",77,null],[12,"validate_remove","","",77,null],[12,"auto_save","","",77,null],[3,"ManagedGroupConfig","","Specifies the configuration parameters for a managed group",null,null],[12,"handshake_message_format","","Defines whether handshake messages should be encrypted",79,null],[12,"update_policy","","Defines the update policy",79,null],[12,"padding_size","","Size of padding in bytes",79,null],[12,"number_of_resumption_secrets","","Number of resumtion secrets to keep",79,null],[12,"callbacks","","Callbacks",79,null],[4,"ManagedGroupError","","",null,null],[13,"LibraryError","","An internal library error occurred. Additional detail is …",81,null],[13,"Codec","","See <code>CodecError</code> for details",81,null],[13,"Config","","See <code>ConfigError</code> for details",81,null],[13,"Group","","See <code>GroupError</code> for details",81,null],[13,"CreateCommit","","See <code>CreateCommitError</code> for details",81,null],[13,"UseAfterEviction","","See <code>UseAfterEviction</code> for details",81,null],[13,"PendingProposalsExist","","See <code>PendingProposalsError</code> for details",81,null],[13,"Exporter","","See <code>ExporterError</code> for details",81,null],[13,"EmptyInput","","Empty input. Additional detail is provided.",81,null],[4,"Removal","","This enum lists the 4 different variants of a removal, …",null,null],[13,"WeLeft","","We previously issued a RemoveProposal for ourselves and …",95,null],[13,"TheyLeft","","Another member issued a RemoveProposal for itself that …",95,null],[13,"WeWereRemovedBy","","Another member issued a RemoveProposal for ourselves that …",95,null],[13,"TheyWereRemovedBy","","Member A issued a RemoveProposal for member B that was …",95,null],[3,"UpdatePolicy","","Specifies in which intervals the own leaf node should be …",null,null],[12,"maximum_time","","Maximum time before an update in seconds",80,null],[12,"maximum_sent_messages","","Maximum messages that are sent before an update in seconds",80,null],[12,"maximum_received_messages","","Maximum messages that are received before an update in …",80,null],[3,"ExternalPskBundle","","External PSK Bundle. This contains the secret part of the …",null,null],[12,"secret","","",141,null],[12,"nonce","","",141,null],[12,"external_psk","","",141,null],[4,"CiphersuiteName","","",null,null],[13,"MLS10_128_DHKEMX25519_AES128GCM_SHA256_Ed25519","","",5,null],[13,"MLS10_128_DHKEMP256_AES128GCM_SHA256_P256","","",5,null],[13,"MLS10_128_DHKEMX25519_CHACHA20POLY1305_SHA256_Ed25519","","",5,null],[13,"MLS10_256_DHKEMX448_AES256GCM_SHA512_Ed448","","",5,null],[13,"MLS10_256_DHKEMP521_AES256GCM_SHA512_P521","","",5,null],[13,"MLS10_256_DHKEMX448_CHACHA20POLY1305_SHA512_Ed448","","",5,null],[4,"SignatureScheme","","SignatureScheme according to IANA TLS parameters",null,null],[13,"ECDSA_SECP256R1_SHA256","","ECDSA_SECP256R1_SHA256",6,null],[13,"ECDSA_SECP521R1_SHA512","","ECDSA_SECP521R1_SHA512",6,null],[13,"ED25519","","ED25519",6,null],[13,"ED448","","ED448",6,null],[3,"HpkeCiphertext","","7.7. Update Paths",null,null],[12,"kem_output","","",7,null],[12,"ciphertext","","",7,null],[3,"Secret","","A struct to contain secrets. This is to provide better …",null,null],[12,"value","","",9,null],[3,"AeadKey","","",null,null],[12,"aead_mode","","",10,null],[12,"value","","",10,null],[12,"mac_len","","",10,null],[3,"ReuseGuard","","",null,null],[12,"value","","",11,null],[3,"AeadNonce","","",null,null],[12,"value","","",12,null],[3,"Signature","","",null,null],[12,"value","","",13,null],[3,"SignaturePrivateKey","","",null,null],[12,"signature_scheme","","",14,null],[12,"value","","",14,null],[3,"SignaturePublicKey","","",null,null],[12,"signature_scheme","","",15,null],[12,"value","","",15,null],[3,"SignatureKeypair","","",null,null],[12,"signature_scheme","","",16,null],[12,"private_key","","",16,null],[12,"public_key","","",16,null],[3,"Ciphersuite","","",null,null],[12,"name","","",17,null],[12,"signature_scheme","","",17,null],[12,"hpke","","",17,null],[12,"aead","","",17,null],[12,"hash","","",17,null],[12,"hmac","","",17,null],[4,"CodecError","","",null,null],[13,"EncodingError","","Error encoding.",18,null],[13,"DecodingError","","Error decoding.",18,null],[13,"Other","","Some other error occurred.",18,null],[4,"VecSize","","",null,null],[13,"VecU8","","",19,null],[13,"VecU16","","",19,null],[13,"VecU32","","",19,null],[13,"VecU64","","",19,null],[3,"Cursor","","",null,null],[12,"buffer","","",20,null],[12,"position","","",20,null],[8,"Codec","","",null,null],[11,"encode","openmls::codec","",21,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",21,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode_detached","","",21,[[],[["vec",3],["codecerror",4],["result",4]]]],[11,"decode_detached","","",21,[[],[["codecerror",4],["result",4]]]],[5,"encode_vec","openmls::prelude","",null,[[["vecsize",4],["vec",3]],[["result",4],["codecerror",4]]]],[5,"decode_vec","","",null,[[["cursor",3],["vecsize",4]],[["vec",3],["codecerror",4],["result",4]]]],[4,"CredentialError","","",null,null],[13,"ConfigError","","See <code>ConfigError</code> for details.",28,null],[13,"CryptoError","","See <code>CryptoError</code> for details.",28,null],[13,"CodecError","","See <code>CodecError</code> for details.",28,null],[13,"UnsupportedCredentialType","","Unsupported credential type.",28,null],[13,"InvalidSignature","","Invalid signature.",28,null],[13,"SignatureError","","Error while signing.",28,null],[4,"CredentialType","","Enum for Credential Types. We only need this for …",null,null],[13,"Basic","","",29,null],[13,"X509","","",29,null],[3,"Certificate","","Struct containing an X509 certificate chain, as per Spec.",null,null],[12,"cert_data","","",30,null],[4,"MLSCredentialType","","This enum contains the different available credentials.",null,null],[13,"Basic","","",31,null],[13,"X509","","",31,null],[3,"Credential","","Struct containing MLS credential data, where the data …",null,null],[12,"credential_type","","",32,null],[12,"credential","","",32,null],[3,"BasicCredential","","",null,null],[12,"identity","","",33,null],[12,"signature_scheme","","",33,null],[12,"public_key","","",33,null],[3,"CredentialBundle","","This struct contains a credential and the corresponding …",null,null],[12,"credential","","",34,null],[12,"signature_private_key","","",34,null],[3,"CapabilitiesExtension","","",null,null],[12,"versions","","",35,null],[12,"ciphersuites","","",35,null],[12,"extensions","","",35,null],[4,"ExtensionError","","",null,null],[13,"InvalidExtensionType","","Invalid extension type error.",36,null],[13,"Capabilities","","Capabilities extension error. See …",36,null],[13,"Lifetime","","Lifetime extension error. See <code>LifetimeExtensionError</code> for …",36,null],[13,"KeyPackageId","","Key package ID extension error. See <code>KeyPackageIdError</code> for …",36,null],[13,"ParentHash","","Parent hash extension error. See <code>ParentHashError</code> for …",36,null],[13,"RatchetTree","","Ratchet tree extension error. See <code>RatchetTreeError</code> for …",36,null],[13,"CodecError","","Error decoding or encoding an extension.",36,null],[13,"ConfigError","","Configuration error. See <code>ConfigError</code> for details.",36,null],[13,"InvalidExtension","","The extension is malformed. See <code>InvalidExtensionError</code> for …",36,null],[4,"LifetimeExtensionError","","",null,null],[13,"Invalid","","Invalid lifetime extensions.",37,null],[13,"Expired","","Lifetime extension is expired.",37,null],[4,"CapabilitiesExtensionError","","",null,null],[13,"Invalid","","Invalid capabilities extensions.",38,null],[13,"EmptyVersionsField","","Capabilities extension is missing a version field.",38,null],[13,"UnsupportedCiphersuite","","Capabilities contains only unsupported ciphersuites.",38,null],[4,"KeyPackageIdError","","",null,null],[13,"Invalid","","Invalid key package ID extensions.",39,null],[4,"ParentHashError","","",null,null],[13,"Invalid","","Invalid parent hash extensions.",40,null],[4,"RatchetTreeError","","",null,null],[13,"Invalid","","Invalid ratchet tree extensions.",41,null],[4,"InvalidExtensionError","","",null,null],[13,"Duplicate","","The provided extension list contains duplicate extensions.",42,null],[3,"KeyIDExtension","","",null,null],[12,"key_id","","",43,null],[3,"LifetimeExtension","","The lifetime extension holds a not before and a not after …",null,null],[12,"not_before","","",44,null],[12,"not_after","","",44,null],[4,"ExtensionType","","Extension typesIANA registrations",null,null],[13,"Reserved","","",47,null],[13,"Capabilities","","",47,null],[13,"Lifetime","","",47,null],[13,"KeyID","","",47,null],[13,"ParentHash","","",47,null],[13,"RatchetTree","","",47,null],[3,"ExtensionStruct","","Extension structAn extension has an <code>ExtensionType</code> and an …",null,null],[12,"extension_type","","",48,null],[12,"extension_data","","",48,null],[8,"Extension","","ExtensionThis trait defines functions to interact with an …",null,null],[10,"new_from_bytes","","Build a new extension from a byte slice.",49,[[],[["result",4],["extensionerror",4]]]],[10,"extension_type","","Each extension has an extension type. This should be an …",49,[[],["extensiontype",4]]],[10,"to_extension_struct","","Get the extension as <code>ExtensionStruct</code> for encoding.",49,[[],["extensionstruct",3]]],[10,"as_any","","Get a generic trait object for downcasting.",49,[[],["any",8]]],[11,"to_parent_hash_extension","openmls::extensions","Get a reference to the <code>ParentHashExtension</code>. Returns an …",49,[[],[["result",4],["extensionerror",4],["parenthashextension",3]]]],[11,"to_capabilities_extension","","Get a reference to the <code>CapabilitiesExtension</code>. Returns an …",49,[[],[["capabilitiesextension",3],["result",4],["extensionerror",4]]]],[11,"to_lifetime_extension","","Get a reference to the <code>LifetimeExtension</code>. Returns an …",49,[[],[["extensionerror",4],["result",4],["lifetimeextension",3]]]],[11,"to_key_id_extension","","Get a reference to the <code>KeyIDExtension</code>. Returns an …",49,[[],[["extensionerror",4],["result",4],["keyidextension",3]]]],[11,"as_ratchet_tree_extension","","Get a reference to the <code>RatchetTreeExtension</code>. Returns an …",49,[[],[["ratchettreeextension",3],["extensionerror",4],["result",4]]]],[8,"ExtensionHelper","openmls::prelude","",null,null],[10,"clone_it","","",50,[[],[["extension",8],["box",3]]]],[4,"KeyPackageError","","",null,null],[13,"ExtensionError","","See <code>ExtensionError</code> for details.",108,null],[13,"ConfigError","","See <code>ConfigError</code> for details.",108,null],[13,"UnsupportedCiphersuite","","The requested ciphersuite is not supported.",108,null],[13,"UnknownConfigError","","An unknown configuration error occurred.",108,null],[13,"MandatoryExtensionsMissing","","A mandatory extension is missing in the key package.",108,null],[13,"InvalidLifetimeExtension","","The lifetime extension of the key package is not valid.",108,null],[13,"InvalidSignature","","The key package signature is not valid.",108,null],[13,"LibraryError","","An unknown OpenMLS library error occurred.",108,null],[13,"DuplicateExtension","","Duplicate extensions are not allowed.",108,null],[13,"NoCiphersuitesSupplied","","Creating a new key package requires at least one …",108,null],[13,"CiphersuiteMismatch","","The list of ciphersuites is not consistent with the …",108,null],[13,"CiphersuiteSignatureSchemeMismatch","","The ciphersuite does not match the signature scheme.",108,null],[3,"KeyPackage","","",null,null],[12,"protocol_version","","",109,null],[12,"ciphersuite","","",109,null],[12,"hpke_init_key","","",109,null],[12,"credential","","",109,null],[12,"extensions","","",109,null],[12,"signature","","",109,null],[3,"KeyPackageBundle","","",null,null],[12,"key_package","","",110,null],[12,"private_key","","",110,null],[12,"leaf_secret","","",110,null],[3,"AddProposal","","",null,null],[12,"key_package","","",121,null],[3,"PreSharedKeyProposal","","Preshared Key proposal 11.1.4 struct { PreSharedKeyID psk;…",null,null],[12,"psk","","",124,null],[3,"ReInitProposal","","ReInit proposal 11.1.5 struct { opaque group_id<0..255>; …",null,null],[12,"group_id","","",125,null],[12,"version","","",125,null],[12,"ciphersuite","","",125,null],[12,"extensions","","",125,null],[3,"RemoveProposal","","",null,null],[12,"removed","","",123,null],[3,"UpdateProposal","","",null,null],[12,"key_package","","",122,null],[3,"BranchPsk","","Branch PSK",null,null],[12,"psk_group_id","","",143,null],[12,"psk_epoch","","",143,null],[3,"ExternalPsk","","External PSK.",null,null],[12,"psk_id","","",140,null],[4,"PSKType","","Type of PSK.",null,null],[13,"External","","",139,null],[13,"Reinit","","",139,null],[13,"Branch","","",139,null],[3,"PreSharedKeyID","","A <code>PreSharedKeyID</code> is used to uniquely identify the PSKs …",null,null],[12,"psk_type","","",145,null],[12,"psk","","",145,null],[12,"psk_nonce","","",145,null],[3,"PreSharedKeys","","<code>PreSharedKeys</code> is a vector of <code>PreSharedKeyID</code>s. struct { …",null,null],[12,"psks","","",146,null],[4,"Psk","","PSK enum that can contain the different PSK types",null,null],[13,"External","","",144,null],[13,"Reinit","","",144,null],[13,"Branch","","",144,null],[3,"ReinitPsk","","ReInit PSK.",null,null],[12,"psk_group_id","","",142,null],[12,"psk_epoch","","",142,null],[5,"_print_tree","","",null,[[["ratchettree",3]]]],[11,"from","openmls::error","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","openmls::ciphersuite::errors","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","openmls::ciphersuite","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"erased_serialize","","",5,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"erased_serialize","","",6,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"erased_serialize","","",7,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"erased_serialize","","",9,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"erased_serialize","","",13,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"erased_serialize","","",15,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"erased_serialize","","",17,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","openmls::codec::errors","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","openmls::codec","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","openmls::config::errors","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","openmls::config","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"erased_serialize","","",24,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"erased_serialize","","",26,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"erased_serialize","","",27,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","openmls::credentials::errors","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"to_string","","",28,[[],["string",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","openmls::credentials","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"erased_serialize","","",29,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"erased_serialize","","",30,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"erased_serialize","","",31,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"erased_serialize","","",32,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"erased_serialize","","",33,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","openmls::extensions::capabilities_extension","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"erased_serialize","","",35,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","openmls::extensions::errors","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"to_string","","",36,[[],["string",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"to_string","","",37,[[],["string",3]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"to_string","","",38,[[],["string",3]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"to_string","","",39,[[],["string",3]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"to_string","","",41,[[],["string",3]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"to_string","","",42,[[],["string",3]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","openmls::extensions::key_package_id_extension","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"erased_serialize","","",43,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","openmls::extensions::life_time_extension","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"erased_serialize","","",44,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","openmls::extensions::parent_hash_extension","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"erased_serialize","","",45,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","openmls::extensions::ratchet_tree_extension","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"erased_serialize","","",46,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","openmls::extensions","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"erased_serialize","","",47,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"erased_serialize","","",48,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","openmls::framing::ciphertext","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from","openmls::framing::errors","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"to_string","","",56,[[],["string",3]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"to_string","","",57,[[],["string",3]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"to_string","","",58,[[],["string",3]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"from","openmls::framing::plaintext","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"erased_serialize","","",59,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"erased_serialize","","",60,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"erased_serialize","","",61,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"erased_serialize","","",62,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"erased_serialize","","",64,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"from","openmls::framing::sender","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"erased_serialize","","",69,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"erased_serialize","","",70,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","openmls::group::errors","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"to_string","","",71,[[],["string",3]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"to_string","","",72,[[],["string",3]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"to_string","","",73,[[],["string",3]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"vzip","","",73,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"to_string","","",74,[[],["string",3]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"to_string","","",75,[[],["string",3]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"to_string","","",76,[[],["string",3]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"from","openmls::group::managed_group::callbacks","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"from","openmls::group::managed_group::config","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"erased_serialize","","",78,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"erased_serialize","","",79,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"erased_serialize","","",80,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","openmls::group::managed_group::errors","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"to_string","","",81,[[],["string",3]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"to_string","","",82,[[],["string",3]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"to_string","","",83,[[],["string",3]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"to_string","","",84,[[],["string",3]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"to_string","","",85,[[],["string",3]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"vzip","","",85,[[]]],[11,"from","openmls::group::managed_group::events","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"vzip","","",91,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"vzip","","",92,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"vzip","","",94,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"vzip","","",95,[[]]],[11,"from","openmls::group::managed_group::resumption","",96,[[]]],[11,"into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"vzip","","",96,[[]]],[11,"erased_serialize","","",96,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","openmls::group::managed_group::ser","",97,[[]]],[11,"into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"vzip","","",97,[[]]],[11,"erased_serialize","","",97,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","openmls::group::managed_group","",98,[[]]],[11,"into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"vzip","","",98,[[]]],[11,"erased_serialize","","",98,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"vzip","","",99,[[]]],[11,"from","openmls::group::mls_group::create_commit","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"vzip","","",100,[[]]],[11,"from","openmls::group::mls_group","",101,[[]]],[11,"into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"vzip","","",101,[[]]],[11,"erased_serialize","","",101,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","openmls::group::tests::kat_transcripts","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"vzip","","",102,[[]]],[11,"erased_serialize","","",102,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"to_string","","",103,[[],["string",3]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"vzip","","",103,[[]]],[11,"from","openmls::group","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"vzip","","",104,[[]]],[11,"erased_serialize","","",104,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"vzip","","",105,[[]]],[11,"erased_serialize","","",105,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"vzip","","",106,[[]]],[11,"erased_serialize","","",106,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"vzip","","",107,[[]]],[11,"from","openmls::key_packages::errors","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"to_string","","",108,[[],["string",3]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"vzip","","",108,[[]]],[11,"from","openmls::key_packages","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"vzip","","",109,[[]]],[11,"erased_serialize","","",109,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"vzip","","",110,[[]]],[11,"erased_serialize","","",110,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","openmls::messages::errors","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"to_string","","",111,[[],["string",3]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"vzip","","",111,[[]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"to_string","","",112,[[],["string",3]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"vzip","","",112,[[]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"to_string","","",113,[[],["string",3]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"vzip","","",113,[[]]],[11,"from","openmls::messages::proposals","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"vzip","","",114,[[]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"vzip","","",115,[[]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"vzip","","",116,[[]]],[11,"erased_serialize","","",116,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"vzip","","",117,[[]]],[11,"erased_serialize","","",117,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"vzip","","",118,[[]]],[11,"erased_serialize","","",118,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"vzip","","",119,[[]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"vzip","","",120,[[]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"vzip","","",121,[[]]],[11,"erased_serialize","","",121,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"vzip","","",122,[[]]],[11,"erased_serialize","","",122,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"vzip","","",123,[[]]],[11,"erased_serialize","","",123,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"vzip","","",124,[[]]],[11,"erased_serialize","","",124,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"vzip","","",125,[[]]],[11,"erased_serialize","","",125,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","openmls::messages","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"vzip","","",126,[[]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"vzip","","",127,[[]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"vzip","","",128,[[]]],[11,"erased_serialize","","",128,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"vzip","","",129,[[]]],[11,"erased_serialize","","",129,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"vzip","","",130,[[]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"vzip","","",131,[[]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"vzip","","",132,[[]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"vzip","","",133,[[]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"vzip","","",134,[[]]],[11,"from","openmls::schedule::errors","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"to_string","","",135,[[],["string",3]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"vzip","","",135,[[]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"to_string","","",136,[[],["string",3]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"vzip","","",136,[[]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"to_string","","",137,[[],["string",3]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"vzip","","",137,[[]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"to_string","","",138,[[],["string",3]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"vzip","","",138,[[]]],[11,"from","openmls::schedule::psk","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"vzip","","",139,[[]]],[11,"erased_serialize","","",139,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"vzip","","",140,[[]]],[11,"erased_serialize","","",140,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"vzip","","",141,[[]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"vzip","","",142,[[]]],[11,"erased_serialize","","",142,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"vzip","","",143,[[]]],[11,"erased_serialize","","",143,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"vzip","","",144,[[]]],[11,"erased_serialize","","",144,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"vzip","","",145,[[]]],[11,"erased_serialize","","",145,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"vzip","","",146,[[]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"vzip","","",147,[[]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"vzip","","",148,[[]]],[11,"from","openmls::schedule::kat_key_schedule","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"vzip","","",149,[[]]],[11,"erased_serialize","","",149,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"vzip","","",150,[[]]],[11,"erased_serialize","","",150,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","openmls::schedule","",151,[[]]],[11,"into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"vzip","","",151,[[]]],[11,"erased_serialize","","",151,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"vzip","","",152,[[]]],[11,"erased_serialize","","",152,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"vzip","","",153,[[]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"vzip","","",154,[[]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"vzip","","",155,[[]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"vzip","","",156,[[]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"vzip","","",157,[[]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"vzip","","",158,[[]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"vzip","","",159,[[]]],[11,"erased_serialize","","",159,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"vzip","","",160,[[]]],[11,"erased_serialize","","",160,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"vzip","","",161,[[]]],[11,"erased_serialize","","",161,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"vzip","","",162,[[]]],[11,"erased_serialize","","",162,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"vzip","","",163,[[]]],[11,"erased_serialize","","",163,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"vzip","","",164,[[]]],[11,"erased_serialize","","",164,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"vzip","","",165,[[]]],[11,"erased_serialize","","",165,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"vzip","","",166,[[]]],[11,"erased_serialize","","",166,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"vzip","","",167,[[]]],[11,"erased_serialize","","",167,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","openmls::tree::errors","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"to_string","","",168,[[],["string",3]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"vzip","","",168,[[]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"to_string","","",169,[[],["string",3]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"vzip","","",169,[[]]],[11,"from","openmls::tree::hashes","",170,[[]]],[11,"into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"vzip","","",170,[[]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"vzip","","",171,[[]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"vzip","","",172,[[]]],[11,"from","openmls::tree::index","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"vzip","","",173,[[]]],[11,"erased_serialize","","",173,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"vzip","","",174,[[]]],[11,"erased_serialize","","",174,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","openmls::tree::node","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"vzip","","",175,[[]]],[11,"erased_serialize","","",175,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"vzip","","",176,[[]]],[11,"erased_serialize","","",176,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"vzip","","",177,[[]]],[11,"erased_serialize","","",177,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","openmls::tree::path_keys","",178,[[]]],[11,"into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"vzip","","",178,[[]]],[11,"erased_serialize","","",178,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","openmls::tree::private_tree","",179,[[]]],[11,"into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"vzip","","",179,[[]]],[11,"erased_serialize","","",179,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","openmls::tree::secret_tree","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"to_string","","",180,[[],["string",3]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"vzip","","",180,[[]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"vzip","","",181,[[]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"vzip","","",182,[[]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"vzip","","",183,[[]]],[11,"erased_serialize","","",183,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"vzip","","",184,[[]]],[11,"erased_serialize","","",184,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","openmls::tree::sender_ratchet","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"vzip","","",185,[[]]],[11,"erased_serialize","","",185,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","openmls::tree::treemath","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"to_string","","",186,[[],["string",3]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"vzip","","",186,[[]]],[11,"from","openmls::tree::tests::kat_encryption","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"vzip","","",187,[[]]],[11,"erased_serialize","","",187,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"vzip","","",188,[[]]],[11,"erased_serialize","","",188,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"vzip","","",189,[[]]],[11,"erased_serialize","","",189,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"vzip","","",190,[[]]],[11,"erased_serialize","","",190,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"to_string","","",191,[[],["string",3]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"vzip","","",191,[[]]],[11,"from","openmls::tree::tests::kat_treemath","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"vzip","","",192,[[]]],[11,"erased_serialize","","",192,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"to_string","","",193,[[],["string",3]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"vzip","","",193,[[]]],[11,"from","openmls::tree","",194,[[]]],[11,"into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"vzip","","",194,[[]]],[11,"erased_serialize","","",194,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"vzip","","",195,[[]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"vzip","","",196,[[]]],[11,"erased_serialize","","",196,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"vzip","","",197,[[]]],[11,"erased_serialize","","",197,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"unsigned_payload","openmls::messages","",130,[[],[["vec",3],["codecerror",4],["result",4]]]],[11,"encode","openmls::ciphersuite","",5,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",5,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",6,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",6,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",15,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",13,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",13,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",7,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",7,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",11,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",11,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",9,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",9,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",8,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::config","",27,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",27,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::credentials","",29,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",29,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",32,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",32,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",33,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",33,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::extensions","",47,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",47,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",48,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",48,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::framing::plaintext","",59,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",59,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::framing::ciphertext","",51,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",51,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::framing::plaintext","",60,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",60,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",61,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",62,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",62,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",64,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",64,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",65,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::framing::ciphertext","",52,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",52,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",53,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",53,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",55,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",55,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::framing::plaintext","",67,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",68,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::framing::sender","",69,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",69,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",70,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",70,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::group","",104,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",104,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",105,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",105,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",106,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::key_packages","",109,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",109,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::messages","",128,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",128,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",129,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",129,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",130,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",130,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",131,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",131,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",127,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",127,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",126,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",126,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",132,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::messages::proposals","",114,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",115,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",116,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",116,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",117,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",117,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",118,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",118,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",121,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",121,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",122,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",122,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",123,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",123,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",124,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",124,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",125,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",125,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::messages","",133,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",133,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",134,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::schedule::psk","",139,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",139,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",140,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",140,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",142,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",142,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",143,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",143,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",145,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",145,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",146,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",146,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::schedule","",153,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",153,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::schedule::psk","",147,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::tree::node","",175,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",175,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",176,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",176,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",177,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",177,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::tree","",196,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",196,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",197,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",197,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::tree::secret_tree","",183,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::tree::hashes","",170,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",172,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",171,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::tree::index","",174,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::tree::secret_tree","",182,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"extension_type","openmls::extensions::capabilities_extension","",35,[[],["extensiontype",4]]],[11,"new_from_bytes","","Build a new CapabilitiesExtension from a byte slice. …",35,[[],[["result",4],["extensionerror",4]]]],[11,"to_extension_struct","","",35,[[],["extensionstruct",3]]],[11,"as_any","","",35,[[],["any",8]]],[11,"extension_type","openmls::extensions::key_package_id_extension","",43,[[],["extensiontype",4]]],[11,"new_from_bytes","","Build a new KeyIDExtension from a byte slice.",43,[[],[["result",4],["extensionerror",4]]]],[11,"to_extension_struct","","",43,[[],["extensionstruct",3]]],[11,"as_any","","",43,[[],["any",8]]],[11,"extension_type","openmls::extensions::life_time_extension","",44,[[],["extensiontype",4]]],[11,"new_from_bytes","","Build a new LifetimeExtension from a byte slice.",44,[[],[["result",4],["extensionerror",4]]]],[11,"to_extension_struct","","",44,[[],["extensionstruct",3]]],[11,"as_any","","",44,[[],["any",8]]],[11,"extension_type","openmls::extensions::parent_hash_extension","",45,[[],["extensiontype",4]]],[11,"new_from_bytes","","Build a new ParentHashExtension from a byte slice.",45,[[],[["result",4],["extensionerror",4]]]],[11,"to_extension_struct","","",45,[[],["extensionstruct",3]]],[11,"as_any","","",45,[[],["any",8]]],[11,"extension_type","openmls::extensions::ratchet_tree_extension","",46,[[],["extensiontype",4]]],[11,"new_from_bytes","","Build a new RatchetTreeExtension from a byte slice.",46,[[],[["result",4],["extensionerror",4]]]],[11,"to_extension_struct","","",46,[[],["extensionstruct",3]]],[11,"as_any","","",46,[[],["any",8]]],[11,"from","openmls::error","",0,[[["string",3]]]],[11,"from","","",0,[[]]],[11,"from","","",1,[[["vec",3]]]],[11,"from","","",1,[[]]],[11,"from","openmls::ciphersuite","",6,[[["ciphersuitename",4]]]],[11,"from","","",9,[[["vec",3]]]],[11,"from","","",9,[[]]],[11,"from","openmls::codec::errors","",18,[[["configerror",4]],["codecerror",4]]],[11,"from","openmls::config","",26,[[["persistentconfig",3]]]],[11,"from","openmls::credentials::errors","",28,[[["configerror",4]]]],[11,"from","","",28,[[["cryptoerror",4]]]],[11,"from","","",28,[[["codecerror",4]]]],[11,"from","openmls::credentials","",32,[[["mlscredentialtype",4]]]],[11,"from","openmls::extensions::errors","",36,[[["errorstring",3]]]],[11,"from","","",36,[[["capabilitiesextensionerror",4]]]],[11,"from","","",36,[[["lifetimeextensionerror",4]]]],[11,"from","","",36,[[["keypackageiderror",4]]]],[11,"from","","",36,[[["parenthasherror",4]]]],[11,"from","","",36,[[["ratchettreeerror",4]]]],[11,"from","","",36,[[["codecerror",4]]]],[11,"from","","",36,[[["configerror",4]]]],[11,"from","","",36,[[["invalidextensionerror",4]]]],[11,"from","openmls::framing::errors","",57,[[["mlsplaintexterror",4]]]],[11,"from","","",57,[[["secrettreeerror",4]]]],[11,"from","","",57,[[["codecerror",4]]]],[11,"from","","",58,[[["codecerror",4]]]],[11,"from","","",58,[[["credentialerror",4]]]],[11,"from","openmls::framing::plaintext","",60,[[["mlsplaintextcontenttype",4]]]],[11,"from","","",62,[[["vec",3]]]],[11,"from","","",68,[[["confirmationtag",3]]]],[11,"from","openmls::group::errors","",71,[[["mlsciphertexterror",4]]]],[11,"from","","",71,[[["welcomeerror",4]]]],[11,"from","","",71,[[["applycommiterror",4]]]],[11,"from","","",71,[[["createcommiterror",4]]]],[11,"from","","",71,[[["configerror",4]]]],[11,"from","","",71,[[["exportererror",4]]]],[11,"from","","",71,[[["proposalqueueerror",4]]]],[11,"from","","",71,[[["codecerror",4]]]],[11,"from","","",71,[[["keyscheduleerror",4]]]],[11,"from","","",71,[[["treematherror",4]]]],[11,"from","","",71,[[["pskerror",4]]]],[11,"from","","",72,[[["treeerror",4]]]],[11,"from","","",72,[[["parenthasherror",4]]]],[11,"from","","",72,[[["cryptoerror",4]]]],[11,"from","","",72,[[["codecerror",4]]]],[11,"from","","",72,[[["keyscheduleerror",4]]]],[11,"from","","",72,[[["pskerror",4]]]],[11,"from","","",73,[[["verificationerror",4]]]],[11,"from","","",73,[[["treeerror",4]]]],[11,"from","","",73,[[["codecerror",4]]]],[11,"from","","",73,[[["keyscheduleerror",4]]]],[11,"from","","",73,[[["pskerror",4]]]],[11,"from","","",76,[[["psksecreterror",4]]]],[11,"from","openmls::group::managed_group::errors","",81,[[["errorstring",3]]]],[11,"from","","",81,[[["codecerror",4]]]],[11,"from","","",81,[[["configerror",4]]]],[11,"from","","",81,[[["grouperror",4]]]],[11,"from","","",81,[[["createcommiterror",4]]]],[11,"from","","",81,[[["useaftereviction",4]]]],[11,"from","","",81,[[["pendingproposalserror",4]]]],[11,"from","","",81,[[["exportererror",4]]]],[11,"from","","",81,[[["emptyinputerror",4]]]],[11,"from","","",85,[[["errorpayload",3]]]],[11,"from","","",85,[[["errorstring",3]]]],[11,"from","","",85,[[["applycommiterror",4]]]],[11,"from","","",85,[[["grouperror",4]]]],[11,"from","openmls::group::managed_group","",99,[[["mlsplaintext",3]]]],[11,"from","","",99,[[["mlsciphertext",3]]]],[11,"from","openmls::key_packages::errors","",108,[[["extensionerror",4]]]],[11,"from","","",108,[[["configerror",4]]]],[11,"from","openmls::messages::errors","",111,[[["queuedproposalerror",4]]]],[11,"from","openmls::codec::errors","",18,[[["proposalorreftypeerror",4]]]],[11,"from","openmls::messages","",129,[[["vec",3]]]],[11,"from","openmls::schedule::errors","",136,[[["errorstate",4]]]],[11,"from","openmls::tree::errors","",168,[[["cryptoerror",4]]]],[11,"from","openmls::tree::index","",173,[[],["nodeindex",3]]],[11,"from","","",173,[[],["nodeindex",3]]],[11,"from","","",173,[[["leafindex",3]],["nodeindex",3]]],[11,"from","","",174,[[],["leafindex",3]]],[11,"from","","",174,[[],["leafindex",3]]],[11,"from","openmls::tree::secret_tree","",181,[[["contenttype",4]],["secrettype",4]]],[11,"from","","",181,[[["mlsplaintext",3]],["secrettype",4]]],[11,"clone","openmls::error","",0,[[],["errorstring",3]]],[11,"clone","","",1,[[],["errorpayload",3]]],[11,"clone","openmls::ciphersuite::errors","",2,[[],["hkdferror",4]]],[11,"clone","","",3,[[],["cryptoerror",4]]],[11,"clone","openmls::ciphersuite","",5,[[],["ciphersuitename",4]]],[11,"clone","","",6,[[],["signaturescheme",4]]],[11,"clone","","",7,[[],["hpkeciphertext",3]]],[11,"clone","","",9,[[],["secret",3]]],[11,"clone","","",11,[[],["reuseguard",3]]],[11,"clone","","",12,[[],["aeadnonce",3]]],[11,"clone","","",13,[[],["signature",3]]],[11,"clone","","",14,[[],["signatureprivatekey",3]]],[11,"clone","","",15,[[],["signaturepublickey",3]]],[11,"clone","","",16,[[],["signaturekeypair",3]]],[11,"clone","","",17,[[]]],[11,"clone","openmls::codec::errors","",18,[[],["codecerror",4]]],[11,"clone","openmls::config::errors","",22,[[],["configerror",4]]],[11,"clone","openmls::config","",24,[[],["constants",3]]],[11,"clone","","",26,[[],["config",3]]],[11,"clone","","",27,[[],["protocolversion",4]]],[11,"clone","openmls::credentials::errors","",28,[[],["credentialerror",4]]],[11,"clone","openmls::credentials","",29,[[],["credentialtype",4]]],[11,"clone","","",30,[[],["certificate",3]]],[11,"clone","","",31,[[],["mlscredentialtype",4]]],[11,"clone","","",32,[[],["credential",3]]],[11,"clone","","",33,[[],["basiccredential",3]]],[11,"clone","openmls::extensions::capabilities_extension","",35,[[],["capabilitiesextension",3]]],[11,"clone","openmls::extensions::errors","",36,[[],["extensionerror",4]]],[11,"clone","","",37,[[],["lifetimeextensionerror",4]]],[11,"clone","","",38,[[],["capabilitiesextensionerror",4]]],[11,"clone","","",39,[[],["keypackageiderror",4]]],[11,"clone","","",40,[[],["parenthasherror",4]]],[11,"clone","","",41,[[],["ratchettreeerror",4]]],[11,"clone","","",42,[[],["invalidextensionerror",4]]],[11,"clone","openmls::extensions::key_package_id_extension","",43,[[],["keyidextension",3]]],[11,"clone","openmls::extensions::life_time_extension","",44,[[],["lifetimeextension",3]]],[11,"clone","openmls::extensions::parent_hash_extension","",45,[[],["parenthashextension",3]]],[11,"clone","openmls::extensions::ratchet_tree_extension","",46,[[],["ratchettreeextension",3]]],[11,"clone","openmls::extensions","",47,[[],["extensiontype",4]]],[11,"clone","","",48,[[],["extensionstruct",3]]],[11,"clone","openmls::framing::ciphertext","",51,[[],["mlsciphertext",3]]],[11,"clone","","",52,[[],["mlssenderdata",3]]],[11,"clone","","",53,[[],["mlssenderdataaad",3]]],[11,"clone","","",54,[[],["mlsciphertextcontent",3]]],[11,"clone","","",55,[[],["mlsciphertextcontentaad",3]]],[11,"clone","openmls::framing::errors","",56,[[],["mlsplaintexterror",4]]],[11,"clone","","",57,[[],["mlsciphertexterror",4]]],[11,"clone","","",58,[[],["verificationerror",4]]],[11,"clone","openmls::framing::plaintext","",59,[[],["mlsplaintext",3]]],[11,"clone","","",60,[[],["contenttype",4]]],[11,"clone","","",61,[[],["mlsplaintextcontenttype",4]]],[11,"clone","","",62,[[],["mac",3]]],[11,"clone","","",64,[[],["membershiptag",3]]],[11,"clone","openmls::framing::sender","",69,[[],["sendertype",4]]],[11,"clone","","",70,[[],["sender",3]]],[11,"clone","openmls::group::errors","",71,[[],["grouperror",4]]],[11,"clone","","",72,[[],["welcomeerror",4]]],[11,"clone","","",73,[[],["applycommiterror",4]]],[11,"clone","","",74,[[],["createcommiterror",4]]],[11,"clone","","",75,[[],["exportererror",4]]],[11,"clone","","",76,[[],["pskerror",4]]],[11,"clone","openmls::group::managed_group::callbacks","",77,[[],["managedgroupcallbacks",3]]],[11,"clone","openmls::group::managed_group::config","",78,[[],["handshakemessageformat",4]]],[11,"clone","","",79,[[],["managedgroupconfig",3]]],[11,"clone","","",80,[[],["updatepolicy",3]]],[11,"clone","openmls::group::managed_group::errors","",81,[[],["managedgrouperror",4]]],[11,"clone","","",82,[[],["emptyinputerror",4]]],[11,"clone","","",83,[[],["useaftereviction",4]]],[11,"clone","","",84,[[],["pendingproposalserror",4]]],[11,"clone","","",85,[[],["invalidmessageerror",4]]],[11,"clone","openmls::group::managed_group::events","",86,[[],["groupevent",4]]],[11,"clone","","",87,[[],["memberaddedevent",3]]],[11,"clone","","",88,[[],["memberremovedevent",3]]],[11,"clone","","",89,[[],["memberupdatedevent",3]]],[11,"clone","","",90,[[],["pskreceivedevent",3]]],[11,"clone","","",91,[[],["reinitevent",3]]],[11,"clone","","",92,[[],["applicationmessageevent",3]]],[11,"clone","","",93,[[],["invalidmessageevent",3]]],[11,"clone","","",94,[[],["errorevent",3]]],[11,"clone","","",95,[[],["removal",4]]],[11,"clone","openmls::group::managed_group","",99,[[],["mlsmessage",4]]],[11,"clone","openmls::group::tests::kat_transcripts","",102,[[],["transcripttestvector",3]]],[11,"clone","","",103,[[],["transcripttestvectorerror",4]]],[11,"clone","openmls::group","",104,[[],["groupid",3]]],[11,"clone","","",105,[[],["groupepoch",3]]],[11,"clone","","",106,[[],["groupcontext",3]]],[11,"clone","","",107,[[],["groupconfig",3]]],[11,"clone","openmls::key_packages::errors","",108,[[],["keypackageerror",4]]],[11,"clone","openmls::key_packages","",109,[[],["keypackage",3]]],[11,"clone","openmls::messages::errors","",111,[[],["proposalqueueerror",4]]],[11,"clone","","",112,[[],["proposalorreftypeerror",4]]],[11,"clone","","",113,[[],["queuedproposalerror",4]]],[11,"clone","openmls::messages::proposals","",114,[[],["proposaltype",4]]],[11,"clone","","",115,[[],["proposalorreftype",4]]],[11,"clone","","",116,[[],["proposalorref",4]]],[11,"clone","","",117,[[],["proposal",4]]],[11,"clone","","",118,[[],["proposalreference",3]]],[11,"clone","","",119,[[],["queuedproposal",3]]],[11,"clone","","",121,[[],["addproposal",3]]],[11,"clone","","",122,[[],["updateproposal",3]]],[11,"clone","","",123,[[],["removeproposal",3]]],[11,"clone","","",124,[[],["presharedkeyproposal",3]]],[11,"clone","","",125,[[],["reinitproposal",3]]],[11,"clone","openmls::messages","",126,[[],["welcome",3]]],[11,"clone","","",127,[[],["encryptedgroupsecrets",3]]],[11,"clone","","",128,[[],["commit",3]]],[11,"clone","","",129,[[],["confirmationtag",3]]],[11,"clone","openmls::schedule::errors","",135,[[],["errorstate",4]]],[11,"clone","","",136,[[],["keyscheduleerror",4]]],[11,"clone","","",137,[[],["psksecreterror",4]]],[11,"clone","","",138,[[],["kstestvectorerror",4]]],[11,"clone","openmls::schedule::psk","",139,[[],["psktype",4]]],[11,"clone","","",140,[[],["externalpsk",3]]],[11,"clone","","",142,[[],["reinitpsk",3]]],[11,"clone","","",143,[[],["branchpsk",3]]],[11,"clone","","",144,[[],["psk",4]]],[11,"clone","","",145,[[],["presharedkeyid",3]]],[11,"clone","openmls::schedule::kat_key_schedule","",149,[[],["epoch",3]]],[11,"clone","","",150,[[],["keyscheduletestvector",3]]],[11,"clone","openmls::schedule","",165,[[],["resumptionsecret",3]]],[11,"clone","openmls::tree::errors","",168,[[],["treeerror",4]]],[11,"clone","","",169,[[],["parenthasherror",4]]],[11,"clone","openmls::tree::index","",173,[[],["nodeindex",3]]],[11,"clone","","",174,[[],["leafindex",3]]],[11,"clone","openmls::tree::node","",175,[[],["nodetype",4]]],[11,"clone","","",176,[[],["node",3]]],[11,"clone","","",177,[[],["parentnode",3]]],[11,"clone","openmls::tree::secret_tree","",180,[[],["secrettreeerror",4]]],[11,"clone","","",181,[[],["secrettype",4]]],[11,"clone","","",183,[[],["secrettreenode",3]]],[11,"clone","openmls::tree::sender_ratchet","",185,[[],["senderratchet",3]]],[11,"clone","openmls::tree::treemath","",186,[[],["treematherror",4]]],[11,"clone","openmls::tree::tests::kat_encryption","",187,[[],["senderdatainfo",3]]],[11,"clone","","",188,[[],["ratchetstep",3]]],[11,"clone","","",189,[[],["leafsequence",3]]],[11,"clone","","",190,[[],["encryptiontestvector",3]]],[11,"clone","","",191,[[],["enctestvectorerror",4]]],[11,"clone","openmls::tree::tests::kat_treemath","",192,[[],["treemathtestvector",3]]],[11,"clone","","",193,[[],["tmtestvectorerror",4]]],[11,"clone","openmls::tree","",196,[[],["updatepathnode",3]]],[11,"clone","","",197,[[],["updatepath",3]]],[11,"default","openmls::ciphersuite","",9,[[]]],[11,"default","openmls::config","",27,[[]]],[11,"default","openmls::extensions::capabilities_extension","",35,[[]]],[11,"default","openmls::extensions::key_package_id_extension","",43,[[],["keyidextension",3]]],[11,"default","openmls::extensions::life_time_extension","",44,[[]]],[11,"default","openmls::extensions::parent_hash_extension","",45,[[],["parenthashextension",3]]],[11,"default","openmls::extensions::ratchet_tree_extension","",46,[[],["ratchettreeextension",3]]],[11,"default","openmls::extensions","",47,[[]]],[11,"default","openmls::group::managed_group::callbacks","",77,[[],["managedgroupcallbacks",3]]],[11,"default","openmls::group::managed_group::config","",80,[[]]],[11,"default","openmls::group::tests::kat_transcripts","",102,[[],["transcripttestvector",3]]],[11,"default","openmls::group","",107,[[]]],[11,"default","openmls::messages::proposals","",120,[[],["proposalqueue",3]]],[11,"default","openmls::schedule::kat_key_schedule","",149,[[],["epoch",3]]],[11,"default","","",150,[[],["keyscheduletestvector",3]]],[11,"default","openmls::schedule","",151,[[]]],[11,"default","","",159,[[],["encryptionsecret",3]]],[11,"default","openmls::tree::index","",173,[[],["nodeindex",3]]],[11,"default","","",174,[[],["leafindex",3]]],[11,"default","openmls::tree::path_keys","",178,[[],["pathkeys",3]]],[11,"default","openmls::tree::tests::kat_encryption","",187,[[],["senderdatainfo",3]]],[11,"default","","",188,[[],["ratchetstep",3]]],[11,"default","","",189,[[],["leafsequence",3]]],[11,"cmp","openmls::config","",27,[[["protocolversion",4]],["ordering",4]]],[11,"cmp","openmls::extensions","",47,[[["extensiontype",4]],["ordering",4]]],[11,"cmp","","",49,[[],["ordering",4]]],[11,"cmp","openmls::tree::index","",173,[[["nodeindex",3]],["ordering",4]]],[11,"cmp","","",174,[[["leafindex",3]],["ordering",4]]],[11,"eq","openmls::error","",0,[[["errorstring",3]]]],[11,"ne","","",0,[[["errorstring",3]]]],[11,"eq","","",1,[[["errorpayload",3]]]],[11,"ne","","",1,[[["errorpayload",3]]]],[11,"eq","openmls::ciphersuite::errors","",2,[[["hkdferror",4]]]],[11,"eq","","",3,[[["cryptoerror",4]]]],[11,"eq","openmls::ciphersuite","",5,[[["ciphersuitename",4]]]],[11,"eq","","",6,[[["signaturescheme",4]]]],[11,"eq","","",7,[[["hpkeciphertext",3]]]],[11,"ne","","",7,[[["hpkeciphertext",3]]]],[11,"eq","","",12,[[["aeadnonce",3]]]],[11,"ne","","",12,[[["aeadnonce",3]]]],[11,"eq","","",13,[[["signature",3]]]],[11,"ne","","",13,[[["signature",3]]]],[11,"eq","","",15,[[["signaturepublickey",3]]]],[11,"ne","","",15,[[["signaturepublickey",3]]]],[11,"eq","","",17,[[["ciphersuite",3]]]],[11,"eq","openmls::codec::errors","",18,[[["codecerror",4]]]],[11,"eq","openmls::config::errors","",22,[[["configerror",4]]]],[11,"eq","openmls::config","",24,[[["constants",3]]]],[11,"ne","","",24,[[["constants",3]]]],[11,"eq","","",26,[[["config",3]]]],[11,"ne","","",26,[[["config",3]]]],[11,"eq","","",27,[[["protocolversion",4]]]],[11,"eq","openmls::credentials::errors","",28,[[["credentialerror",4]]]],[11,"ne","","",28,[[["credentialerror",4]]]],[11,"eq","openmls::credentials","",29,[[["credentialtype",4]]]],[11,"eq","","",30,[[["certificate",3]]]],[11,"ne","","",30,[[["certificate",3]]]],[11,"eq","","",31,[[["mlscredentialtype",4]]]],[11,"ne","","",31,[[["mlscredentialtype",4]]]],[11,"eq","","",32,[[["credential",3]]]],[11,"ne","","",32,[[["credential",3]]]],[11,"eq","","",33,[[]]],[11,"eq","openmls::extensions::capabilities_extension","",35,[[["capabilitiesextension",3]]]],[11,"ne","","",35,[[["capabilitiesextension",3]]]],[11,"eq","openmls::extensions::errors","",36,[[["extensionerror",4]]]],[11,"ne","","",36,[[["extensionerror",4]]]],[11,"eq","","",37,[[["lifetimeextensionerror",4]]]],[11,"eq","","",38,[[["capabilitiesextensionerror",4]]]],[11,"eq","","",39,[[["keypackageiderror",4]]]],[11,"eq","","",40,[[["parenthasherror",4]]]],[11,"eq","","",41,[[["ratchettreeerror",4]]]],[11,"eq","","",42,[[["invalidextensionerror",4]]]],[11,"eq","openmls::extensions::key_package_id_extension","",43,[[["keyidextension",3]]]],[11,"ne","","",43,[[["keyidextension",3]]]],[11,"eq","openmls::extensions::life_time_extension","",44,[[["lifetimeextension",3]]]],[11,"ne","","",44,[[["lifetimeextension",3]]]],[11,"eq","openmls::extensions::parent_hash_extension","",45,[[["parenthashextension",3]]]],[11,"ne","","",45,[[["parenthashextension",3]]]],[11,"eq","openmls::extensions::ratchet_tree_extension","",46,[[["ratchettreeextension",3]]]],[11,"ne","","",46,[[["ratchettreeextension",3]]]],[11,"eq","openmls::extensions","",47,[[["extensiontype",4]]]],[11,"eq","","",48,[[["extensionstruct",3]]]],[11,"ne","","",48,[[["extensionstruct",3]]]],[11,"eq","","",49,[[]]],[11,"eq","openmls::framing::ciphertext","",51,[[["mlsciphertext",3]]]],[11,"ne","","",51,[[["mlsciphertext",3]]]],[11,"eq","openmls::framing::errors","",56,[[["mlsplaintexterror",4]]]],[11,"eq","","",57,[[["mlsciphertexterror",4]]]],[11,"ne","","",57,[[["mlsciphertexterror",4]]]],[11,"eq","","",58,[[["verificationerror",4]]]],[11,"ne","","",58,[[["verificationerror",4]]]],[11,"eq","openmls::framing::plaintext","",59,[[["mlsplaintext",3]]]],[11,"ne","","",59,[[["mlsplaintext",3]]]],[11,"eq","","",60,[[["contenttype",4]]]],[11,"eq","","",61,[[["mlsplaintextcontenttype",4]]]],[11,"ne","","",61,[[["mlsplaintextcontenttype",4]]]],[11,"eq","","",62,[[["mac",3]]]],[11,"ne","","",62,[[["mac",3]]]],[11,"eq","","",64,[[["membershiptag",3]]]],[11,"ne","","",64,[[["membershiptag",3]]]],[11,"eq","openmls::framing::sender","",69,[[["sendertype",4]]]],[11,"eq","","",70,[[["sender",3]]]],[11,"ne","","",70,[[["sender",3]]]],[11,"eq","openmls::group::errors","",71,[[["grouperror",4]]]],[11,"ne","","",71,[[["grouperror",4]]]],[11,"eq","","",72,[[["welcomeerror",4]]]],[11,"ne","","",72,[[["welcomeerror",4]]]],[11,"eq","","",73,[[["applycommiterror",4]]]],[11,"ne","","",73,[[["applycommiterror",4]]]],[11,"eq","","",74,[[["createcommiterror",4]]]],[11,"eq","","",75,[[["exportererror",4]]]],[11,"eq","","",76,[[["pskerror",4]]]],[11,"ne","","",76,[[["pskerror",4]]]],[11,"eq","openmls::group::managed_group::callbacks","",77,[[]]],[11,"eq","openmls::group::managed_group::config","",78,[[["handshakemessageformat",4]]]],[11,"eq","","",79,[[["managedgroupconfig",3]]]],[11,"ne","","",79,[[["managedgroupconfig",3]]]],[11,"eq","","",80,[[["updatepolicy",3]]]],[11,"ne","","",80,[[["updatepolicy",3]]]],[11,"eq","openmls::group::managed_group::errors","",81,[[["managedgrouperror",4]]]],[11,"ne","","",81,[[["managedgrouperror",4]]]],[11,"eq","","",82,[[["emptyinputerror",4]]]],[11,"eq","","",83,[[["useaftereviction",4]]]],[11,"eq","","",84,[[["pendingproposalserror",4]]]],[11,"eq","","",85,[[["invalidmessageerror",4]]]],[11,"ne","","",85,[[["invalidmessageerror",4]]]],[11,"eq","openmls::group::managed_group::events","",86,[[["groupevent",4]]]],[11,"ne","","",86,[[["groupevent",4]]]],[11,"eq","","",87,[[["memberaddedevent",3]]]],[11,"ne","","",87,[[["memberaddedevent",3]]]],[11,"eq","","",88,[[["memberremovedevent",3]]]],[11,"ne","","",88,[[["memberremovedevent",3]]]],[11,"eq","","",89,[[["memberupdatedevent",3]]]],[11,"ne","","",89,[[["memberupdatedevent",3]]]],[11,"eq","","",90,[[["pskreceivedevent",3]]]],[11,"ne","","",90,[[["pskreceivedevent",3]]]],[11,"eq","","",91,[[["reinitevent",3]]]],[11,"ne","","",91,[[["reinitevent",3]]]],[11,"eq","","",92,[[["applicationmessageevent",3]]]],[11,"ne","","",92,[[["applicationmessageevent",3]]]],[11,"eq","","",93,[[["invalidmessageevent",3]]]],[11,"ne","","",93,[[["invalidmessageevent",3]]]],[11,"eq","","",94,[[["errorevent",3]]]],[11,"ne","","",94,[[["errorevent",3]]]],[11,"eq","","",95,[[["removal",4]]]],[11,"ne","","",95,[[["removal",4]]]],[11,"eq","openmls::group::managed_group","",99,[[["mlsmessage",4]]]],[11,"ne","","",99,[[["mlsmessage",4]]]],[11,"eq","openmls::group::tests::kat_transcripts","",103,[[["transcripttestvectorerror",4]]]],[11,"eq","openmls::group","",104,[[["groupid",3]]]],[11,"ne","","",104,[[["groupid",3]]]],[11,"eq","","",105,[[["groupepoch",3]]]],[11,"ne","","",105,[[["groupepoch",3]]]],[11,"eq","","",106,[[["groupcontext",3]]]],[11,"ne","","",106,[[["groupcontext",3]]]],[11,"eq","openmls::key_packages::errors","",108,[[["keypackageerror",4]]]],[11,"ne","","",108,[[["keypackageerror",4]]]],[11,"eq","openmls::key_packages","",109,[[["keypackage",3]]]],[11,"ne","","",109,[[["keypackage",3]]]],[11,"eq","openmls::messages::errors","",111,[[["proposalqueueerror",4]]]],[11,"ne","","",111,[[["proposalqueueerror",4]]]],[11,"eq","","",112,[[["proposalorreftypeerror",4]]]],[11,"eq","","",113,[[["queuedproposalerror",4]]]],[11,"eq","openmls::messages::proposals","",114,[[["proposaltype",4]]]],[11,"eq","","",115,[[["proposalorreftype",4]]]],[11,"eq","","",116,[[["proposalorref",4]]]],[11,"ne","","",116,[[["proposalorref",4]]]],[11,"eq","","",117,[[["proposal",4]]]],[11,"ne","","",117,[[["proposal",4]]]],[11,"eq","","",118,[[["proposalreference",3]]]],[11,"ne","","",118,[[["proposalreference",3]]]],[11,"eq","","",121,[[["addproposal",3]]]],[11,"ne","","",121,[[["addproposal",3]]]],[11,"eq","","",122,[[["updateproposal",3]]]],[11,"ne","","",122,[[["updateproposal",3]]]],[11,"eq","","",123,[[["removeproposal",3]]]],[11,"ne","","",123,[[["removeproposal",3]]]],[11,"eq","","",124,[[["presharedkeyproposal",3]]]],[11,"ne","","",124,[[["presharedkeyproposal",3]]]],[11,"eq","","",125,[[["reinitproposal",3]]]],[11,"ne","","",125,[[["reinitproposal",3]]]],[11,"eq","openmls::messages","",126,[[["welcome",3]]]],[11,"ne","","",126,[[["welcome",3]]]],[11,"eq","","",127,[[["encryptedgroupsecrets",3]]]],[11,"ne","","",127,[[["encryptedgroupsecrets",3]]]],[11,"eq","","",128,[[["commit",3]]]],[11,"ne","","",128,[[["commit",3]]]],[11,"eq","","",129,[[["confirmationtag",3]]]],[11,"ne","","",129,[[["confirmationtag",3]]]],[11,"eq","","",133,[[["publicgroupstate",3]]]],[11,"ne","","",133,[[["publicgroupstate",3]]]],[11,"eq","openmls::schedule::errors","",135,[[["errorstate",4]]]],[11,"eq","","",136,[[["keyscheduleerror",4]]]],[11,"ne","","",136,[[["keyscheduleerror",4]]]],[11,"eq","","",137,[[["psksecreterror",4]]]],[11,"eq","","",138,[[["kstestvectorerror",4]]]],[11,"eq","openmls::schedule::psk","",139,[[["psktype",4]]]],[11,"eq","","",140,[[["externalpsk",3]]]],[11,"ne","","",140,[[["externalpsk",3]]]],[11,"eq","","",142,[[["reinitpsk",3]]]],[11,"ne","","",142,[[["reinitpsk",3]]]],[11,"eq","","",143,[[["branchpsk",3]]]],[11,"ne","","",143,[[["branchpsk",3]]]],[11,"eq","","",144,[[["psk",4]]]],[11,"ne","","",144,[[["psk",4]]]],[11,"eq","","",145,[[["presharedkeyid",3]]]],[11,"ne","","",145,[[["presharedkeyid",3]]]],[11,"eq","openmls::schedule","",154,[[["state",4]]]],[11,"eq","","",167,[[]]],[11,"eq","openmls::tree::errors","",168,[[["treeerror",4]]]],[11,"ne","","",168,[[["treeerror",4]]]],[11,"eq","","",169,[[["parenthasherror",4]]]],[11,"eq","openmls::tree::index","",173,[[["nodeindex",3]]]],[11,"ne","","",173,[[["nodeindex",3]]]],[11,"eq","","",174,[[["leafindex",3]]]],[11,"ne","","",174,[[["leafindex",3]]]],[11,"eq","openmls::tree::node","",175,[[["nodetype",4]]]],[11,"eq","","",176,[[["node",3]]]],[11,"ne","","",176,[[["node",3]]]],[11,"eq","","",177,[[["parentnode",3]]]],[11,"ne","","",177,[[["parentnode",3]]]],[11,"eq","openmls::tree::path_keys","",178,[[["pathkeys",3]]]],[11,"ne","","",178,[[["pathkeys",3]]]],[11,"eq","openmls::tree::secret_tree","",180,[[["secrettreeerror",4]]]],[11,"eq","openmls::tree::treemath","",186,[[["treematherror",4]]]],[11,"eq","openmls::tree::tests::kat_encryption","",191,[[["enctestvectorerror",4]]]],[11,"eq","openmls::tree::tests::kat_treemath","",193,[[["tmtestvectorerror",4]]]],[11,"eq","openmls::tree","",196,[[["updatepathnode",3]]]],[11,"ne","","",196,[[["updatepathnode",3]]]],[11,"eq","","",197,[[["updatepath",3]]]],[11,"ne","","",197,[[["updatepath",3]]]],[11,"partial_cmp","openmls::config","",27,[[["protocolversion",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","openmls::extensions","",47,[[["extensiontype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",49,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","openmls::tree::index","",173,[[["nodeindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",173,[[["nodeindex",3]]]],[11,"le","","",173,[[["nodeindex",3]]]],[11,"gt","","",173,[[["nodeindex",3]]]],[11,"ge","","",173,[[["nodeindex",3]]]],[11,"partial_cmp","","",174,[[["leafindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",174,[[["leafindex",3]]]],[11,"le","","",174,[[["leafindex",3]]]],[11,"gt","","",174,[[["leafindex",3]]]],[11,"ge","","",174,[[["leafindex",3]]]],[11,"deref","openmls::config","",23,[[],["config",3]]],[11,"fmt","openmls::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::ciphersuite::errors","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::ciphersuite","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::codec::errors","",18,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::codec","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::config::errors","",22,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::config","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::credentials::errors","",28,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::credentials","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::capabilities_extension","",35,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::errors","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::key_package_id_extension","",43,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::life_time_extension","",44,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::parent_hash_extension","",45,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::ratchet_tree_extension","",46,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::framing::ciphertext","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::framing::errors","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::framing::plaintext","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::framing::sender","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::group::errors","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::group::managed_group::callbacks","",77,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::group::managed_group::config","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::group::managed_group::errors","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::group::managed_group::events","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::group::managed_group::resumption","",96,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::group::managed_group","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::group::mls_group","",101,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::group::tests::kat_transcripts","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::group","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::key_packages::errors","",108,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::key_packages","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::messages::errors","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::messages::proposals","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::messages","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::schedule::errors","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","","",137,[[["formatter",3]],["result",6]]],[11,"fmt","","",138,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::schedule::psk","",139,[[["formatter",3]],["result",6]]],[11,"fmt","","",140,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",144,[[["formatter",3]],["result",6]]],[11,"fmt","","",145,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::schedule::kat_key_schedule","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::schedule","",151,[[["formatter",3]],["result",6]]],[11,"fmt","","",152,[[["formatter",3]],["result",6]]],[11,"fmt","","",154,[[["formatter",3]],["result",6]]],[11,"fmt","","",160,[[["formatter",3]],["result",6]]],[11,"fmt","","",161,[[["formatter",3]],["result",6]]],[11,"fmt","","",162,[[["formatter",3]],["result",6]]],[11,"fmt","","",163,[[["formatter",3]],["result",6]]],[11,"fmt","","",164,[[["formatter",3]],["result",6]]],[11,"fmt","","",165,[[["formatter",3]],["result",6]]],[11,"fmt","","",166,[[["formatter",3]],["result",6]]],[11,"fmt","","",167,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::errors","",168,[[["formatter",3]],["result",6]]],[11,"fmt","","",169,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::index","",173,[[["formatter",3]],["result",6]]],[11,"fmt","","",174,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::node","",175,[[["formatter",3]],["result",6]]],[11,"fmt","","",176,[[["formatter",3]],["result",6]]],[11,"fmt","","",177,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::path_keys","",178,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::private_tree","",179,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::secret_tree","",180,[[["formatter",3]],["result",6]]],[11,"fmt","","",181,[[["formatter",3]],["result",6]]],[11,"fmt","","",182,[[["formatter",3]],["result",6]]],[11,"fmt","","",183,[[["formatter",3]],["result",6]]],[11,"fmt","","",184,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::sender_ratchet","",185,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::treemath","",186,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::tests::kat_encryption","",187,[[["formatter",3]],["result",6]]],[11,"fmt","","",188,[[["formatter",3]],["result",6]]],[11,"fmt","","",189,[[["formatter",3]],["result",6]]],[11,"fmt","","",190,[[["formatter",3]],["result",6]]],[11,"fmt","","",191,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::tests::kat_treemath","",192,[[["formatter",3]],["result",6]]],[11,"fmt","","",193,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree","",194,[[["formatter",3]],["result",6]]],[11,"fmt","","",196,[[["formatter",3]],["result",6]]],[11,"fmt","","",197,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::ciphersuite::errors","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::ciphersuite","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::codec::errors","",18,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::config::errors","",22,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::credentials::errors","",28,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::errors","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::framing::errors","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::group::errors","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::group::managed_group::errors","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::group::tests::kat_transcripts","",103,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::key_packages::errors","",108,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::messages::errors","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::schedule::errors","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","","",137,[[["formatter",3]],["result",6]]],[11,"fmt","","",138,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::errors","",168,[[["formatter",3]],["result",6]]],[11,"fmt","","",169,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::secret_tree","",180,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::treemath","",186,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::tests::kat_encryption","",191,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::tests::kat_treemath","",193,[[["formatter",3]],["result",6]]],[11,"hash","openmls::ciphersuite","",5,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",15,[[]]],[11,"hash","openmls::extensions","",47,[[]]],[11,"hash","","",48,[[]]],[11,"hash","openmls::group","",104,[[]]],[11,"hash","openmls::messages::proposals","",118,[[]]],[11,"hash","openmls::tree::index","",173,[[]]],[11,"hash","","",174,[[]]],[11,"try_from","openmls::ciphersuite","",5,[[],["result",4]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_from","openmls::credentials","",29,[[],["result",4]]],[11,"try_from","openmls::extensions","Get the <code>ExtensionType</code> from a u16. Returns an error if the …",47,[[],["result",4]]],[11,"try_from","openmls::framing::plaintext","",60,[[],[["codecerror",4],["result",4]]]],[11,"try_from","","",67,[[["mlsplaintext",3]],["result",4]]],[11,"try_from","","",68,[[["mlsplaintext",3]],["result",4]]],[11,"try_from","openmls::framing::sender","",69,[[],["result",4]]],[11,"try_from","openmls::messages::proposals","",114,[[],["result",4]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_from","openmls::schedule::psk","",139,[[],["result",4]]],[11,"try_from","openmls::tree::index","",174,[[["nodeindex",3]],["result",4]]],[11,"try_from","openmls::tree::node","",175,[[],["result",4]]],[11,"source","openmls::ciphersuite::errors","",2,[[],[["option",4],["error",8]]]],[11,"source","","",3,[[],[["option",4],["error",8]]]],[11,"source","openmls::codec::errors","",18,[[],[["option",4],["error",8]]]],[11,"source","openmls::config::errors","",22,[[],[["option",4],["error",8]]]],[11,"source","openmls::credentials::errors","",28,[[],[["option",4],["error",8]]]],[11,"source","openmls::extensions::errors","",36,[[],[["option",4],["error",8]]]],[11,"source","","",37,[[],[["option",4],["error",8]]]],[11,"source","","",38,[[],[["option",4],["error",8]]]],[11,"source","","",39,[[],[["option",4],["error",8]]]],[11,"source","","",40,[[],[["option",4],["error",8]]]],[11,"source","","",41,[[],[["option",4],["error",8]]]],[11,"source","","",42,[[],[["option",4],["error",8]]]],[11,"source","openmls::framing::errors","",56,[[],[["option",4],["error",8]]]],[11,"source","","",57,[[],[["option",4],["error",8]]]],[11,"source","","",58,[[],[["option",4],["error",8]]]],[11,"source","openmls::group::errors","",71,[[],[["option",4],["error",8]]]],[11,"source","","",72,[[],[["option",4],["error",8]]]],[11,"source","","",73,[[],[["option",4],["error",8]]]],[11,"source","","",74,[[],[["option",4],["error",8]]]],[11,"source","","",75,[[],[["option",4],["error",8]]]],[11,"source","","",76,[[],[["option",4],["error",8]]]],[11,"source","openmls::group::managed_group::errors","",81,[[],[["option",4],["error",8]]]],[11,"source","","",82,[[],[["option",4],["error",8]]]],[11,"source","","",83,[[],[["option",4],["error",8]]]],[11,"source","","",84,[[],[["option",4],["error",8]]]],[11,"source","","",85,[[],[["option",4],["error",8]]]],[11,"source","openmls::group::tests::kat_transcripts","",103,[[],[["option",4],["error",8]]]],[11,"source","openmls::key_packages::errors","",108,[[],[["option",4],["error",8]]]],[11,"source","openmls::messages::errors","",111,[[],[["option",4],["error",8]]]],[11,"source","","",112,[[],[["option",4],["error",8]]]],[11,"source","","",113,[[],[["option",4],["error",8]]]],[11,"source","openmls::schedule::errors","",135,[[],[["option",4],["error",8]]]],[11,"source","","",136,[[],[["option",4],["error",8]]]],[11,"source","","",137,[[],[["option",4],["error",8]]]],[11,"source","","",138,[[],[["option",4],["error",8]]]],[11,"source","openmls::tree::errors","",168,[[],[["option",4],["error",8]]]],[11,"source","","",169,[[],[["option",4],["error",8]]]],[11,"source","openmls::tree::secret_tree","",180,[[],[["option",4],["error",8]]]],[11,"source","openmls::tree::treemath","",186,[[],[["option",4],["error",8]]]],[11,"source","openmls::tree::tests::kat_encryption","",191,[[],[["option",4],["error",8]]]],[11,"source","openmls::tree::tests::kat_treemath","",193,[[],[["option",4],["error",8]]]],[11,"deserialize","openmls::ciphersuite","",17,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]],[11,"deserialize","","",13,[[],["result",4]]],[11,"deserialize","","",15,[[],["result",4]]],[11,"deserialize","openmls::config","",24,[[],["result",4]]],[11,"deserialize","","",25,[[],["result",4]]],[11,"deserialize","","",26,[[],["result",4]]],[11,"deserialize","","",27,[[],["result",4]]],[11,"deserialize","openmls::credentials","",29,[[],["result",4]]],[11,"deserialize","","",30,[[],["result",4]]],[11,"deserialize","","",31,[[],["result",4]]],[11,"deserialize","","",32,[[],["result",4]]],[11,"deserialize","","",33,[[],["result",4]]],[11,"deserialize","openmls::extensions::capabilities_extension","",35,[[],["result",4]]],[11,"deserialize","openmls::extensions::key_package_id_extension","",43,[[],["result",4]]],[11,"deserialize","openmls::extensions::life_time_extension","",44,[[],["result",4]]],[11,"deserialize","openmls::extensions::parent_hash_extension","",45,[[],["result",4]]],[11,"deserialize","openmls::extensions::ratchet_tree_extension","",46,[[],["result",4]]],[11,"deserialize","openmls::extensions","",47,[[],["result",4]]],[11,"deserialize","","",48,[[],["result",4]]],[11,"deserialize","openmls::framing::plaintext","",59,[[],["result",4]]],[11,"deserialize","","",60,[[],["result",4]]],[11,"deserialize","","",61,[[],["result",4]]],[11,"deserialize","","",62,[[],["result",4]]],[11,"deserialize","","",64,[[],["result",4]]],[11,"deserialize","openmls::framing::sender","",69,[[],["result",4]]],[11,"deserialize","","",70,[[],["result",4]]],[11,"deserialize","openmls::group::managed_group::config","",78,[[],["result",4]]],[11,"deserialize","","",79,[[],["result",4]]],[11,"deserialize","","",80,[[],["result",4]]],[11,"deserialize","openmls::group::managed_group::resumption","",96,[[],["result",4]]],[11,"deserialize","openmls::group::managed_group::ser","",97,[[],["result",4]]],[11,"deserialize","openmls::group::mls_group","",101,[[],["result",4]]],[11,"deserialize","openmls::group::tests::kat_transcripts","",102,[[],["result",4]]],[11,"deserialize","openmls::group","",104,[[],["result",4]]],[11,"deserialize","","",105,[[],["result",4]]],[11,"deserialize","","",106,[[],["result",4]]],[11,"deserialize","openmls::key_packages","",109,[[],["result",4]]],[11,"deserialize","","",110,[[],["result",4]]],[11,"deserialize","openmls::messages::proposals","",116,[[],["result",4]]],[11,"deserialize","","",117,[[],["result",4]]],[11,"deserialize","","",118,[[],["result",4]]],[11,"deserialize","","",121,[[],["result",4]]],[11,"deserialize","","",122,[[],["result",4]]],[11,"deserialize","","",123,[[],["result",4]]],[11,"deserialize","","",124,[[],["result",4]]],[11,"deserialize","","",125,[[],["result",4]]],[11,"deserialize","openmls::messages","",128,[[],["result",4]]],[11,"deserialize","","",129,[[],["result",4]]],[11,"deserialize","openmls::schedule::psk","",139,[[],["result",4]]],[11,"deserialize","","",140,[[],["result",4]]],[11,"deserialize","","",142,[[],["result",4]]],[11,"deserialize","","",143,[[],["result",4]]],[11,"deserialize","","",144,[[],["result",4]]],[11,"deserialize","","",145,[[],["result",4]]],[11,"deserialize","openmls::schedule::kat_key_schedule","",149,[[],["result",4]]],[11,"deserialize","","",150,[[],["result",4]]],[11,"deserialize","openmls::schedule","",151,[[],["result",4]]],[11,"deserialize","","",152,[[],["result",4]]],[11,"deserialize","","",159,[[],["result",4]]],[11,"deserialize","","",160,[[],["result",4]]],[11,"deserialize","","",161,[[],["result",4]]],[11,"deserialize","","",162,[[],["result",4]]],[11,"deserialize","","",163,[[],["result",4]]],[11,"deserialize","","",164,[[],["result",4]]],[11,"deserialize","","",165,[[],["result",4]]],[11,"deserialize","","",166,[[],["result",4]]],[11,"deserialize","","",167,[[],["result",4]]],[11,"deserialize","openmls::tree::index","",173,[[],["result",4]]],[11,"deserialize","","",174,[[],["result",4]]],[11,"deserialize","openmls::tree::node","",175,[[],["result",4]]],[11,"deserialize","","",176,[[],["result",4]]],[11,"deserialize","","",177,[[],["result",4]]],[11,"deserialize","openmls::tree::path_keys","",178,[[],["result",4]]],[11,"deserialize","openmls::tree::private_tree","",179,[[],["result",4]]],[11,"deserialize","openmls::tree::secret_tree","",183,[[],["result",4]]],[11,"deserialize","","",184,[[],["result",4]]],[11,"deserialize","openmls::tree::sender_ratchet","",185,[[],["result",4]]],[11,"deserialize","openmls::tree::tests::kat_encryption","",187,[[],["result",4]]],[11,"deserialize","","",188,[[],["result",4]]],[11,"deserialize","","",189,[[],["result",4]]],[11,"deserialize","","",190,[[],["result",4]]],[11,"deserialize","openmls::tree::tests::kat_treemath","",192,[[],["result",4]]],[11,"deserialize","openmls::tree","",194,[[],["result",4]]],[11,"deserialize","","",196,[[],["result",4]]],[11,"deserialize","","",197,[[],["result",4]]],[11,"serialize","openmls::ciphersuite","",17,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]],[11,"serialize","openmls::config","",24,[[],["result",4]]],[11,"serialize","","",26,[[],["result",4]]],[11,"serialize","","",27,[[],["result",4]]],[11,"serialize","openmls::credentials","",29,[[],["result",4]]],[11,"serialize","","",30,[[],["result",4]]],[11,"serialize","","",31,[[],["result",4]]],[11,"serialize","","",32,[[],["result",4]]],[11,"serialize","","",33,[[],["result",4]]],[11,"serialize","openmls::extensions::capabilities_extension","",35,[[],["result",4]]],[11,"serialize","openmls::extensions::key_package_id_extension","",43,[[],["result",4]]],[11,"serialize","openmls::extensions::life_time_extension","",44,[[],["result",4]]],[11,"serialize","openmls::extensions::parent_hash_extension","",45,[[],["result",4]]],[11,"serialize","openmls::extensions::ratchet_tree_extension","",46,[[],["result",4]]],[11,"serialize","openmls::extensions","",47,[[],["result",4]]],[11,"serialize","","",48,[[],["result",4]]],[11,"serialize","","",49,[[],["result",4]]],[11,"serialize","","",49,[[],["result",4]]],[11,"serialize","","",49,[[],["result",4]]],[11,"serialize","","",49,[[],["result",4]]],[11,"serialize","openmls::framing::plaintext","",59,[[],["result",4]]],[11,"serialize","","",60,[[],["result",4]]],[11,"serialize","","",61,[[],["result",4]]],[11,"serialize","","",62,[[],["result",4]]],[11,"serialize","","",64,[[],["result",4]]],[11,"serialize","openmls::framing::sender","",69,[[],["result",4]]],[11,"serialize","","",70,[[],["result",4]]],[11,"serialize","openmls::group::managed_group::config","",78,[[],["result",4]]],[11,"serialize","","",79,[[],["result",4]]],[11,"serialize","","",80,[[],["result",4]]],[11,"serialize","openmls::group::managed_group::resumption","",96,[[],["result",4]]],[11,"serialize","openmls::group::managed_group::ser","",97,[[],["result",4]]],[11,"serialize","openmls::group::managed_group","",98,[[],["result",4]]],[11,"serialize","openmls::group::mls_group","",101,[[],["result",4]]],[11,"serialize","openmls::group::tests::kat_transcripts","",102,[[],["result",4]]],[11,"serialize","openmls::group","",104,[[],["result",4]]],[11,"serialize","","",105,[[],["result",4]]],[11,"serialize","","",106,[[],["result",4]]],[11,"serialize","openmls::key_packages","",109,[[],["result",4]]],[11,"serialize","","",110,[[],["result",4]]],[11,"serialize","openmls::messages::proposals","",116,[[],["result",4]]],[11,"serialize","","",117,[[],["result",4]]],[11,"serialize","","",118,[[],["result",4]]],[11,"serialize","","",121,[[],["result",4]]],[11,"serialize","","",122,[[],["result",4]]],[11,"serialize","","",123,[[],["result",4]]],[11,"serialize","","",124,[[],["result",4]]],[11,"serialize","","",125,[[],["result",4]]],[11,"serialize","openmls::messages","",128,[[],["result",4]]],[11,"serialize","","",129,[[],["result",4]]],[11,"serialize","openmls::schedule::psk","",139,[[],["result",4]]],[11,"serialize","","",140,[[],["result",4]]],[11,"serialize","","",142,[[],["result",4]]],[11,"serialize","","",143,[[],["result",4]]],[11,"serialize","","",144,[[],["result",4]]],[11,"serialize","","",145,[[],["result",4]]],[11,"serialize","openmls::schedule::kat_key_schedule","",149,[[],["result",4]]],[11,"serialize","","",150,[[],["result",4]]],[11,"serialize","openmls::schedule","",151,[[],["result",4]]],[11,"serialize","","",152,[[],["result",4]]],[11,"serialize","","",159,[[],["result",4]]],[11,"serialize","","",160,[[],["result",4]]],[11,"serialize","","",161,[[],["result",4]]],[11,"serialize","","",162,[[],["result",4]]],[11,"serialize","","",163,[[],["result",4]]],[11,"serialize","","",164,[[],["result",4]]],[11,"serialize","","",165,[[],["result",4]]],[11,"serialize","","",166,[[],["result",4]]],[11,"serialize","","",167,[[],["result",4]]],[11,"serialize","openmls::tree::index","",173,[[],["result",4]]],[11,"serialize","","",174,[[],["result",4]]],[11,"serialize","openmls::tree::node","",175,[[],["result",4]]],[11,"serialize","","",176,[[],["result",4]]],[11,"serialize","","",177,[[],["result",4]]],[11,"serialize","openmls::tree::path_keys","",178,[[],["result",4]]],[11,"serialize","openmls::tree::private_tree","",179,[[],["result",4]]],[11,"serialize","openmls::tree::secret_tree","",183,[[],["result",4]]],[11,"serialize","","",184,[[],["result",4]]],[11,"serialize","openmls::tree::sender_ratchet","",185,[[],["result",4]]],[11,"serialize","openmls::tree::tests::kat_encryption","",187,[[],["result",4]]],[11,"serialize","","",188,[[],["result",4]]],[11,"serialize","","",189,[[],["result",4]]],[11,"serialize","","",190,[[],["result",4]]],[11,"serialize","openmls::tree::tests::kat_treemath","",192,[[],["result",4]]],[11,"serialize","openmls::tree","",194,[[],["result",4]]],[11,"serialize","","",196,[[],["result",4]]],[11,"serialize","","",197,[[],["result",4]]],[11,"initialize","openmls::config","",23,[[]]],[11,"decode","openmls::framing::plaintext","",61,[[["cursor",3],["contenttype",4]],[["codecerror",4],["result",4]]]],[11,"new","openmls::group","Create a new group context",106,[[["vec",3],["groupepoch",3],["groupid",3]],[["codecerror",4],["result",4]]]],[11,"create_initial_group_context","","Create the <code>GroupContext</code> needed upon creation of a new …",106,[[["vec",3],["ciphersuite",3],["groupid",3]],[["codecerror",4],["result",4]]]],[11,"serialized","","Return the serialized group context",106,[[]]],[11,"group_id","","Return the group ID",106,[[],["groupid",3]]],[11,"epoch","","Return the epoch",106,[[],["groupepoch",3]]],[11,"apply_commit_internal","openmls::group::mls_group","",101,[[["mlsplaintext",3],["pskfetcher",6],["option",4]],[["result",4],["applycommiterror",4]]]],[11,"create_commit_internal","","",101,[[["credentialbundle",3],["pskfetcher",6],["option",4]],["createcommitresult",6]]],[11,"new_from_welcome_internal","","",101,[[["vec",3],["welcome",3],["keypackagebundle",3],["option",4],["pskfetcher",6],["option",4]],[["welcomeerror",4],["result",4]]]],[11,"find_key_package_from_welcome_secrets","","",101,[[["keypackage",3]],[["encryptedgroupsecrets",3],["option",4]]]],[11,"original_child_resolution","openmls::tree","The list of HPKEPublicKey values of the nodes in the …",194,[[["nodeindex",3]],[["hpkepublickey",3],["vec",3]]]],[11,"set_parent_hashes","","Computes the parent hashes for a leaf node and returns …",194,[[["leafindex",3]],["vec",3]]],[11,"verify_parent_hash","","Verify the parent hash of a tree node. Returns <code>Ok(())</code> if …",194,[[["node",3],["nodeindex",3]],[["result",4],["parenthasherror",4]]]],[11,"verify_parent_hashes","","Verify the parent hashes of the tree nodes. Returns <code>true</code> …",194,[[],[["result",4],["parenthasherror",4]]]],[11,"tree_hash","","Computes and returns the tree hash",194,[[],["vec",3]]]],"p":[[3,"ErrorString"],[3,"ErrorPayload"],[4,"HKDFError"],[4,"CryptoError"],[8,"Signable"],[4,"CiphersuiteName"],[4,"SignatureScheme"],[3,"HpkeCiphertext"],[3,"KdfLabel"],[3,"Secret"],[3,"AeadKey"],[3,"ReuseGuard"],[3,"AeadNonce"],[3,"Signature"],[3,"SignaturePrivateKey"],[3,"SignaturePublicKey"],[3,"SignatureKeypair"],[3,"Ciphersuite"],[4,"CodecError"],[4,"VecSize"],[3,"Cursor"],[8,"Codec"],[4,"ConfigError"],[3,"CONFIG"],[3,"Constants"],[3,"PersistentConfig"],[3,"Config"],[4,"ProtocolVersion"],[4,"CredentialError"],[4,"CredentialType"],[3,"Certificate"],[4,"MLSCredentialType"],[3,"Credential"],[3,"BasicCredential"],[3,"CredentialBundle"],[3,"CapabilitiesExtension"],[4,"ExtensionError"],[4,"LifetimeExtensionError"],[4,"CapabilitiesExtensionError"],[4,"KeyPackageIdError"],[4,"ParentHashError"],[4,"RatchetTreeError"],[4,"InvalidExtensionError"],[3,"KeyIDExtension"],[3,"LifetimeExtension"],[3,"ParentHashExtension"],[3,"RatchetTreeExtension"],[4,"ExtensionType"],[3,"ExtensionStruct"],[8,"Extension"],[8,"ExtensionHelper"],[3,"MLSCiphertext"],[3,"MLSSenderData"],[3,"MLSSenderDataAAD"],[3,"MLSCiphertextContent"],[3,"MLSCiphertextContentAAD"],[4,"MLSPlaintextError"],[4,"MLSCiphertextError"],[4,"VerificationError"],[3,"MLSPlaintext"],[4,"ContentType"],[4,"MLSPlaintextContentType"],[3,"Mac"],[3,"MLSPlaintextTBMPayload"],[3,"MembershipTag"],[3,"MLSPlaintextTBS"],[3,"MLSPlaintextTBSPayload"],[3,"MLSPlaintextCommitContent"],[3,"MLSPlaintextCommitAuthData"],[4,"SenderType"],[3,"Sender"],[4,"GroupError"],[4,"WelcomeError"],[4,"ApplyCommitError"],[4,"CreateCommitError"],[4,"ExporterError"],[4,"PskError"],[3,"ManagedGroupCallbacks"],[4,"HandshakeMessageFormat"],[3,"ManagedGroupConfig"],[3,"UpdatePolicy"],[4,"ManagedGroupError"],[4,"EmptyInputError"],[4,"UseAfterEviction"],[4,"PendingProposalsError"],[4,"InvalidMessageError"],[4,"GroupEvent"],[3,"MemberAddedEvent"],[3,"MemberRemovedEvent"],[3,"MemberUpdatedEvent"],[3,"PskReceivedEvent"],[3,"ReInitEvent"],[3,"ApplicationMessageEvent"],[3,"InvalidMessageEvent"],[3,"ErrorEvent"],[4,"Removal"],[3,"ResumptionSecretStore"],[3,"SerializedManagedGroup"],[3,"ManagedGroup"],[4,"MLSMessage"],[3,"PlaintextSecret"],[3,"MlsGroup"],[3,"TranscriptTestVector"],[4,"TranscriptTestVectorError"],[3,"GroupId"],[3,"GroupEpoch"],[3,"GroupContext"],[3,"GroupConfig"],[4,"KeyPackageError"],[3,"KeyPackage"],[3,"KeyPackageBundle"],[4,"ProposalQueueError"],[4,"ProposalOrRefTypeError"],[4,"QueuedProposalError"],[4,"ProposalType"],[4,"ProposalOrRefType"],[4,"ProposalOrRef"],[4,"Proposal"],[3,"ProposalReference"],[3,"QueuedProposal"],[3,"ProposalQueue"],[3,"AddProposal"],[3,"UpdateProposal"],[3,"RemoveProposal"],[3,"PreSharedKeyProposal"],[3,"ReInitProposal"],[3,"Welcome"],[3,"EncryptedGroupSecrets"],[3,"Commit"],[3,"ConfirmationTag"],[3,"GroupInfo"],[3,"PathSecret"],[3,"GroupSecrets"],[3,"PublicGroupState"],[3,"PublicGroupStateTBS"],[4,"ErrorState"],[4,"KeyScheduleError"],[4,"PskSecretError"],[4,"KSTestVectorError"],[4,"PSKType"],[3,"ExternalPsk"],[3,"ExternalPskBundle"],[3,"ReinitPsk"],[3,"BranchPsk"],[4,"Psk"],[3,"PreSharedKeyID"],[3,"PreSharedKeys"],[3,"PskLabel"],[3,"PskSecret"],[3,"Epoch"],[3,"KeyScheduleTestVector"],[3,"CommitSecret"],[3,"InitSecret"],[3,"JoinerSecret"],[4,"State"],[3,"KeySchedule"],[3,"IntermediateSecret"],[3,"WelcomeSecret"],[3,"EpochSecret"],[3,"EncryptionSecret"],[3,"ExporterSecret"],[3,"AuthenticationSecret"],[3,"ExternalSecret"],[3,"ConfirmationKey"],[3,"MembershipKey"],[3,"ResumptionSecret"],[3,"SenderDataSecret"],[3,"EpochSecrets"],[4,"TreeError"],[4,"ParentHashError"],[3,"ParentHashInput"],[3,"LeafNodeHashInput"],[3,"ParentNodeTreeHashInput"],[3,"NodeIndex"],[3,"LeafIndex"],[4,"NodeType"],[3,"Node"],[3,"ParentNode"],[3,"PathKeys"],[3,"PrivateTree"],[4,"SecretTreeError"],[4,"SecretType"],[3,"TreeContext"],[3,"SecretTreeNode"],[3,"SecretTree"],[3,"SenderRatchet"],[4,"TreeMathError"],[3,"SenderDataInfo"],[3,"RatchetStep"],[3,"LeafSequence"],[3,"EncryptionTestVector"],[4,"EncTestVectorError"],[3,"TreeMathTestVector"],[4,"TMTestVectorError"],[3,"RatchetTree"],[3,"ApplyProposalsValues"],[3,"UpdatePathNode"],[3,"UpdatePath"]]},\
"test_macros":{"doc":"","i":[[3,"TestInput","test_macros","",null,null],[12,"test_name","","",0,null],[12,"parameters","","",0,null],[12,"body","","",0,null],[14,"ctest","","",null,null],[14,"ctest_panic","","",null,null],[5,"impl_ciphersuite_tests","","",null,[[["testinput",3],["tokenstream",3]],["tokenstream",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"parse","","",0,[[["parsestream",6]],["result",6]]]],"p":[[3,"TestInput"]]},\
"tls_codec":{"doc":"TLS CodecThis crate implements the TLS codec as defined …","i":[[24,"TlsDeserialize","tls_codec","",null,null],[24,"TlsSerialize","","",null,null],[0,"arrays","","Implement the TLS codec for some byte arrays.",null,null],[0,"hpke","","TLS Codec for HPKE primitives",null,null],[0,"primitives","","Codec implementations for unsigned integer primitives.",null,null],[0,"tls_vec","","A vector with a length field for TLS serialisation. Use …",null,null],[3,"TlsVecU8","tls_codec::tls_vec","",null,null],[12,"vec","","",0,null],[11,"new","","Create a new <code>TlsVec</code> from a Rust Vec.",0,[[["vec",3]]]],[11,"from_slice","","Create a new <code>TlsVec</code> from a slice.",0,[[]]],[11,"as_slice","","Get a slice to the raw vector.",0,[[]]],[11,"to_vec","","Get a copy of the underlying vector.",0,[[],["vec",3]]],[11,"push","","Add an element to this.",0,[[]]],[11,"pop","","Remove the last element.",0,[[],["option",4]]],[3,"TlsVecU16","","",null,null],[12,"vec","","",1,null],[11,"new","","Create a new <code>TlsVec</code> from a Rust Vec.",1,[[["vec",3]]]],[11,"from_slice","","Create a new <code>TlsVec</code> from a slice.",1,[[]]],[11,"as_slice","","Get a slice to the raw vector.",1,[[]]],[11,"to_vec","","Get a copy of the underlying vector.",1,[[],["vec",3]]],[11,"push","","Add an element to this.",1,[[]]],[11,"pop","","Remove the last element.",1,[[],["option",4]]],[3,"TlsVecU32","","",null,null],[12,"vec","","",2,null],[11,"new","","Create a new <code>TlsVec</code> from a Rust Vec.",2,[[["vec",3]]]],[11,"from_slice","","Create a new <code>TlsVec</code> from a slice.",2,[[]]],[11,"as_slice","","Get a slice to the raw vector.",2,[[]]],[11,"to_vec","","Get a copy of the underlying vector.",2,[[],["vec",3]]],[11,"push","","Add an element to this.",2,[[]]],[11,"pop","","Remove the last element.",2,[[],["option",4]]],[3,"TlsVecU16","tls_codec","",null,null],[12,"vec","","",1,null],[3,"TlsVecU32","","",null,null],[12,"vec","","",2,null],[3,"TlsVecU8","","",null,null],[12,"vec","","",0,null],[4,"Error","","Errors that are thrown by this crate.",null,null],[13,"EncodingError","","An error occurred during encoding.",3,null],[13,"InvalidVectorLength","","The length of a vector is invalid.",3,null],[13,"InvalidInput","","Invalid input when trying to decode a primitive integer.",3,null],[13,"DecodingError","","An error occurred during decoding.",3,null],[8,"Serialize","","The <code>Serialize</code> trait provides functions to serialize a …",null,null],[10,"tls_serialize","","",4,[[["vec",3]],[["result",4],["error",4]]]],[11,"tls_serialize_detached","","",4,[[],[["vec",3],["error",4],["result",4]]]],[8,"Deserialize","","The <code>Deserialize</code> trait provides functions to deserialize a …",null,null],[10,"tls_deserialize","","",5,[[["cursor",3]],[["error",4],["result",4]]]],[11,"tls_deserialize_detached","","",5,[[],[["error",4],["result",4]]]],[3,"Cursor","","The <code>Cursor</code> is a helper used to read byte slices when …",null,null],[12,"bytes","","",6,null],[12,"position","","",6,null],[11,"new","","Create a new <code>Cursor</code> from a byte slice. This function …",6,[[],["cursor",3]]],[11,"read","","",6,[[],[["result",4],["error",4]]]],[11,"sub_cursor","","",6,[[],[["result",4],["cursor",3],["error",4]]]],[11,"is_empty","","",6,[[]]],[11,"has_more","","",6,[[]]],[11,"from","tls_codec::tls_vec","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","tls_codec","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"tls_serialize","tls_codec::tls_vec","",0,[[["vec",3]],[["result",4],["error",4]]]],[11,"tls_serialize","","",1,[[["vec",3]],[["result",4],["error",4]]]],[11,"tls_serialize","","",2,[[["vec",3]],[["result",4],["error",4]]]],[11,"tls_deserialize","","",0,[[["cursor",3]],[["error",4],["result",4]]]],[11,"tls_deserialize","","",1,[[["cursor",3]],[["error",4],["result",4]]]],[11,"tls_deserialize","","",2,[[["cursor",3]],[["error",4],["result",4]]]],[11,"from","tls_codec","",3,[[["tryfromsliceerror",3]]]],[11,"from","tls_codec::tls_vec","",0,[[["vec",3]]]],[11,"from","","",0,[[]]],[11,"from","","",1,[[["vec",3]]]],[11,"from","","",1,[[]]],[11,"from","","",2,[[["vec",3]]]],[11,"from","","",2,[[]]],[11,"from","tls_codec","",3,[[["tryfrominterror",3]]]],[11,"from","","",3,[[["infallible",4]]]],[11,"clone","tls_codec::tls_vec","",0,[[],["tlsvecu8",3]]],[11,"clone","","",1,[[],["tlsvecu16",3]]],[11,"clone","","",2,[[],["tlsvecu32",3]]],[11,"clone","tls_codec","",3,[[],["error",4]]],[11,"default","tls_codec::tls_vec","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"eq","","",0,[[["tlsvecu8",3]]]],[11,"ne","","",0,[[["tlsvecu8",3]]]],[11,"eq","","",1,[[["tlsvecu16",3]]]],[11,"ne","","",1,[[["tlsvecu16",3]]]],[11,"eq","","",2,[[["tlsvecu32",3]]]],[11,"ne","","",2,[[["tlsvecu32",3]]]],[11,"eq","tls_codec","",3,[[["error",4]]]],[11,"fmt","tls_codec::tls_vec","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","tls_codec","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"deserialize","tls_codec::tls_vec","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]]],"p":[[3,"TlsVecU8"],[3,"TlsVecU16"],[3,"TlsVecU32"],[4,"Error"],[8,"Serialize"],[8,"Deserialize"],[3,"Cursor"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);