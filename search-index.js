var searchIndex = JSON.parse('{\
"openmls":{"doc":"OpenMLS","t":[0,0,0,0,0,0,0,0,0,0,0,3,4,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,8,16,8,8,8,10,11,10,10,10,11,11,3,13,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,0,11,11,0,11,11,11,0,0,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,13,13,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,13,4,3,3,4,3,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,13,13,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,3,6,13,13,13,13,13,13,13,13,4,13,13,3,13,13,13,3,3,13,4,3,13,13,13,4,13,13,13,3,3,3,4,13,3,13,3,13,3,13,13,3,4,4,13,13,13,4,13,13,13,13,13,3,13,3,4,13,13,13,13,3,4,13,6,6,13,13,4,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,6,3,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,4,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,3,13,3,4,13,3,13,3,13,3,13,3,13,3,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,6,3,6,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,12,12,11,11,11,11,0,0,13,13,13,13,13,13,13,3,4,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,3,4,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,4,4,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,13,13,13,3,13,13,3,13,13,13,3,4,3,13,13,13,13,13,13,13,13,13,13,13,13,3,3,4,13,13,4,13,13,13,13,13,13,13,13,4,4,13,4,13,13,3,3,13,13,4,13,13,13,13,13,13,13,13,4,13,13,13,4,13,13,13,13,3,3,3,3,4,13,13,4,3,13,13,13,13,13,13,3,4,3,3,3,4,13,13,13,13,13,4,4,13,13,13,13,13,13,4,13,13,13,3,3,3,4,13,4,13,13,13,4,3,13,3,13,13,3,4,3,13,13,13,8,8,8,13,13,13,13,13,3,3,13,13,13,13,13,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,4,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,4,13,13,13,4,13,4,13,13,4,13,13,13,4,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,4,13,13,13,13,13,13,13,4,4,13,13,13,13,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,12,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,0,4,4,13,3,3,13,13,13,11,11,11,11,11,11,11,11,11,11,12,0,12,11,11,11,11,12,11,11,11,0,12,11,11,11,11,11,11,11,12,12,12,11,11,11,11,12,0,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,3,11,11,11,11,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,12,11,11,11,0,12,11,12,12,11,11,12,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,4,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,4,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,13,13,13,13,4,3,13,13,13,13,13,13,13,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,5,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,3,4,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,5,11,11,12,12,12,12,12,12,12,5,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,12,11,11,13,13,13,13,13,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ciphersuite","config","error","framing","group","key_store","messages","prelude","schedule","test_utils","tree","Ciphersuite","CiphersuiteName","MLS10_128_DHKEMP256_AES128GCM_SHA256_P256","MLS10_128_DHKEMX25519_AES128GCM_SHA256_Ed25519","MLS10_128_DHKEMX25519_CHACHA20POLY1305_SHA256_Ed25519","MLS10_256_DHKEMP521_AES256GCM_SHA512_P521","MLS10_256_DHKEMX448_AES256GCM_SHA512_Ed448","MLS10_256_DHKEMX448_CHACHA20POLY1305_SHA512_Ed448","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","fmt","fmt","fmt","fmt","from","from","hash","into","into","name","new","serialize","serialize","signable","signature_scheme","tls_deserialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","SealingType","Signable","SignedOutput","SignedStruct","Verifiable","VerifiedStruct","from_payload","sign","signature","unsigned_payload","unsigned_payload","verify","verify_no_out","Config","Mls10","Mls10Draft11","ProtocolVersion","Reserved","borrow","borrow","borrow_mut","borrow_mut","ciphersuite","clone","clone","clone_into","clone_into","cmp","default","default_key_package_lifetime","deserialize","deserialize","eq","eq","errors","fmt","fmt","fmt","from","from","into","into","key_package_lifetime_margin","ne","partial_cmp","serialize","serialize","supported_ciphersuite_names","supported_ciphersuites","supported_extensions","supported_versions","tls_deserialize","tls_serialize","tls_serialized_len","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ConfigError","IncompatibleCiphersuite","IncompatibleMlsVersion","InvalidConfig","LibraryError","UnsupportedCiphersuite","UnsupportedMlsVersion","UnsupportedSignatureScheme","borrow","borrow_mut","clone","clone_into","eq","fmt","fmt","from","into","source","to_owned","to_string","try_from","try_into","type_id","vzip","ErrorPayload","ErrorString","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","ne","ne","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FramingParameters","aad","borrow","borrow_mut","ciphertext","clone","clone_into","errors","from","into","new","plaintext","sender","to_owned","try_from","try_into","type_id","vzip","wire_format","MlsCiphertext","borrow","borrow_mut","ciphertext","clone","clone_into","epoch","eq","fmt","from","group_id","into","is_handshake_message","ne","tls_deserialize","tls_serialize","tls_serialized_len","to_owned","try_from","try_into","type_id","vzip","CodecError","CodecError","CredentialError","CredentialError","DecryptionError","EncryptionError","GenerationOutOfBound","InvalidContentType","InvalidMembershipTag","InvalidMembershipTag","InvalidSignature","MissingMembershipTag","MlsCiphertextError","MlsPlaintextError","NotAnApplicationMessage","PlaintextError","SecretTreeError","UnknownSender","VerificationError","VerificationError","WrongWireFormat","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","into","into","into","ne","ne","ne","source","source","source","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","0","0","0","0","0","Application","Application","Commit","Commit","ContentType","MembershipTag","MlsPlaintext","MlsPlaintextContentType","MlsPlaintextTbs","Proposal","Proposal","VerifiableMlsPlaintext","as_application_message","authenticated_data","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","content","deserialize","deserialize","deserialize","deserialize","epoch","epoch","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_payload","from_plaintext","from_verifiable","group_id","group_id","into","into","into","into","into","into","is_handshake_message","is_handshake_message","ne","ne","ne","new","new_application","new_commit","new_proposal","payload","sender","sender_index","serialize","serialize","serialize","serialize","set_context","signature","tls_deserialize","tls_deserialize","tls_deserialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unsigned_payload","unsigned_payload","verify_membership","vzip","vzip","vzip","vzip","vzip","vzip","wire_format","0","0","0","Member","NewMember","Preconfigured","Sender","SenderType","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","fmt","fmt","from","from","into","into","is_member","ne","serialize","serialize","tls_deserialize","tls_deserialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","to_leaf_index","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","AddMembers","ApplicationMessage","ApplicationMessageEvent","AutoSave","Ciphertext","Ciphertext","CommitError","CommitWithInvalidProposals","Config","CreateCommit","CredentialError","EmptyInput","EmptyInputError","Error","Error","ErrorEvent","Exists","Exporter","Group","GroupContext","GroupEpoch","GroupError","GroupEvent","GroupId","InvalidApplicationMessage","InvalidCiphertext","InvalidMessage","InvalidMessageError","InvalidProposal","KeyStoreError","LibraryError","ManagedGroup","ManagedGroupCallbacks","ManagedGroupConfig","ManagedGroupError","MemberAdded","MemberAddedEvent","MemberRemoved","MemberRemovedEvent","MemberUpdated","MemberUpdatedEvent","MembershipTagMismatch","MlsCiphertext","MlsGroupConfig","MlsMessageIn","MlsMessageOut","MlsPlaintext","NoMatchingCredentialBundle","NoMatchingKeyPackageBundle","PendingProposalsError","PendingProposalsExist","Plaintext","Plaintext","PoisonedCredentialBundle","PskReceived","PskReceivedEvent","ReInit","ReInitEvent","Removal","RemoveMembers","TheyLeft","TheyWereRemovedBy","UnknownSender","UpdatePolicy","UseAfterEviction","UseAfterEviction","ValidateAdd","ValidateRemove","WeLeft","WeWereRemovedBy","WireFormat","aad","add_members","add_ratchet_tree_extension","additional_as_epochs","as_slice","authentication_secret","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callbacks","ciphersuite","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","configuration","create_initial_group_context","create_message","credential","default","deserialize","deserialize","deserialize","deserialize","epoch","epoch","eq","eq","eq","eq","eq","errors","errors","events","export_group_context","export_path_secrets","export_ratchet_tree","export_secret","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_slice","get_resumption_secret","group_id","group_id","group_id","group_id","hash","increment","into","into","into","into","into","into","into","into","is_active","is_handshake_message","leave_group","load","members","mls_group","ne","ne","ne","ne","new","new","new_from_welcome","padding_block_size","padding_block_size","pending_proposals","print_tree","process_message","process_pending_proposals","propose_add_member","propose_remove_member","propose_self_update","random","remove_members","save","self_update","serialize","serialize","serialize","serialize","serialize","set_aad","set_configuration","tests","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_vec","tree_hash","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","AutoSave","ManagedGroupCallbacks","ValidateAdd","ValidateRemove","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","new","to_owned","try_from","try_into","type_id","vzip","with_auto_save","with_validate_add","with_validate_remove","ManagedGroupConfig","UpdatePolicy","borrow","borrow","borrow_mut","borrow_mut","callbacks","clone","clone","clone_into","clone_into","default","deserialize","deserialize","eq","eq","fmt","fmt","from","from","into","into","ne","ne","new","padding_size","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AddMembers","ApplyCommitError","ApplyCommitError","CannotRemoveSelf","CiphersuiteMismatch","CodecError","CodecError","CodecError","CommitError","CommitWithInvalidProposals","Config","ConfigError","ConfigError","ConfirmationTagMismatch","ConfirmationTagMismatch","ConfirmationTagMissing","CreateCommit","CreateCommitError","CreateCommitError","CredentialError","CredentialError","DecryptionFailure","DuplicateRatchetTreeExtension","EmptyInput","EmptyInputError","EpochMismatch","Error","Exists","Exporter","ExporterError","ExporterError","Group","GroupError","GroupInfoDecryptionFailure","GroupSecretsDecryptionFailure","InitSecretNotFound","InitSecretNotFound","InvalidApplicationMessage","InvalidCiphertext","InvalidGroupInfoSignature","InvalidMessage","InvalidMessageError","InvalidProposal","InvalidRatchetTree","JoinerSecretNotFound","KeyLengthTooLong","KeyScheduleError","KeyScheduleError","KeyScheduleError","KeyStoreError","LibraryError","ManagedGroupError","MathError","MembershipTagMismatch","MissingKeyPackage","MissingOwnKeyPackage","MissingProposal","MissingRatchetTree","MlsCiphertextError","MlsGroupError","MlsPlaintextError","NoMatchingCredentialBundle","NoMatchingKeyPackageBundle","NoParentHashExtension","NoPskFetcherProvided","OwnKeyNotFound","OwnKeyNotFound","ParentHashMismatch","ParentHashMismatch","PathKeyPackageVerificationFailure","PendingProposalsError","PendingProposalsExist","PlaintextSignatureFailure","PoisonedCredentialBundle","ProposalQueueError","PskError","PskError","PskError","PskError","PskIdNotFound","PskSecretError","RemoveMembers","RequiredPathNotFound","SelfRemoved","TreeError","TreeHashMismatch","UnknownError","UnknownSender","UnsupportedMlsVersion","UseAfterEviction","UseAfterEviction","WelcomeError","WelcomeError","WrongPlaintextContentType","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","ne","ne","ne","ne","ne","ne","source","source","source","source","source","source","source","source","source","source","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","ApplicationMessage","ApplicationMessageEvent","Error","ErrorEvent","GroupEvent","MemberAdded","MemberAddedEvent","MemberRemoved","MemberRemovedEvent","MemberUpdated","MemberUpdatedEvent","PskReceived","PskReceivedEvent","ReInit","ReInitEvent","Removal","TheyLeft","TheyWereRemovedBy","WeLeft","WeWereRemovedBy","aad","aad","aad","aad","aad","aad","added_member","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","eq","eq","eq","error","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","message","ne","ne","ne","ne","ne","ne","ne","ne","ne","psk_id","psk_id","removal","sender","sender","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","updated_member","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","1","CreateCommitResult","MlsGroup","PskFetcher","apply_commit","authentication_secret","borrow","borrow_mut","ciphersuite","context","create_add_proposal","create_application_message","create_commit","create_commit","create_presharedkey_proposal","create_remove_proposal","create_update_proposal","decrypt","deserialize","encrypt","export_public_group_state","export_secret","extensions","fmt","from","group_id","into","load","new","new_from_welcome","save","serialize","tree","try_from","try_into","type_id","use_ratchet_tree_extension","verify","verify_membership_tag","vzip","Proposals","borrow","borrow_mut","from","into","proposals_by_reference","proposals_by_value","try_from","try_into","type_id","vzip","kat_messages","kat_transcripts","AddProposalEncodingMismatch","CapabilitiesEncodingMismatch","CommitEncodingMismatch","GroupInfoEncodingMismatch","GroupSecretsEncodingMismatch","KeyPackageEncodingMismatch","LifetimeEncodingMismatch","MessagesTestVector","MessagesTestVectorError","MlsCiphertextEncodingMismatch","MlsPlaintextApplicationEncodingMismatch","MlsPlaintextCommitEncodingMismatch","MlsPlaintextProposalEncodingMismatch","PreSharedKeyProposalEncodingMismatch","PublicGroupStateEncodingMismatch","RatchetTreeEncodingMismatch","RemoveProposalEncodingMismatch","UpdateProposalEncodingMismatch","WelcomeEncodingMismatch","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","eq","fmt","fmt","fmt","from","from","generate_test_vector","into","into","run_test_vector","serialize","source","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ConfirmationTagMismatch","ConfirmedTranscriptHashMismatch","GroupContextMismatch","InterimTranscriptHashMismatch","MembershipTagVerificationError","TranscriptTestVector","TranscriptTestVectorError","borrow","borrow","borrow_mut","borrow_mut","cipher_suite","clone","clone","clone_into","clone_into","default","deserialize","eq","fmt","fmt","fmt","from","from","generate_test_vector","into","into","run_test_vector","serialize","source","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Commit","ConfirmationTag","EncryptedGroupSecrets","PathSecret","Welcome","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","encrypted_group_secrets","eq","eq","eq","eq","eq","errors","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","has_path","into","into","into","into","into","key_package_hash","ne","ne","ne","ne","ne","path","secrets","serialize","serialize","serialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","NotAProposal","ProposalNotFound","ProposalOrRefTypeError","ProposalQueueError","QueuedProposalError","TlsCodecError","UnknownValue","WrongContentType","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","ne","ne","source","source","source","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","AddProposal","ApplicationMessage","Basic","Basic","BasicCredential","Branch","Branch","BranchPsk","Capabilities","Capabilities","Capabilities","CapabilitiesExtension","CapabilitiesExtensionError","Certificate","CiphersuiteMismatch","CiphersuiteSignatureSchemeMismatch","Ciphertext","CodecError","CodecError","CommitError","CommitWithInvalidProposals","Config","ConfigError","ConfigError","ConfigError","CreateCommit","Credential","CredentialBundle","CredentialError","CredentialError","CredentialError","CredentialType","CryptoError","Duplicate","DuplicateExtension","EmptyInput","EmptyVersionsField","Error","Expired","Exporter","Extension","ExtensionError","ExtensionError","ExtensionType","External","External","ExternalPsk","ExternalPskBundle","Group","GroupError","GroupEvent","Invalid","Invalid","Invalid","Invalid","Invalid","InvalidApplicationMessage","InvalidCiphertext","InvalidExtension","InvalidExtensionError","InvalidExtensionType","InvalidLifetimeExtension","InvalidMessage","InvalidMessageError","InvalidProposal","InvalidSignature","InvalidSignature","KeyId","KeyIdExtension","KeyPackage","KeyPackageBundle","KeyPackageBundlePayload","KeyPackageError","KeyPackageId","KeyPackageId","KeyPackageIdError","KeyPackagePayload","KeyStoreError","LibraryError","LibraryError","LifeTime","Lifetime","Lifetime","LifetimeExtension","LifetimeExtensionError","ManagedGroup","ManagedGroupCallbacks","ManagedGroupConfig","ManagedGroupError","MandatoryExtensionsMissing","MemberAdded","MemberRemoved","MemberUpdated","MembershipTagMismatch","MlsCredentialType","MlsMessageOut","NoCiphersuitesSupplied","NoMatchingCredentialBundle","NoMatchingKeyPackageBundle","ParentHash","ParentHash","ParentHash","ParentHashError","PendingProposalsExist","Plaintext","PoisonedCredentialBundle","PreSharedKeyId","PreSharedKeyProposal","PreSharedKeys","Psk","PskReceived","PskType","RatchetTree","RatchetTree","RatchetTree","RatchetTreeError","RatchetTreeExtension","ReInit","ReInitProposal","Reinit","Reinit","ReinitPsk","Removal","RemoveProposal","Reserved","TheyLeft","TheyWereRemovedBy","TlsDeserializeTrait","TlsSerializeTrait","TlsSizeTrait","UnknownConfigError","UnknownSender","UnsupportedCiphersuite","UnsupportedCiphersuite","UnsupportedCredentialType","UpdatePolicy","UpdateProposal","UseAfterEviction","WeLeft","WeWereRemovedBy","X509","X509","_print_tree","add_extension","add_extension","as_capabilities_extension","as_key_id_extension","as_lifetime_extension","as_parent_hash_extension","as_ratchet_tree_extension","as_slice","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ciphersuite_name","ciphersuites","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","credential","credential","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","errors","errors","extension_type","extensions","extensions","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_key_package_and_leaf_secret","from_key_store_value","from_key_store_value","from_payload","from_payload","hash","hash","identity","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","key_id","key_package","leaf_secret","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new","new_with_keypair","new_with_version","partial_cmp","partial_cmp","psk_epoch","psk_epoch","psk_group_id","psk_group_id","psk_id","secret","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","signature_key","signature_scheme","source","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize_detached","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","to_key_store_value","to_key_store_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_presharedkey_id","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsigned","unsigned_payload","unsigned_payload","unsigned_payload","verify","verify","verify","versions","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","Capabilities","CapabilitiesExtensionError","CiphersuiteMismatch","CiphersuiteSignatureSchemeMismatch","CodecError","ConfigError","ConfigError","CredentialError","Duplicate","DuplicateExtension","EmptyVersionsField","Expired","ExtensionError","ExtensionError","Invalid","Invalid","Invalid","Invalid","Invalid","InvalidExtension","InvalidExtensionError","InvalidExtensionType","InvalidLifetimeExtension","InvalidSignature","KeyPackageError","KeyPackageId","KeyPackageIdError","LibraryError","Lifetime","LifetimeExtensionError","MandatoryExtensionsMissing","NoCiphersuitesSupplied","ParentHash","ParentHashError","RatchetTree","RatchetTreeError","UnknownConfigError","UnsupportedCiphersuite","UnsupportedCiphersuite","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","ne","ne","source","source","source","source","source","source","source","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","ConfirmationKey","MembershipKey","PreSharedKeyId","PreSharedKeys","PskSecret","ResumptionSecret","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","codec","deserialize","deserialize","deserialize","deserialize","eq","errors","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","kat_key_schedule","ne","new","new","psk","psk_nonce","psks","psktype","secret","serialize","serialize","serialize","serialize","tag","tls_deserialize","tls_deserialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","AuthenticationSecretMismatch","ConfirmationKeyMismatch","DifferentLength","EncodingError","EncryptionSecretMismatch","ErrorState","ExporterSecretMismatch","ExternalPubMismatch","ExternalSecretMismatch","GroupContextMismatch","InitSecretMismatch","InvalidState","JoinerSecretMismatch","KeyScheduleError","KsTestVectorError","MembershipKeyMismatch","NotContext","NotEpoch","NotInit","PskSecretError","ResumptionSecretMismatch","SenderDataSecretMismatch","TooManyKeys","WelcomeSecretMismatch","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","ne","source","source","source","source","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","0","KeyScheduleTestVector","borrow","borrow_mut","cipher_suite","clone","clone_into","default","deserialize","fmt","from","generate_test_vector","into","run_test_vector","serialize","to_owned","try_from","try_into","type_id","vzip","test_framework","ActionType","CodecUse","Commit","Group","ManagedTestSetup","Proposal","SerializedMessages","StructMessages","add_clients","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_group_states","ciphersuite","client","clients","clone","clone_into","create_group","create_random_group","default_mgc","deliver_welcome","distribute_to_members","eq","errors","exporter_secret","fmt","fmt","from","from","from","from","get_fresh_key_package","group_config","group_id","groups","into","into","into","into","members","messages","new","perform_random_operation","public_tree","random_group_member","random_new_members_for_group","remove_clients","remove_clients_by_index","self_update","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","use_codec","vzip","vzip","vzip","vzip","waiting_for_welcome","Client","add_members","borrow","borrow_mut","create_group","credentials","crypto","fmt","from","get_fresh_key_package","get_members_of_group","groups","identity","into","join_group","receive_messages_for_group","remove_members","self_update","try_from","try_into","type_id","vzip","CiphersuiteNotSupported","ClientAlreadyInGroup","ClientError","ClientError","ClientNotInGroup","ErrorEvent","FailedToJoinGroup","GroupError","InvalidMessage","ManagedGroupError","NoCiphersuite","NoFreshKeyPackage","NoMatchingCredential","NoMatchingGroup","NoMatchingKeyPackage","NotEnoughClients","NotEnoughMembers","SetupError","SetupGroupError","TlsCodecError","Unknown","Unknown","UnknownClientId","UnknownGroupId","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","eq","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","into","into","into","ne","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","0","0","0","0","0","MessageType","MlsCiphertext","MlsPlaintext","borrow","borrow_mut","clone","clone_into","fmt","from","into","tls_deserialize","tls_serialize","tls_serialized_len","to_owned","try_from","try_into","type_id","vzip","ApplyProposalsValues","LeafNodeHashInput","ParentNodeTreeHashInput","RatchetTree","UpdatePath","UpdatePathNode","apply_proposals","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ciphersuite","clone","clone","clone_into","clone_into","deserialize","deserialize","deserialize","eq","eq","errors","exclusion_list","fmt","fmt","fmt","from","from","from","from","from","from","hash","index","into","into","into","into","into","into","invitation_list","leaf_count","ne","ne","node","nodes","own_key_package","path_required","presharedkeys","public_key_tree","public_key_tree_copy","self_removed","serialize","serialize","serialize","tests_and_kats","tls_deserialize","tls_deserialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","verify_parent_hash","verify_parent_hashes","vzip","vzip","vzip","vzip","vzip","vzip","AllChecksFailed","CredentialError","EmptyParentNode","EndedWithLeafNode","InputNotParentNode","InvalidArguments","InvalidTree","InvalidUpdatePath","NotAParentNode","NotAParentNode","ParentHashError","PathSecretDecryptionError","TreeError","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","fmt","fmt","fmt","fmt","from","from","from","into","into","ne","source","source","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","LeafIndex","NodeIndex","as_u32","as_u32","as_usize","as_usize","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","deserialize","deserialize","eq","eq","fmt","fmt","from","from","from","from","from","from","from","hash","hash","into","into","is_leaf","is_parent","ne","ne","partial_cmp","partial_cmp","serialize","serialize","tls_deserialize","tls_deserialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Leaf","Node","NodeType","Parent","ParentNode","add_unmerged_leaf","blank","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","eq","eq","eq","fmt","fmt","fmt","from","from","from","into","into","into","is_blank","is_leaf","is_parent","key_package","ne","ne","new","new_blank_parent_node","new_leaf","parent_hash","public_hpke_key","public_key","serialize","serialize","serialize","set_parent_hash","tls_deserialize","tls_deserialize","tls_deserialize","tls_serialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","tls_serialized_len","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unmerged_leaves","vzip","vzip","vzip","kats","kat_encryption","kat_tree_kem","kat_treemath","ApplicationSecretKeyMismatch","ApplicationSecretNonceMismatch","DecryptedApplicationMessageMismatch","DecryptedHandshakeMessageMismatch","EncTestVectorError","EncryptionTestVector","HandshakeSecretKeyMismatch","HandshakeSecretNonceMismatch","InvalidLeafSequenceApplication","InvalidLeafSequenceHandshake","LeafNumberMismatch","SenderDataKeyMismatch","SenderDataNonceMismatch","borrow","borrow","borrow_mut","borrow_mut","cipher_suite","clone","clone","clone_into","clone_into","deserialize","eq","fmt","fmt","fmt","from","from","generate_test_vector","into","into","n_leaves","run_test_vector","serialize","source","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AfterParentHashMismatch","AfterRatchetTreeMismatch","AfterRootSecretMismatch","AfterTreeHashMismatch","BeforeParentHashMismatch","BeforeRootSecretMismatch","BeforeTreeHashMismatch","TreeKemTestVector","TreeKemTestVectorError","add_sender","borrow","borrow","borrow_mut","borrow_mut","cipher_suite","clone","clone","clone_into","clone_into","deserialize","eq","fmt","fmt","fmt","from","from","generate_test_vector","into","into","my_key_package","my_leaf_secret","my_path_secret","ratchet_tree_after","ratchet_tree_before","root_secret_after_add","root_secret_after_update","run_test_vector","serialize","source","to_owned","to_owned","to_string","tree_hash_after","tree_hash_before","try_from","try_from","try_into","try_into","type_id","type_id","update_group_context","update_path","update_sender","vzip","vzip","LeftIndexMismatch","ParentIndexMismatch","RightIndexMismatch","RootIndexMismatch","SiblingIndexMismatch","TmTestVectorError","TreeMathTestVector","TreeSizeMismatch","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","eq","fmt","fmt","fmt","from","from","generate_test_vector","into","into","run_test_vector","serialize","source","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["openmls","","","","","","","","","","","openmls::ciphersuite","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::ciphersuite::signable","","","","","","","","","","","","","openmls::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::config::errors","","","","","","","","","","","","","","","","","","","","","","","","openmls::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::framing","","","","","","","","","","","","","","","","","","","openmls::framing::ciphertext","","","","","","","","","","","","","","","","","","","","","","openmls::framing::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::framing::errors::MlsCiphertextError","","","openmls::framing::errors::MlsPlaintextError","","","openmls::framing::errors::VerificationError","openmls::framing::plaintext","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::framing::plaintext::MlsPlaintextContentType","","","openmls::framing::sender","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::groupopenmls::group::GroupEvent","","","","","","","openmls::group::InvalidMessageError","","","openmls::group::ManagedGroupError","","","","","","","","","","openmls::group::MlsMessageIn","","openmls::group::MlsMessageOut","","openmls::group::Removal","","","","openmls::group::callbacks","","","","","","","","","","","","","","","","","","","","","","openmls::group::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::group::errorsopenmls::group::errors::ApplyCommitError","","","","","openmls::group::errors::InvalidMessageError","","","openmls::group::errors::ManagedGroupError","","","","","","","","","","openmls::group::errors::MlsGroupError","","","","","","","","","","","","","","openmls::group::errors::PskError","openmls::group::errors::WelcomeError","","","","","","","openmls::group::events","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::group::events::GroupEvent","","","","","","","openmls::group::events::Removal","","","","openmls::group::mls_group","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::group::mls_group::create_commit","","","","","","","","","","","openmls::group::tests","","openmls::group::tests::kat_messages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::group::tests::kat_transcripts","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::messages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::messages::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::messages::errors::ProposalQueueError","openmls::messages::errors::QueuedProposalError","openmls::preludeopenmls::prelude::CredentialError","","","openmls::prelude::Extension","","","","","openmls::prelude::ExtensionError","","","","","","","","","openmls::prelude::GroupEvent","","","","","","","openmls::prelude::InvalidMessageError","","","openmls::prelude::KeyPackageError","","","openmls::prelude::ManagedGroupError","","","","","","","","","","openmls::prelude::MlsCredentialType","","openmls::prelude::MlsMessageOut","","openmls::prelude::Psk","","","openmls::prelude::Removal","","","","openmls::prelude::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::prelude::errors::ExtensionError","","","","","","","","","openmls::prelude::errors::KeyPackageError","","","openmls::schedule","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::schedule::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::schedule::errors::KeyScheduleError","openmls::schedule::kat_key_schedule","","","","","","","","","","","","","","","","","","","openmls::test_utils","openmls::test_utils::test_framework","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::test_utils::test_framework::client","","","","","","","","","","","","","","","","","","","","","","openmls::test_utils::test_framework::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::test_utils::test_framework::errors::ClientError","","","","","","openmls::test_utils::test_framework::errors::SetupError","openmls::test_utils::test_framework::messages","","","","","","","","","","","","","","","","","","openmls::tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::tree::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::tree::errors::TreeError","","openmls::tree::index","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::tree::node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::tree::tests_and_kats","openmls::tree::tests_and_kats::kats","","","openmls::tree::tests_and_kats::kats::kat_encryption","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::tree::tests_and_kats::kats::kat_tree_kem","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::tree::tests_and_kats::kats::kat_treemath","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Ciphersuites for MLS","This config contains all structs, enums and functions to …","OpenMLS Errors","Message framing","Group APIs for MLS","Serialization for key store objects.","","Single place, re-exporting the most used public functions. …","This module represents the key schedule as introduced in …","Test utilities","","","MLS ciphersuites.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the name of this ciphersuite.","Create a new ciphersuite from the given <code>name</code>.","","","","Get the signature scheme of this ciphersuite.","","","","","","","","","","","","","","","","","","","This type is used to prevent users of the trait from …","The <code>Signable</code> trait is implemented by all struct that are …","","This trait must be implemented by all structs that contain …","The verifiable trait must be implemented by any struct …","This trait must be implemented by all structs that contain …","Build a signed struct version from the payload struct.","Sign the payload with the given <code>id</code>.","A reference to the signature to be verified.","Return the unsigned, serialized payload that should be …","Return the unsigned, serialized payload that should be …","Verifies the payload against the given <code>credential</code>. The …","Verifies the payload against the given <code>credential</code>. The …","OpenMLS Configuration","","","Protocol Version","","","","","","Get the ciphersuite of the given name.","","","","","","","Get the default <code>KeyPackage</code> lifetime (in seconds).","","","","","Config errors","","","","","","","","Get the margin in which <code>KeyPackage</code> lifetimes are already …","","","","","Get a list of the supported cipher suites names.","Get a list of the supported cipher suites.","Get a list of the supported extension types.","Get a list of the supported protocol versions.","","","","","","","","","Convert an integer to the corresponding protocol version.","","","","","","","","Operation on incompatible cipher suites.","Operation on incompatible MLS versions.","Invalid configuration.","Library error","Ciphersuite is not supported by this configuration.","MLS version is not supported by this configuration.","Signature scheme is not supported by this configuration.","","","","","","","","","","","","","","","","","A wrapper struct for an arbitrary error payload as byte …","A wrapper struct for an error string. This can be used …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This struct is used to group common framing parameters in …","","","","","","","Framing errors.","","","","MlsPlaintext","The sender of a message","","","","","","","<code>MlsCiphertext</code> is the framing struct for an encrypted …","","","Get the cipher text bytes as slice.","","","Returns the <code>epoch</code> in the <code>MlsCiphertext</code>.","","","","Returns the <code>group_id</code> in the <code>MlsCiphertext</code>.","","Returns <code>true</code> if this is a handshake message and <code>false</code> …","","","","","","","","","","TLS Codec error","TLS codec error","See <code>CredentialError</code> for details.","Credential error","An error occurred while decrypting.","An error occurred while encrypting.","Couldn’t find a ratcheting secret for the given sender …","The MlsCiphertext has an invalid content type.","The MlsPlaintext membership tag is invalid","The MlsPlaintext membership tag is invalid","The MlsPlaintext signature is invalid","The MlsPlaintext membership tag is missing","","","The MlsPlaintext message is not an application message.","MlsPlaintext error","SecretTree error","Sender is not part of the group","","See <code>VerificationError</code> for details.","The WireFormat was MLSPlaintext.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wrapper around a <code>Mac</code> used for type safety.","<code>MLSPlaintext</code> is a framing structure for MLS messages. It …","","","","","","Tries to extract an application messages from an …","The the authenticated data of this MlsPlaintext as byte …","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the <code>content</code> field.","","","","","Get the group ID.","Get the epoch.","","","","","","","","","","","","","","","","","","","Create a <code>VerifiableMlsPlaintext</code> from an <code>MlsPlaintext</code> and …","","Get the group ID.","Get the group id as byte slice.","","","","","","","Returns <code>true</code> if this is a handshake message and <code>false</code> …","Returns <code>true</code> if this is a handshake message and <code>false</code> …","","","","Create a new <code>VerifiableMlsPlaintext</code> from a <code>MlsPlaintextTbs</code> …","This constructor builds an <code>MlsPlaintext</code> containing an …","This constructor builds an <code>MlsPlaintext</code> containing a …","This constructor builds an <code>MlsPlaintext</code> containing a …","Get the underlying MlsPlaintext data of the tbs object.","Get the sender of this message.","Get the sender leaf index of this message.","","","","","Set the serialized context before verifying the signature.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify the membership tag of an <code>MlsPlaintext</code> sent from a …","","","","","","","Get the wire format.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An empty list of KeyPackages was provided.","","Event that occurs when an application message is received. …","","An OpenMLS <code>MlsCiphertext</code>.","An OpenMLS <code>MlsCiphertext</code>.","See <code>ApplyCommitError</code> for details","A commit contained an invalid proposal.","See <code>ConfigError</code> for details","See <code>CreateCommitError</code> for details","See <code>CredentialError</code> for details","Empty input. Additional detail is provided.","","Tried to use a group after being evicted from it.","","Event that occurs when an error occurred while processing …","Can’t create message because a pending proposal exists.","See <code>ExporterError</code> for details","See <code>GroupError</code> for details","","","See <code>GroupError</code> for details","Group event that occured while processing messages in …","","The application message is invalid.","An invalid ciphertext was provided. The error returns the …","The message could not be processed.","","The given proposal is invalid.","Error performing key store operation.","An internal library error occurred. Additional detail is …","A <code>ManagedGroup</code> represents an MlsGroup with an easier, …","","Specifies the configuration parameters for a managed group","","","Event that occurs when member <code>sender</code> adds member …","","Event that occurs when a member leaves/is removed from the …","","Event that occurs when a member updates its leaf. …","A Proposal with an invalid membership tag was received.","","Configuration for an MLS group.","Unified message type for input to the managed API","Unified message type for output by the managed API","","Couldn’t find a <code>CredentialBundle</code> in the <code>KeyStore</code> that …","Couldn’t find a <code>KeyPackageBundle</code> in the <code>KeyStore</code> that …","","See <code>PendingProposalsError</code> for details","An OpenMLS <code>MlsPlaintext</code>.","An OpenMLS <code>MlsPlaintext</code>.","Tried to access a poisoned <code>CredentialBundle</code>. See …","","Event that occurs when  a PSK is received. <code>psk_id</code> contains …","","Event that occurs when a <code>ReInitProposal</code> is received. …","This enum lists the 4 different variants of a removal, …","An empty list of indexes was provided.","Another member issued a RemoveProposal for itself that was …","Member A issued a RemoveProposal for member B that was now …","Could not retrieve credential for the given sender.","Specifies in which intervals the own leaf node should be …","","See <code>UseAfterEviction</code> for details","","","We previously issued a RemoveProposal for ourselves and …","Another member issued a RemoveProposal for ourselves that …","","Gets the AAD used in the framing","Adds members to the group","Flag whether to send the ratchet tree along with the …","","","Returns the authentication secret","","","","","","","","","","","","","","","","","Collection of callback functions that are passed to a …","Returns the group’s ciphersuite","","","","","","","","","","","","","","","","Gets the configuration","Create the <code>GroupContext</code> needed upon creation of a new …","Creates an application message. Returns …","Returns own credential. If the group is inactive, it …","","","","","","Get the epoch as plain u64.","Return the epoch","","","","","","MLS Managed Group errors","MLS Group errors","","","","Export the Ratchet Tree","Exports a secret from the current epoch","","","","","","","","","","","","","","","","","","","","","Returns a resumption secret for a given epoch. If no …","Get group ID","","Get the group ID as plain byte vector.","Return the group ID","","","","","","","","","","","Returns whether the own client is still a member of the …","Returns <code>true</code> if this is a handshake message and <code>false</code> …","Leave the group","Loads the state from persisted state","Gets the current list of members","","","","","","Creates a new group from scratch with only the creator as …","Create a new group context","Creates a new group from a <code>Welcome</code> message","Get the padding block size used in this config.","","Returns a list of proposal","","Processes any incoming messages from the DS (MlsPlaintext &amp;","Process pending proposals","Creates proposals to add members to the group","Creates proposals to remove members from the group","Creates a proposal to update the own leaf node","","Removes members from the group","Persists the state","Updates the own leaf node","","","","","","Sets the AAD used in the framing","Sets the configuration","Unit tests for the MLS group","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Auto-save callback","Validator function for AddProposals","Validator function for RemoveProposals","Specifies the configuration parameters for a managed group","Specifies in which intervals the own leaf node should be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An empty list of KeyPackages was provided.","","See <code>ApplyCommitError</code> for details.","The Commit tried to remove self from the group. This is …","Ciphersuites in the Welcome message and the corresponding …","Tls (de)serialization occurred.","Tls (de)serialization error occurred.","Tls (de)serialization occurred.","See <code>ApplyCommitError</code> for details","A commit contained an invalid proposal.","See <code>ConfigError</code> for details","See <code>ConfigError</code> for details.","See <code>ConfigError</code> for details.","The computed confirmation tag does not match the expected …","Confirmation tag is invalid.","Confirmation Tag is missing.","See <code>CreateCommitError</code> for details","","See <code>CreateCommitError</code> for details.","See <code>CredentialError</code> for details.","See <code>CredentialError</code> for details","A matching EncryptedPathSecret failed to decrypt.","Found a duplicate ratchet tree extension in the Welcome …","Empty input. Additional detail is provided.","","Couldn’t apply Commit. The epoch of the group context …","Tried to use a group after being evicted from it.","Can’t create message because a pending proposal exists.","See <code>ExporterError</code> for details","","See <code>ExporterError</code> for details.","See <code>GroupError</code> for details","See <code>GroupError</code> for details","Unable to decrypt the GroupInfo.","Unable to decrypt the EncryptedGroupSecrets.","Missing init secret when creating commit.","Missing init secret to apply proposal.","The application message is invalid.","An invalid ciphertext was provided. The error returns the …","The signature on the GroupInfo is not valid.","The message could not be processed.","","The given proposal is invalid.","Invalid ratchet tree in Welcome message.","No joiner secret found in the Welcome message.","The requested key length is not supported (too large).","An error occurred in the key schedule.","An error occurred in the key schedule.","An error occurred in the key schedule.","Error performing key store operation.","An internal library error occurred. Additional detail is …","","An error occurred during a tree math operation.","A Proposal with an invalid membership tag was received.","The sender key package is missing.","No key package provided to apply own commit.","The proposal queue is missing a proposal for the commit.","No ratchet tree available to build initial tree after …","See <code>MlsCiphertextError</code> for details.","","See <code>MlsPlaintextError</code> for details.","Couldn’t find a <code>CredentialBundle</code> in the <code>KeyStore</code> that …","Couldn’t find a <code>KeyPackageBundle</code> in the <code>KeyStore</code> that …","Parent hash extension is missing.","A PSK was needed, but no PSK fetcher function was provided.","Missing own key to apply proposal.","Couldn’t create the commit because there’s no key to …","The parent hash verification failed.","Parent hash values don’t match.","Unable to verify the key package signature.","","See <code>PendingProposalsError</code> for details","MlsPlaintext signature is invalid.","Tried to access a poisoned <code>CredentialBundle</code>. See …","See <code>ProposalQueueError</code> for details.","","A PSK error occured.","A PSK error occured.","A PSK error occurred.","No PSK was found for PSK ID.","An error occured when concatenating the PSKs.","An empty list of indexes was provided.","Unable to determine commit path.","Tried to apply a commit to a group we are not a part of.","See <code>TreeError</code> for details.","The computed tree hash does not match the one in the …","An unknown error occurred.","Could not retrieve credential for the given sender.","The Welcome message uses an unsupported MLS version.","","See <code>UseAfterEviction</code> for details","","See <code>WelcomeError</code> for details.","apply_commit_internal was called with an MlsPlaintext that …vent that occurs when an application message is received. …","","Event that occurs when an error occurred while processing …","Group event that occured while processing messages in …","","Event that occurs when member <code>sender</code> adds member …","","Event that occurs when a member leaves/is removed from the …","","Event that occurs when a member updates its leaf. …","","Event that occurs when  a PSK is received. <code>psk_id</code> contains …","","Event that occurs when a <code>ReInitProposal</code> is received. …","This enum lists the 4 different variants of a removal, …","Another member issued a RemoveProposal for itself that was …","Member A issued a RemoveProposal for member B that was now …","We previously issued a RemoveProposal for ourselves and …","Another member issued a RemoveProposal for ourselves that …","Get a reference to the event’s aad.","Get a reference to the event’s aad.","Get a reference to the event’s aad.","Get a reference to the event’s aad.","Get a reference to the event’s aad.","Get a reference to the event’s aad.","Get a reference to the event’s added member credential.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a reference to the event’s error.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a reference to the event’s message.","","","","","","","","","","Get a reference to the event’s psk id.","Get a reference to the event’s psk id.","Get a reference to the event’s removal.","Get a reference to the event’s sender.","Get a reference to the event’s sender.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a reference to the event’s updated member.","","","","","","","","","","","","","","","","","","","","","","","This callback function is used in several places in …","","Returns the authentication secret","","","Get the ciphersuite implementation used in this group.","Get the group context","","","","","","","","Decrypt an MlsCiphertext into an MlsPlaintext","","","Export the <code>PublicGroupState</code>","Exporter","Get the groups extensions. Right now this is limited to …","","","Get the group ID","","Loads the state from persisted state","","","Persists the state","","Returns the ratchet tree","","","","Returns <code>true</code> if the group uses the ratchet tree extension …","Verify a <code>VerifiableMlsPlaintext</code> and get the <code>MlsPlaintext</code>.","Verify the membership tag an MlsPlaintext","","Wrapper for proposals by value and reference.","","","","","","","","","","","Known Answer Tests for the encoding and decoding of …","Known Answer Tests for the transcript hashes","AddProposal encodings don’t match.","Capabilities encodings don’t match.","Commit encodings don’t match.","GroupInfo encodings don’t match.","GroupSecrets encodings don’t match.","KeyPackage encodings don’t match.","Lifetime encodings don’t match.","","","MlsCiphertext encodings don’t match.","MlsPlaintextApplication encodings don’t match.","MlsPlaintextCommit encodings don’t match.","MlsPlaintextProposal encodings don’t match.","PreSharedKeyProposal encodings don’t match.","PublicGroupState encodings don’t match.","RatchetTree encodings don’t match.","RemoveProposal encodings don’t match.","UpdateProposal encodings don’t match.","Welcome encodings don’t match.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The computed confirmation tag doesn’t match the one in …","The computed transcript hash doesn’t match the one in …","The group context does not match","The computed interim transcript hash doesn’t match the …","Membership tag could not be verified.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Confirmation tag field of MlsPlaintext. For type safety …","EncryptedGroupSecrets","PathSecret","Welcome Messages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the commit contains an update path. <code>false</code> …","","","","","","","","","","","","","Get a reference to the encrypted group secrets in this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The given MLS Plaintext was not a Proposal.","Not all proposals in the Commit were found locally.","","","","Error serializing","Invalid value for ProposalOrRefType was found.","API misuse. Only proposals can end up in the proposal queue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Branch PSK","Capabilities extension error. See …","","A <code>CapabilitiesExtension</code>","","","Struct containing an X509 certificate chain, as per Spec.","The list of ciphersuites is not consistent with the …","The ciphersuite does not match the signature scheme.","An OpenMLS <code>MlsCiphertext</code>.","See <code>tls_codec::Error</code> for details.","Error decoding or encoding an extension.","See <code>ApplyCommitError</code> for details","A commit contained an invalid proposal.","See <code>ConfigError</code> for details","See <code>ConfigError</code> for details.","Configuration error. See <code>ConfigError</code> for details.","See <code>ConfigError</code> for details.","See <code>CreateCommitError</code> for details","Struct containing MLS credential data, where the data …","This struct contains a credential and the corresponding …","","See <code>CredentialError</code> for details","See <code>CredentialError</code> for details.","Enum for Credential Types. We only need this for …","See <code>CryptoError</code> for details.","The provided extension list contains duplicate extensions.","Duplicate extensions are not allowed.","Empty input. Additional detail is provided.","Capabilities extension is missing a version field.","","Lifetime extension is expired.","See <code>ExporterError</code> for details","An extension can be one of the following elements.","","See <code>ExtensionError</code> for details.","Extension types","","","External PSK.","External PSK Bundle. This contains the secret part of the …","See <code>GroupError</code> for details","See <code>GroupError</code> for details","Group event that occured while processing messages in …","Invalid lifetime extensions.","Invalid capabilities extensions.","Invalid key package ID extensions.","Invalid parent hash extensions.","Invalid ratchet tree extensions.","The application message is invalid.","An invalid ciphertext was provided. The error returns the …","The extension is malformed. See <code>InvalidExtensionError</code> for …","","Invalid extension type error.","The lifetime extension of the key package is not valid.","The message could not be processed.","","The given proposal is invalid.","Invalid signature.","The key package signature is not valid.","","","","","","","Key package ID extension error. See <code>KeyPackageIdError</code> for …","A <code>KeyIdExtension</code>","","The unsigned payload of a key package. Any modification …","Error performing key store operation.","An internal library error occurred. Additional detail is …","An unknown OpenMLS library error occurred.","A <code>LifetimeExtension</code>","Lifetime extension error. See <code>LifetimeExtensionError</code> for …","","The lifetime extension holds a not before and a not after …","","A <code>ManagedGroup</code> represents an MlsGroup with an easier, …","","Specifies the configuration parameters for a managed group","","A mandatory extension is missing in the key package.","","","","A Proposal with an invalid membership tag was received.","This enum contains the different available credentials.","Unified message type for output by the managed API","Creating a new key package requires at least one …","Couldn’t find a <code>CredentialBundle</code> in the <code>KeyStore</code> that …","Couldn’t find a <code>KeyPackageBundle</code> in the <code>KeyStore</code> that …","Parent hash extension error. See <code>ParentHashError</code> for …","","A <code>ParentHashExtension</code>","","See <code>PendingProposalsError</code> for details","An OpenMLS <code>MlsPlaintext</code>.","Tried to access a poisoned <code>CredentialBundle</code>. See …","A <code>PreSharedKeyID</code> is used to uniquely identify the PSKs …","Preshared Key proposal 11.1.4 struct { PreSharedKeyID psk; …","<code>PreSharedKeys</code> is a vector of <code>PreSharedKeyID</code>s. struct { …","PSK enum that can contain the different PSK types","","Type of PSK.","Ratchet tree extension error. See <code>RatchetTreeError</code> for …","","A <code>RatchetTreeExtension</code>","","","","ReInit proposal 11.1.5 struct { opaque group_id&lt;0..255&gt;; …","","","ReInit PSK.","This enum lists the 4 different variants of a removal, …","","","Another member issued a RemoveProposal for itself that was …","Member A issued a RemoveProposal for member B that was now …","The <code>Deserialize</code> trait defines functions to deserialize a …","The <code>Serialize</code> trait provides functions to serialize a …","The <code>Size</code> trait needs to be implemented by any struct that …","An unknown configuration error occurred.","Could not retrieve credential for the given sender.","Capabilities contains only unsupported ciphersuites.","The requested ciphersuite is not supported.","Unsupported credential type.","Specifies in which intervals the own leaf node should be …","","See <code>UseAfterEviction</code> for details","We previously issued a RemoveProposal for ourselves and …","Another member issued a RemoveProposal for ourselves that …","","","","Add (or replace) an extension to the KeyPackage.","Add (or replace) an extension to the KeyPackage.","Get a reference to the <code>CapabilitiesExtension</code>. Returns an …","Get a reference to the <code>KeyIDExtension</code>. Returns an …","Get a reference to the <code>LifetimeExtension</code>. Returns an …","Get a reference to the <code>ParentHashExtension</code>. Returns an …","Get a reference to the <code>RatchetTreeExtension</code>. Returns an …","Get the value of the key id as byte slice.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the <code>CiphersuiteName</code>.","Get a reference to the list of cipher suites in this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a reference to the credential.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Key Package errors","Extension errors.","","Get a reference to the list of supported extensions.","Get a reference to the extensions of this key package.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>KeyPackageBundlePayload</code> from a given …","","","","","","Compute the hash of the encoding of this key package.","Get the identity of a given credential.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the ID of this key package as byte slice. Returns an …","Get a reference to the <code>KeyPackage</code>.","Get a reference to the <code>leaf_secret</code>.","","","","","","","","","","","","","","","","","","","","Create a new bundle","Create a new <code>CredentialBundle</code> of the given credential type …","Create a new capabilities extension with the given …","Create a new key identifier extension from a byte slice.","Create a new lifetime extensions with lifetime <code>t</code> (in …","Build a new extension from a vector of <code>Node</code>s.","Create a new <code>KeyPackageBundle</code> with a fresh <code>HpkeKeyPair</code>. …","Create a new <code>ExternalPsk</code> from a PSK ID","Create a new <code>KeyPackageBundle</code> for the given <code>ciphersuite</code>, …","Create a new <code>KeyPackageBundle</code> with","","","Return the <code>GroupEpoch</code>","Return the <code>GroupEpoch</code>","Return the <code>GroupId</code>","Return the <code>GroupId</code>","Return the PSK ID","Return the secret","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the public key contained in the credential.","Get the signature scheme used by the credential.","","This function deserializes the <code>bytes</code> from the provided a …","","","","","","","","","","","","","","","","","","","","Serialize <code>self</code> and write it to the <code>writer</code>. The function …","","","","","","","","","","","","","","","","","","","","","Serialize <code>self</code> and return it as a byte vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the <code>PreSharedKeyID</code>","","","","","","","","","","","","","","","","Get the <code>ExtensionType</code> from a u16. Returns an error if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the unsigned payload version of this key package …","","","","Verify a signature of a given payload against the public …","","Verify that this key package is valid:","Get a reference to the list of versions in this extension.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Capabilities extension error. See …","","The list of ciphersuites is not consistent with the …","The ciphersuite does not match the signature scheme.","Error decoding or encoding an extension.","Configuration error. See <code>ConfigError</code> for details.","See <code>ConfigError</code> for details.","See <code>CredentialError</code> for details.","The provided extension list contains duplicate extensions.","Duplicate extensions are not allowed.","Capabilities extension is missing a version field.","Lifetime extension is expired.","","See <code>ExtensionError</code> for details.","Invalid lifetime extensions.","Invalid capabilities extensions.","Invalid key package ID extensions.","Invalid parent hash extensions.","Invalid ratchet tree extensions.","The extension is malformed. See <code>InvalidExtensionError</code> for …","","Invalid extension type error.","The lifetime extension of the key package is not valid.","The key package signature is not valid.","","Key package ID extension error. See <code>KeyPackageIdError</code> for …","","An unknown OpenMLS library error occurred.","Lifetime extension error. See <code>LifetimeExtensionError</code> for …","","A mandatory extension is missing in the key package.","Creating a new key package requires at least one …","Parent hash extension error. See <code>ParentHashError</code> for …","","Ratchet tree extension error. See <code>RatchetTreeError</code> for …","","An unknown configuration error occurred.","Capabilities contains only unsupported ciphersuites.","The requested ciphersuite is not supported.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The confirmation key is used to calculate the …","The membership key is used to calculate the <code>MembershipTag</code>.","A <code>PreSharedKeyID</code> is used to uniquely identify the PSKs …","<code>PreSharedKeys</code> is a vector of <code>PreSharedKeyID</code>s. struct { …","This contains the <code>psk-secret</code> calculated from the PSKs …","A secret used in cross-group operations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Known Answer Tests for the key schedule","","Create a new <code>PskSecret</code> from PSK IDs and PSKs","Create a new <code>PreSharedKeyID</code>","Return the PSK","Return the PSK nonce","Return the <code>PreSharedKeyID</code>s","Return the type of the PSK","Return the inner secret","","","","","Create a new confirmation tag.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The computed authentication secret doesn’t match the one …","The computed confirmation key doesn’t match the one in …","The IDs and secrets vectors have different lengths.","Error serializing the PSK label.","The computed encryption secret doesn’t match the one in …","","The computed exporter secret doesn’t match the one in …","The computed external public key doesn’t match the one …","The computed external secret doesn’t match the one in …","The group context doesn’t match the one in the test …","The computed init secret doesn’t match the one in the …","The requested operation is not valid on the key schedule …","The computed joiner secret doesn’t match the one in the …","","","The computed membership key doesn’t match the one in the …","Expected to be in a state where the context is added.","Expected to be in epoch state.","Expected to be in initial state.","","The computed resumption secret doesn’t match the one in …","The computed sender data secret doesn’t match the one in …","More than 2^16 PSKS were provided.","The computed welcome secret doesn’t match the one in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This crate provides a framework to set up clients and …","","","","The <code>Group</code> struct represents the “global” shared state …","<code>ManagedTestSetup</code> is the main struct of the framework. It …","","","","Has the <code>adder</code> either propose or commit (depending on the …","","","","","","","","","Check if the public tree and the exporter secret with …","","This module provides the <code>Client</code> datastructure, which …","","","","Have a random client create a new group with ciphersuite …","Create a random group of size <code>group_size</code> and return the …","","Deliver a Welcome message to the intended recipients. It …","Distribute a set of messages sent by the sender with …","","","","","","","","","","Create a fresh <code>KeyPackage</code> for client <code>client</code> for use when …","","","","","","","","","This module contains code to serialize <code>MlsMessage</code>/…","Create a new <code>ManagedTestSetup</code> with the given default …","This function picks a random member of group <code>group</code> and has …","","Return the identity of a random member of the group.","Get <code>number_of_members</code> new members for the given group <code>group</code>…","Has the <code>remover</code> propose or commit (depending on the …","Has the <code>remover</code> propose or commit (depending on the …","Have the client with identity <code>client_id</code> either propose or …","","","","","","","","","","","","","","Flag to indicate if messages should be serialized and …","","","","","","The client contains the necessary state for a client in …","Have the client either propose or commit (depending on the …","","","Create a group with the given <code>group_id</code>, <code>ciphersuite</code> and …","Ciphersuites supported by the client.","","","","Generate a fresh key package bundle and store it in …","Get the credential and the index of each group member of …","","Name of the client.","","Join a group based on the given <code>welcome</code> and <code>ratchet_tree</code>. …","Have the client process the given messages. Returns an …","Have the client either propose or commit (depending on the …","Have the client either propose or commit (depending on the …","","","","","","","Errors that can occur when processing messages with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enum defining encodings for the different message types/","An MlsCiphertext message.","An MlsPlaintext message.","","","","","","","","","","","","","","","","This struct contain the return vallues of the …","","","The ratchet tree.","7.7. Update Paths","7.7. Update Paths","Applies a list of proposals from a Commit to the tree. …","","","","","","","","","","","","","","","","","","","","","","","","This function creates a <code>HashSet</code> of node indexes of the new …","","","","","","","","","","","","","","","","","","","Returns the number of leaves in a tree","","","","All nodes in the tree. Note that these only hold public …","Get a reference to the own key package.","","","Get a vector with all nodes in the tree, containing <code>None</code> …","Get a vector with a copy of all nodes in the tree, …","","","","","Tree unit tests and test vectors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify the parent hash of a tree node. Returns <code>Ok(())</code> if …","Verify the parent hashes of the tree nodes. Returns <code>true</code> …","","","","","","","All checks failed: Neither child has the right parent hash.","See <code>CredentialError</code> for details","The parent node was blank.","The search for a valid child ended with a leaf node.","The input node is not a parent node.","Invalid arguments.","The tree is not valid.","The computed update path is invalid.","The node is not a parent node.","The node is not a parent node.","","Error while decrypting <code>PathSecret</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","LeafIndex is an index to the leaves of a tree.","NodeIndex is an index to the nodes of a tree, both parent …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ratchet tree node. A <code>Node</code> can either be a leaf node (in …","Node type. Can be either <code>Leaf</code> or <code>Parent</code>.","","Content of a parent node.","Adds a leaf to the node’s unmerged leaves","Blanks the node.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the node is blank and <code>false</code> otherwise.","Returns <code>true</code> if the node type is <code>Leaf</code> and <code>false</code> otherwise.","Returns <code>true</code> if the node type is <code>Parent</code> and <code>false</code> …","Get a reference to the key package in this node.","","","Creates a new <code>ParentNode</code> from the provided values.","Creates a new blank parent node.","Creates a new leaf node. It can either be blank or contain …","Returns the parent hash of a node. Returns <code>None</code> if the …","Returns the public HPKE key of either node type.","Returns the node’s HPKE public key","","","","Sets the node’s parent hash","","","","","","","","","","","","","","","","","","","","","","","Returns the node’s unmerged leaves","","","","Tree test vectors","Known Answer Tests for encrypting to tree nodes","TreeKEM test vectors","Known Answer Tests for treemath","The computed application secret key doesn’t match the …","The computed application secret nonce doesn’t match the …","The decrypted application message doesn’t match the one …","The decrypted handshake message doesn’t match the one in …","","","The computed handshake secret key doesn’t match the one …","The computed handshake secret nonce doesn’t match the …","The number of generations in leaf sequence doesn’t match …","The number of generations in leaf sequence doesn’t match …","The test vector does not contain as many leaves as …","The computed sender data key doesn’t match the one in …","The computed sender data nonce doesn’t match the one in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parent hash mismatch in the ‘after’ tree.","Ratchet tree mismatch in the after the update.","Root secret mismatch in the ‘after’ tree.","Tree hash mismatch in the ‘after’ tree.","Parent hash mismatch in the ‘before’ tree.","Root secret mismatch in the ‘before’ tree.","Tree hash mismatch in the ‘before’ tree.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A computed left child index doesn’t match the one in the …","A computed parent index doesn’t match the one in the …","A computed right child index doesn’t match the one in …","The computed root index doesn’t match the one in the …","A computed sibling index doesn’t match the one in the …","","","The computed tree size doesn’t match the one in the test …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,1,2,2,1,2,1,1,2,2,2,1,2,0,2,1,1,2,1,2,1,2,1,2,1,1,2,1,2,1,2,1,2,3,0,4,0,0,0,5,4,6,4,6,6,6,0,7,7,0,7,8,7,8,7,8,8,7,8,7,7,7,8,8,7,8,7,0,8,7,7,8,7,8,7,8,8,7,8,7,8,8,8,8,7,7,7,8,7,7,8,7,7,8,7,8,7,8,7,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,10,11,10,11,10,11,10,11,10,11,10,10,11,11,10,10,10,11,11,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,0,12,12,12,0,12,12,0,12,12,12,0,0,12,12,12,12,12,12,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,14,15,14,16,15,15,15,15,14,16,14,16,0,0,14,15,15,14,0,14,15,14,15,16,14,15,16,14,15,16,14,15,16,14,15,16,14,14,15,15,16,16,14,14,14,14,15,15,15,16,16,14,15,16,14,15,16,14,15,16,14,15,16,14,15,16,14,15,16,14,15,16,14,15,16,14,15,16,17,18,19,20,21,22,23,24,25,24,25,0,0,0,0,0,24,25,0,26,26,26,24,25,27,28,29,26,24,25,27,28,29,26,24,25,27,28,29,26,24,25,27,28,29,26,26,24,25,27,26,28,26,24,25,27,26,24,25,27,28,29,26,24,24,25,27,28,29,26,29,26,26,28,26,24,25,27,28,29,26,28,26,25,27,29,26,26,26,29,26,26,26,24,25,27,29,29,24,27,29,26,24,25,27,28,29,26,24,25,27,28,29,26,24,25,27,28,29,26,24,24,25,27,28,29,26,24,25,27,28,29,26,24,25,27,28,29,28,29,26,26,24,25,27,28,29,29,30,31,32,33,33,33,0,0,33,34,33,34,33,34,33,34,33,34,33,34,33,34,33,34,33,34,34,34,33,34,33,34,33,34,33,34,34,33,34,33,33,34,33,34,33,34,33,34,35,36,37,0,0,38,39,40,40,41,41,41,41,0,42,37,0,43,41,41,0,0,40,0,0,40,40,41,0,40,41,41,0,0,0,0,37,0,37,0,37,0,40,44,0,0,0,44,41,41,0,41,38,39,41,37,0,37,0,0,36,45,45,40,0,0,41,0,0,45,45,0,46,46,47,47,48,46,46,38,39,48,35,49,47,44,46,38,39,48,35,49,47,44,0,46,38,39,48,35,49,47,44,38,39,48,35,49,47,44,0,46,49,46,46,47,48,35,49,44,39,49,39,48,35,49,44,0,0,0,46,46,46,46,46,38,39,48,35,49,47,44,46,38,38,39,39,39,48,35,49,47,44,48,46,46,38,39,49,48,35,46,38,39,48,35,49,47,44,46,39,46,46,46,0,39,48,35,49,46,49,46,47,47,46,46,46,46,46,46,46,48,46,46,46,46,48,35,49,44,46,46,0,38,48,35,49,44,38,48,35,49,44,38,48,35,49,44,38,39,48,35,49,47,44,48,46,46,38,39,48,35,49,47,44,46,38,39,48,35,49,47,44,46,38,39,48,35,49,47,44,46,38,39,48,35,49,47,44,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,76,0,0,0,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,0,78,79,78,79,78,78,79,78,79,79,78,79,78,79,78,79,78,79,78,79,78,79,78,78,78,79,78,79,78,79,78,79,78,79,78,79,36,0,80,81,82,80,82,83,40,40,41,80,82,82,83,83,41,0,80,80,41,83,82,41,0,83,42,43,41,0,80,41,40,82,82,80,83,40,40,82,41,0,40,82,82,84,80,82,83,41,41,0,80,40,82,83,83,82,80,0,80,41,41,83,85,83,81,82,83,83,0,41,83,41,80,0,80,82,83,85,85,36,83,83,80,82,82,40,82,0,41,0,80,83,80,82,83,81,84,85,41,36,42,43,40,80,82,83,81,84,85,41,36,42,43,40,80,82,83,81,84,85,41,36,42,43,40,80,82,83,81,84,85,41,36,42,43,40,80,82,83,81,84,85,41,36,42,43,40,80,80,82,82,83,83,81,81,84,84,85,85,41,41,36,36,42,42,43,43,40,40,80,80,80,80,80,80,80,80,80,80,80,80,80,80,82,82,82,82,82,82,82,83,83,83,83,83,83,81,84,85,85,41,41,41,41,41,41,41,41,41,41,41,36,42,43,40,40,40,40,80,82,83,81,84,85,41,36,42,43,40,80,82,83,85,41,40,80,82,83,81,84,85,41,36,42,43,40,80,82,83,81,84,85,41,36,42,43,40,80,82,83,81,84,85,41,36,42,43,40,80,82,83,81,84,85,41,36,42,43,40,80,82,83,81,84,85,41,36,42,43,40,80,82,83,81,84,85,41,36,42,43,40,80,82,83,81,84,85,41,36,42,43,40,86,87,88,89,90,57,58,59,60,61,62,63,64,65,66,67,68,69,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,37,0,37,0,0,37,0,37,0,37,0,37,0,37,0,0,45,45,45,45,113,114,115,116,117,118,113,37,113,114,115,116,117,118,119,45,37,113,114,115,116,117,118,119,45,37,113,114,115,116,117,118,119,45,37,113,114,115,116,117,118,119,45,37,113,114,115,116,117,118,119,45,119,37,113,114,115,116,117,118,119,45,37,113,114,115,116,117,118,119,45,37,113,114,115,116,117,118,119,45,118,37,113,114,115,116,117,118,119,45,116,117,114,113,118,37,113,114,115,116,117,118,119,45,37,113,114,115,116,117,118,119,45,37,113,114,115,116,117,118,119,45,37,113,114,115,116,117,118,119,45,115,37,113,114,115,116,117,118,119,45,50,51,52,53,54,55,56,74,75,76,76,0,0,0,120,120,120,120,120,120,120,120,0,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,121,121,121,121,121,121,121,121,121,121,0,0,122,122,122,122,122,122,122,0,0,122,122,122,122,122,122,122,122,122,122,123,122,123,122,123,122,123,122,123,123,122,123,122,122,123,122,0,123,122,0,123,122,123,122,122,123,122,123,122,123,122,123,122,124,124,124,124,124,0,0,125,124,125,124,125,125,124,125,124,125,125,124,125,124,124,125,124,0,125,124,0,125,124,125,124,124,125,124,125,124,125,124,125,124,0,0,0,0,0,126,127,128,129,130,126,127,128,129,130,126,127,128,129,130,126,127,128,129,130,128,129,130,127,126,127,128,129,130,0,126,127,128,129,130,126,127,128,129,130,128,126,127,128,129,130,127,126,127,128,129,130,128,126,128,129,130,126,127,128,129,130,126,127,128,129,130,126,127,128,129,130,126,127,128,129,130,126,127,128,129,130,126,127,128,129,130,126,127,128,129,130,126,127,128,129,130,131,131,0,0,0,132,133,132,131,133,132,131,133,132,131,133,132,131,133,132,131,133,132,131,131,133,133,132,132,131,131,133,132,132,131,133,132,131,132,131,133,132,131,133,132,131,133,132,131,133,132,131,133,132,131,133,132,131,133,132,134,135,0,37,136,137,0,138,139,0,140,141,142,0,0,0,143,143,39,144,140,40,40,41,144,140,143,41,0,0,0,41,143,0,144,145,143,41,146,37,147,41,0,0,143,0,138,139,0,0,41,40,0,147,146,148,149,150,40,40,140,0,140,143,41,0,40,144,143,141,0,0,0,0,0,140,142,0,0,41,41,143,142,140,141,0,0,0,0,0,0,143,37,37,37,40,0,0,143,41,41,140,141,142,0,41,39,41,0,0,0,0,37,0,140,141,142,0,0,37,0,138,139,0,0,0,141,45,45,0,0,0,143,40,146,143,144,0,0,41,45,45,136,137,0,151,152,142,142,142,142,142,153,151,154,144,136,155,137,156,157,158,159,153,160,161,141,142,152,162,163,164,165,166,167,168,138,169,170,171,139,151,154,144,136,155,137,156,157,158,159,153,160,161,141,142,152,162,163,164,165,166,167,168,138,169,170,171,139,162,159,144,136,155,137,156,157,158,159,153,160,161,141,142,152,162,163,164,165,166,167,168,138,169,170,171,139,144,136,155,137,156,157,158,159,153,160,161,141,142,152,162,163,164,165,166,167,168,138,169,170,171,139,141,142,158,162,159,153,160,161,136,155,137,156,157,158,159,153,160,161,141,142,152,162,163,164,165,166,167,168,138,169,170,171,139,144,136,155,137,156,157,159,153,160,161,141,142,152,162,164,165,166,167,168,138,169,170,171,139,0,0,142,159,162,144,144,136,155,137,156,157,158,159,153,160,161,141,142,152,162,163,164,165,166,167,168,138,169,170,171,139,151,151,154,144,144,144,136,155,137,156,156,157,158,159,153,160,161,141,142,152,152,162,163,164,165,166,167,168,138,169,170,171,139,151,158,163,162,163,141,162,156,151,154,144,136,155,137,156,157,158,159,153,160,161,141,142,152,162,163,164,165,166,167,168,138,169,170,171,139,162,163,163,144,155,137,156,159,153,160,161,142,152,164,165,166,167,168,169,170,171,139,154,158,159,153,160,161,163,169,163,163,141,142,170,171,170,171,169,154,136,155,137,156,157,158,159,153,160,161,141,142,152,162,163,164,165,166,167,168,138,169,170,171,139,162,156,156,144,172,136,156,157,159,153,160,161,141,142,162,164,165,166,167,168,138,169,170,171,173,136,156,157,159,153,160,161,141,142,152,162,164,165,166,167,168,138,169,170,171,173,174,136,156,157,159,153,160,161,141,142,152,162,164,165,166,167,168,138,169,170,171,158,163,144,136,155,137,156,157,158,159,153,160,161,141,142,152,162,163,164,165,166,167,168,138,169,170,171,139,154,144,151,154,144,136,136,155,137,156,157,158,159,153,160,161,141,141,142,152,162,163,164,165,166,167,168,138,138,169,170,171,139,151,154,144,136,155,137,156,157,158,159,153,160,161,141,142,152,162,163,164,165,166,167,168,138,169,170,171,139,151,154,144,136,155,137,156,157,158,159,153,160,161,141,142,152,162,163,164,165,166,167,168,138,169,170,171,139,163,151,152,162,156,157,162,159,151,154,144,136,155,137,156,157,158,159,153,160,161,141,142,152,162,163,164,165,166,167,168,138,169,170,171,139,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,50,51,52,53,54,55,56,57,58,59,192,193,194,60,61,62,63,64,65,66,67,68,69,195,196,72,73,197,198,199,74,75,76,76,140,0,143,143,140,140,143,143,145,143,146,147,0,143,147,146,148,149,150,140,0,140,143,143,0,140,0,143,140,0,143,143,140,0,140,0,143,146,143,140,147,146,148,149,150,145,143,140,147,146,148,149,150,145,143,140,147,146,148,149,150,145,143,140,147,146,148,149,150,145,143,140,147,146,148,149,150,145,143,140,140,147,147,146,146,148,148,149,149,150,150,145,145,143,143,140,140,140,140,140,140,140,140,140,140,147,146,148,149,150,145,143,143,143,143,140,147,146,148,149,150,145,143,140,143,140,147,146,148,149,150,145,143,140,147,146,148,149,150,145,143,140,147,146,148,149,150,145,143,140,147,146,148,149,150,145,143,140,147,146,148,149,150,145,143,140,147,146,148,149,150,145,143,140,147,146,148,149,150,145,143,183,184,185,186,187,188,189,190,191,192,193,194,0,0,0,0,0,0,200,201,202,203,204,205,200,201,202,203,204,205,201,205,201,205,0,201,203,204,205,201,0,201,203,204,205,200,201,202,203,204,205,200,201,202,203,204,205,0,201,200,201,201,201,202,201,200,201,203,204,205,203,201,202,201,202,201,202,201,205,200,201,202,203,204,205,200,201,202,203,204,205,200,201,202,203,204,205,200,201,202,203,204,205,206,206,207,207,206,0,206,206,206,206,206,208,206,0,0,206,209,209,209,0,206,206,207,206,209,208,207,206,209,208,207,206,209,208,207,206,209,208,207,206,209,208,207,206,209,209,208,208,207,207,206,206,209,208,208,207,206,209,208,207,206,208,209,208,207,206,209,208,207,206,209,208,207,206,209,208,207,206,209,208,207,206,209,208,207,206,209,208,207,206,210,0,211,211,211,211,211,211,211,211,211,0,211,0,211,211,211,211,211,211,0,0,0,212,0,0,212,213,213,214,214,215,212,213,214,215,212,213,214,215,0,214,215,215,214,214,214,214,214,213,0,215,212,213,214,215,212,213,214,215,215,214,214,215,212,213,215,0,214,214,215,215,214,214,214,214,215,214,215,212,213,214,215,212,213,214,215,212,213,214,214,215,212,213,214,0,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,217,218,0,218,218,217,217,217,217,217,217,218,217,217,217,218,219,0,0,217,218,217,218,218,218,219,217,218,219,217,217,218,219,217,218,218,218,219,217,217,217,217,217,218,219,217,217,218,219,217,218,219,217,218,219,217,218,219,217,220,221,222,223,224,225,226,0,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,0,0,0,0,0,0,228,229,230,231,228,232,233,229,230,231,228,232,233,228,232,233,232,233,228,232,233,232,233,0,229,228,232,233,229,230,231,228,232,233,230,0,229,230,231,228,232,233,229,228,232,233,0,228,228,229,229,228,228,229,228,232,233,0,232,233,230,231,232,233,230,231,232,233,232,233,229,230,231,228,232,233,229,230,231,228,232,233,229,230,231,228,232,233,228,228,229,230,231,228,232,233,234,235,234,234,234,235,235,235,235,234,0,235,0,235,234,235,234,235,234,235,234,235,234,235,235,234,234,235,235,234,235,234,235,235,234,235,234,235,234,235,234,235,234,235,234,235,234,236,237,0,0,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,238,238,238,239,239,239,238,239,238,239,238,238,238,239,238,239,238,239,238,239,238,239,238,239,238,239,238,239,239,238,239,238,239,238,239,240,0,0,240,0,241,242,240,242,241,240,242,241,240,242,241,240,242,241,240,242,241,240,242,241,240,242,241,240,242,241,240,242,241,242,240,240,242,242,241,241,242,242,242,242,241,240,242,241,241,240,242,241,240,242,241,240,242,241,240,242,241,240,240,242,241,240,242,241,240,242,241,241,240,242,241,0,0,0,0,243,243,243,243,0,0,243,243,243,243,243,243,243,244,243,244,243,244,244,243,244,243,244,243,244,243,243,244,243,0,244,243,244,0,244,243,244,243,243,244,243,244,243,244,243,244,243,245,245,245,245,245,245,245,0,0,246,246,245,246,245,246,246,245,246,245,246,245,246,245,245,246,245,0,246,245,246,246,246,246,246,246,246,0,246,245,246,245,245,246,246,246,245,246,245,246,245,246,246,246,246,245,247,247,247,247,247,0,0,247,248,247,248,247,248,247,248,247,248,247,248,247,247,248,247,0,248,247,0,248,247,248,247,247,248,247,248,247,248,247,248,247],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["ciphersuitename",4]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["ciphersuitename",4]],["bool",15]],[[["ciphersuite",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[],["ciphersuitename",4]],[[["ciphersuitename",4]],[["configerror",4],["result",4,["configerror"]]]],[[],["result",4]],[[],["result",4]],null,[[],["signaturescheme",4]],[[],[["result",4,["error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["usize",15],["error",4],["result",4,["usize","error"]]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[["u16",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,[[["signature",3]]],[[["credentialbundle",3]],[["credentialerror",4],["result",4,["credentialerror"]]]],[[],["signature",3]],[[],[["vec",3,["u8"]],["error",4],["result",4,["vec","error"]]]],[[],[["vec",3,["u8"]],["error",4],["result",4,["vec","error"]]]],[[["credential",3]],[["result",4,["credentialerror"]],["credentialerror",4]]],[[["credential",3]],[["credentialerror",4],["result",4,["credentialerror"]]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[["ciphersuitename",4]],[["result",4,["ciphersuite","configerror"]],["ciphersuite",3],["configerror",4]]],[[],["config",3]],[[],["protocolversion",4]],[[]],[[]],[[["protocolversion",4]],["ordering",4]],[[]],[[],["u64",15]],[[],["result",4]],[[],["result",4]],[[["config",3]],["bool",15]],[[["protocolversion",4]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[["config",3]],["bool",15]],[[["protocolversion",4]],[["option",4,["ordering"]],["ordering",4]]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[]],[[],[["result",4,["error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],["usize",15]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[["u8",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[],["configerror",4]],[[]],[[["configerror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],[["error",8],["option",4,["error"]]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["errorstring",3]],[[],["errorpayload",3]],[[]],[[]],[[["errorstring",3]],["bool",15]],[[["errorpayload",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["string",3]]],[[]],[[["str",15]]],[[]],[[["vec",3,["u8"]],["u8",15]]],[[]],[[]],[[]],[[["errorstring",3]],["bool",15]],[[["errorpayload",3]],["bool",15]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[]],null,[[],["framingparameters",3]],[[]],null,[[]],[[]],[[["wireformat",4]]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["wireformat",4]],null,[[]],[[]],[[]],[[],["mlsciphertext",3]],[[]],[[],["groupepoch",3]],[[["mlsciphertext",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[],["groupid",3]],[[]],[[],["bool",15]],[[["mlsciphertext",3]],["bool",15]],[[],[["result",4,["error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],["usize",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["mlsplaintexterror",4]],[[],["mlsciphertexterror",4]],[[],["verificationerror",4]],[[]],[[]],[[]],[[["mlsplaintexterror",4]],["bool",15]],[[["mlsciphertexterror",4]],["bool",15]],[[["verificationerror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["tlscodecerror",4]]],[[["credentialerror",4]]],[[["verificationerror",4]]],[[]],[[]],[[["mlsplaintexterror",4]]],[[["tlscodecerror",4]]],[[["credentialerror",4]]],[[]],[[]],[[]],[[]],[[["mlsplaintexterror",4]],["bool",15]],[[["mlsciphertexterror",4]],["bool",15]],[[["verificationerror",4]],["bool",15]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["result",4,["mlsplaintexterror"]],["mlsplaintexterror",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mlsplaintext",3]],[[],["contenttype",4]],[[],["mlsplaintextcontenttype",4]],[[],["membershiptag",3]],[[],["mlsplaintexttbs",3]],[[],["verifiablemlsplaintext",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mlsplaintextcontenttype",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["groupepoch",3]],[[],["groupepoch",3]],[[["mlsplaintext",3]],["bool",15]],[[["contenttype",4]],["bool",15]],[[["mlsplaintextcontenttype",4]],["bool",15]],[[["membershiptag",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["mlsplaintextcontenttype",4]]],[[]],[[]],[[]],[[]],[[]],[[["signature",3],["mlsplaintexttbs",3]]],[[["mlsplaintext",3]]],[[["verifiablemlsplaintext",3]]],[[],["groupid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["mlsplaintext",3]],["bool",15]],[[["mlsplaintextcontenttype",4]],["bool",15]],[[["membershiptag",3]],["bool",15]],[[["signature",3],["mlsplaintexttbs",3]]],[[["credentialbundle",3],["membershipkey",3],["groupcontext",3],["leafindex",3]],[["mlsplaintexterror",4],["result",4,["mlsplaintexterror"]]]],[[["credentialbundle",3],["commit",3],["framingparameters",3],["groupcontext",3],["leafindex",3]],[["mlsplaintexterror",4],["result",4,["mlsplaintexterror"]]]],[[["credentialbundle",3],["framingparameters",3],["membershipkey",3],["proposal",4],["groupcontext",3],["leafindex",3]],[["mlsplaintexterror",4],["result",4,["mlsplaintexterror"]]]],[[],["mlsplaintexttbs",3]],[[],["sender",3]],[[],["leafindex",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[],["signature",3]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["error",4],["result",4,["error"]]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["result",4,["usize","error"]],["usize",15],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["result",4,["usize","error"]],["usize",15],["error",4]]],[[],[["result",4,["usize","error"]],["usize",15],["error",4]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[["u8",15]],[["error",4],["result",4,["error"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["vec",3,["u8"]],["error",4],["result",4,["vec","error"]]]],[[],[["vec",3,["u8"]],["error",4],["result",4,["vec","error"]]]],[[["membershipkey",3]],[["mlsplaintexterror",4],["result",4,["mlsplaintexterror"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["wireformat",4]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["sendertype",4]],[[],["sender",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["sendertype",4]],["bool",15]],[[["sender",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["sender",3]],["bool",15]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],["usize",15]],[[],["usize",15]],[[],["leafindex",3]],[[]],[[]],[[["u8",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],[["result",4,["managedgrouperror"]],["managedgrouperror",4]]],null,null,[[]],[[],[["vec",3,["u8"]],["u8",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["ciphersuite",3]],[[],["mlsmessagein",4]],[[],["mlsmessageout",4]],[[],["groupid",3]],[[],["groupepoch",3]],[[],["groupcontext",3]],[[],["mlsgroupconfig",3]],[[],["wireformat",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["managedgroupconfig",3]],[[["ciphersuite",3],["u8",15],["vec",3,["u8"]],["groupid",3]],[["error",4],["result",4,["error"]]]],[[],[["managedgrouperror",4],["result",4,["mlsmessageout","managedgrouperror"]],["mlsmessageout",4]]],[[],[["credential",3],["managedgrouperror",4],["result",4,["credential","managedgrouperror"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["u64",15]],[[],["groupepoch",3]],[[["mlsmessageout",4]],["bool",15]],[[["groupid",3]],["bool",15]],[[["groupepoch",3]],["bool",15]],[[["groupcontext",3]],["bool",15]],[[["wireformat",4]],["bool",15]],null,null,null,[[],["groupcontext",3]],[[],["ref",3]],[[],[["vec",3,["option"]],["option",4,["node"]]]],[[["str",15],["usize",15]],[["result",4,["vec","managedgrouperror"]],["vec",3,["u8"]],["managedgrouperror",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["mlsmessageout",4]]],[[]],[[["mlsplaintext",3]]],[[["mlsciphertext",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["groupepoch",3]],[["option",4,["resumptionsecret"]],["resumptionsecret",3]]],[[],["groupid",3]],[[]],[[]],[[],["groupid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],[["managedgrouperror",4],["result",4,["mlsmessageout","managedgrouperror"]],["mlsmessageout",4]]],[[["managedgroupcallbacks",3],["read",8]],[["managedgroup",3],["result",4,["managedgroup","error"]],["error",3]]],[[],[["vec",3,["credential"]],["credential",3]]],null,[[["mlsmessageout",4]],["bool",15]],[[["groupid",3]],["bool",15]],[[["groupepoch",3]],["bool",15]],[[["groupcontext",3]],["bool",15]],[[["managedgroupconfig",3],["groupid",3]],[["managedgrouperror",4],["result",4,["managedgrouperror"]]]],[[["u8",15],["groupepoch",3],["vec",3,["u8"]],["groupid",3]],[["error",4],["result",4,["error"]]]],[[["welcome",3],["managedgroupconfig",3],["option",4,["vec"]],["vec",3,["option"]]],[["managedgrouperror",4],["result",4,["managedgrouperror"]]]],[[],["u32",15]],null,[[]],[[["str",15]]],[[["mlsmessagein",4]],[["vec",3,["groupevent"]],["managedgrouperror",4],["result",4,["vec","managedgrouperror"]]]],[[],[["managedgrouperror",4],["result",4,["managedgrouperror"]]]],[[["keypackage",3]],[["managedgrouperror",4],["result",4,["mlsmessageout","managedgrouperror"]],["mlsmessageout",4]]],[[["usize",15]],[["managedgrouperror",4],["result",4,["mlsmessageout","managedgrouperror"]],["mlsmessageout",4]]],[[["keypackagebundle",3],["option",4,["keypackagebundle"]]],[["managedgrouperror",4],["result",4,["mlsmessageout","managedgrouperror"]],["mlsmessageout",4]]],[[]],[[],[["managedgrouperror",4],["result",4,["managedgrouperror"]]]],[[],[["error",3],["result",4,["error"]]]],[[["keypackagebundle",3],["option",4,["keypackagebundle"]]],[["managedgrouperror",4],["result",4,["managedgrouperror"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[["managedgroupconfig",3]]],null,[[],[["error",4],["result",4,["error"]]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["usize","error"]],["usize",15],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["vec",3,["u8"]],["u8",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["managedgroupcallbacks",3]],[[]],[[],["managedgroupcallbacks",3]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["autosave",6]]],[[["validateadd",6]]],[[["validateremove",6]]],null,null,[[]],[[]],[[]],[[]],[[],["managedgroupcallbacks",3]],[[],["managedgroupconfig",3]],[[],["updatepolicy",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["managedgroupconfig",3]],["bool",15]],[[["updatepolicy",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["managedgroupconfig",3]],["bool",15]],[[["updatepolicy",3]],["bool",15]],[[["usize",15],["bool",15],["wireformat",4],["updatepolicy",3],["managedgroupcallbacks",3]]],[[],["usize",15]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mlsgrouperror",4]],[[],["welcomeerror",4]],[[],["applycommiterror",4]],[[],["createcommiterror",4]],[[],["exportererror",4]],[[],["pskerror",4]],[[],["managedgrouperror",4]],[[],["emptyinputerror",4]],[[],["useaftereviction",4]],[[],["pendingproposalserror",4]],[[],["invalidmessageerror",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["mlsgrouperror",4]],["bool",15]],[[["welcomeerror",4]],["bool",15]],[[["applycommiterror",4]],["bool",15]],[[["createcommiterror",4]],["bool",15]],[[["exportererror",4]],["bool",15]],[[["pskerror",4]],["bool",15]],[[["managedgrouperror",4]],["bool",15]],[[["emptyinputerror",4]],["bool",15]],[[["useaftereviction",4]],["bool",15]],[[["pendingproposalserror",4]],["bool",15]],[[["invalidmessageerror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["pskerror",4]]],[[["exportererror",4]]],[[["mlsciphertexterror",4]]],[[["mlsplaintexterror",4]]],[[["welcomeerror",4]]],[[["applycommiterror",4]]],[[["createcommiterror",4]]],[[["configerror",4]]],[[["treeerror",4]]],[[["credentialerror",4]]],[[]],[[["keyscheduleerror",4]]],[[["tlscodecerror",4]]],[[["proposalqueueerror",4]]],[[["treeerror",4]]],[[["keyscheduleerror",4]]],[[["tlscodecerror",4]]],[[["parenthasherror",4]]],[[["configerror",4]]],[[]],[[["pskerror",4]]],[[["verificationerror",4]]],[[["treeerror",4]]],[[]],[[["tlscodecerror",4]]],[[["keyscheduleerror",4]]],[[["pskerror",4]]],[[]],[[]],[[["psksecreterror",4]]],[[]],[[["invalidmessageerror",4]]],[[["pendingproposalserror",4]]],[[["useaftereviction",4]]],[[["createcommiterror",4]]],[[["mlsgrouperror",4]]],[[["configerror",4]]],[[["errorstring",3]]],[[["exportererror",4]]],[[]],[[["emptyinputerror",4]]],[[["credentialerror",4]]],[[]],[[]],[[]],[[["applycommiterror",4]]],[[["mlsgrouperror",4]]],[[]],[[["mlsciphertexterror",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["mlsgrouperror",4]],["bool",15]],[[["welcomeerror",4]],["bool",15]],[[["applycommiterror",4]],["bool",15]],[[["pskerror",4]],["bool",15]],[[["managedgrouperror",4]],["bool",15]],[[["invalidmessageerror",4]],["bool",15]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["credential",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["groupevent",4]],[[],["memberaddedevent",3]],[[],["memberremovedevent",3]],[[],["memberupdatedevent",3]],[[],["pskreceivedevent",3]],[[],["reinitevent",3]],[[],["applicationmessageevent",3]],[[],["errorevent",3]],[[],["removal",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["groupevent",4]],["bool",15]],[[["memberaddedevent",3]],["bool",15]],[[["memberremovedevent",3]],["bool",15]],[[["memberupdatedevent",3]],["bool",15]],[[["pskreceivedevent",3]],["bool",15]],[[["reinitevent",3]],["bool",15]],[[["applicationmessageevent",3]],["bool",15]],[[["errorevent",3]],["bool",15]],[[["removal",4]],["bool",15]],[[],["managedgrouperror",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["groupevent",4]],["bool",15]],[[["memberaddedevent",3]],["bool",15]],[[["memberremovedevent",3]],["bool",15]],[[["memberupdatedevent",3]],["bool",15]],[[["pskreceivedevent",3]],["bool",15]],[[["reinitevent",3]],["bool",15]],[[["applicationmessageevent",3]],["bool",15]],[[["errorevent",3]],["bool",15]],[[["removal",4]],["bool",15]],[[],["presharedkeyid",3]],[[],["reinitproposal",3]],[[],["removal",4]],[[],["credential",3]],[[],["credential",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["credential",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["mlsplaintext",3],["option",4,["pskfetcher"]],["pskfetcher",6]],[["result",4,["mlsgrouperror"]],["mlsgrouperror",4]]],[[],[["vec",3,["u8"]],["u8",15]]],[[]],[[]],[[],["ciphersuite",3]],[[],["groupcontext",3]],[[["credentialbundle",3],["keypackage",3],["framingparameters",3]],[["result",4,["mlsplaintext","mlsgrouperror"]],["mlsplaintext",3],["mlsgrouperror",4]]],[[["credentialbundle",3],["usize",15]],[["mlsgrouperror",4],["result",4,["mlsciphertext","mlsgrouperror"]],["mlsciphertext",3]]],null,[[["credentialbundle",3],["framingparameters",3],["bool",15],["option",4,["pskfetcher"]],["pskfetcher",6],["proposals",3]],["createcommitresult",6]],[[["credentialbundle",3],["framingparameters",3],["presharedkeyid",3]],[["result",4,["mlsplaintext","mlsgrouperror"]],["mlsplaintext",3],["mlsgrouperror",4]]],[[["credentialbundle",3],["framingparameters",3],["leafindex",3]],[["result",4,["mlsplaintext","mlsgrouperror"]],["mlsplaintext",3],["mlsgrouperror",4]]],[[["credentialbundle",3],["keypackage",3],["framingparameters",3]],[["result",4,["mlsplaintext","mlsgrouperror"]],["mlsplaintext",3],["mlsgrouperror",4]]],[[["mlsciphertext",3]],[["result",4,["mlsplaintext","mlsgrouperror"]],["mlsplaintext",3],["mlsgrouperror",4]]],[[],["result",4]],[[["usize",15],["mlsplaintext",3]],[["mlsgrouperror",4],["result",4,["mlsciphertext","mlsgrouperror"]],["mlsciphertext",3]]],[[["credentialbundle",3]],[["publicgroupstate",3],["credentialerror",4],["result",4,["publicgroupstate","credentialerror"]]]],[[["str",15],["usize",15]],[["vec",3,["u8"]],["result",4,["vec","mlsgrouperror"]],["mlsgrouperror",4]]],[[],[["vec",3,["extension"]],["extension",4]]],[[["formatter",3]],["result",6]],[[]],[[],["groupid",3]],[[]],[[["read",8]],[["result",4,["mlsgroup","error"]],["mlsgroup",3],["error",3]]],[[["keypackagebundle",3],["ciphersuitename",4],["mlsgroupconfig",3]],[["result",4,["mlsgrouperror"]],["mlsgrouperror",4]]],[[["keypackagebundle",3],["welcome",3],["option",4,["pskfetcher"]],["option",4,["vec"]],["vec",3,["option"]],["pskfetcher",6]],[["result",4,["mlsgrouperror"]],["mlsgrouperror",4]]],[[],[["error",3],["result",4,["error"]]]],[[],["result",4]],[[],[["ratchettree",3],["ref",3,["ratchettree"]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bool",15]],[[["verifiablemlsplaintext",3]],[["result",4,["mlsplaintext","mlsgrouperror"]],["mlsplaintext",3],["mlsgrouperror",4]]],[[["mlsplaintext",3]],[["result",4,["mlsgrouperror"]],["mlsgrouperror",4]]],[[]],null,[[]],[[]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["messagestestvector",3]],[[],["messagestestvectorerror",4]],[[]],[[]],[[],["messagestestvector",3]],[[],["result",4]],[[["messagestestvectorerror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["ciphersuite",3]],["messagestestvector",3]],[[]],[[]],[[["messagestestvector",3]],[["result",4,["messagestestvectorerror"]],["messagestestvectorerror",4]]],[[],["result",4]],[[],[["error",8],["option",4,["error"]]]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[],["transcripttestvector",3]],[[],["transcripttestvectorerror",4]],[[]],[[]],[[],["transcripttestvector",3]],[[],["result",4]],[[["transcripttestvectorerror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["ciphersuite",3]],["transcripttestvector",3]],[[]],[[]],[[["transcripttestvector",3]],[["result",4,["transcripttestvectorerror"]],["transcripttestvectorerror",4]]],[[],["result",4]],[[],[["error",8],["option",4,["error"]]]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["welcome",3]],[[],["encryptedgroupsecrets",3]],[[],["commit",3]],[[],["confirmationtag",3]],[[],["pathsecret",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["welcome",3]],["bool",15]],[[["encryptedgroupsecrets",3]],["bool",15]],[[["commit",3]],["bool",15]],[[["confirmationtag",3]],["bool",15]],[[["pathsecret",3]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],null,[[["welcome",3]],["bool",15]],[[["encryptedgroupsecrets",3]],["bool",15]],[[["commit",3]],["bool",15]],[[["confirmationtag",3]],["bool",15]],[[["pathsecret",3]],["bool",15]],[[],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["proposalqueueerror",4]],[[],["proposalorreftypeerror",4]],[[],["queuedproposalerror",4]],[[]],[[]],[[]],[[["proposalqueueerror",4]],["bool",15]],[[["proposalorreftypeerror",4]],["bool",15]],[[["queuedproposalerror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["queuedproposalerror",4]]],[[]],[[]],[[["tlscodecerror",4]]],[[]],[[]],[[]],[[["proposalqueueerror",4]],["bool",15]],[[["queuedproposalerror",4]],["bool",15]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ratchettree",3],["str",15]]],[[["extension",4]]],[[["extension",4]]],[[],[["extensionerror",4],["result",4,["capabilitiesextension","extensionerror"]],["capabilitiesextension",3]]],[[],[["extensionerror",4],["result",4,["keyidextension","extensionerror"]],["keyidextension",3]]],[[],[["lifetimeextension",3],["extensionerror",4],["result",4,["lifetimeextension","extensionerror"]]]],[[],[["result",4,["parenthashextension","extensionerror"]],["parenthashextension",3],["extensionerror",4]]],[[],[["result",4,["ratchettreeextension","extensionerror"]],["ratchettreeextension",3],["extensionerror",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["ciphersuitename",4]],[[]],[[],["credentialerror",4]],[[],["credentialtype",4]],[[],["certificate",3]],[[],["mlscredentialtype",4]],[[],["credential",3]],[[],["basiccredential",3]],[[],["credentialbundle",3]],[[],["capabilitiesextension",3]],[[],["keyidextension",3]],[[],["lifetimeextension",3]],[[],["ratchettreeextension",3]],[[],["extensiontype",4]],[[],["extension",4]],[[],["keypackagepayload",3]],[[],["keypackage",3]],[[],["keypackagebundle",3]],[[],["addproposal",3]],[[],["updateproposal",3]],[[],["removeproposal",3]],[[],["presharedkeyproposal",3]],[[],["reinitproposal",3]],[[],["psktype",4]],[[],["externalpsk",3]],[[],["reinitpsk",3]],[[],["branchpsk",3]],[[],["psk",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["extensiontype",4]],["ordering",4]],[[],["ordering",4]],[[],["credential",3]],[[],["credential",3]],[[]],[[],["keyidextension",3]],[[]],[[],["ratchettreeextension",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["credentialerror",4]],["bool",15]],[[["credentialtype",4]],["bool",15]],[[["certificate",3]],["bool",15]],[[["mlscredentialtype",4]],["bool",15]],[[["credential",3]],["bool",15]],[[],["bool",15]],[[["capabilitiesextension",3]],["bool",15]],[[["keyidextension",3]],["bool",15]],[[["lifetimeextension",3]],["bool",15]],[[["ratchettreeextension",3]],["bool",15]],[[["extensiontype",4]],["bool",15]],[[["extension",4]],["bool",15]],[[["keypackagepayload",3]],["bool",15]],[[],["bool",15]],[[["addproposal",3]],["bool",15]],[[["updateproposal",3]],["bool",15]],[[["removeproposal",3]],["bool",15]],[[["presharedkeyproposal",3]],["bool",15]],[[["reinitproposal",3]],["bool",15]],[[["psktype",4]],["bool",15]],[[["externalpsk",3]],["bool",15]],[[["reinitpsk",3]],["bool",15]],[[["branchpsk",3]],["bool",15]],[[["psk",4]],["bool",15]],null,null,[[],["extensiontype",4]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["keypackagebundle",3]]],[[]],[[]],[[["tlscodecerror",4]]],[[["configerror",4]]],[[]],[[]],[[]],[[]],[[["mlscredentialtype",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["keypackage",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["secret",3],["keypackage",3]]],[[],["result",4]],[[],["result",4]],[[["signature",3],["keypackagepayload",3]]],[[["signature",3],["keypackagebundlepayload",3]]],[[]],[[],[["vec",3,["u8"]],["u8",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",4,["keypackageerror"]],["keypackageerror",4]]],[[],["keypackage",3]],[[],["secret",3]],[[["credentialerror",4]],["bool",15]],[[["certificate",3]],["bool",15]],[[["mlscredentialtype",4]],["bool",15]],[[["credential",3]],["bool",15]],[[["capabilitiesextension",3]],["bool",15]],[[["keyidextension",3]],["bool",15]],[[["lifetimeextension",3]],["bool",15]],[[["ratchettreeextension",3]],["bool",15]],[[["extension",4]],["bool",15]],[[["keypackagepayload",3]],["bool",15]],[[["addproposal",3]],["bool",15]],[[["updateproposal",3]],["bool",15]],[[["removeproposal",3]],["bool",15]],[[["presharedkeyproposal",3]],["bool",15]],[[["reinitproposal",3]],["bool",15]],[[["externalpsk",3]],["bool",15]],[[["reinitpsk",3]],["bool",15]],[[["branchpsk",3]],["bool",15]],[[["psk",4]],["bool",15]],[[["ciphersuite",3],["secret",3],["u8",15],["vec",3,["u8"]]]],[[["u8",15],["vec",3,["u8"]],["signaturescheme",4],["credentialtype",4]],[["result",4,["credentialerror"]],["credentialerror",4]]],[[["option",4],["option",4],["option",4]]],[[]],[[["u64",15]]],[[["vec",3,["option"]],["option",4,["node"]]]],[[["credentialbundle",3],["extension",4],["vec",3,["extension"]]],[["result",4,["keypackageerror"]],["keypackageerror",4]]],[[["vec",3,["u8"]],["u8",15]]],[[["credentialbundle",3],["extension",4],["hpkekeypair",3],["vec",3,["extension"]],["secret",3]],[["result",4,["keypackageerror"]],["keypackageerror",4]]],[[["credentialbundle",3],["extension",4],["vec",3,["extension"]],["protocolversion",4]],[["result",4,["keypackageerror"]],["keypackageerror",4]]],[[["extensiontype",4]],[["option",4,["ordering"]],["ordering",4]]],[[],[["option",4,["ordering"]],["ordering",4]]],[[],["groupepoch",3]],[[],["groupepoch",3]],[[],["groupid",3]],[[],["groupid",3]],[[]],[[],["secret",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["signature",3]],[[],["signaturepublickey",3]],[[],["signaturescheme",4]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",4],["result",4,["error"]]]],[[],[["result",4,["error"]],["error",4]]],[[],[["error",4],["result",4,["error"]]]],[[],[["error",4],["result",4,["error"]]]],[[],[["error",4],["result",4,["error"]]]],[[],[["result",4,["error"]],["error",4]]],[[],[["error",4],["result",4,["error"]]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["error",4],["result",4,["error"]]]],[[],[["error",4],["result",4,["error"]]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["usize",15],["error",4],["result",4,["usize","error"]]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["result",4,["usize","error"]],["usize",15],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["result",4,["usize","error"]],["usize",15],["error",4]]],[[],[["result",4,["usize","error"]],["usize",15],["error",4]]],[[],[["result",4,["usize","error"]],["usize",15],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["result",4,["vec","error"]],["error",4],["vec",3,["u8","global"]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],[["vec",3,["u8"]],["result",4,["vec"]]]],[[],[["vec",3,["u8"]],["result",4,["vec"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["presharedkeyid",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u16",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u16",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u8",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["keypackagebundlepayload",3]],[[],[["vec",3,["u8"]],["error",4],["result",4,["vec","error"]]]],[[],[["vec",3,["u8"]],["error",4],["result",4,["vec","error"]]]],[[],[["vec",3,["u8"]],["error",4],["result",4,["vec","error"]]]],[[["signature",3]],[["credentialerror",4],["result",4,["credentialerror"]]]],[[["signature",3]],[["credentialerror",4],["result",4,["credentialerror"]]]],[[],[["keypackageerror",4],["result",4,["keypackageerror"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["extensionerror",4]],[[],["lifetimeextensionerror",4]],[[],["capabilitiesextensionerror",4]],[[],["keypackageiderror",4]],[[],["parenthasherror",4]],[[],["ratchettreeerror",4]],[[],["invalidextensionerror",4]],[[],["keypackageerror",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["extensionerror",4]],["bool",15]],[[["lifetimeextensionerror",4]],["bool",15]],[[["capabilitiesextensionerror",4]],["bool",15]],[[["keypackageiderror",4]],["bool",15]],[[["parenthasherror",4]],["bool",15]],[[["ratchettreeerror",4]],["bool",15]],[[["invalidextensionerror",4]],["bool",15]],[[["keypackageerror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["lifetimeextensionerror",4]]],[[["capabilitiesextensionerror",4]]],[[["errorstring",3]]],[[["ratchettreeerror",4]]],[[]],[[["configerror",4]]],[[["tlscodecerror",4]]],[[["invalidextensionerror",4]]],[[["keypackageiderror",4]]],[[["parenthasherror",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["credentialerror",4]]],[[["extensionerror",4]]],[[]],[[["configerror",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["extensionerror",4]],["bool",15]],[[["keypackageerror",4]],["bool",15]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["presharedkeyid",3]],[[],["resumptionsecret",3]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["presharedkeyid",3]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["presharedkeyid",3]],["bool",15]],[[["ciphersuite",3]],[["psksecreterror",4],["result",4,["psksecreterror"]]]],[[["psk",4],["u8",15],["vec",3,["u8"]],["psktype",4]]],[[],["psk",4]],[[]],[[]],[[],["psktype",4]],[[],["secret",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["confirmationtag",3]],[[],[["error",4],["result",4,["error"]]]],[[],[["result",4,["error"]],["error",4]]],[[],[["usize",15],["error",4],["result",4,["usize","error"]]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["errorstate",4]],[[],["keyscheduleerror",4]],[[],["psksecreterror",4]],[[],["kstestvectorerror",4]],[[]],[[]],[[]],[[]],[[["errorstate",4]],["bool",15]],[[["keyscheduleerror",4]],["bool",15]],[[["psksecreterror",4]],["bool",15]],[[["kstestvectorerror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["errorstate",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["keyscheduleerror",4]],["bool",15]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],null,[[],["keyscheduletestvector",3]],[[]],[[],["keyscheduletestvector",3]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[["u64",15],["ciphersuite",3]],["keyscheduletestvector",3]],[[]],[[["keyscheduletestvector",3]],[["kstestvectorerror",4],["result",4,["kstestvectorerror"]]]],[[],["result",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,[[["vec",3,["vec"]],["actiontype",4],["vec",3,["u8"]],["group",3]],[["result",4,["setuperror"]],["setuperror",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["group",3]]],null,null,null,[[],["group",3]],[[]],[[["ciphersuite",3]],[["setuperror",4],["groupid",3],["result",4,["groupid","setuperror"]]]],[[["usize",15],["ciphersuite",3]],[["setuperror",4],["groupid",3],["result",4,["groupid","setuperror"]]]],null,[[["group",3],["welcome",3]],[["result",4,["setuperror"]],["setuperror",4]]],[[["group",3],["mlsmessageout",4]],[["result",4,["clienterror"]],["clienterror",4]]],[[["codecuse",4]],["bool",15]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["ciphersuite",3],["client",3]],[["keypackage",3],["setuperror",4],["result",4,["keypackage","setuperror"]]]],null,null,null,[[]],[[]],[[]],[[]],null,null,[[["usize",15],["managedgroupconfig",3],["codecuse",4]]],[[["group",3]],[["result",4,["setuperror"]],["setuperror",4]]],null,[[],[["vec",3,["u8"]],["u8",15]]],[[["group",3],["usize",15]],[["vec",3,["vec"]],["result",4,["vec","setuperror"]],["setuperror",4]]],[[["vec",3,["vec"]],["actiontype",4],["vec",3,["u8"]],["group",3]],[["result",4,["setuperror"]],["setuperror",4]]],[[["actiontype",4],["group",3]],[["result",4,["setuperror"]],["setuperror",4]]],[[["keypackagebundle",3],["option",4,["keypackagebundle"]],["actiontype",4],["group",3]],[["result",4,["setuperror"]],["setuperror",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],null,null,[[["groupid",3],["actiontype",4]],[["result",4,["clienterror"]],["clienterror",4]]],[[]],[[]],[[["managedgroupconfig",3],["groupid",3],["ciphersuite",3]],[["result",4,["clienterror"]],["clienterror",4]]],null,null,[[["formatter",3]],["result",6]],[[]],[[],[["keypackage",3],["clienterror",4],["result",4,["keypackage","clienterror"]]]],[[["groupid",3]],[["result",4,["vec","clienterror"]],["clienterror",4],["vec",3]]],null,null,[[]],[[["managedgroupconfig",3],["welcome",3],["option",4,["vec"]],["vec",3,["option"]]],[["result",4,["clienterror"]],["clienterror",4]]],[[["mlsmessagein",4]],[["result",4,["clienterror"]],["clienterror",4]]],[[["groupid",3],["actiontype",4]],[["result",4,["clienterror"]],["clienterror",4]]],[[["groupid",3],["keypackagebundle",3],["actiontype",4],["option",4,["keypackagebundle"]]],[["clienterror",4],["result",4,["clienterror"]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["clienterror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["managedgrouperror",4]]],[[]],[[["clienterror",4]]],[[]],[[["managedgrouperror",4]]],[[["mlsgrouperror",4]]],[[["welcomeerror",4]]],[[["error",4]]],[[]],[[]],[[]],[[]],[[["clienterror",4]],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["messagetype",4]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],[["result",4,["error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],["usize",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,[[["proposalqueue",3]],[["result",4,["applyproposalsvalues","treeerror"]],["treeerror",4],["applyproposalsvalues",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["ciphersuite",3]],[[],["updatepathnode",3]],[[],["updatepath",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["updatepathnode",3]],["bool",15]],[[["updatepath",3]],["bool",15]],null,[[],[["hashset",3,["leafindex"]],["leafindex",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["ciphersuite",3]],[["vec",3,["u8"]],["u8",15]]],null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["leafindex",3]],[[["updatepathnode",3]],["bool",15]],[[["updatepath",3]],["bool",15]],null,null,[[],["keypackage",3]],null,null,[[],[["vec",3,["option"]],["option",4,["node"]]]],[[],[["vec",3,["option"]],["option",4,["node"]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["nodeindex",3],["node",3]],[["parenthasherror",4],["result",4,["parenthasherror"]]]],[[],[["parenthasherror",4],["result",4,["parenthasherror"]]]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["treeerror",4]],[[],["parenthasherror",4]],[[]],[[]],[[["treeerror",4]],["bool",15]],[[["parenthasherror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["credentialerror",4]]],[[]],[[]],[[]],[[["treeerror",4]],["bool",15]],[[],[["error",8],["option",4,["error"]]]],[[],[["error",8],["option",4,["error"]]]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,[[],["u32",15]],[[],["u32",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["nodeindex",3]],[[],["leafindex",3]],[[]],[[]],[[["nodeindex",3]],["ordering",4]],[[["leafindex",3]],["ordering",4]],[[],["nodeindex",3]],[[],["leafindex",3]],[[],["result",4]],[[],["result",4]],[[["nodeindex",3]],["bool",15]],[[["leafindex",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["u32",15]],["nodeindex",3]],[[["usize",15]],["nodeindex",3]],[[["leafindex",3]],["nodeindex",3]],[[["u32",15]],["leafindex",3]],[[["usize",15]],["leafindex",3]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["nodeindex",3]],["bool",15]],[[["leafindex",3]],["bool",15]],[[["nodeindex",3]],[["option",4,["ordering"]],["ordering",4]]],[[["leafindex",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["error"]],["error",4]]],[[],[["result",4,["error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["result",4]],[[["nodeindex",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,[[["leafindex",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["nodetype",4]],[[],["node",3]],[[],["parentnode",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["nodetype",4]],["bool",15]],[[["node",3]],["bool",15]],[[["parentnode",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["option",4,["keypackage"]],["keypackage",3]]],[[["node",3]],["bool",15]],[[["parentnode",3]],["bool",15]],[[["hpkepublickey",3]]],[[]],[[["option",4,["keypackage"]],["keypackage",3]]],[[],["option",4]],[[],[["option",4,["hpkepublickey"]],["hpkepublickey",3]]],[[],["hpkepublickey",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["vec",3,["u8"]],["u8",15]]],[[],[["result",4,["error"]],["error",4]]],[[],[["error",4],["result",4,["error"]]]],[[],[["result",4,["error"]],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],[["result",4,["usize","error"]],["usize",15],["error",4]]],[[],[["usize",15],["result",4,["usize","error"]],["error",4]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[["u8",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[],["encryptiontestvector",3]],[[],["enctestvectorerror",4]],[[]],[[]],[[],["result",4]],[[["enctestvectorerror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["ciphersuite",3],["u32",15]],["encryptiontestvector",3]],[[]],[[]],null,[[["encryptiontestvector",3]],[["enctestvectorerror",4],["result",4,["enctestvectorerror"]]]],[[],["result",4]],[[],[["error",8],["option",4,["error"]]]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[],["treekemtestvector",3]],[[],["treekemtestvectorerror",4]],[[]],[[]],[[],["result",4]],[[["treekemtestvectorerror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["ciphersuite",3],["u32",15]],["treekemtestvector",3]],[[]],[[]],null,null,null,null,null,null,null,[[["treekemtestvector",3]],[["result",4,["treekemtestvectorerror"]],["treekemtestvectorerror",4]]],[[],["result",4]],[[],[["error",8],["option",4,["error"]]]],[[]],[[]],[[],["string",3]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["treemathtestvector",3]],[[],["tmtestvectorerror",4]],[[]],[[]],[[],["result",4]],[[["tmtestvectorerror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["u32",15]],["treemathtestvector",3]],[[]],[[]],[[["treemathtestvector",3]],[["tmtestvectorerror",4],["result",4,["tmtestvectorerror"]]]],[[],["result",4]],[[],[["error",8],["option",4,["error"]]]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[4,"CiphersuiteName"],[3,"Ciphersuite"],[8,"VerifiedStruct"],[8,"Signable"],[8,"SignedStruct"],[8,"Verifiable"],[4,"ProtocolVersion"],[3,"Config"],[4,"ConfigError"],[3,"ErrorString"],[3,"ErrorPayload"],[3,"FramingParameters"],[3,"MlsCiphertext"],[4,"MlsPlaintextError"],[4,"MlsCiphertextError"],[4,"VerificationError"],[13,"PlaintextError"],[13,"SecretTreeError"],[13,"CodecError"],[13,"CodecError"],[13,"CredentialError"],[13,"VerificationError"],[13,"CredentialError"],[4,"ContentType"],[4,"MlsPlaintextContentType"],[3,"MlsPlaintext"],[3,"MembershipTag"],[3,"MlsPlaintextTbs"],[3,"VerifiableMlsPlaintext"],[13,"Application"],[13,"Proposal"],[13,"Commit"],[4,"SenderType"],[3,"Sender"],[3,"GroupEpoch"],[4,"EmptyInputError"],[4,"GroupEvent"],[4,"MlsMessageIn"],[4,"MlsMessageOut"],[4,"InvalidMessageError"],[4,"ManagedGroupError"],[4,"UseAfterEviction"],[4,"PendingProposalsError"],[4,"WireFormat"],[4,"Removal"],[3,"ManagedGroup"],[3,"MlsGroupConfig"],[3,"GroupId"],[3,"GroupContext"],[13,"MemberAdded"],[13,"MemberRemoved"],[13,"MemberUpdated"],[13,"PskReceived"],[13,"ReInit"],[13,"ApplicationMessage"],[13,"Error"],[13,"InvalidCiphertext"],[13,"CommitError"],[13,"GroupError"],[13,"LibraryError"],[13,"Config"],[13,"Group"],[13,"CreateCommit"],[13,"UseAfterEviction"],[13,"PendingProposalsExist"],[13,"Exporter"],[13,"EmptyInput"],[13,"InvalidMessage"],[13,"CredentialError"],[13,"Plaintext"],[13,"Ciphertext"],[13,"Plaintext"],[13,"Ciphertext"],[13,"TheyLeft"],[13,"WeWereRemovedBy"],[13,"TheyWereRemovedBy"],[3,"ManagedGroupCallbacks"],[3,"ManagedGroupConfig"],[3,"UpdatePolicy"],[4,"MlsGroupError"],[4,"CreateCommitError"],[4,"WelcomeError"],[4,"ApplyCommitError"],[4,"ExporterError"],[4,"PskError"],[13,"PlaintextSignatureFailure"],[13,"DecryptionFailure"],[13,"CodecError"],[13,"KeyScheduleError"],[13,"PskError"],[13,"MlsCiphertextError"],[13,"MlsPlaintextError"],[13,"WelcomeError"],[13,"ApplyCommitError"],[13,"CreateCommitError"],[13,"ConfigError"],[13,"ExporterError"],[13,"ProposalQueueError"],[13,"CodecError"],[13,"KeyScheduleError"],[13,"MathError"],[13,"PskError"],[13,"CredentialError"],[13,"TreeError"],[13,"PskSecretError"],[13,"ConfigError"],[13,"InvalidRatchetTree"],[13,"ParentHashMismatch"],[13,"GroupSecretsDecryptionFailure"],[13,"CodecError"],[13,"KeyScheduleError"],[13,"PskError"],[3,"MemberAddedEvent"],[3,"MemberRemovedEvent"],[3,"MemberUpdatedEvent"],[3,"PskReceivedEvent"],[3,"ReInitEvent"],[3,"ApplicationMessageEvent"],[3,"ErrorEvent"],[3,"MlsGroup"],[3,"Proposals"],[4,"MessagesTestVectorError"],[3,"MessagesTestVector"],[4,"TranscriptTestVectorError"],[3,"TranscriptTestVector"],[3,"Welcome"],[3,"EncryptedGroupSecrets"],[3,"Commit"],[3,"ConfirmationTag"],[3,"PathSecret"],[4,"ProposalQueueError"],[4,"QueuedProposalError"],[4,"ProposalOrRefTypeError"],[13,"NotAProposal"],[13,"TlsCodecError"],[4,"CredentialType"],[4,"MlsCredentialType"],[4,"PskType"],[4,"Psk"],[4,"ExtensionError"],[4,"ExtensionType"],[4,"Extension"],[4,"KeyPackageError"],[4,"CredentialError"],[4,"InvalidExtensionError"],[4,"CapabilitiesExtensionError"],[4,"LifetimeExtensionError"],[4,"KeyPackageIdError"],[4,"ParentHashError"],[4,"RatchetTreeError"],[3,"KeyPackageBundlePayload"],[3,"KeyPackagePayload"],[3,"KeyIdExtension"],[3,"ExternalPskBundle"],[3,"Certificate"],[3,"Credential"],[3,"BasicCredential"],[3,"CredentialBundle"],[3,"CapabilitiesExtension"],[3,"LifetimeExtension"],[3,"RatchetTreeExtension"],[3,"KeyPackage"],[3,"KeyPackageBundle"],[3,"AddProposal"],[3,"UpdateProposal"],[3,"RemoveProposal"],[3,"PreSharedKeyProposal"],[3,"ReInitProposal"],[3,"ExternalPsk"],[3,"ReinitPsk"],[3,"BranchPsk"],[8,"TlsDeserializeTrait"],[8,"TlsSerializeTrait"],[8,"TlsSizeTrait"],[13,"ConfigError"],[13,"CryptoError"],[13,"CodecError"],[13,"Capabilities"],[13,"KeyPackageId"],[13,"LifeTime"],[13,"ParentHash"],[13,"RatchetTree"],[13,"InvalidExtensionType"],[13,"Capabilities"],[13,"Lifetime"],[13,"KeyPackageId"],[13,"ParentHash"],[13,"RatchetTree"],[13,"CodecError"],[13,"ConfigError"],[13,"InvalidExtension"],[13,"ExtensionError"],[13,"ConfigError"],[13,"CredentialError"],[13,"Basic"],[13,"X509"],[13,"External"],[13,"Reinit"],[13,"Branch"],[3,"PskSecret"],[3,"PreSharedKeyId"],[3,"PreSharedKeys"],[3,"ConfirmationKey"],[3,"MembershipKey"],[3,"ResumptionSecret"],[4,"KsTestVectorError"],[4,"PskSecretError"],[4,"KeyScheduleError"],[4,"ErrorState"],[13,"InvalidState"],[3,"KeyScheduleTestVector"],[4,"ActionType"],[4,"CodecUse"],[3,"ManagedTestSetup"],[3,"Group"],[3,"Client"],[4,"ClientError"],[4,"SetupError"],[4,"SetupGroupError"],[13,"FailedToJoinGroup"],[13,"InvalidMessage"],[13,"ManagedGroupError"],[13,"GroupError"],[13,"ErrorEvent"],[13,"TlsCodecError"],[13,"ClientError"],[4,"MessageType"],[3,"RatchetTree"],[3,"ApplyProposalsValues"],[3,"LeafNodeHashInput"],[3,"ParentNodeTreeHashInput"],[3,"UpdatePathNode"],[3,"UpdatePath"],[4,"ParentHashError"],[4,"TreeError"],[13,"PathSecretDecryptionError"],[13,"CredentialError"],[3,"NodeIndex"],[3,"LeafIndex"],[4,"NodeType"],[3,"ParentNode"],[3,"Node"],[4,"EncTestVectorError"],[3,"EncryptionTestVector"],[4,"TreeKemTestVectorError"],[3,"TreeKemTestVector"],[4,"TmTestVectorError"],[3,"TreeMathTestVector"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};