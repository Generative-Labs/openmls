var searchIndex = JSON.parse('{\
"openmls":{"doc":"OpenMLS","t":[0,3,3,0,5,5,5,5,5,0,0,8,10,8,16,10,11,8,10,10,11,4,13,13,13,13,13,13,4,13,13,13,13,3,3,11,3,3,11,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,0,0,0,4,13,13,13,13,13,13,3,11,11,11,11,11,11,11,4,13,13,13,0,0,3,12,12,12,12,12,12,11,0,0,4,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,4,13,13,13,13,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,4,13,13,13,3,3,11,0,4,13,13,13,3,11,11,0,0,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,4,13,4,13,13,13,0,0,3,5,5,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,3,12,5,5,4,13,13,13,13,13,0,3,6,6,6,0,4,13,13,3,3,0,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,4,13,4,13,4,13,13,13,13,13,13,0,4,13,13,13,13,13,13,13,3,3,3,3,3,3,3,4,13,13,13,13,3,6,6,6,4,13,13,3,3,4,13,13,4,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,4,13,4,13,13,13,13,13,13,13,3,3,3,3,3,3,3,4,13,13,13,13,3,4,13,13,6,3,6,3,12,11,11,11,3,12,11,3,3,12,12,12,11,0,0,4,13,13,13,13,3,3,11,11,11,11,0,0,4,13,13,4,13,4,13,3,3,12,12,11,3,11,11,3,3,12,3,0,0,0,4,13,13,13,4,13,4,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,0,3,12,5,5,3,3,3,3,11,3,3,0,0,4,13,13,13,13,13,13,4,13,13,13,13,13,0,3,11,11,11,11,3,11,11,0,4,13,13,11,11,3,12,11,11,11,11,11,11,11,3,11,11,11,11,11,0,0,3,12,12,5,5,4,13,13,13,13,13,13,13,13,13,13,13,0,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,4,13,13,13,13,13,13,13,0,3,5,5,4,13,13,13,13,13,13,3,3,3,12,11,11,11,11,11,11,3,12,12,12,12,11,3,12,12,3,12,12,0,0,4,13,13,13,13,13,13,13,13,13,4,13,13,4,13,13,13,4,13,4,13,4,13,4,13,0,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,4,13,13,13,13,13,13,13,4,13,13,4,13,13,13,13,13,13,3,3,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,4,13,13,13,13,3,3,4,13,13,13,4,13,13,13,13,3,8,11,11,11,11,5,5,4,13,13,13,13,13,13,4,13,13,3,4,13,13,3,3,12,12,12,3,3,4,13,13,13,13,13,13,13,13,13,4,13,13,4,13,13,13,4,13,4,13,4,13,4,13,3,3,3,4,13,13,13,13,13,13,3,8,10,10,10,10,11,11,11,11,11,8,10,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,3,3,3,3,12,3,12,3,12,12,12,12,3,12,3,12,3,3,3,3,4,13,13,13,4,13,13,13,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["error","ErrorString","ErrorPayload","test_util","write","read","bytes_to_hex","hex_to_bytes","hex_to_bytes_option","ciphersuite","signable","SignedStruct","from_payload","Signable","SignedOutput","unsigned_payload","sign","Verifiable","unsigned_payload","signature","verify","CiphersuiteName","MLS10_128_DHKEMX25519_AES128GCM_SHA256_Ed25519","MLS10_128_DHKEMP256_AES128GCM_SHA256_P256","MLS10_128_DHKEMX25519_CHACHA20POLY1305_SHA256_Ed25519","MLS10_256_DHKEMX448_AES256GCM_SHA512_Ed448","MLS10_256_DHKEMP521_AES256GCM_SHA512_P521","MLS10_256_DHKEMX448_CHACHA20POLY1305_SHA512_Ed448","SignatureScheme","ECDSA_SECP256R1_SHA256","ECDSA_SECP521R1_SHA512","ED25519","ED448","HpkeCiphertext","Secret","as_slice","AeadKey","ReuseGuard","from_random","AeadNonce","Signature","SignaturePrivateKey","SignaturePublicKey","SignatureKeypair","Ciphersuite","new","signature_scheme","name","from_secret","sign","verify","into_tuple","new","verify","sign","config","codec","errors","ConfigError","InvalidConfig","UnsupportedMlsVersion","UnsupportedCiphersuite","UnsupportedSignatureScheme","IncompatibleMlsVersion","IncompatibleCiphersuite","Config","supported_extensions","supported_ciphersuites","supported_ciphersuite_names","supported_versions","ciphersuite","default_key_package_lifetime","key_package_lifetime_margin","ProtocolVersion","Reserved","Mls10","Mls10Draft11","framing","ciphertext","MlsCiphertext","group_id","epoch","content_type","authenticated_data","encrypted_sender_data","ciphertext","is_handshake_message","codec","errors","MlsPlaintextError","CodecError","CredentialError","VerificationError","NotAnApplicationMessage","UnknownSender","InvalidSignature","InvalidMembershipTag","MlsCiphertextError","PlaintextError","SecretTreeError","CodecError","InvalidContentType","GenerationOutOfBound","EncryptionError","DecryptionError","VerificationError","CodecError","CredentialError","MissingMembershipTag","InvalidMembershipTag","plaintext","MlsPlaintext","new_from_proposal_member","new_from_application","content","sender","sign_from_external","sign_from_member","add_membership_tag","verify_signature","verify_membership_tag","verify_from_member","as_application_message","is_handshake_message","group_id","epoch","ContentType","Application","Proposal","Commit","MlsPlaintextContentType","Application","Proposal","Commit","MembershipTag","MlsPlaintextTbs","new_from","sender","SenderType","Member","Preconfigured","NewMember","Sender","is_member","to_leaf_index","group","errors","GroupError","MlsCiphertextError","MlsPlaintextError","WelcomeError","ApplyCommitError","CreateCommitError","ConfigError","ExporterError","ProposalQueueError","CodecError","KeyScheduleError","MathError","PskError","CredentialError","TreeError","InitSecretNotFound","WelcomeError","InvalidRatchetTree","ParentHashMismatch","GroupSecretsDecryptionFailure","CodecError","KeyScheduleError","PskError","CiphersuiteMismatch","JoinerSecretNotFound","MissingRatchetTree","TreeHashMismatch","ConfirmationTagMismatch","InvalidGroupInfoSignature","GroupInfoDecryptionFailure","DuplicateRatchetTreeExtension","UnsupportedMlsVersion","MissingKeyPackage","UnknownError","ApplyCommitError","PlaintextSignatureFailure","DecryptionFailure","CodecError","KeyScheduleError","PskError","EpochMismatch","WrongPlaintextContentType","SelfRemoved","PathKeyPackageVerificationFailure","NoParentHashExtension","ParentHashMismatch","RequiredPathNotFound","ConfirmationTagMissing","ConfirmationTagMismatch","MissingOwnKeyPackage","MissingProposal","OwnKeyNotFound","InitSecretNotFound","CreateCommitError","CannotRemoveSelf","OwnKeyNotFound","ExporterError","KeyLengthTooLong","PskError","PskSecretError","NoPskFetcherProvided","PskIdNotFound","tests","kat_messages","MessagesTestVector","generate_test_vector","run_test_vector","MessagesTestVectorError","LifetimeEncodingMismatch","RatchetTreeEncodingMismatch","WelcomeEncodingMismatch","PublicGroupStateEncodingMismatch","AddProposalEncodingMismatch","MlsCiphertextEncodingMismatch","MlsPlaintextCommitEncodingMismatch","MlsPlaintextProposalEncodingMismatch","MlsPlaintextApplicationEncodingMismatch","CommitEncodingMismatch","PreSharedKeyProposalEncodingMismatch","RemoveProposalEncodingMismatch","UpdateProposalEncodingMismatch","GroupSecretsEncodingMismatch","GroupInfoEncodingMismatch","KeyPackageEncodingMismatch","CapabilitiesEncodingMismatch","kat_transcripts","TranscriptTestVector","cipher_suite","generate_test_vector","run_test_vector","TranscriptTestVectorError","MembershipTagVerificationError","GroupContextMismatch","ConfirmationTagMismatch","ConfirmedTranscriptHashMismatch","InterimTranscriptHashMismatch","callbacks","ManagedGroupCallbacks","ValidateAdd","ValidateRemove","AutoSave","config","HandshakeMessageFormat","Plaintext","Ciphertext","ManagedGroupConfig","UpdatePolicy","errors","ManagedGroupError","LibraryError","Codec","Config","Group","CreateCommit","UseAfterEviction","PendingProposalsExist","Exporter","EmptyInput","KeyStoreError","InvalidMessage","CredentialError","NoMatchingCredentialBundle","NoMatchingKeyPackageBundle","PoisonedCredentialBundle","EmptyInputError","AddMembers","RemoveMembers","UseAfterEviction","Error","PendingProposalsError","Exists","InvalidMessageError","InvalidCiphertext","CommitError","GroupError","MembershipTagMismatch","InvalidProposal","CommitWithInvalidProposals","events","GroupEvent","MemberAdded","MemberRemoved","MemberUpdated","PskReceived","ReInit","ApplicationMessage","Error","MemberAddedEvent","MemberRemovedEvent","MemberUpdatedEvent","PskReceivedEvent","ReInitEvent","ApplicationMessageEvent","ErrorEvent","Removal","WeLeft","TheyLeft","WeWereRemovedBy","TheyWereRemovedBy","ManagedGroupCallbacks","ValidateAdd","ValidateRemove","AutoSave","HandshakeMessageFormat","Plaintext","Ciphertext","ManagedGroupConfig","UpdatePolicy","EmptyInputError","AddMembers","RemoveMembers","InvalidMessageError","InvalidCiphertext","CommitError","GroupError","MembershipTagMismatch","InvalidProposal","CommitWithInvalidProposals","ManagedGroupError","LibraryError","Codec","Config","Group","CreateCommit","UseAfterEviction","PendingProposalsExist","Exporter","EmptyInput","KeyStoreError","InvalidMessage","CredentialError","NoMatchingCredentialBundle","NoMatchingKeyPackageBundle","PoisonedCredentialBundle","PendingProposalsError","Exists","UseAfterEviction","Error","GroupEvent","MemberAdded","MemberRemoved","MemberUpdated","PskReceived","ReInit","ApplicationMessage","Error","MemberAddedEvent","MemberRemovedEvent","MemberUpdatedEvent","PskReceivedEvent","ReInitEvent","ApplicationMessageEvent","ErrorEvent","Removal","WeLeft","TheyLeft","WeWereRemovedBy","TheyWereRemovedBy","ManagedGroup","MlsMessage","Plaintext","Ciphertext","CreateCommitResult","MlsGroup","PskFetcher","GroupId","value","random","from_slice","as_slice","GroupEpoch","0","increment","GroupContext","GroupConfig","add_ratchet_tree_extension","padding_block_size","additional_as_epochs","padding_block_size","key_store","errors","KeyStoreError","KeyPackageError","CredentialError","NoMatchingCredentialBundle","NoMatchingKeyPackageBundle","KeyStore","CbGuard","take_key_package_bundle","generate_key_package_bundle","generate_credential_bundle","get_leaf_secret","messages","errors","ProposalQueueError","NotAProposal","ProposalNotFound","ProposalOrRefTypeError","UnknownValue","QueuedProposalError","WrongContentType","Welcome","EncryptedGroupSecrets","key_package_hash","encrypted_group_secrets","secrets","Commit","has_path","path","ConfirmationTag","PathSecret","path_secret","PublicGroupState","schedule","codec","errors","ErrorState","NotInit","NotEpoch","NotContext","KeyScheduleError","InvalidState","PskSecretError","TooManyKeys","DifferentLength","KsTestVectorError","JoinerSecretMismatch","WelcomeSecretMismatch","InitSecretMismatch","GroupContextMismatch","SenderDataSecretMismatch","EncryptionSecretMismatch","ExporterSecretMismatch","AuthenticationSecretMismatch","ExternalSecretMismatch","ConfirmationKeyMismatch","MembershipKeyMismatch","ResumptionSecretMismatch","ExternalPubMismatch","kat_key_schedule","KeyScheduleTestVector","cipher_suite","generate_test_vector","run_test_vector","PreSharedKeyId","PreSharedKeys","PskSecret","ConfirmationKey","tag","MembershipKey","ResumptionSecret","tree","errors","TreeError","PathSecretDecryptionError","CredentialError","InvalidArguments","InvalidUpdatePath","InvalidTree","NotAParentNode","ParentHashError","EndedWithLeafNode","AllChecksFailed","InputNotParentNode","NotAParentNode","EmptyParentNode","index","NodeIndex","as_u32","as_usize","is_leaf","is_parent","LeafIndex","as_u32","as_usize","node","NodeType","Leaf","Parent","is_leaf","is_parent","Node","node_type","new_leaf","new_blank_parent_node","public_hpke_key","blank","is_blank","parent_hash","key_package","ParentNode","new","public_key","set_parent_hash","unmerged_leaves","add_unmerged_leaf","tests","kat_encryption","EncryptionTestVector","cipher_suite","n_leaves","generate_test_vector","run_test_vector","EncTestVectorError","LeafNumberMismatch","SenderDataKeyMismatch","SenderDataNonceMismatch","InvalidLeafSequenceApplication","InvalidLeafSequenceHandshake","ApplicationSecretKeyMismatch","ApplicationSecretNonceMismatch","DecryptedApplicationMessageMismatch","HandshakeSecretKeyMismatch","HandshakeSecretNonceMismatch","DecryptedHandshakeMessageMismatch","kat_tree_kem","TreeKemTestVector","cipher_suite","ratchet_tree_before","add_sender","my_leaf_secret","my_key_package","my_path_secret","update_sender","update_path","update_group_context","tree_hash_before","root_secret_after_add","root_secret_after_update","ratchet_tree_after","tree_hash_after","run_test_vector","TreeKemTestVectorError","BeforeTreeHashMismatch","AfterTreeHashMismatch","BeforeParentHashMismatch","AfterParentHashMismatch","BeforeRootSecretMismatch","AfterRootSecretMismatch","AfterRatchetTreeMismatch","kat_treemath","TreeMathTestVector","generate_test_vector","run_test_vector","TmTestVectorError","TreeSizeMismatch","RootIndexMismatch","LeftIndexMismatch","RightIndexMismatch","ParentIndexMismatch","SiblingIndexMismatch","LeafNodeHashInput","ParentNodeTreeHashInput","RatchetTree","nodes","ciphersuite","public_key_tree","public_key_tree_copy","leaf_count","own_key_package","apply_proposals","ApplyProposalsValues","path_required","self_removed","invitation_list","presharedkeys","exclusion_list","UpdatePathNode","public_key","encrypted_path_secret","UpdatePath","leaf_key_package","nodes","prelude","errors","ExtensionError","InvalidExtensionType","Capabilities","Lifetime","KeyPackageId","ParentHash","RatchetTree","CodecError","ConfigError","InvalidExtension","LifetimeExtensionError","Invalid","Expired","CapabilitiesExtensionError","Invalid","EmptyVersionsField","UnsupportedCiphersuite","KeyPackageIdError","Invalid","ParentHashError","Invalid","RatchetTreeError","Invalid","InvalidExtensionError","Duplicate","errors","KeyPackageError","ExtensionError","ConfigError","CodecError","CredentialError","UnsupportedCiphersuite","UnknownConfigError","MandatoryExtensionsMissing","InvalidLifetimeExtension","InvalidSignature","LibraryError","DuplicateExtension","NoCiphersuitesSupplied","CiphersuiteMismatch","CiphersuiteSignatureSchemeMismatch","MlsGroup","GroupEvent","MemberAdded","MemberRemoved","MemberUpdated","PskReceived","ReInit","ApplicationMessage","Error","HandshakeMessageFormat","Plaintext","Ciphertext","InvalidMessageError","InvalidCiphertext","CommitError","GroupError","MembershipTagMismatch","InvalidProposal","CommitWithInvalidProposals","ManagedGroup","ManagedGroupCallbacks","ManagedGroupConfig","ManagedGroupError","LibraryError","Codec","Config","Group","CreateCommit","UseAfterEviction","PendingProposalsExist","Exporter","EmptyInput","KeyStoreError","InvalidMessage","CredentialError","NoMatchingCredentialBundle","NoMatchingKeyPackageBundle","PoisonedCredentialBundle","MlsMessage","Plaintext","Ciphertext","Removal","WeLeft","TheyLeft","WeWereRemovedBy","TheyWereRemovedBy","UpdatePolicy","ExternalPskBundle","CodecError","EncodingError","DecodingError","Other","VecSize","VecU8","VecU16","VecU32","VecU64","Cursor","Codec","encode","decode","encode_detached","decode_detached","encode_vec","decode_vec","CredentialError","ConfigError","CryptoError","CodecError","UnsupportedCredentialType","InvalidSignature","SignatureError","CredentialType","Basic","X509","Certificate","MlsCredentialType","Basic","X509","Credential","BasicCredential","identity","signature_scheme","public_key","CredentialBundle","CapabilitiesExtension","ExtensionError","InvalidExtensionType","Capabilities","Lifetime","KeyPackageId","ParentHash","RatchetTree","CodecError","ConfigError","InvalidExtension","LifetimeExtensionError","Invalid","Expired","CapabilitiesExtensionError","Invalid","EmptyVersionsField","UnsupportedCiphersuite","KeyPackageIdError","Invalid","ParentHashError","Invalid","RatchetTreeError","Invalid","InvalidExtensionError","Duplicate","KeyIdExtension","LifetimeExtension","RatchetTreeExtension","ExtensionType","Reserved","Capabilities","Lifetime","KeyId","ParentHash","RatchetTree","ExtensionStruct","Extension","new_from_bytes","extension_type","to_extension_struct","as_any","to_parent_hash_extension","to_capabilities_extension","to_lifetime_extension","to_key_id_extension","as_ratchet_tree_extension","ExtensionHelper","clone_it","KeyPackageError","ExtensionError","ConfigError","CodecError","CredentialError","UnsupportedCiphersuite","UnknownConfigError","MandatoryExtensionsMissing","InvalidLifetimeExtension","InvalidSignature","LibraryError","DuplicateExtension","NoCiphersuitesSupplied","CiphersuiteMismatch","CiphersuiteSignatureSchemeMismatch","KeyPackagePayload","KeyPackage","KeyPackageBundlePayload","KeyPackageBundle","AddProposal","key_package","PreSharedKeyProposal","psk","ReInitProposal","group_id","version","ciphersuite","extensions","RemoveProposal","removed","UpdateProposal","key_package","BranchPsk","ExternalPsk","PreSharedKeyId","PreSharedKeys","Psk","External","Reinit","Branch","PskType","External","Reinit","Branch","ReinitPsk","_print_tree","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","erased_serialize","from_payload","from_payload","from_payload","unsigned_payload","unsigned_payload","unsigned_payload","unsigned_payload","signature","unsigned_payload","signature","unsigned_payload","signature","encode","decode","encode","decode","encode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","encode","decode","encode","encode","decode","encode","decode","encode","decode","encode","decode","encode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","encode","decode","extension_type","new_from_bytes","to_extension_struct","as_any","extension_type","new_from_bytes","to_extension_struct","as_any","extension_type","new_from_bytes","to_extension_struct","as_any","extension_type","new_from_bytes","to_extension_struct","as_any","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","cmp","cmp","cmp","cmp","cmp","eq","ne","eq","ne","eq","eq","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","eq","eq","eq","ne","eq","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","eq","eq","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","eq","eq","eq","ne","eq","ne","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","deref","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","hash","hash","hash","hash","hash","hash","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","tls_serialize","tls_serialize","serialized_len","serialized_len","serialized_len","serialized_len","serialized_len","new","consume","sub_cursor","is_empty","has_more","encode","decode","encode_detached","decode_detached","verify","identity","signature_scheme","signature_key","verify","new","credential","new","versions","ciphersuites","extensions","new","as_slice","new","new","extension_data","to_parent_hash_extension","to_capabilities_extension","to_lifetime_extension","to_key_id_extension","as_ratchet_tree_extension","new","create_initial_group_context","serialized","group_id","epoch","new","with_validate_add","with_validate_remove","with_auto_save","new","padding_size","callbacks","aad","sender","added_member","aad","removal","aad","updated_member","aad","psk_id","aad","psk_id","aad","sender","message","error","new","new_from_welcome","add_members","remove_members","propose_add_member","propose_remove_member","leave_group","members","process_message","create_message","process_pending_proposals","export_secret","authentication_secret","get_resumption_secret","configuration","set_configuration","aad","set_aad","ciphersuite","is_active","credential","group_id","self_update","propose_self_update","pending_proposals","load","save","export_ratchet_tree","export_path_secrets","export_group_context","tree_hash","print_tree","group_id","epoch","is_handshake_message","new","new_from_welcome","create_add_proposal","create_update_proposal","create_remove_proposal","create_presharedkey_proposal","create_commit","apply_commit","create_application_message","encrypt","decrypt","verify_signature","verify_membership_tag","export_secret","authentication_secret","load","save","tree","ciphersuite","context","group_id","extensions","export_public_group_state","use_ratchet_tree_extension","add_extension","verify","hash","key_id","extensions","credential","ciphersuite_name","from_key_package_and_leaf_secret","add_extension","new","new_with_version","new_with_keypair","key_package","unsigned","leaf_secret","new","psk_id","new","to_presharedkey_id","secret","psk_group_id","psk_epoch","psk_group_id","psk_epoch","new","psktype","psk","psk_nonce","psks","new","secret","hash","verify_parent_hash","verify_parent_hashes"],"q":["openmls","openmls::error","","openmls","openmls::test_util","","","","","openmls","openmls::ciphersuite","openmls::ciphersuite::signable","","","","","","","","","","openmls::ciphersuite","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls","openmls::config","","openmls::config::errors","","","","","","","openmls::config","","","","","","","","","","","","openmls","openmls::framing","openmls::framing::ciphertext","","","","","","","","openmls::framing","","openmls::framing::errors","","","","","","","","","","","","","","","","","","","","","openmls::framing","openmls::framing::plaintext","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::framing","openmls::framing::sender","","","","","","","openmls","openmls::group","openmls::group::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::group","openmls::group::tests","openmls::group::tests::kat_messages","","","","","","","","","","","","","","","","","","","","","openmls::group::tests","openmls::group::tests::kat_transcripts","","","","","","","","","","openmls::group","openmls::group::callbacks","","","","openmls::group","openmls::group::config","","","","","openmls::group","openmls::group::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::group","openmls::group::events","","","","","","","","","","","","","","","","","","","","openmls::group","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls","openmls::key_store","openmls::key_store::errors","","","","","openmls::key_store","","","","","","openmls","openmls::messages","openmls::messages::errors","","","","","","","openmls::messages","","","","","","","","","","","","openmls","openmls::schedule","","openmls::schedule::errors","","","","","","","","","","","","","","","","","","","","","","","openmls::schedule","openmls::schedule::kat_key_schedule","","","","openmls::schedule","","","","","","","openmls","openmls::tree","openmls::tree::errors","","","","","","","","","","","","","openmls::tree","openmls::tree::index","","","","","","","","openmls::tree","openmls::tree::node","","","","","","","","","","","","","","","","","","","","openmls::tree","openmls::tree::tests","openmls::tree::tests::kat_encryption","","","","","","","","","","","","","","","","","openmls::tree::tests","openmls::tree::tests::kat_tree_kem","","","","","","","","","","","","","","","","","","","","","","","","openmls::tree::tests","openmls::tree::tests::kat_treemath","","","","","","","","","","openmls::tree","","","","","","","","","","","","","","","","","","","","","","openmls","openmls::prelude","openmls::prelude::errors","","","","","","","","","","","","","","","","","","","","","","","","","openmls::prelude","openmls::prelude::errors","","","","","","","","","","","","","","","openmls::preludeopenmls::error","","","","","","","","","","","","","","","","","","","","","","openmls::ciphersuite","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::config::errors","","","","","","","","","","","openmls::config","","","","","","","","","","","","","","","","","","","","","","","openmls::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::prelude::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::framing::ciphertext","","","","","","","","","","openmls::framing::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::framing::plaintext","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::framing::sender","","","","","","","","","","","","","","","","","","","","","","openmls::group::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::group::callbacks","","","","","","","","","","openmls::group::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::group::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::group::events","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::group","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::group::tests::kat_messages","","","","","","","","","","","","","","","","","","","","","","openmls::group::tests::kat_transcripts","","","","","","","","","","","","","","","","","","","","","","openmls::group","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::prelude::errors","","","","","","","","","","","openmls::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::key_store::errors","","","","","","","","","","","openmls::key_store","","","","","","","","","","","","","","","","openmls::messages::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::messages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::schedule::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::schedule","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::schedule::kat_key_schedule","","","","","","","","","","","openmls::schedule","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::tree::errors","","","","","","","","","","","","","","","","","","","","","","openmls::tree","","","","","","","","","","","","","","","","openmls::tree::index","","","","","","","","","","","","","","","","","","","","","","openmls::tree::node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::tree::tests::kat_encryption","","","","","","","","","","","","","","","","","","","","","","openmls::tree::tests::kat_tree_kem","","","","","","","","","","","","","","","","","","","","","","openmls::tree::tests::kat_treemath","","","","","","","","","","","","","","","","","","","","","","openmls::tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::ciphersuite","openmls::prelude","","openmls::framing::plaintext","openmls::prelude","","openmls::framing::plaintext","","openmls::prelude","","openmls::messages","","openmls::ciphersuite","","","","","","","","","","","","","openmls::config","","openmls::prelude","","","","","","","","","","","","","","openmls::framing::plaintext","","openmls::framing::ciphertext","","openmls::framing::plaintext","","","","","","openmls::framing::sender","","","","openmls::group","","","","","openmls::prelude","","openmls::messages","","","","","","","","","","openmls::prelude","","","","","","","","","","openmls::messages","","openmls::prelude","","","","","","","","openmls::schedule","","","","openmls::tree::node","","","","","","openmls::tree","","","","openmls::tree::index","","openmls::prelude","","","","","","","","","","","","","","","","openmls::error","","","","openmls::ciphersuite","","openmls::prelude","","","","openmls::prelude::errors","","","","","","","","","openmls::framing::errors","","","","","","","openmls::framing::plaintext","openmls::group::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::group","","openmls::prelude::errors","","","","openmls::prelude","","openmls::key_store::errors","","openmls::messages::errors","openmls::prelude","openmls::messages","openmls::schedule::errors","openmls::tree::errors","openmls::tree::index","","","","","openmls::error","","openmls::ciphersuite","","","","","","","","","","","openmls::prelude","openmls::config::errors","openmls::config","","openmls::prelude","","","","","","","openmls::prelude::errors","","","","","","","openmls::prelude","","","","","openmls::framing::ciphertext","openmls::framing::errors","","","openmls::framing::plaintext","","","","openmls::framing::sender","","openmls::group::errors","","","","","","openmls::group::callbacks","openmls::group::config","","","openmls::group::errors","","","","","openmls::group::events","","","","","","","","","openmls::group","openmls::group::tests::kat_messages","","openmls::group::tests::kat_transcripts","","openmls::group","","","","openmls::prelude::errors","openmls::prelude","","openmls::key_store::errors","openmls::messages::errors","","","openmls::prelude","","","","","openmls::messages","","","","","openmls::schedule::errors","","","","openmls::prelude","","","","","openmls::schedule","openmls::schedule::kat_key_schedule","openmls::schedule","openmls::tree::errors","","openmls::tree::index","","openmls::tree::node","","","openmls::tree::tests::kat_encryption","","openmls::tree::tests::kat_tree_kem","","openmls::tree::tests::kat_treemath","","openmls::tree","","openmls::ciphersuite","openmls::config","openmls::prelude","","","","","openmls::group::callbacks","openmls::group::config","openmls::group::tests::kat_messages","openmls::group::tests::kat_transcripts","openmls::group","openmls::key_store","openmls::schedule::kat_key_schedule","openmls::tree::index","","openmls::config","openmls::prelude","","openmls::tree::index","","openmls::error","","","","openmls::ciphersuite","","","","","","","","","","","","openmls::prelude","openmls::config::errors","openmls::config","","","openmls::prelude","","","","","","","","","","","","openmls::prelude::errors","","","","","","","","openmls::prelude","","","","","","","","","","openmls::framing::ciphertext","","openmls::framing::errors","","","","","","openmls::framing::plaintext","","","","","","","openmls::framing::sender","","","openmls::group::errors","","","","","","","","","","openmls::group::callbacks","openmls::group::config","","","","","openmls::group::errors","","","","","","","openmls::group::events","","","","","","","","","","","","","","","","","","openmls::group","","openmls::group::tests::kat_messages","openmls::group::tests::kat_transcripts","openmls::group","","","","","","openmls::prelude::errors","","openmls::prelude","","","openmls::key_store::errors","","openmls::messages::errors","","","","openmls::prelude","","","","","","","","","","openmls::messages","","","","","","","","","","","","openmls::schedule::errors","","","","","openmls::prelude","","","","","","","","","openmls::schedule","","openmls::tree::errors","","","openmls::tree::index","","","","openmls::tree::node","","","","","openmls::tree::tests::kat_encryption","openmls::tree::tests::kat_tree_kem","openmls::tree::tests::kat_treemath","openmls::tree","","","","openmls::config","openmls::prelude","","openmls::tree::index","","openmls::key_store","openmls::error","","openmls::ciphersuite","","","","","","","","","","","","openmls::prelude","","","openmls::config::errors","openmls::config","","openmls::prelude","","","","","","","","openmls::prelude::errors","","","","","","","openmls::prelude","","","","","openmls::framing::ciphertext","openmls::framing::errors","","","openmls::framing::plaintext","","","","","openmls::framing::sender","","openmls::group::errors","","","","","","openmls::group::callbacks","openmls::group::config","","","openmls::group::errors","","","","","openmls::group::events","","","","","","","","","openmls::group","","","openmls::group::tests::kat_messages","","openmls::group::tests::kat_transcripts","","openmls::group","","","","openmls::prelude::errors","openmls::prelude","","","openmls::key_store::errors","openmls::key_store","openmls::messages::errors","","","openmls::prelude","","","","","openmls::messages","","","","","","openmls::schedule::errors","","","","openmls::prelude","","","","","openmls::schedule","openmls::schedule::kat_key_schedule","openmls::schedule","","","openmls::tree::errors","","openmls::tree::index","","openmls::tree::node","","","openmls::tree::tests::kat_encryption","","openmls::tree::tests::kat_tree_kem","","openmls::tree::tests::kat_treemath","","openmls::tree","","","openmls::error","","openmls::ciphersuite","","openmls::prelude","openmls::config::errors","openmls::config","openmls::prelude","openmls::prelude::errors","","","","","","","openmls::framing::errors","","","openmls::group::errors","","","","","","","","","","","openmls::group::tests::kat_messages","openmls::group::tests::kat_transcripts","openmls::prelude::errors","openmls::key_store::errors","openmls::messages::errors","","","openmls::schedule::errors","","","","openmls::tree::errors","","openmls::tree::tests::kat_encryption","openmls::tree::tests::kat_tree_kem","openmls::tree::tests::kat_treemath","openmls::ciphersuite","","","openmls::prelude","","openmls::group","openmls::tree::index","","openmls::ciphersuite","","openmls::config","openmls::prelude","","openmls::framing::plaintext","openmls::framing::sender","openmls::prelude","openmls::tree::index","openmls::tree::node","openmls::prelude","openmls::config::errors","openmls::prelude","openmls::prelude::errors","","","","","","","openmls::framing::errors","","","openmls::group::errors","","","","","","","","","","","openmls::group::tests::kat_messages","openmls::group::tests::kat_transcripts","openmls::prelude::errors","openmls::key_store::errors","openmls::messages::errors","","","openmls::schedule::errors","","","","openmls::tree::errors","","openmls::tree::tests::kat_encryption","openmls::tree::tests::kat_tree_kem","openmls::tree::tests::kat_treemath","openmls::ciphersuite","","","","","","","openmls::config","","openmls::prelude","","","","","","","","","","","openmls::framing::plaintext","","","","openmls::framing::sender","","openmls::group::config","","","openmls::group","openmls::group::tests::kat_messages","openmls::group::tests::kat_transcripts","openmls::group","","","openmls::prelude","","","","","","","","openmls::messages","","","openmls::prelude","","","","","openmls::schedule","openmls::schedule::kat_key_schedule","openmls::schedule","","","openmls::tree::index","","openmls::tree::node","","","openmls::tree::tests::kat_encryption","openmls::tree::tests::kat_tree_kem","openmls::tree::tests::kat_treemath","openmls::tree","","","openmls::ciphersuite","","","","","","","openmls::config","","openmls::prelude","","","","","","","","","","","","","","","openmls::framing::plaintext","","","","openmls::framing::sender","","openmls::group::config","","","openmls::group","","openmls::group::tests::kat_messages","openmls::group::tests::kat_transcripts","openmls::group","","","openmls::prelude","","","","","","","","openmls::messages","","","openmls::prelude","","","","","openmls::schedule","openmls::schedule::kat_key_schedule","openmls::schedule","","","openmls::tree::index","","openmls::tree::node","","","openmls::tree::tests::kat_encryption","openmls::tree::tests::kat_tree_kem","openmls::tree::tests::kat_treemath","openmls::tree","","","","","openmls::ciphersuite","openmls::prelude","openmls::tree::node","openmls::tree","","openmls::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::group","","","","","openmls::group::callbacks","","","","openmls::group::config","","","openmls::group::events","","","","","","","","","","","","","","","openmls::group","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::prelude","","","","","","","","","","","","","","","","","","","","","","","","openmls::schedule","","","","","","","openmls::tree","",""],"d":["OpenMLS Errors","A wrapper struct for an error string. This can be used …","A wrapper struct for an arbitrary error payload as byte …","Test utilities","","","Convert <code>bytes</code> to a hex string.","Convert a hex string to a byte vector.","Convert a hex string to a byte vector. If the input is …","Ciphersuites for MLS","","This trait must be implemented by all structs that …","Build a signed struct version from the payload struct.","The <code>Signable</code> trait is implemented by all struct that are …","","Return the unsigned, serialized payload that should be …","Sign the payload with the given <code>id</code>.","The verifiable trait must be implemented by any struct …","Return the unsigned, serialized payload that should be …","A reference to the signature to be verified.","Verifies the payload against the given <code>credential</code> and …","","","","","","","","SignatureScheme according to IANA TLS parameters","ECDSA_SECP256R1_SHA256","ECDSA_SECP521R1_SHA512","ED25519","ED448","7.7. Update Paths","A struct to contain secrets. This is to provide better …","Returns the inner bytes of a secret","","","Samples a fresh reuse guard uniformly at random.","","","","","","","Create a new ciphersuite from the given <code>name</code>.","Get the signature scheme of this ciphersuite.","Get the name of this ciphersuite.","Create an <code>AeadNonce</code> from a <code>Secret</code>. TODO: This function …","Sign the <code>payload</code> byte slice with this signature key. …","Verify a <code>Signature</code> on the <code>payload</code> byte slice with the key …","Get the private and public key objects","Create a new signature public key from raw key bytes.","Verify a <code>Signature</code> on the <code>payload</code> byte slice with the key …","Sign the <code>payload</code> byte slice with this signature key. …","This config contains all structs, enums and functions to …","","Config errors","","Invalid configuration.","MLS version is not supported by this configuration.","Ciphersuite is not supported by this configuration.","Signature scheme is not supported by this configuration.","Operation on incompatible MLS versions.","Operation on incompatible cipher suites.","OpenMLS Configuration","Get a list of the supported extension types.","Get a list of the supported cipher suites.","Get a list of the supported cipher suites names.","Get a list of the supported protocol versions.","Get the ciphersuite of the given name.","Get the default <code>KeyPackage</code> lifetime (in seconds).","Get the margin in which <code>KeyPackage</code> lifetimes are already …","Protocol Version","","","","","","<code>MlsCiphertext</code> is the framing struct for an encrypted …","","","","","","","Returns <code>true</code> if this is a handshake message and <code>false</code> …","","Framing errors.","","Codec error","See <code>CredentialError</code> for details.","See <code>VerificationError</code> for details.","The MlsPlaintext message is not an application message.","Sender is not part of the group","The MlsPlaintext signature is invalid","The MlsPlaintext membership tag is invalid","","MlsPlaintext error","SecretTree error","Codec error","The MlsCiphertext has an invalid content type.","Couldn’t find a ratcheting secret for the given sender …","An error occurred while encrypting.","An error occurred while decrypting.","","Codec error","Credential error","The MlsPlaintext membership tag is missing","The MlsPlaintext membership tag is invalid","","<code>MLSPlaintext</code> is a framing structure for MLS messages. It …","This constructor builds an <code>MlsPlaintext</code> containing a …","This constructor builds an <code>MlsPlaintext</code> containing an …","Returns a reference to the <code>content</code> field.","Get the sender leaf index of this message.","Sign this <code>MlsPlaintext</code>. This populates the <code>signature</code> …","Sign this <code>MlsPlaintext</code> and add a membership tag. This …","Adds a membership tag to this <code>MlsPlaintext</code>. The …","Verify the signature of an <code>MlsPlaintext</code> sent from an …","Verify the membership tag of an <code>MlsPlaintext</code> sent from …","Verify the signature and the membership tag of an …","Tries to extract an application messages from an …","Returns <code>true</code> if this is a handshake message and <code>false</code> …","Get the group ID.","Get the group ID.","","","","","","","","","Wrapper around a <code>Mac</code> used for type safety.","","","Section  9. Message Framing","","","","","","","","Group APIs for MLS","MLS Group errors","","See <code>MlsCiphertextError</code> for details.","See <code>MlsPlaintextError</code> for details.","See <code>WelcomeError</code> for details.","See <code>ApplyCommitError</code> for details.","See <code>CreateCommitError</code> for details.","See <code>ConfigError</code> for details.","See <code>ExporterError</code> for details.","See <code>ProposalQueueError</code> for details.","Codec error occurred.","An error occurred in the key schedule.","An error occurred during a tree math operation.","A PSK error occured.","See <code>CredentialError</code> for details.","See <code>TreeError</code> for details.","Missing init secret when creating commit.","","Invalid ratchet tree in Welcome message.","The parent hash verification failed.","Unable to decrypt the EncryptedGroupSecrets.","Codec error occurred.","An error occurred in the key schedule.","A PSK error occured.","Ciphersuites in the Welcome message and the corresponding …","No joiner secret found in the Welcome message.","No ratchet tree available to build initial tree after …","The computed tree hash does not match the one in the …","The computed confirmation tag does not match the expected …","The signature on the GroupInfo is not valid.","Unable to decrypt the GroupInfo.","Found a duplicate ratchet tree extension in the Welcome …","The Welcome message uses an unsupported MLS version.","The sender key package is missing.","An unknown error occurred.","","MlsPlaintext signature is invalid.","A matching EncryptedPathSecret failed to decrypt.","Codec error occurred.","An error occurred in the key schedule.","A PSK error occured.","Couldn’t apply Commit. The epoch of the group context …","apply_commit_internal was called with an MlsPlaintext …","Tried to apply a commit to a group we are not a part of.","Unable to verify the key package signature.","Parent hash extension is missing.","Parent hash values don’t match.","Unable to determine commit path.","Confirmation Tag is missing.","Confirmation tag is invalid.","No key package provided to apply own commit.","The proposal queue is missing a proposal for the commit.","Missing own key to apply proposal.","Missing init secret to apply proposal.","","The Commit tried to remove self from the group. This is …","Couldn’t create the commit because there’s no key to …","","The requested key length is not supported (too large).","","An error occured when concatenating the PSKs.","A PSK was needed, but no PSK fetcher function was …","No PSK was found for PSK ID.","Unit tests for the MLS group","Known Answer Tests for the encoding and decoding of …","","","","","Lifetime encodings don’t match.","RatchetTree encodings don’t match.","Welcome encodings don’t match.","PublicGroupState encodings don’t match.","AddProposal encodings don’t match.","MlsCiphertext encodings don’t match.","MlsPlaintextCommit encodings don’t match.","MlsPlaintextProposal encodings don’t match.","MlsPlaintextApplication encodings don’t match.","Commit encodings don’t match.","PreSharedKeyProposal encodings don’t match.","RemoveProposal encodings don’t match.","UpdateProposal encodings don’t match.","GroupSecrets encodings don’t match.","GroupInfo encodings don’t match.","KeyPackage encodings don’t match.","Capabilities encodings don’t match.","Known Answer Tests for the transcript hashes","","","","","","Membership tag could not be verified.","The group context does not match","The computed confirmation tag doesn’t match the one in …","The computed transcript hash doesn’t match the one in …","The computed interim transcript hash doesn’t match the …","","Collection of callback functions that are passed to a …","","","","","Defines whether handshake messages (Proposals & Commits) …","","","Specifies the configuration parameters for a managed group","Specifies in which intervals the own leaf node should be …","MLS Managed Group errors","","An internal library error occurred. Additional detail is …","See <code>CodecError</code> for details","See <code>ConfigError</code> for details","See <code>GroupError</code> for details","See <code>CreateCommitError</code> for details","See <code>UseAfterEviction</code> for details","See <code>PendingProposalsError</code> for details","See <code>ExporterError</code> for details","Empty input. Additional detail is provided.","See <code>KeyStoreError</code> for details","The message could not be processed.","See <code>CredentialError</code> for details","Couldn’t find a <code>CredentialBundle</code> in the <code>KeyStore</code> that …","Couldn’t find a <code>KeyPackageBundle</code> in the <code>KeyStore</code> that …","Tried to access a poisoned <code>CredentialBundle</code>. See …","","An empty list of KeyPackages was provided.","An empty list of indexes was provided.","","Tried to use a group after being evicted from it.","","Can’t create message because a pending proposal exists.","","An invalid ciphertext was provided. The error returns the …","See <code>ApplyCommitError</code> for details","See <code>GroupError</code> for details","A Proposal with an invalid membership tag was received.","The given proposal is invalid.","A commit contained an invalid proposal.","","Group event that occured while processing messages in …","","","","","","","","Event that occurs when member <code>sender</code> adds member …","Event that occurs when a member leaves/is removed from …","Event that occurs when a member updates its leaf. …","Event that occurs when  a PSK is received. <code>psk_id</code> …","Event that occurs when a <code>ReInitProposal</code> is received. …","Event that occurs when an application message is received.…","Event that occurs when an error occurred while processing …","This enum lists the 4 different variants of a removal, …","We previously issued a RemoveProposal for ourselves and …","Another member issued a RemoveProposal for itself that …","Another member issued a RemoveProposal for ourselves that …","Member A issued a RemoveProposal for member B that was …","Collection of callback functions that are passed to a …","","","","Defines whether handshake messages (Proposals & Commits) …","","","Specifies the configuration parameters for a managed group","Specifies in which intervals the own leaf node should be …","","An empty list of KeyPackages was provided.","An empty list of indexes was provided.","","An invalid ciphertext was provided. The error returns the …","See <code>ApplyCommitError</code> for details","See <code>GroupError</code> for details","A Proposal with an invalid membership tag was received.","The given proposal is invalid.","A commit contained an invalid proposal.","","An internal library error occurred. Additional detail is …","See <code>CodecError</code> for details","See <code>ConfigError</code> for details","See <code>GroupError</code> for details","See <code>CreateCommitError</code> for details","See <code>UseAfterEviction</code> for details","See <code>PendingProposalsError</code> for details","See <code>ExporterError</code> for details","Empty input. Additional detail is provided.","See <code>KeyStoreError</code> for details","The message could not be processed.","See <code>CredentialError</code> for details","Couldn’t find a <code>CredentialBundle</code> in the <code>KeyStore</code> that …","Couldn’t find a <code>KeyPackageBundle</code> in the <code>KeyStore</code> that …","Tried to access a poisoned <code>CredentialBundle</code>. See …","","Can’t create message because a pending proposal exists.","","Tried to use a group after being evicted from it.","Group event that occured while processing messages in …","","","","","","","","Event that occurs when member <code>sender</code> adds member …","Event that occurs when a member leaves/is removed from …","Event that occurs when a member updates its leaf. …","Event that occurs when  a PSK is received. <code>psk_id</code> …","Event that occurs when a <code>ReInitProposal</code> is received. …","Event that occurs when an application message is received.…","Event that occurs when an error occurred while processing …","This enum lists the 4 different variants of a removal, …","We previously issued a RemoveProposal for ourselves and …","Another member issued a RemoveProposal for itself that …","Another member issued a RemoveProposal for ourselves that …","Member A issued a RemoveProposal for member B that was …","A <code>ManagedGroup</code> represents an [MlsGroup] with an easier, …","Unified message type","An OpenMLS <code>MlsPlaintext</code>.","An OpenMLS <code>MlsCiphertext</code>.","","","This callback function is used in several places in …","","","","","","","","","","Configuration for an MLS group.","Flag whether to send the ratchet tree along with the …","","","Get the padding block size used in this config.","A storage solution for cryptographic key material used in …","","","Error while creating <code>KeyPackageBundle</code>. See <code>KeyPackageError</code>…","Error while creating <code>CredentialBundle</code>. See <code>CredentialError</code>…","No <code>CredentialBundle</code> found for the given <code>Credential</code>.","No <code>KeyPackageBundle</code> found for the given <code>KeyPackage</code> hash.","The <code>KeyStore</code> contains <code>CredentialBundle</code>s and …","This guard struct for a <code>CredentialBundle</code> implements <code>Deref</code>…","Retrieve a <code>KeyPackageBundle</code> from the key store given the …","Generate a fresh <code>KeyPackageBundle</code> with the given …","Generate a fresh <code>CredentialBundle</code> with the given …","This function allows us to get hold of the next …","","","","The given MLS Plaintext was not a Proposal.","Not all proposals in the Commit were found locally.","","Invalid value for ProposalOrRefType was found.","","API misuse. Only proposals can end up in the proposal …","Welcome Messages","EncryptedGroupSecrets","","","Get a reference to the encrypted group secrets in this …","","Returns <code>true</code> if the commit contains an update path. <code>false</code> …","","Confirmation tag field of MlsPlaintext. For type saftey …","PathSecret","","PublicGroupState","This module represents the key schedule as introduced in …","","","","Expected to be in initial state.","Expected to be in epoch state.","Expected to be in a state where the context is added.","","The requested operation is not valid on the key schedule …","","More than 2^16 PSKS were provided.","The IDs and secrets vectors have different lengths.","","The computed joiner secret doesn’t match the one in the …","The computed welcome secret doesn’t match the one in …","The computed init secret doesn’t match the one in the …","The group context doesn’t match the one in the test …","The computed sender data secret doesn’t match the one …","The computed encryption secret doesn’t match the one in …","The computed exporter secret doesn’t match the one in …","The computed authentication secret doesn’t match the …","The computed external secret doesn’t match the one in …","The computed confirmation key doesn’t match the one in …","The computed membership key doesn’t match the one in …","The computed resumption secret doesn’t match the one in …","The computed external public key doesn’t match the one …","Known Answer Tests for the key schedule","","","","","A <code>PreSharedKeyID</code> is used to uniquely identify the PSKs …","<code>PreSharedKeys</code> is a vector of <code>PreSharedKeyID</code>s. struct { …","This contains the <code>psk-secret</code> calculated from the PSKs …","The confirmation key is used to calculate the …","Create a new confirmation tag.","The membership key is used to calculate the <code>MembershipTag</code>.","A secret used in cross-group operations.","","","","Error while decrypting <code>PathSecret</code>.","See <code>CredentialError</code> for details","Invalid arguments.","The computed update path is invalid.","The tree is not valid.","The node is not a parent node.","","The search for a valid child ended with a leaf node.","All checks failed: Neither child has the right parent …","The input node is not a parent node.","The node is not a parent node.","The parent node was blank.","","NodeIndex is an index to the nodes of a tree, both parent …","","","","","LeafIndex is an index to the leaves of a tree.","","","","Node type. Can be either <code>Leaf</code> or <code>Parent</code>.","","","Returns <code>true</code> if the node type is <code>Leaf</code> and <code>false</code> otherwise.","Returns <code>true</code> if the node type is <code>Parent</code> and <code>false</code> …","Ratchet tree node. A <code>Node</code> can either be a leaf node (in …","","Creates a new leaf node. It can either be blank or …","Creates a new blank parent node.","Returns the public HPKE key of either node type.","Blanks the node.","Returns <code>true</code> if the node is blank and <code>false</code> otherwise.","Returns the parent hash of a node. Returns <code>None</code> if the …","Get a reference to the key package in this node.","Content of a parent node.","Creates a new <code>ParentNode</code> from the provided values.","Returns the node’s HPKE public key","Sets the node’s parent hash","Returns the node’s unmerged leaves","Adds a leaf to the node’s unmerged leaves","Tree unit tests.","Known Answer Tests for encrypting to tree nodes","","","","","","","The test vector does not contain as many leaves as …","The computed sender data key doesn’t match the one in …","The computed sender data nonce doesn’t match the one in …","The number of generations in leaf sequence doesn’t …","The number of generations in leaf sequence doesn’t …","The computed application secret key doesn’t match the …","The computed application secret nonce doesn’t match the …","The decrypted application message doesn’t match the one …","The computed handshake secret key doesn’t match the one …","The computed handshake secret nonce doesn’t match the …","The decrypted handshake message doesn’t match the one …","TreeKEM test vectors","","","","","","","","","","","","","","","","","","Tree hash mismatch in the ‘before’ tree.","Tree hash mismatch in the ‘after’ tree.","Parent hash mismatch in the ‘before’ tree.","Parent hash mismatch in the ‘after’ tree.","Root secret mismatch in the ‘before’ tree.","Root secret mismatch in the ‘after’ tree.","Ratchet tree mismatch in the after the update.","Known Answer Tests for treemath","","","","","The computed tree size doesn’t match the one in the …","The computed root index doesn’t match the one in the …","A computed left child index doesn’t match the one in …","A computed right child index doesn’t match the one in …","A computed parent index doesn’t match the one in the …","A computed sibling index doesn’t match the one in the …","","","The ratchet tree.","All nodes in the tree. Note that these only hold public …","","Get a vector with all nodes in the tree, containing <code>None</code> …","Get a vector with a copy of all nodes in the tree, …","Returns the number of leaves in a tree","Get a reference to the own key package.","Applies a list of proposals from a Commit to the tree. …","This struct contain the return vallues of the …","","","","","This function creates a <code>HashSet</code> of node indexes of the …","7.7. Update Paths","","","7.7. Update Paths","","","Single place, re-exporting the most used public functions.…","Extension errors.","","Invalid extension type error.","Capabilities extension error. See …","Lifetime extension error. See <code>LifetimeExtensionError</code> for …","Key package ID extension error. See <code>KeyPackageIdError</code> for …","Parent hash extension error. See <code>ParentHashError</code> for …","Ratchet tree extension error. See <code>RatchetTreeError</code> for …","Error decoding or encoding an extension.","Configuration error. See <code>ConfigError</code> for details.","The extension is malformed. See <code>InvalidExtensionError</code> for …","","Invalid lifetime extensions.","Lifetime extension is expired.","","Invalid capabilities extensions.","Capabilities extension is missing a version field.","Capabilities contains only unsupported ciphersuites.","","Invalid key package ID extensions.","","Invalid parent hash extensions.","","Invalid ratchet tree extensions.","","The provided extension list contains duplicate extensions.","Key Package errors","","See <code>ExtensionError</code> for details.","See <code>ConfigError</code> for details.","See <code>CodecError</code> for details.","See <code>CredentialError</code> for details.","The requested ciphersuite is not supported.","An unknown configuration error occurred.","A mandatory extension is missing in the key package.","The lifetime extension of the key package is not valid.","The key package signature is not valid.","An unknown OpenMLS library error occurred.","Duplicate extensions are not allowed.","Creating a new key package requires at least one …","The list of ciphersuites is not consistent with the …","The ciphersuite does not match the signature scheme.","","Group event that occured while processing messages in …","","","","","","","","Defines whether handshake messages (Proposals & Commits) …","","","","An invalid ciphertext was provided. The error returns the …","See <code>ApplyCommitError</code> for details","See <code>GroupError</code> for details","A Proposal with an invalid membership tag was received.","The given proposal is invalid.","A commit contained an invalid proposal.","A <code>ManagedGroup</code> represents an [MlsGroup] with an easier, …","Collection of callback functions that are passed to a …","Specifies the configuration parameters for a managed group","","An internal library error occurred. Additional detail is …","See <code>CodecError</code> for details","See <code>ConfigError</code> for details","See <code>GroupError</code> for details","See <code>CreateCommitError</code> for details","See <code>UseAfterEviction</code> for details","See <code>PendingProposalsError</code> for details","See <code>ExporterError</code> for details","Empty input. Additional detail is provided.","See <code>KeyStoreError</code> for details","The message could not be processed.","See <code>CredentialError</code> for details","Couldn’t find a <code>CredentialBundle</code> in the <code>KeyStore</code> that …","Couldn’t find a <code>KeyPackageBundle</code> in the <code>KeyStore</code> that …","Tried to access a poisoned <code>CredentialBundle</code>. See …","Unified message type","An OpenMLS <code>MlsPlaintext</code>.","An OpenMLS <code>MlsCiphertext</code>.","This enum lists the 4 different variants of a removal, …","We previously issued a RemoveProposal for ourselves and …","Another member issued a RemoveProposal for itself that …","Another member issued a RemoveProposal for ourselves that …","Member A issued a RemoveProposal for member B that was …","Specifies in which intervals the own leaf node should be …","External PSK Bundle. This contains the secret part of the …","","Error encoding.","Error decoding.","Some other error occurred.","","","","","","","","","","","","","","","See <code>ConfigError</code> for details.","See <code>CryptoError</code> for details.","See <code>CodecError</code> for details.","Unsupported credential type.","Invalid signature.","Error while signing.","Enum for Credential Types. We only need this for …","","","Struct containing an X509 certificate chain, as per Spec.","This enum contains the different available credentials.","","","Struct containing MLS credential data, where the data …","","","","","This struct contains a credential and the corresponding …","","","Invalid extension type error.","Capabilities extension error. See …","Lifetime extension error. See <code>LifetimeExtensionError</code> for …","Key package ID extension error. See <code>KeyPackageIdError</code> for …","Parent hash extension error. See <code>ParentHashError</code> for …","Ratchet tree extension error. See <code>RatchetTreeError</code> for …","Error decoding or encoding an extension.","Configuration error. See <code>ConfigError</code> for details.","The extension is malformed. See <code>InvalidExtensionError</code> for …","","Invalid lifetime extensions.","Lifetime extension is expired.","","Invalid capabilities extensions.","Capabilities extension is missing a version field.","Capabilities contains only unsupported ciphersuites.","","Invalid key package ID extensions.","","Invalid parent hash extensions.","","Invalid ratchet tree extensions.","","The provided extension list contains duplicate extensions.","","The lifetime extension holds a not before and a not after …","","Extension types","","","","","","","Extension struct","Extension","Build a new extension from a byte slice.","Each extension has an extension type. This should be an …","Get the extension as <code>ExtensionStruct</code> for encoding.","Get a generic trait object for downcasting.","Get a reference to the <code>ParentHashExtension</code>. Returns an …","Get a reference to the <code>CapabilitiesExtension</code>. Returns an …","Get a reference to the <code>LifetimeExtension</code>. Returns an …","Get a reference to the <code>KeyIDExtension</code>. Returns an …","Get a reference to the <code>RatchetTreeExtension</code>. Returns an …","","","","See <code>ExtensionError</code> for details.","See <code>ConfigError</code> for details.","See <code>CodecError</code> for details.","See <code>CredentialError</code> for details.","The requested ciphersuite is not supported.","An unknown configuration error occurred.","A mandatory extension is missing in the key package.","The lifetime extension of the key package is not valid.","The key package signature is not valid.","An unknown OpenMLS library error occurred.","Duplicate extensions are not allowed.","Creating a new key package requires at least one …","The list of ciphersuites is not consistent with the …","The ciphersuite does not match the signature scheme.","The unsigned payload of a key package. Any modification …","","","","","","Preshared Key proposal 11.1.4 struct { PreSharedKeyID psk;…","","ReInit proposal 11.1.5 struct { opaque group_id<0..255>; …","","","","","","","","","Branch PSK","External PSK.","A <code>PreSharedKeyID</code> is used to uniquely identify the PSKs …","<code>PreSharedKeys</code> is a vector of <code>PreSharedKeyID</code>s. struct { …","PSK enum that can contain the different PSK types","","","","Type of PSK.","","","","ReInit PSK.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build a new CapabilitiesExtension from a byte slice. …","","","","Build a new KeyIDExtension from a byte slice.","","","","Build a new LifetimeExtension from a byte slice.","","","","Build a new RatchetTreeExtension from a byte sliceonvert an integer to the corresponding protocol version.","","Get the <code>ExtensionType</code> from a u16. Returns an error if the …erify a signature of a given payload against the public …","Get the identity of a given credential.","Get the signature scheme used by the credential.","Get the public key contained in the credential.","","Create a new <code>CredentialBundle</code> of the given credential …","","Create a new capabilities extension with the given …","Get a reference to the list of versions in this extension.","Get a reference to the list of cipher suites in this …","Get a reference to the list of supported extensions.","Create a new key identifier extension from a byte slice.","Get the value of the key id as byte slice.","Create a new lifetime extensions with lifetime <code>t</code> (in …","Build a new extension from a vector of <code>Node</code>s.","Get the data of this extension struct.","Get a reference to the <code>ParentHashExtension</code>. Returns an …","Get a reference to the <code>CapabilitiesExtension</code>. Returns an …","Get a reference to the <code>LifetimeExtension</code>. Returns an …","Get a reference to the <code>KeyIDExtension</code>. Returns an …","Get a reference to the <code>RatchetTreeExtension</code>. Returns an …","Create a new group context","Create the <code>GroupContext</code> needed upon creation of a new …","Return the serialized group context","Return the group ID","Return the epoch","","Validator function for AddProposals","Validator function for RemoveProposals","Auto-save callback","","","","Get a reference to the event’s aad.","Get a reference to the event’s sender.","Get a reference to the event’s added member credential.","Get a reference to the event’s aad.","Get a reference to the event’s removal.","Get a reference to the event’s aad.","Get a reference to the event’s updated member.","Get a reference to the event’s aad.","Get a reference to the event’s psk id.","Get a reference to the event’s aad.","Get a reference to the event’s psk id.","Get a reference to the event’s aad.","Get a reference to the event’s sender.","Get a reference to the event’s message.","Get a reference to the event’s error.","Creates a new group from scratch with only the creator as …","Creates a new group from a <code>Welcome</code> message","Adds members to the group","Removes members from the group","Creates proposals to add members to the group","Creates proposals to remove members from the group","Leave the group","Gets the current list of members","Processes any incoming messages from the DS (MlsPlaintext …","Creates an application message. Returns …","Process pending proposals","Exports a secret from the current epoch","Returns the authentication secret","Returns a resumption secret for a given epoch. If no …","Gets the configuration","Sets the configuration","Gets the AAD used in the framing","Sets the AAD used in the framing","Returns the group’s ciphersuite","Returns whether the own client is still a member of the …","Returns own credential. If the group is inactive, it …","Get group ID","Updates the own leaf node","Creates a proposal to update the own leaf node","Returns a list of proposal","Loads the state from persisted state","Persists the state","Export the Ratchet Tree","","","","","Get the group ID as plain byte vector.","Get the epoch as plain u64.","Returns <code>true</code> if this is a handshake message and <code>false</code> …","","","","","","","","","","","Decrypt an MlsCiphertext into an MlsPlaintext","Verify the signature of an MlsPlaintext","Verify the membership tag an MlsPlaintext","Exporter","Returns the authentication secret","Loads the state from persisted state","Persists the state","Returns the ratchet tree","Get the ciphersuite implementation used in this group.","Get the group context","Get the group ID","Get the groups extensions. Right now this is limited to …","Export the <code>PublicGroupState</code>","Returns <code>true</code> if the group uses the ratchet tree extension …","Add (or replace) an extension to the KeyPackage.","Verify that this key package is valid:","Compute the hash of the encoding of this key package.","Get the ID of this key package as byte slice. Returns an …","Get a reference to the extensions of this key package.","Get a reference to the credential.","Get the <code>CiphersuiteName</code>.","Creates a new <code>KeyPackageBundlePayload</code> from a given …","Add (or replace) an extension to the KeyPackage.","Create a new <code>KeyPackageBundle</code> with a fresh <code>HpkeKeyPair</code>. …","Create a new <code>KeyPackageBundle</code> with","Create a new <code>KeyPackageBundle</code> for the given <code>ciphersuite</code>, …","Get a reference to the <code>KeyPackage</code>.","Get the unsigned payload version of this key package …","Get a reference to the <code>leaf_secret</code>.","Create a new <code>ExternalPsk</code> from a PSK ID","Return the PSK ID","Create a new bundle","Return the <code>PreSharedKeyID</code>","Return the secret","Return the <code>GroupId</code>","Return the <code>GroupEpoch</code>","Return the <code>GroupId</code>","Return the <code>GroupEpoch</code>","Create a new <code>PreSharedKeyID</code>","Return the type of the PSK","Return the PSK","Return the PSK nonce","Return the <code>PreSharedKeyID</code>s","Create a new <code>PskSecret</code> from PSK IDs and PSKs","Return the inner secret","","Verify the parent hash of a tree node. Returns <code>Ok(())</code> if …","Verify the parent hashes of the tree nodes. Returns <code>true</code> …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,1,0,2,2,2,0,3,3,3,0,4,4,4,4,4,4,0,5,5,5,5,0,0,6,0,0,7,0,0,0,0,0,0,8,8,8,9,10,10,10,11,11,12,0,0,0,0,13,13,13,13,13,13,0,14,14,14,14,14,14,14,0,15,15,15,0,0,0,16,16,16,16,16,16,16,0,0,0,17,17,17,17,17,17,17,0,18,18,18,18,18,18,18,0,19,19,19,19,0,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,21,21,21,0,22,22,22,0,0,23,0,0,24,24,24,0,25,25,0,0,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,29,29,0,30,0,31,31,31,0,0,0,0,0,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,33,0,0,0,34,34,34,34,34,0,0,0,0,0,0,0,35,35,0,0,0,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,37,37,0,38,0,39,0,40,40,40,40,40,40,0,0,41,41,41,41,41,41,41,0,0,0,0,0,0,0,0,42,42,42,42,0,0,0,0,0,35,35,0,0,0,37,37,0,40,40,40,40,40,40,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,39,0,38,0,41,41,41,41,41,41,41,0,0,0,0,0,0,0,0,42,42,42,42,0,0,43,43,0,0,0,0,44,44,44,44,0,45,45,0,0,46,46,46,46,0,0,0,47,47,47,47,0,0,48,48,48,48,0,0,0,49,49,0,50,0,51,0,0,52,52,53,0,54,54,0,0,55,0,0,0,0,0,56,56,56,0,57,0,58,58,0,59,59,59,59,59,59,59,59,59,59,59,59,59,0,0,60,0,0,0,0,0,0,61,0,0,0,0,0,62,62,62,62,62,62,0,63,63,63,63,63,0,0,64,64,64,64,0,65,65,0,0,66,66,66,66,0,67,67,67,67,67,67,67,67,0,68,68,68,68,68,0,0,0,69,69,0,0,0,70,70,70,70,70,70,70,70,70,70,70,0,0,71,71,71,71,71,71,71,71,71,71,71,71,71,71,0,0,72,72,72,72,72,72,72,0,0,0,0,0,73,73,73,73,73,73,0,0,0,74,74,74,74,74,74,74,0,75,75,75,75,75,0,76,76,0,77,77,0,0,0,78,78,78,78,78,78,78,78,78,0,79,79,0,80,80,80,0,81,0,82,0,83,0,84,0,0,85,85,85,85,85,85,85,85,85,85,85,85,85,85,0,0,41,41,41,41,41,41,41,0,35,35,0,40,40,40,40,40,40,0,0,0,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,43,43,0,42,42,42,42,0,0,0,86,86,86,0,87,87,87,87,0,0,88,88,88,88,0,0,0,89,89,89,89,89,89,0,90,90,0,0,91,91,0,0,92,92,92,0,0,0,78,78,78,78,78,78,78,78,78,0,79,79,0,80,80,80,0,81,0,82,0,83,0,84,0,0,0,0,93,93,93,93,93,93,0,0,94,94,94,94,94,94,94,94,94,0,95,0,85,85,85,85,85,85,85,85,85,85,85,85,85,85,0,0,0,0,0,96,0,97,0,98,98,98,98,0,99,0,100,0,0,0,0,0,101,101,101,0,102,102,102,0,0,103,103,103,103,103,103,103,103,103,103,103,104,104,104,104,104,104,104,104,104,104,104,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,105,105,105,105,105,105,105,105,105,105,105,6,6,6,6,6,6,6,6,6,6,6,106,106,106,106,106,106,106,106,7,7,7,7,7,7,7,7,7,7,9,9,9,9,9,9,9,9,9,9,107,107,107,107,107,107,107,107,107,107,107,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,8,8,8,8,8,8,8,8,8,8,8,8,86,86,86,86,86,86,86,86,86,86,86,87,87,87,87,87,87,87,87,108,108,108,108,108,108,108,108,13,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,89,89,89,89,89,89,89,89,89,89,89,90,90,90,90,90,90,90,90,90,90,90,109,109,109,109,109,109,109,109,109,109,109,91,91,91,91,91,91,91,91,91,91,91,110,110,110,110,110,110,110,110,110,110,110,92,92,92,92,92,92,92,92,92,92,92,111,111,111,111,111,111,111,111,112,112,112,112,112,112,112,112,112,112,112,78,78,78,78,78,78,78,78,78,78,78,79,79,79,79,79,79,79,79,79,79,79,80,80,80,80,80,80,80,80,80,80,80,81,81,81,81,81,81,81,81,81,81,81,82,82,82,82,82,82,82,82,82,82,82,83,83,83,83,83,83,83,83,83,83,83,84,84,84,84,84,84,84,84,84,84,84,113,113,113,113,113,113,113,113,113,113,113,114,114,114,114,114,114,114,114,114,114,114,115,115,115,115,115,115,115,115,115,115,115,93,93,93,93,93,93,93,93,93,93,93,116,116,116,116,116,116,116,116,116,116,116,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,117,117,117,117,117,117,117,117,117,117,117,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,31,118,118,118,118,118,118,118,118,118,118,35,35,35,35,35,35,35,35,35,35,35,119,119,119,119,119,119,119,119,119,119,119,120,120,120,120,120,120,120,120,120,120,120,36,36,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,41,121,121,121,121,121,121,121,121,121,121,122,122,122,122,122,122,122,122,122,122,123,123,123,123,123,123,123,123,123,123,124,124,124,124,124,124,124,124,124,124,125,125,125,125,125,125,125,125,125,125,126,126,126,126,126,126,126,126,126,126,127,127,127,127,127,127,127,127,127,127,42,42,42,42,42,42,42,42,42,42,128,128,128,128,128,128,128,128,128,43,43,43,43,43,43,43,43,43,43,129,129,129,129,129,129,129,129,129,130,130,130,130,130,130,130,130,130,130,130,32,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,34,44,44,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,45,45,131,131,131,131,131,131,131,131,131,131,131,46,46,46,46,46,46,46,46,46,46,85,85,85,85,85,85,85,85,85,85,85,132,132,132,132,132,132,132,132,132,132,132,133,133,133,133,133,133,133,133,133,133,133,134,134,134,134,134,134,134,134,135,135,135,135,135,135,135,135,135,47,47,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,136,136,136,136,136,136,136,136,49,49,49,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,50,50,50,51,51,51,51,51,51,51,51,51,51,51,96,96,96,96,96,96,96,96,96,96,96,100,100,100,100,100,100,100,100,100,100,100,99,99,99,99,99,99,99,99,99,99,99,97,97,97,97,97,97,97,97,97,97,97,98,98,98,98,98,98,98,98,98,98,98,53,53,53,53,53,53,53,53,53,53,52,52,52,52,52,52,52,52,52,52,54,54,54,54,54,54,54,54,54,54,54,137,137,137,137,137,137,137,137,137,137,137,55,55,55,55,55,55,55,55,55,55,55,138,138,138,138,138,138,138,138,56,56,56,56,56,56,56,56,56,56,56,57,57,57,57,57,57,57,57,57,57,57,58,58,58,58,58,58,58,58,58,58,58,59,59,59,59,59,59,59,59,59,59,59,102,102,102,102,102,102,102,102,102,102,102,139,139,139,139,139,139,139,139,139,139,139,140,140,140,140,140,140,140,140,141,141,141,141,141,141,141,141,141,141,141,142,142,142,142,142,142,142,142,142,142,142,101,101,101,101,101,101,101,101,101,101,101,143,143,143,143,143,143,143,143,143,143,143,144,144,144,144,144,144,144,144,145,145,145,145,145,145,145,145,60,60,60,60,60,60,60,60,60,60,60,61,61,61,61,61,61,61,61,61,146,146,146,146,146,146,146,146,146,147,147,147,147,147,147,147,147,147,147,147,62,62,62,62,62,62,62,62,62,62,62,63,63,63,63,63,63,63,63,63,63,63,148,148,148,148,148,148,148,148,149,149,149,149,149,149,149,149,64,64,64,64,64,64,64,64,64,64,64,65,65,65,65,65,65,65,65,65,65,65,66,66,66,66,66,66,66,66,66,66,66,67,67,67,67,67,67,67,67,67,67,67,68,68,68,68,68,68,68,68,68,68,68,69,69,69,69,69,69,69,69,69,69,69,70,70,70,70,70,70,70,70,70,70,70,71,71,71,71,71,71,71,71,71,71,71,72,72,72,72,72,72,72,72,72,72,72,150,150,150,150,150,150,150,150,150,150,150,73,73,73,73,73,73,73,73,73,73,73,74,74,74,74,74,74,74,74,74,75,75,75,75,75,75,75,75,76,76,76,76,76,76,76,76,76,76,76,77,77,77,77,77,77,77,77,77,77,77,107,133,135,23,132,134,23,23,133,133,138,138,4,4,5,5,11,107,107,105,105,7,7,6,6,15,15,90,90,110,110,92,92,112,112,114,114,93,93,116,116,20,20,16,16,21,21,22,117,117,23,24,24,25,25,44,44,45,45,131,133,133,54,54,137,137,55,55,52,52,53,53,96,96,100,100,99,99,97,97,98,98,138,138,102,102,139,139,141,141,142,142,143,143,144,144,66,66,67,67,68,68,76,76,77,77,65,65,112,112,112,112,113,113,113,113,114,114,114,114,115,115,115,115,103,103,104,104,5,6,86,89,89,110,78,78,78,78,78,78,78,78,78,17,17,17,18,18,19,19,21,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,28,28,28,28,28,31,36,36,36,36,36,36,36,36,36,36,36,36,40,40,40,43,43,85,85,85,85,132,134,47,47,49,86,55,57,62,64,64,64,65,65,103,104,4,5,105,6,7,9,107,12,11,10,8,86,13,14,15,89,90,109,91,110,92,112,78,79,80,81,82,83,84,113,114,115,93,116,16,17,18,19,20,21,22,117,24,25,26,27,28,29,30,31,118,35,119,120,36,37,38,39,40,41,121,122,123,124,125,126,127,42,43,130,32,33,34,44,45,131,46,85,132,133,47,49,50,51,96,100,99,97,98,53,52,54,137,55,56,57,58,59,102,139,141,142,101,143,60,147,62,63,64,65,66,67,68,69,70,71,72,150,73,76,77,6,15,112,113,114,115,93,118,120,130,33,46,48,60,64,65,15,93,94,64,65,103,103,104,104,4,5,105,105,6,9,9,107,107,11,11,8,86,13,14,14,15,89,89,90,109,109,91,91,110,110,92,112,112,78,78,79,80,81,82,83,84,113,113,114,114,115,115,93,116,116,94,16,16,17,17,18,18,19,19,20,20,21,22,22,117,117,24,25,25,26,26,27,27,28,28,29,30,31,31,118,35,119,119,120,120,36,36,37,38,39,40,40,41,41,121,121,122,122,123,123,124,124,125,125,126,126,127,127,42,42,43,43,32,34,44,44,45,45,131,131,85,85,132,132,133,47,47,49,49,50,51,96,96,100,100,99,99,97,97,98,98,53,53,52,52,54,54,137,137,55,55,138,138,56,57,57,58,59,102,139,139,141,141,142,142,101,101,143,143,62,62,63,64,64,65,65,66,67,67,68,68,70,72,73,76,76,77,77,15,93,94,64,65,136,103,104,4,5,105,6,106,7,9,107,12,11,10,8,86,87,108,13,14,15,89,90,109,91,110,92,111,112,78,79,80,81,82,83,84,113,114,115,93,116,16,17,18,19,20,21,22,117,23,24,25,26,27,28,29,30,31,118,35,119,120,36,37,38,39,40,41,121,122,123,124,125,126,127,42,128,43,129,130,32,33,34,44,45,131,46,85,132,133,135,47,48,49,50,51,96,100,99,97,98,53,52,54,137,55,138,56,57,58,59,102,139,141,142,101,143,60,61,146,147,62,63,64,65,66,67,68,69,70,71,72,150,73,74,76,77,103,104,4,8,86,13,15,89,78,79,80,81,82,83,84,17,18,19,26,27,28,29,30,31,36,37,38,39,40,32,34,85,47,49,50,51,56,57,58,59,62,63,70,72,73,4,5,11,93,116,44,64,65,4,5,15,90,93,21,24,102,65,66,86,13,89,78,79,80,81,82,83,84,17,18,19,26,27,28,29,30,31,36,37,38,39,40,32,34,85,47,49,50,51,56,57,58,59,62,63,70,72,73,8,4,5,105,6,107,11,14,15,90,109,91,110,92,112,113,114,115,93,116,20,21,22,117,24,25,35,119,120,129,130,33,44,45,131,132,133,135,96,100,99,97,98,54,137,55,102,139,141,142,101,143,60,61,146,147,64,65,66,67,68,69,71,150,74,76,77,8,4,5,105,6,107,11,14,15,90,109,91,110,92,112,113,114,115,93,116,94,94,94,94,20,21,22,117,24,25,35,119,120,128,129,130,33,44,45,131,132,133,135,96,100,99,97,98,54,137,55,102,139,141,142,101,143,60,61,146,147,64,65,66,67,68,69,71,150,74,76,77,149,148,107,133,68,149,148,108,108,108,108,108,88,88,88,88,110,110,110,110,92,111,111,112,112,112,112,113,113,114,115,116,94,94,94,94,94,131,131,131,131,131,118,118,118,118,119,119,119,121,121,121,122,122,123,123,124,124,125,125,126,126,126,127,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,43,43,43,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,132,133,133,133,133,133,133,134,134,135,135,135,135,135,135,139,139,140,140,140,141,141,142,142,143,143,143,143,144,145,145,148,74,74],"f":[null,null,null,null,[[["str",15]]],[[["str",15]],["deserializeowned",8]],[[],["string",3]],[[["str",15]],[["vec",3],["u8",15]]],[[["string",3],["option",4]],[["vec",3],["u8",15]]],null,null,null,[[["signature",3]]],null,null,[[],[["vec",3],["result",4],["codecerror",4]]],[[["credentialbundle",3]],[["credentialerror",4],["result",4]]],null,[[],[["vec",3],["result",4],["codecerror",4]]],[[],["signature",3]],[[["credential",3]],[["credentialerror",4],["result",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,[[]],null,null,null,null,null,null,[[["ciphersuitename",4]],[["result",4],["configerror",4]]],[[],["signaturescheme",4]],[[],["ciphersuitename",4]],[[["secret",3]]],[[],[["result",4],["signatureerror",4],["signature",3]]],[[["signature",3]],[["result",4],["signatureerror",4]]],[[]],[[["vec",3],["signaturescheme",4],["u8",15]],[["signatureerror",4],["result",4]]],[[["signature",3]],[["result",4],["signatureerror",4]]],[[],[["result",4],["signatureerror",4],["signature",3]]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["ciphersuitename",4]],[["configerror",4],["result",4],["ciphersuite",3]]],[[],["u64",15]],[[],["u64",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["leafindex",3],["groupcontext",3],["credentialbundle",3],["membershipkey",3],["proposal",4]],[["result",4],["mlsplaintexterror",4]]],[[["leafindex",3],["groupcontext",3],["credentialbundle",3],["membershipkey",3]],[["result",4],["mlsplaintexterror",4]]],[[],["mlsplaintextcontenttype",4]],[[],["leafindex",3]],[[["credentialbundle",3]],[["mlsplaintexterror",4],["result",4]]],[[["credentialbundle",3]],[["mlsplaintexterror",4],["result",4]]],[[["membershipkey",3]],[["mlsplaintexterror",4],["result",4]]],[[["credential",3]],[["verificationerror",4],["result",4]]],[[["membershipkey",3],["ciphersuite",3]],[["mlsplaintexterror",4],["result",4]]],[[["membershipkey",3],["credential",3]],[["mlsplaintexterror",4],["result",4]]],[[],[["result",4],["mlsplaintexterror",4]]],[[],["bool",15]],[[],["groupid",3]],[[],["groupepoch",3]],null,null,null,null,null,null,null,null,null,null,[[["mlsplaintext",3],["option",4]]],null,null,null,null,null,null,[[],["bool",15]],[[],["leafindex",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ciphersuite",3]],["messagestestvector",3]],[[["messagestestvector",3]],[["result",4],["messagestestvectorerror",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ciphersuite",3]],["transcripttestvector",3]],[[["transcripttestvector",3]],[["result",4],["transcripttestvectorerror",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],[["vec",3],["u8",15]]],null,null,[[]],null,null,null,null,null,[[],["u32",15]],null,null,null,null,null,null,null,null,null,[[],[["option",4],["keypackagebundle",3]]],[[["vec",3],["box",3],["credential",3]],[["keystoreerror",4],["keypackage",3],["result",4]]],[[["u8",15],["vec",3],["signaturescheme",4],["credentialtype",4]],[["result",4],["credential",3],["keystoreerror",4]]],[[],["secret",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,[[],["bool",15]],[[],["option",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ciphersuite",3],["u64",15]],["keyscheduletestvector",3]],[[["keyscheduletestvector",3]],[["result",4],["kstestvectorerror",4]]],null,null,null,null,[[],["confirmationtag",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["u32",15]],[[],["usize",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["u32",15]],[[],["usize",15]],null,null,null,null,[[],["bool",15]],[[],["bool",15]],null,null,[[["option",4],["keypackage",3]]],[[]],[[],[["option",4],["hpkepublickey",3]]],[[]],[[],["bool",15]],[[],["option",4]],[[],[["keypackage",3],["option",4]]],null,[[["hpkepublickey",3]]],[[],["hpkepublickey",3]],[[["vec",3],["u8",15]]],[[]],[[["leafindex",3]]],null,null,null,null,null,[[["u32",15],["ciphersuite",3]],["encryptiontestvector",3]],[[["encryptiontestvector",3]],[["enctestvectorerror",4],["result",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["treekemtestvector",3]],[["result",4],["treekemtestvectorerror",4]]],null,null,null,null,null,null,null,null,null,null,[[["u32",15]],["treemathtestvector",3]],[[["treemathtestvector",3]],[["result",4],["tmtestvectorerror",4]]],null,null,null,null,null,null,null,null,null,null,null,[[],["ciphersuite",3]],[[],[["option",4],["vec",3]]],[[],[["option",4],["vec",3]]],[[],["leafindex",3]],[[],["keypackage",3]],[[["proposalqueue",3]],[["treeerror",4],["applyproposalsvalues",3],["result",4]]],null,null,null,null,null,[[],[["hashset",3],["leafindex",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[],[["vec",3],["result",4],["codecerror",4]]],[[],[["codecerror",4],["result",4]]],[[["vecsize",4],["vec",3]],[["result",4],["codecerror",4]]],[[["vecsize",4],["cursor",3]],[["result",4],["codecerror",4],["vec",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["result",4],["extensionerror",4]]],[[],["extensiontype",4]],[[],["extensionstruct",3]],[[],["any",8]],[[],[["extensionerror",4],["result",4],["parenthashextension",3]]],[[],[["capabilitiesextension",3],["result",4],["extensionerror",4]]],[[],[["extensionerror",4],["result",4],["lifetimeextension",3]]],[[],[["keyidextension",3],["extensionerror",4],["result",4]]],[[],[["result",4],["extensionerror",4],["ratchettreeextension",3]]],null,[[],[["box",3],["extension",8]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ratchettree",3],["str",15]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["serializer",8]],[["error",3],["ok",3],["result",4]]],[[["signature",3]]],[[["keypackagepayload",3],["signature",3]]],[[["keypackagebundlepayload",3],["signature",3]]],[[],[["vec",3],["result",4],["codecerror",4]]],[[],[["vec",3],["result",4],["codecerror",4]]],[[],[["vec",3],["result",4],["codecerror",4]]],[[],[["vec",3],["result",4],["codecerror",4]]],[[],["signature",3]],[[],[["vec",3],["result",4],["codecerror",4]]],[[],["signature",3]],[[],[["vec",3],["result",4],["codecerror",4]]],[[],["signature",3]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["codecerror",4],["result",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["codecerror",4],["result",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[],["extensiontype",4]],[[],[["result",4],["extensionerror",4]]],[[],["extensionstruct",3]],[[],["any",8]],[[],["extensiontype",4]],[[],[["result",4],["extensionerror",4]]],[[],["extensionstruct",3]],[[],["any",8]],[[],["extensiontype",4]],[[],[["result",4],["extensionerror",4]]],[[],["extensionstruct",3]],[[],["any",8]],[[],["extensiontype",4]],[[],[["result",4],["extensionerror",4]]],[[],["extensionstruct",3]],[[],["any",8]],[[["string",3]]],[[["str",15]]],[[["vec",3],["u8",15]]],[[]],[[["ciphersuitename",4]]],[[]],[[["configerror",4]],["codecerror",4]],[[["configerror",4]]],[[["codecerror",4]]],[[["mlscredentialtype",4]]],[[["errorstring",3]]],[[["capabilitiesextensionerror",4]]],[[["lifetimeextensionerror",4]]],[[["keypackageiderror",4]]],[[["parenthasherror",4]]],[[["ratchettreeerror",4]]],[[["codecerror",4]]],[[["configerror",4]]],[[["invalidextensionerror",4]]],[[["codecerror",4]]],[[["credentialerror",4]]],[[["verificationerror",4]]],[[["mlsplaintexterror",4]]],[[["codecerror",4]]],[[["codecerror",4]]],[[["credentialerror",4]]],[[["mlsplaintextcontenttype",4]]],[[["mlsciphertexterror",4]]],[[["mlsplaintexterror",4]]],[[["welcomeerror",4]]],[[["applycommiterror",4]]],[[["createcommiterror",4]]],[[["configerror",4]]],[[["exportererror",4]]],[[["proposalqueueerror",4]]],[[["codecerror",4]]],[[["keyscheduleerror",4]]],[[["pskerror",4]]],[[["credentialerror",4]]],[[["treeerror",4]]],[[["treeerror",4]]],[[["parenthasherror",4]]],[[["codecerror",4]]],[[["keyscheduleerror",4]]],[[["pskerror",4]]],[[["verificationerror",4]]],[[["treeerror",4]]],[[["codecerror",4]]],[[["keyscheduleerror",4]]],[[["pskerror",4]]],[[["psksecreterror",4]]],[[["errorstring",3]]],[[["codecerror",4]]],[[["configerror",4]]],[[["grouperror",4]]],[[["createcommiterror",4]]],[[["useaftereviction",4]]],[[["pendingproposalserror",4]]],[[["exportererror",4]]],[[["emptyinputerror",4]]],[[["keystoreerror",4]]],[[["invalidmessageerror",4]]],[[["credentialerror",4]]],[[["mlsciphertexterror",4]]],[[["applycommiterror",4]]],[[["grouperror",4]]],[[["mlsplaintext",3]]],[[["mlsciphertext",3]]],[[["extensionerror",4]]],[[["configerror",4]]],[[["codecerror",4]]],[[["credentialerror",4]]],[[["keypackage",3]]],[[["keypackagebundle",3]]],[[["keypackageerror",4]]],[[["credentialerror",4]]],[[["queuedproposalerror",4]]],[[["proposalorreftypeerror",4]]],[[["secret",3]]],[[["errorstate",4]]],[[["credentialerror",4]]],[[["u32",15]],["nodeindex",3]],[[["usize",15]],["nodeindex",3]],[[["leafindex",3]],["nodeindex",3]],[[["u32",15]],["leafindex",3]],[[["usize",15]],["leafindex",3]],[[],["errorstring",3]],[[],["errorpayload",3]],[[],["ciphersuitename",4]],[[],["signaturescheme",4]],[[],["hpkeciphertext",3]],[[],["secret",3]],[[],["reuseguard",3]],[[],["aeadnonce",3]],[[],["signature",3]],[[],["signatureprivatekey",3]],[[],["signaturepublickey",3]],[[],["signaturekeypair",3]],[[]],[[],["codecerror",4]],[[],["configerror",4]],[[],["config",3]],[[],["protocolversion",4]],[[],["credentialerror",4]],[[],["credentialtype",4]],[[],["certificate",3]],[[],["mlscredentialtype",4]],[[],["credential",3]],[[],["basiccredential",3]],[[],["capabilitiesextension",3]],[[],["extensionerror",4]],[[],["lifetimeextensionerror",4]],[[],["capabilitiesextensionerror",4]],[[],["keypackageiderror",4]],[[],["parenthasherror",4]],[[],["ratchettreeerror",4]],[[],["invalidextensionerror",4]],[[],["keyidextension",3]],[[],["lifetimeextension",3]],[[],["ratchettreeextension",3]],[[],["extensiontype",4]],[[],["extensionstruct",3]],[[],["mlsciphertext",3]],[[],["mlsplaintexterror",4]],[[],["mlsciphertexterror",4]],[[],["verificationerror",4]],[[],["mlsplaintext",3]],[[],["contenttype",4]],[[],["mlsplaintextcontenttype",4]],[[],["membershiptag",3]],[[],["sendertype",4]],[[],["sender",3]],[[],["grouperror",4]],[[],["welcomeerror",4]],[[],["applycommiterror",4]],[[],["createcommiterror",4]],[[],["exportererror",4]],[[],["pskerror",4]],[[],["managedgroupcallbacks",3]],[[],["handshakemessageformat",4]],[[],["managedgroupconfig",3]],[[],["updatepolicy",3]],[[],["managedgrouperror",4]],[[],["emptyinputerror",4]],[[],["useaftereviction",4]],[[],["pendingproposalserror",4]],[[],["invalidmessageerror",4]],[[],["groupevent",4]],[[],["memberaddedevent",3]],[[],["memberremovedevent",3]],[[],["memberupdatedevent",3]],[[],["pskreceivedevent",3]],[[],["reinitevent",3]],[[],["applicationmessageevent",3]],[[],["errorevent",3]],[[],["removal",4]],[[],["mlsmessage",4]],[[],["messagestestvector",3]],[[],["messagestestvectorerror",4]],[[],["transcripttestvector",3]],[[],["transcripttestvectorerror",4]],[[],["groupid",3]],[[],["groupepoch",3]],[[],["groupcontext",3]],[[],["groupconfig",3]],[[],["keypackageerror",4]],[[],["keypackagepayload",3]],[[],["keypackage",3]],[[],["keystoreerror",4]],[[],["proposalqueueerror",4]],[[],["proposalorreftypeerror",4]],[[],["queuedproposalerror",4]],[[],["addproposal",3]],[[],["updateproposal",3]],[[],["removeproposal",3]],[[],["presharedkeyproposal",3]],[[],["reinitproposal",3]],[[],["welcome",3]],[[],["encryptedgroupsecrets",3]],[[],["commit",3]],[[],["confirmationtag",3]],[[],["pathsecret",3]],[[],["errorstate",4]],[[],["keyscheduleerror",4]],[[],["psksecreterror",4]],[[],["kstestvectorerror",4]],[[],["psktype",4]],[[],["externalpsk",3]],[[],["reinitpsk",3]],[[],["branchpsk",3]],[[],["psk",4]],[[],["presharedkeyid",3]],[[],["keyscheduletestvector",3]],[[],["resumptionsecret",3]],[[],["treeerror",4]],[[],["parenthasherror",4]],[[],["nodeindex",3]],[[],["leafindex",3]],[[],["nodetype",4]],[[],["node",3]],[[],["parentnode",3]],[[],["encryptiontestvector",3]],[[],["enctestvectorerror",4]],[[],["treekemtestvector",3]],[[],["treekemtestvectorerror",4]],[[],["treemathtestvector",3]],[[],["tmtestvectorerror",4]],[[],["updatepathnode",3]],[[],["updatepath",3]],[[]],[[]],[[]],[[],["keyidextension",3]],[[]],[[],["ratchettreeextension",3]],[[]],[[],["managedgroupcallbacks",3]],[[]],[[],["messagestestvector",3]],[[],["transcripttestvector",3]],[[]],[[],["keystore",3]],[[],["keyscheduletestvector",3]],[[],["nodeindex",3]],[[],["leafindex",3]],[[["protocolversion",4]],["ordering",4]],[[["extensiontype",4]],["ordering",4]],[[],["ordering",4]],[[["nodeindex",3]],["ordering",4]],[[["leafindex",3]],["ordering",4]],[[["errorstring",3]],["bool",15]],[[["errorstring",3]],["bool",15]],[[["errorpayload",3]],["bool",15]],[[["errorpayload",3]],["bool",15]],[[["ciphersuitename",4]],["bool",15]],[[["signaturescheme",4]],["bool",15]],[[["hpkeciphertext",3]],["bool",15]],[[["hpkeciphertext",3]],["bool",15]],[[["secret",3]],["bool",15]],[[["aeadnonce",3]],["bool",15]],[[["aeadnonce",3]],["bool",15]],[[["signature",3]],["bool",15]],[[["signature",3]],["bool",15]],[[["signaturepublickey",3]],["bool",15]],[[["signaturepublickey",3]],["bool",15]],[[["ciphersuite",3]],["bool",15]],[[["codecerror",4]],["bool",15]],[[["configerror",4]],["bool",15]],[[["config",3]],["bool",15]],[[["config",3]],["bool",15]],[[["protocolversion",4]],["bool",15]],[[["credentialerror",4]],["bool",15]],[[["credentialerror",4]],["bool",15]],[[["credentialtype",4]],["bool",15]],[[["certificate",3]],["bool",15]],[[["certificate",3]],["bool",15]],[[["mlscredentialtype",4]],["bool",15]],[[["mlscredentialtype",4]],["bool",15]],[[["credential",3]],["bool",15]],[[["credential",3]],["bool",15]],[[],["bool",15]],[[["capabilitiesextension",3]],["bool",15]],[[["capabilitiesextension",3]],["bool",15]],[[["extensionerror",4]],["bool",15]],[[["extensionerror",4]],["bool",15]],[[["lifetimeextensionerror",4]],["bool",15]],[[["capabilitiesextensionerror",4]],["bool",15]],[[["keypackageiderror",4]],["bool",15]],[[["parenthasherror",4]],["bool",15]],[[["ratchettreeerror",4]],["bool",15]],[[["invalidextensionerror",4]],["bool",15]],[[["keyidextension",3]],["bool",15]],[[["keyidextension",3]],["bool",15]],[[["lifetimeextension",3]],["bool",15]],[[["lifetimeextension",3]],["bool",15]],[[["ratchettreeextension",3]],["bool",15]],[[["ratchettreeextension",3]],["bool",15]],[[["extensiontype",4]],["bool",15]],[[["extensionstruct",3]],["bool",15]],[[["extensionstruct",3]],["bool",15]],[[],["bool",15]],[[["mlsciphertext",3]],["bool",15]],[[["mlsciphertext",3]],["bool",15]],[[["mlsplaintexterror",4]],["bool",15]],[[["mlsplaintexterror",4]],["bool",15]],[[["mlsciphertexterror",4]],["bool",15]],[[["mlsciphertexterror",4]],["bool",15]],[[["verificationerror",4]],["bool",15]],[[["verificationerror",4]],["bool",15]],[[["mlsplaintext",3]],["bool",15]],[[["mlsplaintext",3]],["bool",15]],[[["contenttype",4]],["bool",15]],[[["mlsplaintextcontenttype",4]],["bool",15]],[[["mlsplaintextcontenttype",4]],["bool",15]],[[["membershiptag",3]],["bool",15]],[[["membershiptag",3]],["bool",15]],[[["sendertype",4]],["bool",15]],[[["sender",3]],["bool",15]],[[["sender",3]],["bool",15]],[[["grouperror",4]],["bool",15]],[[["grouperror",4]],["bool",15]],[[["welcomeerror",4]],["bool",15]],[[["welcomeerror",4]],["bool",15]],[[["applycommiterror",4]],["bool",15]],[[["applycommiterror",4]],["bool",15]],[[["createcommiterror",4]],["bool",15]],[[["exportererror",4]],["bool",15]],[[["pskerror",4]],["bool",15]],[[["pskerror",4]],["bool",15]],[[],["bool",15]],[[["handshakemessageformat",4]],["bool",15]],[[["managedgroupconfig",3]],["bool",15]],[[["managedgroupconfig",3]],["bool",15]],[[["updatepolicy",3]],["bool",15]],[[["updatepolicy",3]],["bool",15]],[[["managedgrouperror",4]],["bool",15]],[[["managedgrouperror",4]],["bool",15]],[[["emptyinputerror",4]],["bool",15]],[[["useaftereviction",4]],["bool",15]],[[["pendingproposalserror",4]],["bool",15]],[[["invalidmessageerror",4]],["bool",15]],[[["invalidmessageerror",4]],["bool",15]],[[["groupevent",4]],["bool",15]],[[["groupevent",4]],["bool",15]],[[["memberaddedevent",3]],["bool",15]],[[["memberaddedevent",3]],["bool",15]],[[["memberremovedevent",3]],["bool",15]],[[["memberremovedevent",3]],["bool",15]],[[["memberupdatedevent",3]],["bool",15]],[[["memberupdatedevent",3]],["bool",15]],[[["pskreceivedevent",3]],["bool",15]],[[["pskreceivedevent",3]],["bool",15]],[[["reinitevent",3]],["bool",15]],[[["reinitevent",3]],["bool",15]],[[["applicationmessageevent",3]],["bool",15]],[[["applicationmessageevent",3]],["bool",15]],[[["errorevent",3]],["bool",15]],[[["errorevent",3]],["bool",15]],[[["removal",4]],["bool",15]],[[["removal",4]],["bool",15]],[[["mlsmessage",4]],["bool",15]],[[["mlsmessage",4]],["bool",15]],[[["messagestestvectorerror",4]],["bool",15]],[[["transcripttestvectorerror",4]],["bool",15]],[[["groupid",3]],["bool",15]],[[["groupid",3]],["bool",15]],[[["groupepoch",3]],["bool",15]],[[["groupepoch",3]],["bool",15]],[[["groupcontext",3]],["bool",15]],[[["groupcontext",3]],["bool",15]],[[["keypackageerror",4]],["bool",15]],[[["keypackageerror",4]],["bool",15]],[[["keypackagepayload",3]],["bool",15]],[[["keypackagepayload",3]],["bool",15]],[[],["bool",15]],[[["keystoreerror",4]],["bool",15]],[[["keystoreerror",4]],["bool",15]],[[["proposalqueueerror",4]],["bool",15]],[[["proposalqueueerror",4]],["bool",15]],[[["proposalorreftypeerror",4]],["bool",15]],[[["queuedproposalerror",4]],["bool",15]],[[["addproposal",3]],["bool",15]],[[["addproposal",3]],["bool",15]],[[["updateproposal",3]],["bool",15]],[[["updateproposal",3]],["bool",15]],[[["removeproposal",3]],["bool",15]],[[["removeproposal",3]],["bool",15]],[[["presharedkeyproposal",3]],["bool",15]],[[["presharedkeyproposal",3]],["bool",15]],[[["reinitproposal",3]],["bool",15]],[[["reinitproposal",3]],["bool",15]],[[["welcome",3]],["bool",15]],[[["welcome",3]],["bool",15]],[[["encryptedgroupsecrets",3]],["bool",15]],[[["encryptedgroupsecrets",3]],["bool",15]],[[["commit",3]],["bool",15]],[[["commit",3]],["bool",15]],[[["confirmationtag",3]],["bool",15]],[[["confirmationtag",3]],["bool",15]],[[["pathsecret",3]],["bool",15]],[[["pathsecret",3]],["bool",15]],[[["publicgroupstate",3]],["bool",15]],[[["publicgroupstate",3]],["bool",15]],[[["errorstate",4]],["bool",15]],[[["keyscheduleerror",4]],["bool",15]],[[["keyscheduleerror",4]],["bool",15]],[[["psksecreterror",4]],["bool",15]],[[["kstestvectorerror",4]],["bool",15]],[[["psktype",4]],["bool",15]],[[["externalpsk",3]],["bool",15]],[[["externalpsk",3]],["bool",15]],[[["reinitpsk",3]],["bool",15]],[[["reinitpsk",3]],["bool",15]],[[["branchpsk",3]],["bool",15]],[[["branchpsk",3]],["bool",15]],[[["psk",4]],["bool",15]],[[["psk",4]],["bool",15]],[[["presharedkeyid",3]],["bool",15]],[[["presharedkeyid",3]],["bool",15]],[[["treeerror",4]],["bool",15]],[[["treeerror",4]],["bool",15]],[[["parenthasherror",4]],["bool",15]],[[["nodeindex",3]],["bool",15]],[[["nodeindex",3]],["bool",15]],[[["leafindex",3]],["bool",15]],[[["leafindex",3]],["bool",15]],[[["nodetype",4]],["bool",15]],[[["node",3]],["bool",15]],[[["node",3]],["bool",15]],[[["parentnode",3]],["bool",15]],[[["parentnode",3]],["bool",15]],[[["enctestvectorerror",4]],["bool",15]],[[["treekemtestvectorerror",4]],["bool",15]],[[["tmtestvectorerror",4]],["bool",15]],[[["updatepathnode",3]],["bool",15]],[[["updatepathnode",3]],["bool",15]],[[["updatepath",3]],["bool",15]],[[["updatepath",3]],["bool",15]],[[["protocolversion",4]],[["ordering",4],["option",4]]],[[["extensiontype",4]],[["ordering",4],["option",4]]],[[],[["option",4],["ordering",4]]],[[["nodeindex",3]],[["ordering",4],["option",4]]],[[["leafindex",3]],[["ordering",4],["option",4]]],[[],["credentialbundle",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u16",15]],["result",4]],[[["u16",15]],["result",4]],[[["u8",15]],["result",4]],[[["u16",15]],["result",4]],[[["u16",15]],["result",4]],[[["u8",15]],[["codecerror",4],["result",4]]],[[["u8",15]],["result",4]],[[["u8",15]],["result",4]],[[["nodeindex",3]],["result",4]],[[["u8",15]],["result",4]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["vec",3]],[["result",4],["error",4]]],[[["vec",3]],[["result",4],["error",4]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["cursor",3]],[[["usize",15]],[["codecerror",4],["result",4]]],[[["usize",15]],[["result",4],["cursor",3],["codecerror",4]]],[[],["bool",15]],[[],["bool",15]],[[["vec",3]],[["result",4],["codecerror",4]]],[[["cursor",3]],[["codecerror",4],["result",4]]],[[],[["vec",3],["result",4],["codecerror",4]]],[[],[["codecerror",4],["result",4]]],[[["signature",3]],[["credentialerror",4],["result",4]]],[[],["vec",3]],[[],["signaturescheme",4]],[[],["signaturepublickey",3]],[[["signature",3]],[["credentialerror",4],["result",4]]],[[["u8",15],["vec",3],["signaturescheme",4],["credentialtype",4]],[["credentialerror",4],["result",4]]],[[],["credential",3]],[[["option",4],["option",4],["option",4]]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]]],[[["vec",3],["option",4]]],[[]],[[],[["extensionerror",4],["result",4],["parenthashextension",3]]],[[],[["capabilitiesextension",3],["result",4],["extensionerror",4]]],[[],[["extensionerror",4],["result",4],["lifetimeextension",3]]],[[],[["keyidextension",3],["extensionerror",4],["result",4]]],[[],[["result",4],["extensionerror",4],["ratchettreeextension",3]]],[[["u8",15],["vec",3],["groupepoch",3],["groupid",3]],[["codecerror",4],["result",4]]],[[["ciphersuite",3],["u8",15],["vec",3],["groupid",3]],[["codecerror",4],["result",4]]],[[]],[[],["groupid",3]],[[],["groupepoch",3]],[[]],[[["validateadd",6]]],[[["validateremove",6]]],[[["autosave",6]]],[[["updatepolicy",3],["usize",15],["managedgroupcallbacks",3],["handshakemessageformat",4],["bool",15]]],[[],["usize",15]],[[],["managedgroupcallbacks",3]],[[]],[[],["credential",3]],[[],["credential",3]],[[]],[[],["removal",4]],[[]],[[],["credential",3]],[[]],[[],["presharedkeyid",3]],[[]],[[],["reinitproposal",3]],[[]],[[],["credential",3]],[[]],[[],["managedgrouperror",4]],[[["managedgroupconfig",3],["keystore",3],["groupid",3]],[["result",4],["managedgrouperror",4]]],[[["managedgroupconfig",3],["keystore",3],["option",4],["welcome",3],["vec",3]],[["result",4],["managedgrouperror",4]]],[[["keystore",3]],[["result",4],["managedgrouperror",4]]],[[["keystore",3]],[["result",4],["managedgrouperror",4]]],[[["keypackage",3],["keystore",3]],[["managedgrouperror",4],["mlsmessage",4],["result",4]]],[[["usize",15],["keystore",3]],[["managedgrouperror",4],["mlsmessage",4],["result",4]]],[[["keystore",3]],[["managedgrouperror",4],["mlsmessage",4],["result",4]]],[[],[["vec",3],["credential",3]]],[[["mlsmessage",4]],[["managedgrouperror",4],["vec",3],["result",4]]],[[["keystore",3]],[["managedgrouperror",4],["mlsmessage",4],["result",4]]],[[["keystore",3]],[["result",4],["managedgrouperror",4]]],[[["usize",15],["str",15]],[["vec",3],["result",4],["managedgrouperror",4]]],[[],[["vec",3],["u8",15]]],[[["groupepoch",3]],[["resumptionsecret",3],["option",4]]],[[],["managedgroupconfig",3]],[[["managedgroupconfig",3]]],[[]],[[]],[[],["ciphersuite",3]],[[],["bool",15]],[[],[["result",4],["credential",3],["managedgrouperror",4]]],[[],["groupid",3]],[[["option",4],["keystore",3],["keypackagebundle",3]],[["result",4],["managedgrouperror",4]]],[[["option",4],["keystore",3],["keypackagebundle",3]],[["managedgrouperror",4],["mlsmessage",4],["result",4]]],[[]],[[["managedgroupcallbacks",3],["read",8]],[["result",4],["managedgroup",3],["error",3]]],[[],[["error",3],["result",4]]],[[],[["option",4],["vec",3]]],[[],["ref",3]],[[],["groupcontext",3]],[[],[["vec",3],["u8",15]]],[[["str",15]]],[[],[["vec",3],["u8",15]]],[[],["u64",15]],[[],["bool",15]],[[["ciphersuitename",4],["keypackagebundle",3],["groupconfig",3]],[["result",4],["grouperror",4]]],[[["option",4],["pskfetcher",6],["welcome",3],["keypackagebundle",3],["option",4],["vec",3]],[["result",4],["grouperror",4]]],[[["credentialbundle",3],["keypackage",3]],[["result",4],["mlsplaintext",3],["grouperror",4]]],[[["credentialbundle",3],["keypackage",3]],[["result",4],["mlsplaintext",3],["grouperror",4]]],[[["leafindex",3],["credentialbundle",3]],[["result",4],["mlsplaintext",3],["grouperror",4]]],[[["presharedkeyid",3],["credentialbundle",3]],[["result",4],["mlsplaintext",3],["grouperror",4]]],[[["pskfetcher",6],["credentialbundle",3],["bool",15],["option",4]],["createcommitresult",6]],[[["option",4],["mlsplaintext",3],["pskfetcher",6]],[["result",4],["grouperror",4]]],[[["usize",15],["credentialbundle",3]],[["grouperror",4],["result",4],["mlsciphertext",3]]],[[["mlsplaintext",3],["usize",15]],[["grouperror",4],["result",4],["mlsciphertext",3]]],[[["mlsciphertext",3]],[["result",4],["mlsplaintext",3],["mlsciphertexterror",4]]],[[["mlsplaintext",3]],[["mlsplaintexterror",4],["result",4]]],[[["mlsplaintext",3]],[["mlsplaintexterror",4],["result",4]]],[[["usize",15],["str",15]],[["result",4],["vec",3],["grouperror",4]]],[[],[["vec",3],["u8",15]]],[[["read",8]],[["mlsgroup",3],["error",3],["result",4]]],[[],[["error",3],["result",4]]],[[],[["ratchettree",3],["ref",3]]],[[],["ciphersuite",3]],[[],["groupcontext",3]],[[],["groupid",3]],[[],[["vec",3],["box",3]]],[[["credentialbundle",3]],[["publicgroupstate",3],["credentialerror",4],["result",4]]],[[],["bool",15]],[[["box",3],["extension",8]]],[[],[["result",4],["keypackageerror",4]]],[[],[["vec",3],["u8",15]]],[[],[["result",4],["keypackageerror",4]]],[[]],[[],["credential",3]],[[],["ciphersuitename",4]],[[["keypackage",3],["secret",3]]],[[["box",3],["extension",8]]],[[["vec",3],["credentialbundle",3],["box",3]],[["result",4],["keypackageerror",4]]],[[["protocolversion",4],["credentialbundle",3],["vec",3],["box",3]],[["result",4],["keypackageerror",4]]],[[["secret",3],["credentialbundle",3],["hpkekeypair",3],["vec",3],["box",3]],[["result",4],["keypackageerror",4]]],[[],["keypackage",3]],[[],["keypackagebundlepayload",3]],[[],["secret",3]],[[["vec",3],["u8",15]]],[[]],[[["secret",3],["u8",15],["vec",3],["ciphersuite",3]]],[[],["presharedkeyid",3]],[[],["secret",3]],[[],["groupid",3]],[[],["groupepoch",3]],[[],["groupid",3]],[[],["groupepoch",3]],[[["psk",4],["vec",3],["u8",15],["psktype",4]]],[[],["psktype",4]],[[],["psk",4]],[[]],[[],["vec",3]],[[["ciphersuite",3]],[["psksecreterror",4],["result",4]]],[[],["secret",3]],[[["ciphersuite",3]],[["vec",3],["u8",15]]],[[["nodeindex",3],["node",3]],[["result",4],["parenthasherror",4]]],[[],[["result",4],["parenthasherror",4]]]],"p":[[8,"SignedStruct"],[8,"Signable"],[8,"Verifiable"],[4,"CiphersuiteName"],[4,"SignatureScheme"],[3,"Secret"],[3,"ReuseGuard"],[3,"Ciphersuite"],[3,"AeadNonce"],[3,"SignatureKeypair"],[3,"SignaturePublicKey"],[3,"SignaturePrivateKey"],[4,"ConfigError"],[3,"Config"],[4,"ProtocolVersion"],[3,"MlsCiphertext"],[4,"MlsPlaintextError"],[4,"MlsCiphertextError"],[4,"VerificationError"],[3,"MlsPlaintext"],[4,"ContentType"],[4,"MlsPlaintextContentType"],[3,"MlsPlaintextTbs"],[4,"SenderType"],[3,"Sender"],[4,"GroupError"],[4,"WelcomeError"],[4,"ApplyCommitError"],[4,"CreateCommitError"],[4,"ExporterError"],[4,"PskError"],[4,"MessagesTestVectorError"],[3,"TranscriptTestVector"],[4,"TranscriptTestVectorError"],[4,"HandshakeMessageFormat"],[4,"ManagedGroupError"],[4,"EmptyInputError"],[4,"UseAfterEviction"],[4,"PendingProposalsError"],[4,"InvalidMessageError"],[4,"GroupEvent"],[4,"Removal"],[4,"MlsMessage"],[3,"GroupId"],[3,"GroupEpoch"],[3,"GroupConfig"],[4,"KeyStoreError"],[3,"KeyStore"],[4,"ProposalQueueError"],[4,"ProposalOrRefTypeError"],[4,"QueuedProposalError"],[3,"EncryptedGroupSecrets"],[3,"Welcome"],[3,"Commit"],[3,"PathSecret"],[4,"ErrorState"],[4,"KeyScheduleError"],[4,"PskSecretError"],[4,"KsTestVectorError"],[3,"KeyScheduleTestVector"],[3,"ConfirmationKey"],[4,"TreeError"],[4,"ParentHashError"],[3,"NodeIndex"],[3,"LeafIndex"],[4,"NodeType"],[3,"Node"],[3,"ParentNode"],[3,"EncryptionTestVector"],[4,"EncTestVectorError"],[3,"TreeKemTestVector"],[4,"TreeKemTestVectorError"],[4,"TmTestVectorError"],[3,"RatchetTree"],[3,"ApplyProposalsValues"],[3,"UpdatePathNode"],[3,"UpdatePath"],[4,"ExtensionError"],[4,"LifetimeExtensionError"],[4,"CapabilitiesExtensionError"],[4,"KeyPackageIdError"],[4,"ParentHashError"],[4,"RatchetTreeError"],[4,"InvalidExtensionError"],[4,"KeyPackageError"],[4,"CodecError"],[4,"VecSize"],[8,"Codec"],[4,"CredentialError"],[4,"CredentialType"],[4,"MlsCredentialType"],[3,"BasicCredential"],[4,"ExtensionType"],[8,"Extension"],[8,"ExtensionHelper"],[3,"AddProposal"],[3,"PreSharedKeyProposal"],[3,"ReInitProposal"],[3,"RemoveProposal"],[3,"UpdateProposal"],[4,"Psk"],[4,"PskType"],[3,"ErrorString"],[3,"ErrorPayload"],[3,"HpkeCiphertext"],[3,"AeadKey"],[3,"Signature"],[3,"Cursor"],[3,"Certificate"],[3,"Credential"],[3,"CredentialBundle"],[3,"CapabilitiesExtension"],[3,"KeyIdExtension"],[3,"LifetimeExtension"],[3,"RatchetTreeExtension"],[3,"ExtensionStruct"],[3,"MembershipTag"],[3,"ManagedGroupCallbacks"],[3,"ManagedGroupConfig"],[3,"UpdatePolicy"],[3,"MemberAddedEvent"],[3,"MemberRemovedEvent"],[3,"MemberUpdatedEvent"],[3,"PskReceivedEvent"],[3,"ReInitEvent"],[3,"ApplicationMessageEvent"],[3,"ErrorEvent"],[3,"ManagedGroup"],[3,"MlsGroup"],[3,"MessagesTestVector"],[3,"GroupContext"],[3,"KeyPackagePayload"],[3,"KeyPackage"],[3,"KeyPackageBundlePayload"],[3,"KeyPackageBundle"],[3,"CbGuard"],[3,"ConfirmationTag"],[3,"PublicGroupState"],[3,"ExternalPsk"],[3,"ExternalPskBundle"],[3,"ReinitPsk"],[3,"BranchPsk"],[3,"PreSharedKeyId"],[3,"PreSharedKeys"],[3,"PskSecret"],[3,"MembershipKey"],[3,"ResumptionSecret"],[3,"LeafNodeHashInput"],[3,"ParentNodeTreeHashInput"],[3,"TreeMathTestVector"]]}\
}');
initSearch(searchIndex);