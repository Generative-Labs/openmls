var searchIndex = JSON.parse('{\
"openmls":{"doc":"OpenMLSErrorsEach module has an `errors.rs` defining…","i":[[0,"utils","openmls","",null,null],[5,"randombytes","openmls::utils","",null,[[],["vec",3]]],[5,"random_u32","","",null,[[]]],[5,"zero","","",null,[[],["vec",3]]],[5,"_bytes_to_hex","","",null,[[],["string",3]]],[5,"_print_tree","","",null,[[["ratchettree",3]]]],[0,"ciphersuite","openmls","Ciphersuites for MLS",null,null],[3,"HpkeCiphertext","openmls::ciphersuite","7.7. Update Paths",null,null],[12,"kem_output","","",0,null],[12,"ciphertext","","",0,null],[3,"Secret","","A struct to contain secrets. This is to provide better…",null,null],[12,"value","","",1,null],[3,"AeadKey","","",null,null],[12,"aead_mode","","",2,null],[12,"value","","",2,null],[3,"ReuseGuard","","",null,null],[12,"value","","",3,null],[3,"AeadNonce","","",null,null],[12,"value","","",4,null],[3,"Signature","","",null,null],[12,"value","","",5,null],[3,"SignaturePrivateKey","","",null,null],[12,"ciphersuite","","",6,null],[12,"value","","",6,null],[3,"SignaturePublicKey","","",null,null],[12,"ciphersuite","","",7,null],[12,"value","","",7,null],[3,"SignatureKeypair","","",null,null],[12,"ciphersuite","","",8,null],[12,"private_key","","",8,null],[12,"public_key","","",8,null],[3,"Ciphersuite","","",null,null],[12,"name","","",9,null],[12,"signature","","",9,null],[12,"hpke","","",9,null],[12,"aead","","",9,null],[12,"hash","","",9,null],[12,"hmac","","",9,null],[4,"CiphersuiteName","","",null,null],[13,"MLS10_128_DHKEMX25519_AES128GCM_SHA256_Ed25519","","",10,null],[13,"MLS10_128_DHKEMP256_AES128GCM_SHA256_P256","","",10,null],[13,"MLS10_128_DHKEMX25519_CHACHA20POLY1305_SHA256_Ed25519","","",10,null],[13,"MLS10_256_DHKEMX448_AES256GCM_SHA512_Ed448","","",10,null],[13,"MLS10_256_DHKEMP521_AES256GCM_SHA512_P521","","",10,null],[13,"MLS10_256_DHKEMX448_CHACHA20POLY1305_SHA512_Ed448","","",10,null],[0,"ciphersuites","","",null,null],[5,"get_hash_from_suite","openmls::ciphersuite::ciphersuites","",null,[[["ciphersuitename",4]],["digestmode",4]]],[5,"get_aead_from_suite","","",null,[[["ciphersuitename",4]],["aeadmode",4]]],[5,"get_signature_from_suite","","",null,[[["ciphersuitename",4]],[["signaturemode",4],["configerror",4],["result",4]]]],[5,"get_kem_from_suite","","",null,[[["ciphersuitename",4]],[["configerror",4],["result",4],["hpkekemmode",4]]]],[5,"get_kdf_from_suite","","",null,[[["ciphersuitename",4]],["hmacmode",4]]],[5,"get_hpke_kdf_from_suite","","",null,[[["ciphersuitename",4]],["hpkekdfmode",4]]],[5,"get_hpke_aead_from_suite","","",null,[[["ciphersuitename",4]],["hpkeaeadmode",4]]],[0,"codec","openmls::ciphersuite","Codec implementations for the ciphersuites. Provides…",null,null],[0,"errors","","Crypto errorsThis file defines a set of errors thrown by…",null,null],[4,"HKDFError","openmls::ciphersuite::errors","",null,null],[13,"InvalidLength","","",11,null],[4,"CryptoError","","",null,null],[13,"CryptoLibraryError","","",12,null],[0,"signable","openmls::ciphersuite","",null,null],[8,"Signable","openmls::ciphersuite::signable","The `Signable` trait is implemented by all struct that are…",null,null],[10,"unsigned_payload","","",13,[[],[["result",4],["vec",3],["codecerror",4]]]],[11,"sign","","Sign the payload with the given `id`.",13,[[["credentialbundle",3]],["signature",3]]],[11,"verify","","Verifies the payload against the given `credential` and…",13,[[["credential",3],["signature",3]]]],[17,"NONCE_BYTES","openmls::ciphersuite","",null,null],[17,"REUSE_GUARD_BYTES","","",null,null],[17,"TAG_BYTES","","",null,null],[11,"new_empty_secret","","Create an empty secret.",1,[[]]],[11,"to_vec","","",1,[[],["vec",3]]],[11,"from_random","","Samples a fresh reuse guard uniformly at random.",3,[[]]],[11,"new","","Create a new ciphersuite from the given `name`.",9,[[["ciphersuitename",4]],[["configerror",4],["result",4]]]],[11,"name","","Get the name of this ciphersuite.",9,[[],["ciphersuitename",4]]],[11,"aead","","Get the AEAD mode",9,[[],["aeadmode",4]]],[11,"new_signature_keypair","","Create a new signature key pair and return it.",9,[[],[["signaturekeypair",3],["result",4],["cryptoerror",4]]]],[11,"hash","","Hash `payload` and return the digest.",9,[[],["vec",3]]],[11,"hash_length","","Get the length of the used hash algorithm.",9,[[]]],[11,"hkdf_extract","","HKDF extract.",9,[[["secret",3]],["secret",3]]],[11,"hkdf_expand","","HKDF expand",9,[[["secret",3]],[["secret",3],["hkdferror",4],["result",4]]]],[11,"aead_key_length","","Returns the key size of the used AEAD.",9,[[]]],[11,"aead_nonce_length","","Returns the length of the nonce in the AEAD.",9,[[]]],[11,"hpke_seal","","HPKE single-shot encryption of `ptxt` to `pk_r`, using…",9,[[["hpkepublickey",3]],["hpkeciphertext",3]]],[11,"hpke_seal_secret","","HPKE single-shot encryption specifically to seal a Secret…",9,[[["hpkepublickey",3],["secret",3]],["hpkeciphertext",3]]],[11,"hpke_open","","HPKE single-shot decryption of `input` with `sk_r`, using…",9,[[["hpkeciphertext",3],["hpkeprivatekey",3]],["vec",3]]],[11,"derive_hpke_keypair","","Derive a new HPKE keypair from a given Secret.",9,[[["secret",3]],["hpkekeypair",3]]],[11,"from_secret","","Build a new key for an AEAD from `Secret`.",2,[[["secret",3],["aeadmode",4]],["aeadkey",3]]],[11,"aead_seal","","Encrypt a payload under the AeadKey given a nonce.",2,[[["aeadnonce",3]],[["vec",3],["aeaderror",4],["result",4]]]],[11,"aead_open","","AEAD decrypt `ciphertext` with `key`, `aad`, and `nonce`.",2,[[["aeadnonce",3]],[["vec",3],["aeaderror",4],["result",4]]]],[11,"from_secret","","Build a new nonce for an AEAD from `Secret`.",4,[[["secret",3]]]],[11,"from_random","","Generate a new random nonce.",4,[[]]],[11,"xor_with_reuse_guard","","Xor the first bytes of the nonce with the reuse_guard.",4,[[["reuseguard",3]]]],[11,"new_empty","","",5,[[],["signature",3]]],[11,"sign","","Sign the `payload` byte slice with this signature key.…",8,[[],[["result",4],["signature",3],["signatureerror",4]]]],[11,"verify","","Verify a `Signature` on the `payload` byte slice with the…",8,[[["signature",3]]]],[11,"into_tuple","","Get the private and public key objects",8,[[]]],[11,"new","","Create a new signature public key from raw key bytes.",7,[[["vec",3],["ciphersuitename",4]],[["configerror",4],["result",4]]]],[11,"verify","","Verify a `Signature` on the `payload` byte slice with the…",7,[[["signature",3]]]],[11,"sign","","Sign the `payload` byte slice with this signature key.…",6,[[],[["result",4],["signature",3],["signatureerror",4]]]],[0,"codec","openmls","",null,null],[3,"Cursor","openmls::codec","",null,null],[12,"buffer","","",14,null],[12,"position","","",14,null],[4,"CodecError","","",null,null],[13,"EncodingError","","",15,null],[13,"DecodingError","","",15,null],[13,"Other","","",15,null],[4,"VecSize","","",null,null],[13,"VecU8","","",16,null],[13,"VecU16","","",16,null],[13,"VecU32","","",16,null],[13,"VecU64","","",16,null],[5,"encode_vec","","",null,[[["vecsize",4],["vec",3]],[["result",4],["codecerror",4]]]],[5,"decode_vec","","",null,[[["vecsize",4],["cursor",3]],[["vec",3],["codecerror",4],["result",4]]]],[8,"Codec","","",null,null],[11,"encode","","",17,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",17,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode_detached","","",17,[[],[["vec",3],["codecerror",4],["result",4]]]],[11,"new","","",14,[[],["cursor",3]]],[11,"consume","","",14,[[],[["result",4],["codecerror",4]]]],[11,"sub_cursor","","",14,[[],[["codecerror",4],["cursor",3],["result",4]]]],[11,"is_empty","","",14,[[]]],[11,"has_more","","",14,[[]]],[0,"config","openmls","This config contains all structs, enums and functions to…",null,null],[3,"CONFIG","openmls::config","",null,null],[12,"__private_field","","",18,null],[3,"Constants","","Constants that are used throughout the library.",null,null],[12,"default_key_package_lifetime","","The default lifetime of a key package in seconds.",19,null],[12,"key_package_lifetime_margin","","The amount of time (in seconds) the lifetime of a…",19,null],[3,"PersistentConfig","","The configuration we use for the library (`Config`) is not…",null,null],[12,"protocol_versions","","",20,null],[12,"ciphersuites","","",20,null],[12,"extensions","","",20,null],[12,"constants","","",20,null],[3,"Config","","OpenMLS ConfigurationThis is the global configuration for…",null,null],[12,"protocol_versions","","",21,null],[12,"ciphersuites","","",21,null],[12,"extensions","","",21,null],[12,"constants","","",21,null],[4,"ProtocolVersion","","Protocol VersionKey Packages",null,null],[13,"Reserved","","",22,null],[13,"Mls10","","",22,null],[0,"errors","","Config errorsA `ConfigError` is thrown when either the…",null,null],[4,"ConfigError","openmls::config::errors","",null,null],[13,"InvalidConfig","","Invalid configuration.",23,null],[13,"UnsupportedMlsVersion","","MLS version is not supported by this configuration.",23,null],[13,"UnsupportedCiphersuite","","Ciphersuite is not supported by this configuration.",23,null],[13,"UnsupportedSignatureScheme","","Signature scheme is not supported by this configuration.",23,null],[17,"DEFAULT_KEY_PACKAGE_LIFETIME","openmls::config","This value is used as the default lifetime of…",null,null],[17,"DEFAULT_KEY_PACKAGE_LIFETIME_MARGIN","","This value is used as the default amount of time (in…",null,null],[11,"supported_extensions","","Get a list of the supported extension types.",21,[[]]],[11,"supported_ciphersuites","","Get a list of the supported cipher suites.",21,[[]]],[11,"supported_ciphersuite_names","","Get a list of the supported cipher suites names.",21,[[],[["ciphersuitename",4],["vec",3]]]],[11,"supported_versions","","Get a list of the supported protocol versions.",21,[[]]],[11,"ciphersuite","","Get the ciphersuite of the given name.",21,[[["ciphersuitename",4]],[["ciphersuite",3],["configerror",4],["result",4]]]],[11,"default_key_package_lifetime","","Get the default `KeyPackage` lifetime (in seconds).",21,[[]]],[11,"key_package_lifetime_margin","","Get the margin in which `KeyPackage` lifetimes are already…",21,[[]]],[11,"from","","Convert an integer to the corresponding protocol version.",22,[[],[["result",4],["protocolversion",4],["configerror",4]]]],[11,"is_supported","openmls::ciphersuite","Returns `true` if the ciphersuite is supported in the…",10,[[]]],[0,"creds","openmls","",null,null],[3,"Certificate","openmls::creds","Struct containing an X509 certificate chain, as per Spec.",null,null],[12,"cert_data","","",24,null],[3,"Credential","","Struct containing MLS credential data, where the data…",null,null],[12,"credential_type","","",25,null],[12,"credential","","",25,null],[3,"BasicCredential","","",null,null],[12,"identity","","",26,null],[12,"ciphersuite","","",26,null],[12,"public_key","","",26,null],[3,"CredentialBundle","","This struct contains a credential and the corresponding…",null,null],[12,"credential","","",27,null],[12,"signature_private_key","","",27,null],[4,"CredentialError","","",null,null],[13,"UnknwonConfigError","","",28,null],[13,"UnsupportedCredentialType","","",28,null],[4,"CredentialType","","Enum for Credential Types. We only need this for…",null,null],[13,"Reserved","","",29,null],[13,"Basic","","",29,null],[13,"X509","","",29,null],[4,"MLSCredentialType","","This enum contains the different available credentials.",null,null],[13,"Basic","","",30,null],[13,"X509","","",30,null],[11,"verify","","Verify a signature of a given payload against the public…",25,[[["signature",3]]]],[11,"get_identity","","Get the identity of a given credential.",25,[[],["vec",3]]],[11,"ciphersuite","","Get the ciphersuite associated with the credential.",25,[[],["ciphersuite",3]]],[11,"verify","","",26,[[["signature",3]]]],[11,"new","","Create a new `CredentialBundle` of the given credential…",27,[[["vec",3],["ciphersuitename",4],["credentialtype",4]],[["result",4],["credentialerror",4]]]],[11,"credential","","",27,[[],["credential",3]]],[11,"sign","","Sign a `msg` using the private key of the credential bundle.",27,[[],[["result",4],["signature",3],["signatureerror",4]]]],[0,"extensions","openmls","",null,null],[3,"CapabilitiesExtension","openmls::extensions","",null,null],[12,"versions","","",31,null],[12,"ciphersuites","","",31,null],[12,"extensions","","",31,null],[3,"KeyIDExtension","","",null,null],[12,"key_id","","",32,null],[3,"LifetimeExtension","","The lifetime extension holds a not before and a not after…",null,null],[12,"not_before","","",33,null],[12,"not_after","","",33,null],[3,"ExtensionStruct","","Extension structAn extension has an `ExtensionType` and an…",null,null],[12,"extension_type","","",34,null],[12,"extension_data","","",34,null],[4,"ExtensionType","","Extension typesIANA registrations",null,null],[13,"Reserved","","",35,null],[13,"Capabilities","","",35,null],[13,"Lifetime","","",35,null],[13,"KeyID","","",35,null],[13,"ParentHash","","",35,null],[13,"RatchetTree","","",35,null],[5,"from_bytes","","Build a new extension of the given type from a byte slice.",null,[[["extensiontype",4]],[["box",3],["extensionerror",4],["result",4]]]],[5,"extensions_vec_from_cursor","","Read a list of extensions from a `Cursor` into a vector of…",null,[[["cursor",3]],[["vec",3],["result",4],["codecerror",4]]]],[0,"capabilities_extension","","Capabilities ExtensionKey Package Extension",null,null],[3,"CapabilitiesExtension","openmls::extensions::capabilities_extension","",null,null],[12,"versions","","",31,null],[12,"ciphersuites","","",31,null],[12,"extensions","","",31,null],[11,"new","openmls::extensions","Create a new capabilities extension with the given…",31,[[["option",4],["option",4],["option",4]]]],[11,"versions","","Get a reference to the list of versions in this extension.",31,[[]]],[11,"ciphersuites","","Get a reference to the list of cipher suites in this…",31,[[]]],[11,"extensions","","Get a reference to the list of supported extensions.",31,[[]]],[0,"errors","","Extension errors.An `ExtensionError` is thrown when an…",null,null],[4,"ExtensionError","openmls::extensions::errors","",null,null],[13,"InvalidExtensionType","","Invalid extension type error.",36,null],[13,"DecodingError","","Error when decoding an extension.",36,null],[13,"Capabilities","","Capabilities extension error. See…",36,null],[13,"Lifetime","","Lifetime extension error. See `LifetimeExtensionError` for…",36,null],[13,"KeyPackageId","","Key package ID extension error. See `KeyPackageIdError`…",36,null],[13,"ParentHash","","Parent hash extension error. See `ParentHashError` for…",36,null],[13,"RatchetTree","","Ratchet tree extension error. See `RatchetTreeError` for…",36,null],[4,"LifetimeExtensionError","","",null,null],[13,"Invalid","","Invalid lifetime extensions.",37,null],[13,"Expired","","Lifetime extension is expired.",37,null],[4,"CapabilitiesExtensionError","","",null,null],[13,"Invalid","","Invalid capabilities extensions.",38,null],[13,"EmptyVersionsField","","Capabilities extension is missing a version field.",38,null],[13,"UnsupportedCiphersuite","","Capabilities contains only unsupported ciphersuites.",38,null],[4,"KeyPackageIdError","","",null,null],[13,"Invalid","","Invalid key package ID extensions.",39,null],[4,"ParentHashError","","",null,null],[13,"Invalid","","Invalid parent hash extensions.",40,null],[4,"RatchetTreeError","","",null,null],[13,"Invalid","","Invalid ratchet tree extensions.",41,null],[0,"key_package_id_extension","openmls::extensions","KeyPackage IdentifiersKey Package Extension",null,null],[3,"KeyIDExtension","openmls::extensions::key_package_id_extension","",null,null],[12,"key_id","","",32,null],[11,"new","openmls::extensions","Create a new key identifier extension from a byte slice.",32,[[]]],[11,"as_slice","","Get the value of the key id as byte slice.",32,[[]]],[0,"life_time_extension","","Life time extensionKeyPackage Extension",null,null],[3,"LifetimeExtension","openmls::extensions::life_time_extension","The lifetime extension holds a not before and a not after…",null,null],[12,"not_before","","",33,null],[12,"not_after","","",33,null],[11,"new","openmls::extensions","Create a new lifetime extensions with lifetime `t` (in…",33,[[]]],[11,"is_valid","","Returns true if this lifetime is valid.",33,[[]]],[0,"parent_hash_extension","","Parent hash extensionKeyPackage Extension",null,null],[3,"ParentHashExtension","openmls::extensions::parent_hash_extension","",null,null],[12,"parent_hash","","",42,null],[11,"new","","",42,[[]]],[11,"parent_hash","","Get a reference to the parent hash value.",42,[[]]],[0,"ratchet_tree_extension","openmls::extensions","Ratchet tree extensionGroupInfo Extension",null,null],[3,"RatchetTreeExtension","openmls::extensions::ratchet_tree_extension","",null,null],[12,"tree","","",43,null],[11,"new","","Build a new extension from a vector of `Node`s.",43,[[["option",4],["vec",3]]]],[11,"into_vector","","",43,[[],[["option",4],["vec",3]]]],[8,"Extension","openmls::extensions","ExtensionThis trait defines functions to interact with an…",null,null],[10,"new_from_bytes","","Build a new extension from a byte slice.",44,[[],[["extensionerror",4],["result",4]]]],[10,"get_type","","Each extension has an extension type. This should be an…",44,[[],["extensiontype",4]]],[10,"to_extension_struct","","Get the extension as `ExtensionStruct` for encoding.",44,[[],["extensionstruct",3]]],[10,"as_any","","Get a generic trait object for downcasting.",44,[[],["any",8]]],[11,"to_parent_hash_extension","","Get a reference to the `ParentHashExtension`. Returns an…",44,[[],[["result",4],["parenthashextension",3],["extensionerror",4]]]],[11,"to_capabilities_extension","","Get a reference to the `CapabilitiesExtension`. Returns an…",44,[[],[["extensionerror",4],["capabilitiesextension",3],["result",4]]]],[11,"to_lifetime_extension","","Get a reference to the `LifetimeExtension`. Returns an…",44,[[],[["lifetimeextension",3],["extensionerror",4],["result",4]]]],[11,"to_key_id_extension","","Get a reference to the `KeyIDExtension`. Returns an…",44,[[],[["result",4],["extensionerror",4],["keyidextension",3]]]],[11,"to_ratchet_tree_extension_ref","","Get a reference to the `RatchetTreeExtension`. Returns an…",44,[[],[["result",4],["extensionerror",4],["ratchettreeextension",3]]]],[8,"ExtensionHelper","","",null,null],[10,"clone_it","","",45,[[],[["extension",8],["box",3]]]],[11,"new","","Build a new `ExtensionStruct`.",34,[[["vec",3],["extensiontype",4]]]],[11,"_get_extension_data","","Get the type of this extension struct.",34,[[]]],[0,"framing","openmls","",null,null],[3,"MLSPlaintext","openmls::framing","",null,null],[12,"group_id","","",46,null],[12,"epoch","","",46,null],[12,"sender","","",46,null],[12,"authenticated_data","","",46,null],[12,"content_type","","",46,null],[12,"content","","",46,null],[12,"signature","","",46,null],[3,"MLSCiphertext","","",null,null],[12,"group_id","","",47,null],[12,"epoch","","",47,null],[12,"content_type","","",47,null],[12,"authenticated_data","","",47,null],[12,"encrypted_sender_data","","",47,null],[12,"ciphertext","","",47,null],[3,"MLSPlaintextTBS","","",null,null],[12,"serialized_context_option","","",48,null],[12,"group_id","","",48,null],[12,"epoch","","",48,null],[12,"sender","","",48,null],[12,"authenticated_data","","",48,null],[12,"content_type","","",48,null],[12,"payload","","",48,null],[3,"MLSSenderData","","",null,null],[12,"sender","","",49,null],[12,"generation","","",49,null],[12,"reuse_guard","","",49,null],[3,"MLSCiphertextSenderDataAAD","","",null,null],[12,"group_id","","",50,null],[12,"epoch","","",50,null],[12,"content_type","","",50,null],[3,"MLSCiphertextContent","","",null,null],[12,"content","","",51,null],[12,"signature","","",51,null],[12,"padding","","",51,null],[3,"MLSCiphertextContentAAD","","",null,null],[12,"group_id","","",52,null],[12,"epoch","","",52,null],[12,"content_type","","",52,null],[12,"authenticated_data","","",52,null],[3,"MLSPlaintextCommitContent","","",null,null],[12,"group_id","","",53,null],[12,"epoch","","",53,null],[12,"sender","","",53,null],[12,"content_type","","",53,null],[12,"commit","","",53,null],[3,"MLSPlaintextCommitAuthData","","",null,null],[12,"confirmation_tag","","",54,null],[4,"ContentType","","",null,null],[13,"Invalid","","",55,null],[13,"Application","","",55,null],[13,"Proposal","","",55,null],[13,"Commit","","",55,null],[13,"Default","","",55,null],[4,"MLSPlaintextContentType","","",null,null],[13,"Application","","",56,null],[13,"Proposal","","",56,null],[13,"Commit","","",56,null],[0,"errors","","Framing errors.`MLSPlaintextError` and…",null,null],[4,"MLSPlaintextError","openmls::framing::errors","",null,null],[13,"NotAnApplicationMessage","","This is not an application message.",57,null],[4,"MLSCiphertextError","","",null,null],[13,"InvalidContentType","","Invalid content type in message.",58,null],[13,"GenerationOutOfBound","","Ratcheting secret generation is not found.",58,null],[0,"sender","openmls::framing","Section  9. Message Framing",null,null],[3,"Sender","openmls::framing::sender","",null,null],[12,"sender_type","","",59,null],[12,"sender","","",59,null],[4,"SenderType","","",null,null],[13,"Invalid","","",60,null],[13,"Member","","",60,null],[13,"Preconfigured","","",60,null],[13,"NewMember","","",60,null],[13,"Default","","",60,null],[11,"member","","",59,[[["leafindex",3]]]],[11,"to_node_index","","",59,[[],["nodeindex",3]]],[11,"to_leaf_index","","",59,[[],["leafindex",3]]],[11,"new","openmls::framing","",46,[[["credentialbundle",3],["groupcontext",3],["leafindex",3],["mlsplaintextcontenttype",4]]]],[11,"sign","","",46,[[["credentialbundle",3],["option",4],["vec",3]]]],[11,"verify","","",46,[[["option",4],["vec",3],["credential",3]]]],[11,"as_application_message","","",46,[[],[["result",4],["mlsplaintexterror",4]]]],[11,"as_slice","","",47,[[],["vec",3]]],[11,"new_from_plaintext","","",47,[[["aeadkey",3],["aeadnonce",3],["mlsgroup",3],["mlsplaintext",3]],["mlsciphertext",3]]],[11,"to_plaintext","","",47,[[["secrettree",3],["groupcontext",3],["epochsecrets",3],["ciphersuite",3]],[["result",4],["mlsciphertexterror",4],["mlsplaintext",3]]]],[11,"encode_padded_ciphertext_content_detached","","",47,[[["mlsplaintext",3]],[["vec",3],["codecerror",4],["result",4]]]],[11,"new_from","","",48,[[["option",4],["vec",3],["mlsplaintext",3]]]],[11,"sign","","",48,[[["credentialbundle",3]],["signature",3]]],[11,"verify","","",48,[[["credential",3],["signature",3]]]],[11,"from_bytes","","",49,[[],[["codecerror",4],["result",4]]]],[11,"new","","",49,[[["leafindex",3],["reuseguard",3]]]],[11,"new","","",50,[[["contenttype",4],["groupid",3],["groupepoch",3]]]],[11,"from_bytes","","",51,[[],[["codecerror",4],["result",4]]]],[11,"new","","",53,[[["leafindex",3],["groupcontext",3],["commit",3]]]],[11,"serialize","","",53,[[],["vec",3]]],[11,"serialize","","",54,[[],["vec",3]]],[0,"group","openmls","Group APIs for MLS",null,null],[3,"GroupId","openmls::group","",null,null],[12,"value","","",61,null],[3,"GroupEpoch","","",null,null],[12,"0","","",62,null],[3,"GroupContext","","",null,null],[12,"group_id","","",63,null],[12,"epoch","","",63,null],[12,"tree_hash","","",63,null],[12,"confirmed_transcript_hash","","",63,null],[3,"GroupConfig","","Configuration for an MLS group.",null,null],[12,"add_ratchet_tree_extension","","Flag whether to send the ratchet tree along with the…",64,null],[12,"padding_block_size","","",64,null],[12,"additional_as_epochs","","",64,null],[0,"errors","","MLS Group errors`WelcomeError`, `ApplyCommitError`,…",null,null],[4,"GroupError","openmls::group::errors","",null,null],[13,"DecryptionError","","",65,null],[4,"WelcomeError","","",null,null],[13,"CiphersuiteMismatch","","",66,null],[13,"JoinerSecretNotFound","","",66,null],[13,"MissingRatchetTree","","",66,null],[13,"TreeHashMismatch","","",66,null],[13,"JoinerNotInTree","","",66,null],[13,"ConfirmationTagMismatch","","",66,null],[13,"InvalidRatchetTree","","",66,null],[13,"InvalidGroupInfoSignature","","",66,null],[13,"GroupInfoDecryptionFailure","","",66,null],[13,"DuplicateRatchetTreeExtension","","",66,null],[13,"UnsupportedMlsVersion","","",66,null],[13,"UnknownError","","",66,null],[4,"ApplyCommitError","","",null,null],[13,"EpochMismatch","","",67,null],[13,"WrongPlaintextContentType","","",67,null],[13,"SelfRemoved","","",67,null],[13,"PathKeyPackageVerificationFailure","","",67,null],[13,"NoParentHashExtension","","",67,null],[13,"ParentHashMismatch","","",67,null],[13,"PlaintextSignatureFailure","","",67,null],[13,"RequiredPathNotFound","","",67,null],[13,"ConfirmationTagMismatch","","",67,null],[13,"MissingOwnKeyPackage","","",67,null],[13,"MissingProposal","","",67,null],[13,"OwnKeyNotFound","","",67,null],[4,"CreateCommitError","","",null,null],[13,"CannotRemoveSelf","","",68,null],[13,"OwnKeyNotFound","","",68,null],[0,"managed_group","openmls::group","",null,null],[3,"ManagedGroup","openmls::group::managed_group","A `ManagedGroup` represents an `MLSGroup` with an easier,…",null,null],[12,"managed_group_config","","",69,null],[12,"group","","",69,null],[12,"proposal_queue","","",69,null],[12,"own_kpbs","","",69,null],[3,"ManagedGroupConfig","","Specifies the configuration parameters for a managed group",null,null],[12,"encrypt_hs_messages","","Defines whether handshake messages should be encrypted",70,null],[12,"update_policy","","Defines the update policy",70,null],[12,"callbacks","","Callbacks",70,null],[3,"UpdatePolicy","","Specifies in which intervals the own leaf node should be…",null,null],[12,"maximum_time","","Maximum time before an update in seconds",71,null],[12,"maximum_sent_messages","","Maximum messages that are sent before an update in seconds",71,null],[12,"maximum_received_messages","","Maximum messages that are received before an update in…",71,null],[3,"ManagedGroupCallbacks","","Collection of callback functions that are passed to a…",null,null],[12,"validate_add","","",72,null],[12,"validate_remove","","",72,null],[12,"member_added","","",72,null],[12,"member_removed","","",72,null],[12,"member_updated","","",72,null],[12,"app_message_received","","",72,null],[12,"invalid_message_received","","",72,null],[12,"error_occured","","",72,null],[4,"HandshakeMessageFormat","","",null,null],[13,"Plaintext","","",73,null],[13,"Ciphertext","","",73,null],[4,"MLSMessage","","Unified message type",null,null],[13,"Plaintext","","",74,null],[13,"Ciphertext","","",74,null],[4,"ManagedGroupError","","",null,null],[13,"Codec","","",75,null],[13,"Config","","",75,null],[13,"UseAfterEviction","","",75,null],[4,"InvalidMessageError","","",null,null],[13,"Unknown","","",76,null],[6,"ValidateAdd","","Validator function for AddProposals `(managed_group:…",null,null],[6,"ValidateRemove","","Validator function for RemoveProposals `(managed_group:…",null,null],[6,"MemberAdded","","Event listener function for AddProposals `(managed_group:…",null,null],[6,"MemberRemoved","","Event listener function for RemoveProposals…",null,null],[6,"MemberUpdated","","Event listener function for UpdateProposals…",null,null],[6,"AppMessageReceived","","Event listener function for application messages…",null,null],[6,"InvalidMessageReceived","","Event listener function for invalid messages…",null,null],[6,"ErrorOccured","","Event listener function for errors that occur…",null,null],[11,"new","","Creates a new group from scratch with only the creator as…",69,[[["credentialbundle",3],["managedgroupconfig",3],["keypackagebundle",3],["groupid",3]],[["result",4],["managedgrouperror",4]]]],[11,"new_from_welcome","","Creates a new group from a `Welcome` message",69,[[["credentialbundle",3],["option",4],["managedgroupconfig",3],["welcome",3],["vec",3],["keypackagebundle",3]],[["welcomeerror",4],["result",4]]]],[11,"add_members","","Adds members to the group",69,[[["credentialbundle",3]],[["result",4],["managedgrouperror",4]]]],[11,"remove_members","","Removes members from the group",69,[[["credentialbundle",3]],[["result",4],["vec",3],["managedgrouperror",4]]]],[11,"propose_add_members","","Creates proposals to add members to the group",69,[[["credentialbundle",3]],[["result",4],["managedgrouperror",4]]]],[11,"propose_remove_members","","Creates proposals to remove members from the group",69,[[["credentialbundle",3]],[["result",4],["vec",3],["managedgrouperror",4]]]],[11,"get_members","","Gets the current list of members",69,[[]]],[11,"process_messages","","Processes any incoming messages from the DS (MLSPlaintext…",69,[[]]],[11,"create_message","","Create an application message",69,[[["credentialbundle",3]],["mlsmessage",4]]],[11,"export_secret","","Exports a secret from the current epoch",69,[[],["vec",3]]],[11,"configuration","","Gets the configuration",69,[[],["managedgroupconfig",3]]],[11,"set_configuration","","Sets the configuration",69,[[["managedgroupconfig",3]]]],[11,"aad","","Gets the AAD used in the framing",69,[[]]],[11,"set_aad","","Sets the AAD used in the framing",69,[[]]],[11,"self_update","","Updates the own leaf node",69,[[["credentialbundle",3]],[["result",4],["vec",3],["managedgrouperror",4]]]],[11,"propose_self_update","","Creates a proposal to update the own leaf node",69,[[["credentialbundle",3]],[["result",4],["vec",3],["managedgrouperror",4]]]],[11,"get_pending_proposals","","Returns a list of proposal",69,[[],[["vec",3],["proposal",4]]]],[11,"load","","Loads the state from persisted state",69,[[["managedgroupconfig",3],["read",8],["box",3]],["managedgroup",3]]],[11,"save","","Persists the state",69,[[["box",3],["write",8]]]],[11,"group_id","","Get group ID",69,[[],["groupid",3]]],[11,"client_id","","Get client ID",69,[[]]],[11,"member","","Get credential from LeafIndex",69,[[["leafindex",3]],["credential",3]]],[11,"export_ratchet_tree","","Export the Ratchet Tree",69,[[],[["option",4],["vec",3]]]],[11,"new","","",70,[[["handshakemessageformat",4],["updatepolicy",3],["managedgroupcallbacks",3]]]],[11,"new","","",72,[[["option",4],["option",4],["option",4],["option",4],["option",4],["option",4],["option",4],["option",4]]]],[0,"mls_group","openmls::group","",null,null],[3,"MlsGroup","openmls::group::mls_group","",null,null],[12,"ciphersuite","","",77,null],[12,"group_context","","",77,null],[12,"epoch_secrets","","",77,null],[12,"secret_tree","","",77,null],[12,"tree","","",77,null],[12,"interim_transcript_hash","","",77,null],[12,"add_ratchet_tree_extension","","",77,null],[5,"update_confirmed_transcript_hash","","",null,[[["ciphersuite",3],["mlsplaintextcommitcontent",3]],["vec",3]]],[5,"update_interim_transcript_hash","","",null,[[["ciphersuite",3],["mlsplaintextcommitauthdata",3]],["vec",3]]],[5,"compute_welcome_key_nonce","","",null,[[["secret",3],["ciphersuite",3]]]],[0,"apply_commit","","",null,null],[11,"apply_commit_internal","","",77,[[["vec",3],["mlsplaintext",3]],[["result",4],["applycommiterror",4]]]],[0,"create_commit","","",null,null],[11,"create_commit_internal","","",77,[[["credentialbundle",3],["vec",3],["mlsplaintext",3]],[["createcommiterror",4],["result",4]]]],[0,"new_from_welcome","","",null,null],[11,"new_from_welcome_internal","","",77,[[["option",4],["keypackagebundle",3],["vec",3],["welcome",3]],[["welcomeerror",4],["result",4]]]],[11,"find_key_package_from_welcome_secrets","","",77,[[["keypackage",3]],[["option",4],["encryptedgroupsecrets",3]]]],[11,"decrypt_group_info","","",77,[[["ciphersuite",3],["encryptedgroupsecrets",3],["hpkeprivatekey",3]],[["welcomeerror",4],["result",4]]]],[6,"CreateCommitResult","","",null,null],[11,"new","","",77,[[["ciphersuitename",4],["keypackagebundle",3],["groupconfig",3]],[["configerror",4],["result",4]]]],[11,"new_from_welcome","","",77,[[["option",4],["keypackagebundle",3],["vec",3],["welcome",3]],[["welcomeerror",4],["result",4]]]],[11,"create_add_proposal","","",77,[[["credentialbundle",3],["keypackage",3]],["mlsplaintext",3]]],[11,"create_update_proposal","","",77,[[["credentialbundle",3],["keypackage",3]],["mlsplaintext",3]]],[11,"create_remove_proposal","","",77,[[["credentialbundle",3],["leafindex",3]],["mlsplaintext",3]]],[11,"create_commit","","",77,[[["credentialbundle",3],["vec",3],["mlsplaintext",3]],[["createcommiterror",4],["result",4]]]],[11,"apply_commit","","",77,[[["vec",3],["mlsplaintext",3]],[["result",4],["applycommiterror",4]]]],[11,"create_application_message","","",77,[[["credentialbundle",3]],["mlsciphertext",3]]],[11,"encrypt","","",77,[[["mlsplaintext",3]],["mlsciphertext",3]]],[11,"decrypt","","",77,[[["mlsciphertext",3]],[["mlsplaintext",3],["grouperror",4],["result",4]]]],[11,"export_secret","","",77,[[],["secret",3]]],[11,"tree","","",77,[[],[["ref",3],["ratchettree",3]]]],[11,"sender_index","","",77,[[],["leafindex",3]]],[11,"ciphersuite","","Get the ciphersuite implementation used in this group.",77,[[],["ciphersuite",3]]],[11,"context","","",77,[[],["groupcontext",3]]],[11,"group_id","","",77,[[],["groupid",3]]],[11,"epoch_secrets","","",77,[[],["epochsecrets",3]]],[11,"random","openmls::group","",61,[[]]],[11,"from_slice","","",61,[[]]],[11,"as_slice","","",61,[[],["vec",3]]],[11,"increment","","",62,[[]]],[11,"serialize","","",63,[[],["vec",3]]],[11,"get_padding_block_size","","Get the padding block size used in this config.",64,[[]]],[0,"key_packages","openmls","",null,null],[3,"KeyPackage","openmls::key_packages","",null,null],[12,"protocol_version","","",78,null],[12,"cipher_suite","","",78,null],[12,"hpke_init_key","","",78,null],[12,"credential","","",78,null],[12,"extensions","","",78,null],[12,"signature","","",78,null],[3,"KeyPackageBundle","","",null,null],[12,"key_package","","",79,null],[12,"private_key","","",79,null],[12,"leaf_secret","","",79,null],[0,"codec","","",null,null],[0,"errors","","Key Package errors`KeyPackageError` are thrown on errors…",null,null],[4,"KeyPackageError","openmls::key_packages::errors","",null,null],[13,"UnknownExtensionError","","An unknown extension error occurred.",80,null],[13,"ExtensionNotPresent","","The requested extension is not present in the key package.",80,null],[13,"UnsupportedCiphersuite","","The requested ciphersuite is not supported.",80,null],[13,"UnknownConfigError","","An unknown configuration error occurred.",80,null],[13,"MandatoryExtensionsMissing","","A mandatory extension is missing in the key package.",80,null],[13,"InvalidLifetimeExtension","","The lifetime extension of the key package is not valid.",80,null],[13,"InvalidSignature","","The key package signature is not valid.",80,null],[13,"LibraryError","","An unknown OpenMLS library error occurred.",80,null],[13,"DuplicateExtension","","Duplicate extensions are not allowed.",80,null],[13,"NoCiphersuitesSupplied","","Creating a new key package requires at least one…",80,null],[13,"CiphersuiteMismatch","","The list of ciphersuites is not consistent with the…",80,null],[17,"MANDATORY_EXTENSIONS","openmls::key_packages","Mandatory extensions for key packages.",null,null],[11,"verify","","Verify that this key package is valid:",78,[[],[["result",4],["keypackageerror",4]]]],[11,"hash","","Compute the hash of the encoding of this key package.",78,[[],["vec",3]]],[11,"key_id","","Get the ID of this key package as byte slice. Returns an…",78,[[],[["result",4],["keypackageerror",4]]]],[11,"add_extension","","Add (or replace) an extension to the KeyPackage. Make sure…",78,[[["box",3],["extension",8]]]],[11,"extensions","","Get a reference to the extensions of this key package.",78,[[]]],[11,"credential","","Get a reference to the credential.",78,[[],["credential",3]]],[11,"sign","","Populate the `signature` field using the…",78,[[["credentialbundle",3]]]],[11,"new","","Create a new key package but only with the given…",78,[[["credentialbundle",3],["vec",3],["ciphersuitename",4],["hpkepublickey",3],["box",3]],[["result",4],["keypackageerror",4]]]],[11,"unsigned_payload","","Compile the unsigned payload to create the signature…",78,[[],[["vec",3],["codecerror",4],["result",4]]]],[11,"get_extension","","Get a reference to the extension of `extension_type`.…",78,[[["extensiontype",4]],[["box",3],["option",4]]]],[11,"update_parent_hash","","Update the parent hash extension of this key package.",78,[[]]],[11,"remove_extension","","Remove an extension from the KeyPackage Make sure to…",78,[[["extensiontype",4]]]],[11,"hpke_init_key","","Get a reference to the HPKE init key.",78,[[],["hpkepublickey",3]]],[11,"set_hpke_init_key","","Set a new HPKE init key.",78,[[["hpkepublickey",3]]]],[11,"cipher_suite","","Get the `Ciphersuite`.",78,[[],["ciphersuite",3]]],[11,"new","","Create a new `KeyPackageBundle` with a fresh…",79,[[["credentialbundle",3],["vec",3],["box",3]],[["result",4],["keypackageerror",4]]]],[11,"new_with_keypair","","Create a new `KeyPackageBundle` for the given…",79,[[["credentialbundle",3],["vec",3],["hpkekeypair",3],["secret",3],["box",3]],[["result",4],["keypackageerror",4]]]],[11,"get_key_package","","Get a reference to the `KeyPackage`.",79,[[],["keypackage",3]]],[11,"new_from_leaf_secret","","",79,[[["credentialbundle",3],["vec",3],["secret",3],["box",3]],[["result",4],["keypackageerror",4]]]],[11,"new_from_values","","Assembles a new KeyPackageBundle from a KeyPackage, a…",79,[[["keypackage",3],["hpkeprivatekey",3],["secret",3]]]],[11,"from_rekeyed_key_package","","Replace the init key in the `KeyPackage` with a random one…",79,[[["keypackage",3],["ciphersuite",3]]]],[11,"_set_private_key","","Update the private key in the bundle.",79,[[["hpkeprivatekey",3]]]],[11,"set_key_package","","Update the key package in the bundle.",79,[[["keypackage",3]]]],[11,"get_key_package_ref_mut","","Get a mutable reference to the `KeyPackage`.",79,[[],["keypackage",3]]],[11,"get_private_key_ref","","Get a reference to the `HPKEPrivateKey`.",79,[[],["hpkeprivatekey",3]]],[11,"leaf_secret","","Get a reference to the `leaf_secret`.",79,[[],["secret",3]]],[11,"derive_leaf_node_secret","","This function derives the leaf_node_secret from the…",79,[[["secret",3],["ciphersuite",3]],["secret",3]]],[0,"messages","openmls","",null,null],[3,"Commit","openmls::messages","",null,null],[12,"proposals","","",81,null],[12,"path","","",81,null],[3,"ConfirmationTag","","",null,null],[12,"0","","",82,null],[3,"GroupInfo","","",null,null],[12,"group_id","","",83,null],[12,"epoch","","",83,null],[12,"tree_hash","","",83,null],[12,"confirmed_transcript_hash","","",83,null],[12,"extensions","","",83,null],[12,"confirmation_tag","","",83,null],[12,"signer_index","","",83,null],[12,"signature","","",83,null],[3,"PathSecret","","",null,null],[12,"path_secret","","",84,null],[3,"GroupSecrets","","",null,null],[12,"joiner_secret","","",85,null],[12,"path_secret","","",85,null],[3,"EncryptedGroupSecrets","","",null,null],[12,"key_package_hash","","",86,null],[12,"encrypted_group_secrets","","",86,null],[3,"Welcome","","",null,null],[12,"version","","",87,null],[12,"cipher_suite","","",87,null],[12,"secrets","","",87,null],[12,"encrypted_group_info","","",87,null],[0,"proposals","","",null,null],[3,"ProposalID","openmls::messages::proposals","",null,null],[12,"value","","",88,null],[3,"QueuedProposal","","Alternative representation of a Proposal, where the sender…",null,null],[12,"proposal","","",89,null],[12,"proposal_id","","",89,null],[12,"sender","","",89,null],[3,"ProposalQueue","","Proposal queue that helps filtering and sorting the…",null,null],[12,"queued_proposals","","",90,null],[3,"AddProposal","","",null,null],[12,"key_package","","",91,null],[3,"UpdateProposal","","",null,null],[12,"key_package","","",92,null],[3,"RemoveProposal","","",null,null],[12,"removed","","",93,null],[4,"ProposalType","","",null,null],[13,"Invalid","","",94,null],[13,"Add","","",94,null],[13,"Update","","",94,null],[13,"Remove","","",94,null],[13,"Default","","",94,null],[4,"Proposal","","",null,null],[13,"Add","","",95,null],[13,"Update","","",95,null],[13,"Remove","","",95,null],[11,"get_type","","",95,[[],["proposaltype",4]]],[11,"is_type","","",95,[[["proposaltype",4]]]],[11,"as_add","","",95,[[],[["addproposal",3],["option",4]]]],[11,"as_update","","",95,[[],[["option",4],["updateproposal",3]]]],[11,"as_remove","","",95,[[],[["removeproposal",3],["option",4]]]],[11,"from_proposal","","",88,[[["ciphersuite",3],["proposal",4]]]],[11,"new","","Creates a new `QueuedProposal` from an `MLSPlaintext`",89,[[["ciphersuite",3],["mlsplaintext",3]]]],[11,"get_proposal_ref","","Returns the `Proposal` as a reference",89,[[],["proposal",4]]],[11,"get_proposal_id_ref","","Returns the `ProposalID` as a reference",89,[[],["proposalid",3]]],[11,"get_sender_ref","","Returns the `Sender` as a reference",89,[[],["sender",3]]],[11,"new","","",90,[[]]],[11,"new_from_committed_proposals","","Returns a new `ProposalQueue` from proposals that were…",90,[[["vec",3],["ciphersuite",3],["mlsplaintext",3]]]],[11,"filtered_proposals","","Filters received proposals",90,[[["mlsplaintext",3],["ciphersuite",3],["leafindex",3],["vec",3]]]],[11,"contains","","Returns `true` if all `ProposalID` values from the list…",90,[[]]],[11,"add","","Add a new `QueuedProposal` to the queue",90,[[["queuedproposal",3]]]],[11,"retain","","Retains only the elements specified by the predicate",90,[[]]],[11,"get_proposal_id_list","","Gets the list of all `ProposalID`",90,[[],[["proposalid",3],["vec",3]]]],[11,"get_filtered_proposals","","Return a list of fileterd `QueuedProposal`",90,[[["proposaltype",4]],[["queuedproposal",3],["vec",3]]]],[11,"new","openmls::messages","",82,[[["secret",3],["ciphersuite",3]]]],[11,"new_empty","","",82,[[]]],[11,"as_slice","","",82,[[],["vec",3]]],[11,"new","","",83,[[["leafindex",3],["vec",3],["vec",3],["groupid",3],["groupepoch",3],["box",3]]]],[11,"tree_hash","","Get the tree hash as byte slice.",83,[[]]],[11,"signer_index","","Get the signer index.",83,[[],["leafindex",3]]],[11,"signature","","Get the signature.",83,[[],["signature",3]]],[11,"set_signature","","Set the signature.",83,[[["signature",3]]]],[11,"group_id","","Get the group ID.",83,[[],["groupid",3]]],[11,"epoch","","Get the epoch.",83,[[],["groupepoch",3]]],[11,"confirmed_transcript_hash","","Get the confirmed transcript hash.",83,[[]]],[11,"confirmation_tag","","Get the confirmed tag.",83,[[]]],[11,"extensions","","Get the extensions.",83,[[]]],[11,"extensions_mut","","Get the extensions as mutable reference.",83,[[],["vec",3]]],[11,"from_bytes","","",83,[[],[["codecerror",4],["result",4]]]],[11,"new","","Create a new welcome message from the provided data. Note…",87,[[["ciphersuite",3],["vec",3],["protocolversion",4],["vec",3],["encryptedgroupsecrets",3]]]],[11,"ciphersuite","","Get a reference to the ciphersuite in this Welcome message.",87,[[],["ciphersuite",3]]],[11,"get_secrets_ref","","Get a reference to the ciphersuite in this Welcome message.",87,[[]]],[11,"get_encrypted_group_info_ref","","Get a reference to the encrypted group info.",87,[[]]],[0,"schedule","openmls","",null,null],[3,"HkdfLabel","openmls::schedule","",null,null],[12,"length","","",96,null],[12,"label","","",96,null],[12,"context","","",96,null],[3,"EpochSecrets","","",null,null],[12,"welcome_secret","","",97,null],[12,"sender_data_secret","","",97,null],[12,"encryption_secret","","",97,null],[12,"exporter_secret","","",97,null],[12,"confirmation_key","","",97,null],[12,"init_secret","","",97,null],[5,"derive_secret","","",null,[[["secret",3],["ciphersuite",3]],["secret",3]]],[5,"mls_exporter","","",null,[[["ciphersuite",3],["groupcontext",3],["epochsecrets",3]],["secret",3]]],[5,"hkdf_expand_label","","",null,[[["secret",3],["ciphersuite",3]],["secret",3]]],[0,"errors","","",null,null],[4,"KeyScheduleError","openmls::schedule::errors","",null,null],[13,"SecretReuseError","","",98,null],[11,"new","openmls::schedule","",96,[[]]],[11,"serialize","","",96,[[],["vec",3]]],[11,"get_new_epoch_secrets","","",97,[[["secret",3],["option",4],["groupcontext",3],["ciphersuite",3]],["secret",3]]],[11,"derive_epoch_secrets","","",97,[[["secret",3],["ciphersuite",3],["secret",3]],["epochsecrets",3]]],[11,"create_secret_tree","","Create a `SecretTree` from the `encryption_secret`…",97,[[["leafindex",3]],[["result",4],["keyscheduleerror",4],["secrettree",3]]]],[11,"consume_encryption_secret","","Consume the `encryption_secret` from the `EpochSecrets`,…",97,[[],[["secret",3],["result",4],["keyscheduleerror",4]]]],[11,"sender_data_secret","","Get the sender_data secret.",97,[[],["secret",3]]],[11,"confirmation_key","","Get the confirmation key.",97,[[],["secret",3]]],[0,"tree","openmls","",null,null],[3,"RatchetTree","openmls::tree","The ratchet tree.",null,null],[12,"ciphersuite","","The ciphersuite used in this tree.",99,null],[12,"nodes","","All nodes in the tree. Note that these only hold public…",99,null],[12,"private_tree","","This holds all private values in the tree. See…",99,null],[3,"UpdatePathNode","","7.7. Update Paths",null,null],[12,"public_key","","",100,null],[12,"encrypted_path_secret","","",100,null],[3,"UpdatePath","","7.7. Update Paths",null,null],[12,"leaf_key_package","","",101,null],[12,"nodes","","",101,null],[4,"TreeError","","These are errors the RatchetTree can return.",null,null],[13,"InvalidArguments","","",102,null],[13,"DuplicateIndex","","",102,null],[13,"InvalidUpdatePath","","",102,null],[13,"UnknownError","","",102,null],[0,"codec","","",null,null],[0,"hash_input","","7.5. Tree Hashes",null,null],[3,"ParentNodeHashInput","openmls::tree::hash_input","",null,null],[12,"node_index","","",103,null],[12,"parent_node","","",103,null],[12,"left_hash","","",103,null],[12,"right_hash","","",103,null],[3,"LeafNodeHashInput","","",null,null],[12,"node_index","","",104,null],[12,"key_package","","",104,null],[11,"new","","",103,[[["option",4]]]],[11,"hash","","",103,[[["ciphersuite",3]],["vec",3]]],[11,"new","","",104,[[["option",4],["nodeindex",3]]]],[11,"hash","","",104,[[["ciphersuite",3]],["vec",3]]],[0,"index","openmls::tree","",null,null],[3,"NodeIndex","openmls::tree::index","",null,null],[12,"0","","",105,null],[3,"LeafIndex","","",null,null],[12,"0","","",106,null],[11,"as_u32","","",105,[[]]],[11,"as_usize","","",105,[[]]],[11,"as_u32","","",106,[[]]],[11,"as_usize","","",106,[[]]],[0,"node","openmls::tree","",null,null],[3,"Node","openmls::tree::node","",null,null],[12,"node_type","","",107,null],[12,"key_package","","",107,null],[12,"node","","",107,null],[3,"ParentNode","","",null,null],[12,"public_key","","",108,null],[12,"unmerged_leaves","","",108,null],[12,"parent_hash","","",108,null],[4,"NodeType","","",null,null],[13,"Leaf","","",109,null],[13,"Parent","","",109,null],[13,"Default","","",109,null],[11,"new_leaf","","",107,[[["option",4],["keypackage",3]]]],[11,"new_blank_parent_node","","",107,[[]]],[11,"get_public_hpke_key","","",107,[[],[["hpkepublickey",3],["option",4]]]],[11,"blank","","",107,[[]]],[11,"is_blank","","",107,[[]]],[11,"hash","","",107,[[["ciphersuite",3]],[["option",4],["vec",3]]]],[11,"parent_hash","","",107,[[],[["option",4],["vec",3]]]],[11,"get_key_package_ref_mut","","Get a mutable reference to the key package in this node.",107,[[],[["keypackage",3],["option",4]]]],[11,"new","","",108,[[["hpkepublickey",3]]]],[11,"get_public_key","","",108,[[],["hpkepublickey",3]]],[11,"get_parent_hash","","",108,[[]]],[11,"set_parent_hash","","",108,[[["vec",3]]]],[11,"get_unmerged_leaves","","",108,[[]]],[11,"get_unmerged_leaves_mut","","",108,[[],["vec",3]]],[0,"path_keys","openmls::tree","A data structure holding HPKE key pairs for a path in the…",null,null],[3,"PathKeys","openmls::tree::path_keys","A set of keys for a path stored as `HashMap` with entries…",null,null],[12,"keys","","",110,null],[11,"add","","Add a slice of `HPKEPrivateKey`s with the indices given in…",110,[[["hpkeprivatekey",3],["vec",3]]]],[11,"get","","Get an HPKE private key for a given node index.",110,[[["nodeindex",3]],[["option",4],["hpkeprivatekey",3]]]],[0,"private_tree","openmls::tree","A data structure holding information about the leaf node…",null,null],[3,"PrivateTree","openmls::tree::private_tree","",null,null],[12,"node_index","","",111,null],[12,"hpke_private_key","","",111,null],[12,"path_keys","","",111,null],[12,"commit_secret","","",111,null],[12,"path_secrets","","",111,null],[6,"PathSecrets","","",null,null],[11,"new","","Create a new empty placeholder `PrivateTree` with default…",111,[[["nodeindex",3]],["privatetree",3]]],[11,"from_key_package_bundle","","Create a minimal `PrivateTree` setting only the private…",111,[[["keypackagebundle",3],["nodeindex",3]]]],[11,"new_with_keys","","Creates a `PrivateTree` with a new private key, leaf…",111,[[["ciphersuite",3],["keypackagebundle",3],["nodeindex",3]]]],[11,"get_hpke_private_key","","",111,[[],["hpkeprivatekey",3]]],[11,"get_node_index","","",111,[[],["nodeindex",3]]],[11,"get_path_keys","","",111,[[],["pathkeys",3]]],[11,"get_commit_secret","","",111,[[],["secret",3]]],[11,"get_path_secrets","","",111,[[]]],[11,"generate_path_secrets","","Generate `n` path secrets with the given `leaf_secret`.",111,[[["secret",3],["ciphersuite",3]],[["hpkepublickey",3],["vec",3]]]],[11,"continue_path_secrets","","Generate `n` path secrets with the given `start_secret`.",111,[[["secret",3],["ciphersuite",3]],[["hpkepublickey",3],["vec",3]]]],[11,"derive_path_secrets","","This function generates the path secrets internally and is…",111,[[["secret",3],["ciphersuite",3],["vec",3]],[["hpkepublickey",3],["vec",3]]]],[11,"generate_commit_secret","","Generate the commit secret for the given `path_secret`.",111,[[["ciphersuite",3]]]],[11,"generate_path_keypairs","","Generate HPKE key pairs for all path secrets in…",111,[[["ciphersuite",3]],[["hpkepublickey",3],["vec",3]]]],[0,"secret_tree","openmls::tree","",null,null],[3,"TreeContext","openmls::tree::secret_tree","",null,null],[12,"node","","",112,null],[12,"generation","","",112,null],[3,"SecretTreeNode","","",null,null],[12,"secret","","",113,null],[3,"SecretTree","","",null,null],[12,"nodes","","",114,null],[12,"handshake_sender_ratchets","","",114,null],[12,"application_sender_ratchets","","",114,null],[12,"size","","",114,null],[4,"SecretTreeError","","",null,null],[13,"TooDistantInThePast","","",115,null],[13,"TooDistantInTheFuture","","",115,null],[13,"IndexOutOfBounds","","",115,null],[4,"SecretType","","",null,null],[13,"HandshakeSecret","","",116,null],[13,"ApplicationSecret","","",116,null],[4,"SecretTypeError","","",null,null],[13,"InvalidContentType","","",117,null],[5,"derive_tree_secret","","Derives secrets for inner nodes of a SecretTree",null,[[["secret",3],["ciphersuite",3]],["secret",3]]],[11,"new","","Creates a new SecretTree based on an `encryption_secret`…",114,[[["secret",3],["leafindex",3]]]],[11,"get_generation","","Get current generation for a specific SenderRatchet",114,[[["secrettype",4],["leafindex",3]]]],[11,"initialize_sender_ratchets","","Initializes a specific SenderRatchet pair for a given…",114,[[["ciphersuite",3],["leafindex",3]],[["secrettreeerror",4],["result",4]]]],[11,"get_secret_for_decryption","","Return RatchetSecrets for a given index and generation.…",114,[[["secrettype",4],["ciphersuite",3],["leafindex",3]],[["secrettreeerror",4],["result",4]]]],[11,"get_secret_for_encryption","","Return the next RatchetSecrets that should be used for…",114,[[["secrettype",4],["ciphersuite",3],["leafindex",3]]]],[11,"get_ratchet_mut","","Returns a mutable reference to a specific SenderRatchet.…",114,[[["secrettype",4],["leafindex",3]],["senderratchet",3]]],[11,"get_ratchet_opt","","Returns an optional reference to a specific SenderRatchet",114,[[["secrettype",4],["leafindex",3]],[["senderratchet",3],["option",4]]]],[11,"derive_down","","Derives the secrets for the child leaves in a SecretTree…",114,[[["ciphersuite",3],["nodeindex",3]]]],[0,"sender_ratchet","openmls::tree","",null,null],[3,"SenderRatchet","openmls::tree::sender_ratchet","",null,null],[12,"index","","",118,null],[12,"generation","","",118,null],[12,"past_secrets","","",118,null],[6,"RatchetSecrets","","",null,null],[17,"OUT_OF_ORDER_TOLERANCE","","",null,null],[17,"MAXIMUM_FORWARD_DISTANCE","","",null,null],[11,"new","","Creates e new SenderRatchet",118,[[["secret",3],["leafindex",3]]]],[11,"get_secret_for_decryption","","Gets a secret from the SenderRatchet. Returns an error if…",118,[[["ciphersuite",3]],[["secrettreeerror",4],["result",4]]]],[11,"get_secret_for_encryption","","Gets a secret from the SenderRatchet and ratchets forward",118,[[["ciphersuite",3]]]],[11,"ratchet_secret","","Computes the new secret",118,[[["secret",3],["ciphersuite",3]],["secret",3]]],[11,"derive_key_nonce","","Derives a key & nonce from a secret",118,[[["secret",3],["ciphersuite",3]]]],[11,"get_generation","","Gets the current generation",118,[[]]],[0,"treemath","openmls::tree","",null,null],[4,"TreeMathError","openmls::tree::treemath","",null,null],[13,"LeafHasNoChildren","","",119,null],[13,"RootHasNoParent","","",119,null],[5,"log2","","",null,[[]]],[5,"level","","",null,[[["nodeindex",3]]]],[5,"node_width","","",null,[[]]],[5,"root","","",null,[[["leafindex",3]],["nodeindex",3]]],[5,"left","","",null,[[["nodeindex",3]],[["result",4],["treematherror",4],["nodeindex",3]]]],[5,"right","","",null,[[["leafindex",3],["nodeindex",3]],[["result",4],["treematherror",4],["nodeindex",3]]]],[5,"parent_step","","",null,[[]]],[5,"parent","","",null,[[["leafindex",3],["nodeindex",3]],[["result",4],["treematherror",4],["nodeindex",3]]]],[5,"sibling","","",null,[[["leafindex",3],["nodeindex",3]],[["result",4],["treematherror",4],["nodeindex",3]]]],[5,"dirpath","","",null,[[["leafindex",3],["nodeindex",3]],[["vec",3],["result",4],["treematherror",4]]]],[5,"dirpath_long","","",null,[[["leafindex",3],["nodeindex",3]],[["vec",3],["result",4],["treematherror",4]]]],[5,"direct_path_root","","",null,[[["leafindex",3],["nodeindex",3]],[["vec",3],["result",4],["treematherror",4]]]],[5,"copath","","",null,[[["leafindex",3],["nodeindex",3]],[["vec",3],["result",4],["treematherror",4]]]],[5,"common_ancestor_index","","",null,[[["nodeindex",3]],["nodeindex",3]]],[6,"InvitationList","openmls::tree","",null,null],[11,"new","","Create a new empty `RatchetTree`.",99,[[["ciphersuite",3],["keypackagebundle",3]],["ratchettree",3]]],[11,"new_from_public_tree","","Create a new `RatchetTree` by cloning the public tree…",99,[[["ratchettree",3]]]],[11,"new_from_nodes","","Generate a new `RatchetTree` from `Node`s with the…",99,[[["ciphersuite",3],["keypackagebundle",3]],[["result",4],["treeerror",4],["ratchettree",3]]]],[11,"private_tree_mut","","Return a mutable reference to the `PrivateTree`.",99,[[],["privatetree",3]]],[11,"tree_size","","",99,[[],["nodeindex",3]]],[11,"public_key_tree","","Get a vector with all nodes in the tree, containing `None`…",99,[[],[["vec",3],["option",4]]]],[11,"public_key_tree_copy","","Get a vector with a copy of all nodes in the tree,…",99,[[],[["option",4],["vec",3]]]],[11,"leaf_count","","",99,[[],["leafindex",3]]],[11,"resolve","","",99,[[["nodeindex",3]],[["vec",3],["nodeindex",3]]]],[11,"get_own_node_index","","Get the index of the own node.",99,[[],["nodeindex",3]]],[11,"get_own_key_package_ref","","Get a reference to the own key package.",99,[[],["keypackage",3]]],[11,"get_own_key_package_ref_mut","","Get a mutable reference to the own key package.",99,[[],["keypackage",3]]],[11,"blank_member","","",99,[[["nodeindex",3]]]],[11,"free_leaves","","",99,[[],[["vec",3],["nodeindex",3]]]],[11,"update_path","","7.7. Update Paths",99,[[["leafindex",3],["updatepath",3]],[["secret",3],["result",4],["treeerror",4]]]],[11,"replace_private_tree","","Update the private tree with the new `KeyPackageBundle`.",99,[[["ciphersuite",3],["keypackagebundle",3]],[["secret",3],["result",4],["treeerror",4]]]],[11,"refresh_private_tree","","Update the private tree.",99,[[["credentialbundle",3],["ciphersuite",3]]]],[11,"replace_private_tree_","","Replace the private tree with a new one based on the…",99,[[["ciphersuite",3],["keypackagebundle",3]],[["option",4],["updatepath",3]]]],[11,"encrypt_to_copath","","Encrypt the path secrets to the co path and return the…",99,[[["hpkepublickey",3],["vec",3]],[["vec",3],["treeerror",4],["result",4]]]],[11,"merge_direct_path_keys","","Merge public keys from a direct path to this tree along…",99,[[["nodeindex",3],["vec",3],["updatepath",3]],[["treeerror",4],["result",4]]]],[11,"validate_public_keys","","Validates that the `public_keys` matches the public keys…",99,[[],[["treeerror",4],["result",4]]]],[11,"merge_public_keys","","Merges `public_keys` into the tree along the `path`",99,[[],[["treeerror",4],["result",4]]]],[11,"add_nodes","","Add nodes for the provided key packages.",99,[[],["vec",3]]],[11,"apply_proposals","","Applies a list of proposals from a Commit to the tree.…",99,[[["proposalqueue",3]],[["result",4],["treeerror",4]]]],[11,"trim_tree","","Trims the tree from the right when there are empty leaf…",99,[[]]],[11,"compute_tree_hash","","Computes the tree hash",99,[[],["vec",3]]],[11,"compute_parent_hash","","Computes the parent hash",99,[[["nodeindex",3]],["vec",3]]],[11,"verify_integrity","","Verifies the integrity of a public tree",99,[[["ciphersuite",3]]]],[11,"new","","Create a new update path.",101,[[["keypackage",3],["updatepathnode",3],["vec",3]]]],[0,"prelude","openmls","Single place, re-exporting the most used public functions.…",null,null],[3,"GroupConfig","openmls::prelude","Configuration for an MLS group.",null,null],[12,"add_ratchet_tree_extension","","Flag whether to send the ratchet tree along with the…",64,null],[12,"padding_block_size","","",64,null],[12,"additional_as_epochs","","",64,null],[3,"MlsGroup","","",null,null],[12,"ciphersuite","","",77,null],[12,"group_context","","",77,null],[12,"epoch_secrets","","",77,null],[12,"secret_tree","","",77,null],[12,"tree","","",77,null],[12,"interim_transcript_hash","","",77,null],[12,"add_ratchet_tree_extension","","",77,null],[3,"ManagedGroup","","A `ManagedGroup` represents an `MLSGroup` with an easier,…",null,null],[12,"managed_group_config","","",69,null],[12,"group","","",69,null],[12,"proposal_queue","","",69,null],[12,"own_kpbs","","",69,null],[3,"ManagedGroupCallbacks","","Collection of callback functions that are passed to a…",null,null],[12,"validate_add","","",72,null],[12,"validate_remove","","",72,null],[12,"member_added","","",72,null],[12,"member_removed","","",72,null],[12,"member_updated","","",72,null],[12,"app_message_received","","",72,null],[12,"invalid_message_received","","",72,null],[12,"error_occured","","",72,null],[3,"ManagedGroupConfig","","Specifies the configuration parameters for a managed group",null,null],[12,"encrypt_hs_messages","","Defines whether handshake messages should be encrypted",70,null],[12,"update_policy","","Defines the update policy",70,null],[12,"callbacks","","Callbacks",70,null],[3,"UpdatePolicy","","Specifies in which intervals the own leaf node should be…",null,null],[12,"maximum_time","","Maximum time before an update in seconds",71,null],[12,"maximum_sent_messages","","Maximum messages that are sent before an update in seconds",71,null],[12,"maximum_received_messages","","Maximum messages that are received before an update in…",71,null],[3,"LeafIndex","","",null,null],[12,"0","","",106,null],[3,"HpkeCiphertext","","7.7. Update Paths",null,null],[12,"kem_output","","",0,null],[12,"ciphertext","","",0,null],[3,"Secret","","A struct to contain secrets. This is to provide better…",null,null],[12,"value","","",1,null],[3,"AeadKey","","",null,null],[12,"aead_mode","","",2,null],[12,"value","","",2,null],[3,"ReuseGuard","","",null,null],[12,"value","","",3,null],[3,"AeadNonce","","",null,null],[12,"value","","",4,null],[3,"Signature","","",null,null],[12,"value","","",5,null],[3,"SignaturePrivateKey","","",null,null],[12,"ciphersuite","","",6,null],[12,"value","","",6,null],[3,"SignaturePublicKey","","",null,null],[12,"ciphersuite","","",7,null],[12,"value","","",7,null],[3,"SignatureKeypair","","",null,null],[12,"ciphersuite","","",8,null],[12,"private_key","","",8,null],[12,"public_key","","",8,null],[3,"Ciphersuite","","",null,null],[12,"name","","",9,null],[12,"signature","","",9,null],[12,"hpke","","",9,null],[12,"aead","","",9,null],[12,"hash","","",9,null],[12,"hmac","","",9,null],[3,"Cursor","","",null,null],[12,"buffer","","",14,null],[12,"position","","",14,null],[3,"Certificate","","Struct containing an X509 certificate chain, as per Spec.",null,null],[12,"cert_data","","",24,null],[3,"Credential","","Struct containing MLS credential data, where the data…",null,null],[12,"credential_type","","",25,null],[12,"credential","","",25,null],[3,"BasicCredential","","",null,null],[12,"identity","","",26,null],[12,"ciphersuite","","",26,null],[12,"public_key","","",26,null],[3,"CredentialBundle","","This struct contains a credential and the corresponding…",null,null],[12,"credential","","",27,null],[12,"signature_private_key","","",27,null],[3,"GroupId","","",null,null],[12,"value","","",61,null],[3,"AddProposal","","",null,null],[12,"key_package","","",91,null],[3,"RemoveProposal","","",null,null],[12,"removed","","",93,null],[3,"UpdateProposal","","",null,null],[12,"key_package","","",92,null],[3,"Welcome","","",null,null],[12,"version","","",87,null],[12,"cipher_suite","","",87,null],[12,"secrets","","",87,null],[12,"encrypted_group_info","","",87,null],[4,"HandshakeMessageFormat","","",null,null],[13,"Plaintext","","",73,null],[13,"Ciphertext","","",73,null],[4,"InvalidMessageError","","",null,null],[13,"Unknown","","",76,null],[4,"ManagedGroupError","","",null,null],[13,"Codec","","",75,null],[13,"Config","","",75,null],[13,"UseAfterEviction","","",75,null],[4,"ApplyCommitError","","",null,null],[13,"EpochMismatch","","",67,null],[13,"WrongPlaintextContentType","","",67,null],[13,"SelfRemoved","","",67,null],[13,"PathKeyPackageVerificationFailure","","",67,null],[13,"NoParentHashExtension","","",67,null],[13,"ParentHashMismatch","","",67,null],[13,"PlaintextSignatureFailure","","",67,null],[13,"RequiredPathNotFound","","",67,null],[13,"ConfirmationTagMismatch","","",67,null],[13,"MissingOwnKeyPackage","","",67,null],[13,"MissingProposal","","",67,null],[13,"OwnKeyNotFound","","",67,null],[4,"GroupError","","",null,null],[13,"DecryptionError","","",65,null],[4,"WelcomeError","","",null,null],[13,"CiphersuiteMismatch","","",66,null],[13,"JoinerSecretNotFound","","",66,null],[13,"MissingRatchetTree","","",66,null],[13,"TreeHashMismatch","","",66,null],[13,"JoinerNotInTree","","",66,null],[13,"ConfirmationTagMismatch","","",66,null],[13,"InvalidRatchetTree","","",66,null],[13,"InvalidGroupInfoSignature","","",66,null],[13,"GroupInfoDecryptionFailure","","",66,null],[13,"DuplicateRatchetTreeExtension","","",66,null],[13,"UnsupportedMlsVersion","","",66,null],[13,"UnknownError","","",66,null],[4,"CiphersuiteName","","",null,null],[13,"MLS10_128_DHKEMX25519_AES128GCM_SHA256_Ed25519","","",10,null],[13,"MLS10_128_DHKEMP256_AES128GCM_SHA256_P256","","",10,null],[13,"MLS10_128_DHKEMX25519_CHACHA20POLY1305_SHA256_Ed25519","","",10,null],[13,"MLS10_256_DHKEMX448_AES256GCM_SHA512_Ed448","","",10,null],[13,"MLS10_256_DHKEMP521_AES256GCM_SHA512_P521","","",10,null],[13,"MLS10_256_DHKEMX448_CHACHA20POLY1305_SHA512_Ed448","","",10,null],[4,"CodecError","","",null,null],[13,"EncodingError","","",15,null],[13,"DecodingError","","",15,null],[13,"Other","","",15,null],[4,"VecSize","","",null,null],[13,"VecU8","","",16,null],[13,"VecU16","","",16,null],[13,"VecU32","","",16,null],[13,"VecU64","","",16,null],[4,"CredentialError","","",null,null],[13,"UnknwonConfigError","","",28,null],[13,"UnsupportedCredentialType","","",28,null],[4,"CredentialType","","Enum for Credential Types. We only need this for…",null,null],[13,"Reserved","","",29,null],[13,"Basic","","",29,null],[13,"X509","","",29,null],[4,"MLSCredentialType","","This enum contains the different available credentials.",null,null],[13,"Basic","","",30,null],[13,"X509","","",30,null],[5,"encode_vec","","",null,[[["vecsize",4],["vec",3]],[["result",4],["codecerror",4]]]],[5,"decode_vec","","",null,[[["vecsize",4],["cursor",3]],[["vec",3],["codecerror",4],["result",4]]]],[5,"_print_tree","","",null,[[["ratchettree",3]]]],[8,"Codec","","",null,null],[11,"encode","openmls::codec","",17,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",17,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode_detached","","",17,[[],[["vec",3],["codecerror",4],["result",4]]]],[11,"from","openmls::ciphersuite","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","openmls::ciphersuite::errors","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","openmls::codec","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","openmls::config","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","openmls::config::errors","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","openmls::creds","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"clone_it","openmls::extensions","",31,[[],[["extension",8],["box",3]]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"clone_it","","",32,[[],[["extension",8],["box",3]]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"clone_it","","",33,[[],[["extension",8],["box",3]]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","openmls::extensions::errors","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"to_string","","",36,[[],["string",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"to_string","","",37,[[],["string",3]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"to_string","","",38,[[],["string",3]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"to_string","","",39,[[],["string",3]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"to_string","","",41,[[],["string",3]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"clone_it","openmls::extensions::parent_hash_extension","",42,[[],[["extension",8],["box",3]]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"clone_it","openmls::extensions::ratchet_tree_extension","",43,[[],[["extension",8],["box",3]]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","openmls::framing","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from","openmls::framing::errors","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_string","","",57,[[],["string",3]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_string","","",58,[[],["string",3]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"from","openmls::framing::sender","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"from","openmls::group","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"from","openmls::group::errors","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"from","openmls::group::managed_group","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"vzip","","",73,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_string","","",76,[[],["string",3]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"from","openmls::group::mls_group","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"from","openmls::key_packages","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"from","openmls::key_packages::errors","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"to_string","","",80,[[],["string",3]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"from","openmls::messages","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"vzip","","",85,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"from","openmls::messages::proposals","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"vzip","","",91,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"vzip","","",92,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"vzip","","",94,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"vzip","","",95,[[]]],[11,"from","openmls::schedule","",96,[[]]],[11,"into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"vzip","","",96,[[]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"vzip","","",97,[[]]],[11,"from","openmls::schedule::errors","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_string","","",98,[[],["string",3]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"vzip","","",98,[[]]],[11,"from","openmls::tree","",99,[[]]],[11,"into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"vzip","","",99,[[]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"vzip","","",100,[[]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"vzip","","",101,[[]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"vzip","","",102,[[]]],[11,"from","openmls::tree::hash_input","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"vzip","","",103,[[]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"vzip","","",104,[[]]],[11,"from","openmls::tree::index","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"vzip","","",105,[[]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"vzip","","",106,[[]]],[11,"from","openmls::tree::node","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"vzip","","",107,[[]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"vzip","","",108,[[]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"vzip","","",109,[[]]],[11,"from","openmls::tree::path_keys","",110,[[]]],[11,"into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"vzip","","",110,[[]]],[11,"from","openmls::tree::private_tree","",111,[[]]],[11,"into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"vzip","","",111,[[]]],[11,"from","openmls::tree::secret_tree","",112,[[]]],[11,"into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"vzip","","",112,[[]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"vzip","","",113,[[]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"vzip","","",114,[[]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"vzip","","",115,[[]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"vzip","","",116,[[]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"vzip","","",117,[[]]],[11,"from","openmls::tree::sender_ratchet","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"vzip","","",118,[[]]],[11,"from","openmls::tree::treemath","",119,[[]]],[11,"into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"vzip","","",119,[[]]],[11,"unsigned_payload","openmls::messages","",83,[[],[["vec",3],["codecerror",4],["result",4]]]],[11,"encode","openmls::ciphersuite","",10,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",10,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",7,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",5,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",5,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",0,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",0,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",3,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",3,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",1,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",1,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::config","",22,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",22,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::creds","",29,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",29,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",25,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",25,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",26,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",26,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::extensions","",35,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",35,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",34,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",34,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::framing::sender","",60,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",60,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",59,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",59,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::framing","",46,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",46,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",47,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",47,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",55,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",55,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",56,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",56,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",48,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",49,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",49,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",50,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",50,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",51,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",52,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",52,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",53,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",53,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",54,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",54,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::group","",61,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",61,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",62,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",62,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",63,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",63,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",64,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",64,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::key_packages","",78,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",78,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::messages::proposals","",94,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",95,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",95,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",88,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",88,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",91,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",91,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",92,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",92,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",93,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",93,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::messages","",81,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",81,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",82,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",82,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",83,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",84,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",84,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",85,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",85,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",86,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",86,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",87,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",87,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::tree::node","",109,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",109,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",107,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",107,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::tree","",100,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",100,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",101,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",101,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::tree::secret_tree","",113,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::tree::hash_input","",103,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","","",104,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::tree::index","",106,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"encode","openmls::tree::node","",108,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"decode","","",108,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::tree::secret_tree","",112,[[["vec",3]],[["result",4],["codecerror",4]]]],[11,"get_type","openmls::extensions","",31,[[],["extensiontype",4]]],[11,"new_from_bytes","","Build a new CapabilitiesExtension from a byte slice.…",31,[[],[["extensionerror",4],["result",4]]]],[11,"to_extension_struct","","",31,[[],["extensionstruct",3]]],[11,"as_any","","",31,[[],["any",8]]],[11,"get_type","","",32,[[],["extensiontype",4]]],[11,"new_from_bytes","","Build a new KeyIDExtension from a byte slice.",32,[[],[["extensionerror",4],["result",4]]]],[11,"to_extension_struct","","",32,[[],["extensionstruct",3]]],[11,"as_any","","",32,[[],["any",8]]],[11,"get_type","","",33,[[],["extensiontype",4]]],[11,"new_from_bytes","","Build a new LifetimeExtension from a byte slice.",33,[[],[["extensionerror",4],["result",4]]]],[11,"to_extension_struct","","",33,[[],["extensionstruct",3]]],[11,"as_any","","",33,[[],["any",8]]],[11,"get_type","openmls::extensions::parent_hash_extension","",42,[[],["extensiontype",4]]],[11,"new_from_bytes","","Build a new ParentHashExtension from a byte slice.",42,[[],[["extensionerror",4],["result",4]]]],[11,"to_extension_struct","","",42,[[],["extensionstruct",3]]],[11,"as_any","","",42,[[],["any",8]]],[11,"get_type","openmls::extensions::ratchet_tree_extension","",43,[[],["extensiontype",4]]],[11,"new_from_bytes","","Build a new RatchetTreeExtension from a byte slice.",43,[[],[["extensionerror",4],["result",4]]]],[11,"to_extension_struct","","",43,[[],["extensionstruct",3]]],[11,"as_any","","",43,[[],["any",8]]],[11,"from","openmls::ciphersuite","",1,[[["vec",3]]]],[11,"from","","",1,[[]]],[11,"from","openmls::codec","",15,[[["configerror",4]],["codecerror",4]]],[11,"from","openmls::config::errors","",23,[[["codecerror",4]]]],[11,"from","openmls::config","",21,[[["persistentconfig",3]]]],[11,"from","openmls::creds","",28,[[["configerror",4]],["credentialerror",4]]],[11,"from","","",25,[[["mlscredentialtype",4]]]],[11,"from","openmls::extensions::errors","",36,[[["configerror",4]]]],[11,"from","","",36,[[["codecerror",4]]]],[11,"from","openmls::codec","",15,[[["extensionerror",4]]]],[11,"from","openmls::framing::sender","",60,[[]]],[11,"from","openmls::framing","",55,[[]]],[11,"from","","",55,[[["mlsplaintextcontenttype",4]]]],[11,"from","","",53,[[["mlsplaintext",3]]]],[11,"from","","",54,[[["mlsplaintext",3]]]],[11,"from","","",54,[[["confirmationtag",3]]]],[11,"from","openmls::group::errors","",65,[[["mlsciphertexterror",4]]]],[11,"from","","",66,[[["treeerror",4]],["welcomeerror",4]]],[11,"from","","",67,[[["configerror",4]],["applycommiterror",4]]],[11,"from","","",67,[[["extensionerror",4]],["applycommiterror",4]]],[11,"from","","",66,[[["configerror",4]],["welcomeerror",4]]],[11,"from","openmls::group::managed_group","",74,[[["mlsplaintext",3]]]],[11,"from","","",74,[[["mlsciphertext",3]]]],[11,"from","","",75,[[["configerror",4]],["managedgrouperror",4]]],[11,"from","","",75,[[["codecerror",4]],["managedgrouperror",4]]],[11,"from","openmls::key_packages::errors","",80,[[["extensionerror",4]]]],[11,"from","","",80,[[["configerror",4]]]],[11,"from","openmls::messages::proposals","",94,[[]]],[11,"from","openmls::tree::index","",105,[[],["nodeindex",3]]],[11,"from","","",105,[[],["nodeindex",3]]],[11,"from","","",105,[[["leafindex",3]],["nodeindex",3]]],[11,"from","","",106,[[],["leafindex",3]]],[11,"from","","",106,[[],["leafindex",3]]],[11,"from","","",106,[[["nodeindex",3]],["leafindex",3]]],[11,"from","openmls::tree::node","",109,[[]]],[11,"from","openmls::tree","",102,[[["configerror",4]],["treeerror",4]]],[11,"into","openmls::tree::index","",106,[[]]],[11,"into","","",106,[[]]],[11,"clone","openmls::ciphersuite","",10,[[],["ciphersuitename",4]]],[11,"clone","","",0,[[],["hpkeciphertext",3]]],[11,"clone","","",1,[[],["secret",3]]],[11,"clone","","",3,[[],["reuseguard",3]]],[11,"clone","","",4,[[],["aeadnonce",3]]],[11,"clone","","",5,[[],["signature",3]]],[11,"clone","","",6,[[],["signatureprivatekey",3]]],[11,"clone","","",7,[[],["signaturepublickey",3]]],[11,"clone","","",8,[[],["signaturekeypair",3]]],[11,"clone","","",9,[[]]],[11,"clone","openmls::config","",22,[[],["protocolversion",4]]],[11,"clone","openmls::creds","",29,[[],["credentialtype",4]]],[11,"clone","","",24,[[],["certificate",3]]],[11,"clone","","",30,[[],["mlscredentialtype",4]]],[11,"clone","","",25,[[],["credential",3]]],[11,"clone","","",26,[[],["basiccredential",3]]],[11,"clone","openmls::extensions","",31,[[],["capabilitiesextension",3]]],[11,"clone","openmls::extensions::errors","",36,[[],["extensionerror",4]]],[11,"clone","","",37,[[],["lifetimeextensionerror",4]]],[11,"clone","","",38,[[],["capabilitiesextensionerror",4]]],[11,"clone","","",39,[[],["keypackageiderror",4]]],[11,"clone","","",40,[[],["parenthasherror",4]]],[11,"clone","","",41,[[],["ratchettreeerror",4]]],[11,"clone","openmls::extensions","",32,[[],["keyidextension",3]]],[11,"clone","","",33,[[],["lifetimeextension",3]]],[11,"clone","openmls::extensions::parent_hash_extension","",42,[[],["parenthashextension",3]]],[11,"clone","openmls::extensions::ratchet_tree_extension","",43,[[],["ratchettreeextension",3]]],[11,"clone","openmls::extensions","",35,[[],["extensiontype",4]]],[11,"clone","","",34,[[],["extensionstruct",3]]],[11,"clone","openmls::framing::sender","",60,[[],["sendertype",4]]],[11,"clone","","",59,[[],["sender",3]]],[11,"clone","openmls::framing","",46,[[],["mlsplaintext",3]]],[11,"clone","","",47,[[],["mlsciphertext",3]]],[11,"clone","","",55,[[],["contenttype",4]]],[11,"clone","","",56,[[],["mlsplaintextcontenttype",4]]],[11,"clone","","",49,[[],["mlssenderdata",3]]],[11,"clone","","",50,[[],["mlsciphertextsenderdataaad",3]]],[11,"clone","","",51,[[],["mlsciphertextcontent",3]]],[11,"clone","","",52,[[],["mlsciphertextcontentaad",3]]],[11,"clone","openmls::group::managed_group","",73,[[],["handshakemessageformat",4]]],[11,"clone","","",70,[[],["managedgroupconfig",3]]],[11,"clone","","",71,[[],["updatepolicy",3]]],[11,"clone","","",74,[[],["mlsmessage",4]]],[11,"clone","","",72,[[],["managedgroupcallbacks",3]]],[11,"clone","openmls::group","",61,[[],["groupid",3]]],[11,"clone","","",62,[[],["groupepoch",3]]],[11,"clone","","",63,[[],["groupcontext",3]]],[11,"clone","","",64,[[],["groupconfig",3]]],[11,"clone","openmls::key_packages::errors","",80,[[],["keypackageerror",4]]],[11,"clone","openmls::key_packages","",78,[[],["keypackage",3]]],[11,"clone","openmls::messages::proposals","",94,[[],["proposaltype",4]]],[11,"clone","","",95,[[],["proposal",4]]],[11,"clone","","",88,[[],["proposalid",3]]],[11,"clone","","",89,[[],["queuedproposal",3]]],[11,"clone","","",91,[[],["addproposal",3]]],[11,"clone","","",92,[[],["updateproposal",3]]],[11,"clone","","",93,[[],["removeproposal",3]]],[11,"clone","openmls::messages","",81,[[],["commit",3]]],[11,"clone","","",82,[[],["confirmationtag",3]]],[11,"clone","","",86,[[],["encryptedgroupsecrets",3]]],[11,"clone","","",87,[[],["welcome",3]]],[11,"clone","openmls::schedule","",97,[[],["epochsecrets",3]]],[11,"clone","openmls::tree::index","",105,[[],["nodeindex",3]]],[11,"clone","","",106,[[],["leafindex",3]]],[11,"clone","openmls::tree::node","",109,[[],["nodetype",4]]],[11,"clone","","",107,[[],["node",3]]],[11,"clone","","",108,[[],["parentnode",3]]],[11,"clone","openmls::tree::secret_tree","",116,[[],["secrettype",4]]],[11,"clone","","",113,[[],["secrettreenode",3]]],[11,"clone","openmls::tree::sender_ratchet","",118,[[],["senderratchet",3]]],[11,"clone","openmls::tree","",100,[[],["updatepathnode",3]]],[11,"clone","","",101,[[],["updatepath",3]]],[11,"clone","","",102,[[],["treeerror",4]]],[11,"default","openmls::config","",22,[[]]],[11,"default","openmls::extensions","",31,[[]]],[11,"default","","",32,[[],["keyidextension",3]]],[11,"default","","",33,[[]]],[11,"default","openmls::extensions::parent_hash_extension","",42,[[],["parenthashextension",3]]],[11,"default","openmls::extensions::ratchet_tree_extension","",43,[[],["ratchettreeextension",3]]],[11,"default","openmls::extensions","",35,[[]]],[11,"default","openmls::group::managed_group","",71,[[]]],[11,"default","openmls::group","",64,[[]]],[11,"default","openmls::messages::proposals","",90,[[],["proposalqueue",3]]],[11,"default","openmls::schedule","",97,[[]]],[11,"default","openmls::tree::index","",105,[[],["nodeindex",3]]],[11,"default","openmls::tree::path_keys","",110,[[],["pathkeys",3]]],[11,"cmp","openmls::config","",22,[[["protocolversion",4]],["ordering",4]]],[11,"cmp","openmls::extensions","",35,[[["extensiontype",4]],["ordering",4]]],[11,"cmp","","",44,[[],["ordering",4]]],[11,"cmp","openmls::tree::index","",105,[[["nodeindex",3]],["ordering",4]]],[11,"cmp","","",106,[[["leafindex",3]],["ordering",4]]],[11,"eq","openmls::ciphersuite","",10,[[["ciphersuitename",4]]]],[11,"eq","","",0,[[["hpkeciphertext",3]]]],[11,"ne","","",0,[[["hpkeciphertext",3]]]],[11,"eq","","",2,[[["aeadkey",3]]]],[11,"ne","","",2,[[["aeadkey",3]]]],[11,"eq","","",3,[[["reuseguard",3]]]],[11,"ne","","",3,[[["reuseguard",3]]]],[11,"eq","","",4,[[["aeadnonce",3]]]],[11,"ne","","",4,[[["aeadnonce",3]]]],[11,"eq","","",5,[[["signature",3]]]],[11,"ne","","",5,[[["signature",3]]]],[11,"eq","","",9,[[["ciphersuite",3]]]],[11,"eq","","",7,[[]]],[11,"eq","openmls::codec","",15,[[["codecerror",4]]]],[11,"eq","openmls::config::errors","",23,[[["configerror",4]]]],[11,"eq","openmls::config","",22,[[["protocolversion",4]]]],[11,"eq","openmls::creds","",29,[[["credentialtype",4]]]],[11,"eq","","",24,[[["certificate",3]]]],[11,"ne","","",24,[[["certificate",3]]]],[11,"eq","","",30,[[["mlscredentialtype",4]]]],[11,"ne","","",30,[[["mlscredentialtype",4]]]],[11,"eq","","",25,[[["credential",3]]]],[11,"ne","","",25,[[["credential",3]]]],[11,"eq","","",26,[[]]],[11,"eq","openmls::extensions","",31,[[["capabilitiesextension",3]]]],[11,"ne","","",31,[[["capabilitiesextension",3]]]],[11,"eq","openmls::extensions::errors","",36,[[["extensionerror",4]]]],[11,"ne","","",36,[[["extensionerror",4]]]],[11,"eq","","",37,[[["lifetimeextensionerror",4]]]],[11,"eq","","",38,[[["capabilitiesextensionerror",4]]]],[11,"eq","","",39,[[["keypackageiderror",4]]]],[11,"eq","","",40,[[["parenthasherror",4]]]],[11,"eq","","",41,[[["ratchettreeerror",4]]]],[11,"eq","openmls::extensions","",32,[[["keyidextension",3]]]],[11,"ne","","",32,[[["keyidextension",3]]]],[11,"eq","","",33,[[["lifetimeextension",3]]]],[11,"ne","","",33,[[["lifetimeextension",3]]]],[11,"eq","openmls::extensions::parent_hash_extension","",42,[[["parenthashextension",3]]]],[11,"ne","","",42,[[["parenthashextension",3]]]],[11,"eq","openmls::extensions::ratchet_tree_extension","",43,[[["ratchettreeextension",3]]]],[11,"ne","","",43,[[["ratchettreeextension",3]]]],[11,"eq","openmls::extensions","",35,[[["extensiontype",4]]]],[11,"eq","","",34,[[["extensionstruct",3]]]],[11,"ne","","",34,[[["extensionstruct",3]]]],[11,"eq","","",44,[[]]],[11,"eq","openmls::framing::sender","",60,[[["sendertype",4]]]],[11,"eq","","",59,[[["sender",3]]]],[11,"ne","","",59,[[["sender",3]]]],[11,"eq","openmls::framing","",46,[[["mlsplaintext",3]]]],[11,"ne","","",46,[[["mlsplaintext",3]]]],[11,"eq","","",47,[[["mlsciphertext",3]]]],[11,"ne","","",47,[[["mlsciphertext",3]]]],[11,"eq","","",55,[[["contenttype",4]]]],[11,"eq","","",56,[[["mlsplaintextcontenttype",4]]]],[11,"ne","","",56,[[["mlsplaintextcontenttype",4]]]],[11,"eq","openmls::group::errors","",65,[[["grouperror",4]]]],[11,"eq","","",66,[[["welcomeerror",4]]]],[11,"eq","","",67,[[["applycommiterror",4]]]],[11,"eq","openmls::group","",61,[[["groupid",3]]]],[11,"ne","","",61,[[["groupid",3]]]],[11,"eq","","",62,[[["groupepoch",3]]]],[11,"ne","","",62,[[["groupepoch",3]]]],[11,"eq","openmls::key_packages::errors","",80,[[["keypackageerror",4]]]],[11,"eq","openmls::key_packages","",78,[[["keypackage",3]]]],[11,"ne","","",78,[[["keypackage",3]]]],[11,"eq","openmls::messages::proposals","",94,[[["proposaltype",4]]]],[11,"eq","","",95,[[["proposal",4]]]],[11,"ne","","",95,[[["proposal",4]]]],[11,"eq","","",88,[[["proposalid",3]]]],[11,"ne","","",88,[[["proposalid",3]]]],[11,"eq","","",91,[[["addproposal",3]]]],[11,"ne","","",91,[[["addproposal",3]]]],[11,"eq","","",92,[[["updateproposal",3]]]],[11,"ne","","",92,[[["updateproposal",3]]]],[11,"eq","","",93,[[["removeproposal",3]]]],[11,"ne","","",93,[[["removeproposal",3]]]],[11,"eq","openmls::messages","",81,[[["commit",3]]]],[11,"ne","","",81,[[["commit",3]]]],[11,"eq","","",82,[[["confirmationtag",3]]]],[11,"ne","","",82,[[["confirmationtag",3]]]],[11,"eq","","",86,[[["encryptedgroupsecrets",3]]]],[11,"ne","","",86,[[["encryptedgroupsecrets",3]]]],[11,"eq","","",87,[[["welcome",3]]]],[11,"ne","","",87,[[["welcome",3]]]],[11,"eq","openmls::tree::index","",105,[[["nodeindex",3]]]],[11,"ne","","",105,[[["nodeindex",3]]]],[11,"eq","","",106,[[["leafindex",3]]]],[11,"ne","","",106,[[["leafindex",3]]]],[11,"eq","openmls::tree::node","",109,[[["nodetype",4]]]],[11,"eq","","",107,[[["node",3]]]],[11,"ne","","",107,[[["node",3]]]],[11,"eq","","",108,[[["parentnode",3]]]],[11,"ne","","",108,[[["parentnode",3]]]],[11,"eq","openmls::tree::secret_tree","",115,[[["secrettreeerror",4]]]],[11,"eq","openmls::tree","",100,[[["updatepathnode",3]]]],[11,"ne","","",100,[[["updatepathnode",3]]]],[11,"eq","","",101,[[["updatepath",3]]]],[11,"ne","","",101,[[["updatepath",3]]]],[11,"eq","","",102,[[["treeerror",4]]]],[11,"partial_cmp","openmls::config","",22,[[["protocolversion",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","openmls::extensions","",35,[[["extensiontype",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",44,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","openmls::tree::index","",105,[[["nodeindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",105,[[["nodeindex",3]]]],[11,"le","","",105,[[["nodeindex",3]]]],[11,"gt","","",105,[[["nodeindex",3]]]],[11,"ge","","",105,[[["nodeindex",3]]]],[11,"partial_cmp","","",106,[[["leafindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",106,[[["leafindex",3]]]],[11,"le","","",106,[[["leafindex",3]]]],[11,"gt","","",106,[[["leafindex",3]]]],[11,"ge","","",106,[[["leafindex",3]]]],[11,"deref","openmls::config","",18,[[],["config",3]]],[11,"fmt","openmls::ciphersuite::errors","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::ciphersuite","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::codec","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::config::errors","",23,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::config","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::creds","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions","",31,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::errors","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::parent_hash_extension","",42,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::ratchet_tree_extension","",43,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::framing::errors","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::framing::sender","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::framing","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::group::errors","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::group::managed_group","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::group","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::key_packages::errors","",80,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::key_packages","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::messages::proposals","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::messages","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::schedule::errors","",98,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::schedule","",97,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::index","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::node","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::path_keys","",110,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::private_tree","",111,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::secret_tree","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::treemath","",119,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::ciphersuite::errors","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::ciphersuite","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::config::errors","",23,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::errors","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::framing::errors","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::group::managed_group","",76,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::key_packages::errors","",80,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::schedule::errors","",98,[[["formatter",3]],["result",6]]],[11,"hash","openmls::ciphersuite","",10,[[]]],[11,"hash","openmls::extensions","",35,[[]]],[11,"hash","","",34,[[]]],[11,"hash","openmls::group","",61,[[]]],[11,"hash","openmls::messages::proposals","",88,[[]]],[11,"hash","openmls::tree::index","",105,[[]]],[11,"try_from","openmls::ciphersuite","",10,[[],["result",4]]],[11,"try_from","openmls::creds","",29,[[],["result",4]]],[11,"try_from","openmls::extensions","Get the `ExtensionType` from a u16. Returns an error if…",35,[[],["result",4]]],[11,"try_from","openmls::tree::secret_tree","",116,[[["contenttype",4]],[["secrettype",4],["result",4],["secrettypeerror",4]]]],[11,"try_from","","",116,[[["mlsplaintext",3]],[["secrettype",4],["result",4],["secrettypeerror",4]]]],[11,"description","openmls::ciphersuite::errors","",11,[[]]],[11,"description","","",12,[[]]],[11,"description","openmls::config::errors","",23,[[]]],[11,"description","openmls::extensions::errors","",36,[[]]],[11,"description","openmls::framing::errors","",57,[[]]],[11,"description","","",58,[[]]],[11,"description","openmls::group::managed_group","",76,[[]]],[11,"description","openmls::key_packages::errors","",80,[[]]],[11,"description","openmls::schedule::errors","",98,[[]]],[11,"deserialize","openmls::ciphersuite","",10,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]],[11,"deserialize","openmls::config","",19,[[],["result",4]]],[11,"deserialize","","",20,[[],["result",4]]],[11,"deserialize","","",22,[[],["result",4]]],[11,"deserialize","openmls::extensions","",35,[[],["result",4]]],[11,"serialize","openmls::ciphersuite","",10,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","openmls::config","",22,[[],["result",4]]],[11,"serialize","openmls::extensions","",35,[[],["result",4]]],[11,"initialize","openmls::config","",18,[[]]]],"p":[[3,"HpkeCiphertext"],[3,"Secret"],[3,"AeadKey"],[3,"ReuseGuard"],[3,"AeadNonce"],[3,"Signature"],[3,"SignaturePrivateKey"],[3,"SignaturePublicKey"],[3,"SignatureKeypair"],[3,"Ciphersuite"],[4,"CiphersuiteName"],[4,"HKDFError"],[4,"CryptoError"],[8,"Signable"],[3,"Cursor"],[4,"CodecError"],[4,"VecSize"],[8,"Codec"],[3,"CONFIG"],[3,"Constants"],[3,"PersistentConfig"],[3,"Config"],[4,"ProtocolVersion"],[4,"ConfigError"],[3,"Certificate"],[3,"Credential"],[3,"BasicCredential"],[3,"CredentialBundle"],[4,"CredentialError"],[4,"CredentialType"],[4,"MLSCredentialType"],[3,"CapabilitiesExtension"],[3,"KeyIDExtension"],[3,"LifetimeExtension"],[3,"ExtensionStruct"],[4,"ExtensionType"],[4,"ExtensionError"],[4,"LifetimeExtensionError"],[4,"CapabilitiesExtensionError"],[4,"KeyPackageIdError"],[4,"ParentHashError"],[4,"RatchetTreeError"],[3,"ParentHashExtension"],[3,"RatchetTreeExtension"],[8,"Extension"],[8,"ExtensionHelper"],[3,"MLSPlaintext"],[3,"MLSCiphertext"],[3,"MLSPlaintextTBS"],[3,"MLSSenderData"],[3,"MLSCiphertextSenderDataAAD"],[3,"MLSCiphertextContent"],[3,"MLSCiphertextContentAAD"],[3,"MLSPlaintextCommitContent"],[3,"MLSPlaintextCommitAuthData"],[4,"ContentType"],[4,"MLSPlaintextContentType"],[4,"MLSPlaintextError"],[4,"MLSCiphertextError"],[3,"Sender"],[4,"SenderType"],[3,"GroupId"],[3,"GroupEpoch"],[3,"GroupContext"],[3,"GroupConfig"],[4,"GroupError"],[4,"WelcomeError"],[4,"ApplyCommitError"],[4,"CreateCommitError"],[3,"ManagedGroup"],[3,"ManagedGroupConfig"],[3,"UpdatePolicy"],[3,"ManagedGroupCallbacks"],[4,"HandshakeMessageFormat"],[4,"MLSMessage"],[4,"ManagedGroupError"],[4,"InvalidMessageError"],[3,"MlsGroup"],[3,"KeyPackage"],[3,"KeyPackageBundle"],[4,"KeyPackageError"],[3,"Commit"],[3,"ConfirmationTag"],[3,"GroupInfo"],[3,"PathSecret"],[3,"GroupSecrets"],[3,"EncryptedGroupSecrets"],[3,"Welcome"],[3,"ProposalID"],[3,"QueuedProposal"],[3,"ProposalQueue"],[3,"AddProposal"],[3,"UpdateProposal"],[3,"RemoveProposal"],[4,"ProposalType"],[4,"Proposal"],[3,"HkdfLabel"],[3,"EpochSecrets"],[4,"KeyScheduleError"],[3,"RatchetTree"],[3,"UpdatePathNode"],[3,"UpdatePath"],[4,"TreeError"],[3,"ParentNodeHashInput"],[3,"LeafNodeHashInput"],[3,"NodeIndex"],[3,"LeafIndex"],[3,"Node"],[3,"ParentNode"],[4,"NodeType"],[3,"PathKeys"],[3,"PrivateTree"],[3,"TreeContext"],[3,"SecretTreeNode"],[3,"SecretTree"],[4,"SecretTreeError"],[4,"SecretType"],[4,"SecretTypeError"],[3,"SenderRatchet"],[4,"TreeMathError"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);