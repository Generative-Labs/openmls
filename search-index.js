var searchIndex = JSON.parse('{\
"openmls":{"doc":"","i":[[0,"ciphersuite","openmls","Ciphersuites for MLS",null,null],[3,"HpkeCiphertext","openmls::ciphersuite","7.7. Update Paths",null,null],[12,"kem_output","","",0,null],[12,"ciphertext","","",0,null],[3,"AeadKey","","",null,null],[12,"value","","",1,null],[3,"ReuseGuard","","",null,null],[12,"value","","",2,null],[3,"AeadNonce","","",null,null],[12,"value","","",3,null],[3,"Signature","","",null,null],[12,"value","","",4,null],[3,"SignaturePrivateKey","","",null,null],[12,"ciphersuite","","",5,null],[12,"value","","",5,null],[3,"SignaturePublicKey","","",null,null],[12,"ciphersuite","","",6,null],[12,"value","","",6,null],[3,"SignatureKeypair","","",null,null],[12,"ciphersuite","","",7,null],[12,"private_key","","",7,null],[12,"public_key","","",7,null],[3,"Ciphersuite","","",null,null],[12,"name","","",8,null],[12,"signature","","",8,null],[12,"hpke","","",8,null],[12,"aead","","",8,null],[12,"hash","","",8,null],[12,"hmac","","",8,null],[4,"CiphersuiteName","","",null,null],[13,"MLS10_128_DHKEMX25519_AES128GCM_SHA256_Ed25519","","",9,null],[13,"MLS10_128_DHKEMP256_AES128GCM_SHA256_P256","","",9,null],[13,"MLS10_128_DHKEMX25519_CHACHA20POLY1305_SHA256_Ed25519","","",9,null],[13,"MLS10_256_DHKEMX448_AES256GCM_SHA512_Ed448","","",9,null],[13,"MLS10_256_DHKEMP521_AES256GCM_SHA512_P521","","",9,null],[13,"MLS10_256_DHKEMX448_CHACHA20POLY1305_SHA512_Ed448","","",9,null],[4,"HKDFError","","",null,null],[13,"InvalidLength","","",10,null],[4,"AEADError","","",null,null],[13,"EncryptionError","","",11,null],[13,"DecryptionError","","",11,null],[13,"WrongKeyLength","","",11,null],[0,"ciphersuites","","",null,null],[5,"get_hash_from_suite","openmls::ciphersuite::ciphersuites","",null,[[["ciphersuitename",4]],["digestmode",4]]],[5,"get_aead_from_suite","","",null,[[["ciphersuitename",4]],["aeadmode",4]]],[5,"get_signature_from_suite","","",null,[[["ciphersuitename",4]],["signaturemode",4]]],[5,"get_kem_from_suite","","",null,[[["ciphersuitename",4]],[["result",4],["hpkekemmode",4],["error",4]]]],[5,"get_kdf_from_suite","","",null,[[["ciphersuitename",4]],["hmacmode",4]]],[5,"get_hpke_kdf_from_suite","","",null,[[["ciphersuitename",4]],["hpkekdfmode",4]]],[5,"get_hpke_aead_from_suite","","",null,[[["ciphersuitename",4]],["hpkeaeadmode",4]]],[0,"codec","openmls::ciphersuite","Codec implementations for the ciphersuites. Provides…",null,null],[0,"signable","","",null,null],[8,"Signable","openmls::ciphersuite::signable","The `Signable` trait is implemented by all struct that are…",null,null],[10,"unsigned_payload","","",12,[[],[["vec",3],["codecerror",4],["result",4]]]],[11,"sign","","Sign the payload with the given `id`.",12,[[["credentialbundle",3]],["signature",3]]],[11,"verify","","Verifies the payload against the given `credential` and…",12,[[["credential",3],["signature",3]]]],[17,"NONCE_BYTES","openmls::ciphersuite","",null,null],[17,"REUSE_GUARD_BYTES","","",null,null],[17,"CHACHA_KEY_BYTES","","",null,null],[17,"AES_128_KEY_BYTES","","",null,null],[17,"AES_256_KEY_BYTES","","",null,null],[17,"TAG_BYTES","","",null,null],[11,"new_from_random","","Samples a fresh reuse guard uniformly at random.",2,[[]]],[11,"new","","Create a new ciphersuite from the given `name`.",8,[[["ciphersuitename",4]]]],[11,"name","","Get the name of this ciphersuite.",8,[[],["ciphersuitename",4]]],[11,"new_signature_keypair","","Create a new signature key pair and return it.",8,[[],["signaturekeypair",3]]],[11,"hash","","Hash `payload` and return the digest.",8,[[],["vec",3]]],[11,"hash_length","","Get the length of the used hash algorithm.",8,[[]]],[11,"hkdf_extract","","HKDF extract.",8,[[],["vec",3]]],[11,"hkdf_expand","","HKDF expand",8,[[],[["result",4],["hkdferror",4],["vec",3]]]],[11,"aead_seal","","AEAD encrypt `msg` with `key`, `aad`, and `nonce`.",8,[[["aeadkey",3],["aeadnonce",3]],[["aeaderror",4],["result",4],["vec",3]]]],[11,"aead_open","","AEAD decrypt `ciphertext` with `key`, `aad`, and `nonce`.",8,[[["aeadkey",3],["aeadnonce",3]],[["aeaderror",4],["result",4],["vec",3]]]],[11,"aead_key_length","","Returns the key size of the used AEAD.",8,[[]]],[11,"aead_nonce_length","","Returns the length of the nonce in the AEAD.",8,[[]]],[11,"hpke_seal","","HPKE single-shot encryption of `ptxt` to `pk_r`, using…",8,[[["hpkepublickey",3]],["hpkeciphertext",3]]],[11,"hpke_open","","HPKE single-shot decryption of `input` with `sk_r`, using…",8,[[["hpkeciphertext",3],["hpkeprivatekey",3]],["vec",3]]],[11,"derive_hpke_keypair","","Generate a new HPKE key pair and return it.",8,[[],["hpkekeypair",3]]],[11,"from_slice","","Build a new key for an AEAD from `bytes`.",1,[[],["aeadkey",3]]],[11,"as_slice","","Get a slice to the key value.",1,[[]]],[11,"from_slice","","Build a new nonce for an AEAD from `bytes`.",3,[[]]],[11,"xor_with_reuse_guard","","Xor the first bytes of the nonce with the reuse_guard.",3,[[["reuseguard",3]]]],[11,"new_empty","","",4,[[],["signature",3]]],[11,"sign","","Sign the `payload` byte slice with this signature key.…",7,[[],[["result",4],["signatureerror",4],["signature",3]]]],[11,"verify","","Verify a `Signature` on the `payload` byte slice with the…",7,[[["signature",3]]]],[11,"into_tuple","","Get the private and public key objects",7,[[]]],[11,"new","","Create a new signature public key from raw key bytes.",6,[[["ciphersuitename",4],["vec",3]],[["configerror",4],["result",4]]]],[11,"verify","","Verify a `Signature` on the `payload` byte slice with the…",6,[[["signature",3]]]],[11,"sign","","Sign the `payload` byte slice with this signature key.…",5,[[],[["result",4],["signatureerror",4],["signature",3]]]],[0,"codec","openmls","",null,null],[3,"Cursor","openmls::codec","",null,null],[12,"buffer","","",13,null],[12,"position","","",13,null],[4,"CodecError","","",null,null],[13,"EncodingError","","",14,null],[13,"DecodingError","","",14,null],[4,"VecSize","","",null,null],[13,"VecU8","","",15,null],[13,"VecU16","","",15,null],[13,"VecU32","","",15,null],[13,"VecU64","","",15,null],[5,"encode_vec","","",null,[[["vec",3],["vecsize",4]],[["codecerror",4],["result",4]]]],[5,"decode_vec","","",null,[[["cursor",3],["vecsize",4]],[["result",4],["vec",3],["codecerror",4]]]],[8,"Codec","","",null,null],[11,"encode","","",16,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",16,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode_detached","","",16,[[],[["vec",3],["codecerror",4],["result",4]]]],[11,"new","","",13,[[],["cursor",3]]],[11,"consume","","",13,[[],[["result",4],["codecerror",4]]]],[11,"sub_cursor","","",13,[[],[["result",4],["cursor",3],["codecerror",4]]]],[11,"is_empty","","",13,[[]]],[11,"has_more","","",13,[[]]],[0,"config","openmls","This config contains all structs, enums and functions to…",null,null],[3,"CONFIG","openmls::config","",null,null],[12,"__private_field","","",17,null],[3,"Config","","MLS Configuration",null,null],[12,"protocol_versions","","",18,null],[12,"ciphersuites","","",18,null],[12,"extensions","","",18,null],[4,"ProtocolVersion","","Protocol Version",null,null],[13,"Reserved","","",19,null],[13,"Mls10","","",19,null],[11,"supported_extensions","","Get a list of the supported extension types.",18,[[]]],[11,"supported_ciphersuites","","Get a list of the supported cipher suites.",18,[[]]],[11,"supported_ciphersuite_names","","Get a list of the supported cipher suites names.",18,[[],[["ciphersuitename",4],["vec",3]]]],[11,"supported_versions","","Get a list of the supported protocol versions.",18,[[]]],[11,"ciphersuite","","Get the ciphersuite of the given name.",18,[[["ciphersuitename",4]],[["configerror",4],["ciphersuite",3],["result",4]]]],[11,"from","","Convert an integer to the corresponding protocol version.",19,[[],[["result",4],["configerror",4],["protocolversion",4]]]],[11,"is_supported","openmls::ciphersuite","Returns `true` if the ciphersuite is supported in the…",9,[[]]],[0,"creds","openmls","",null,null],[3,"Certificate","openmls::creds","Struct containing an X509 certificate chain, as per Spec.",null,null],[12,"cert_data","","",20,null],[3,"Credential","","Struct containing MLS credential data, where the data…",null,null],[12,"credential_type","","",21,null],[12,"credential","","",21,null],[3,"BasicCredential","","",null,null],[12,"identity","","",22,null],[12,"ciphersuite","","",22,null],[12,"public_key","","",22,null],[3,"CredentialBundle","","This struct contains a credential and the corresponding…",null,null],[12,"credential","","",23,null],[12,"signature_private_key","","",23,null],[4,"CredentialError","","",null,null],[13,"UnknwonConfigError","","",24,null],[13,"UnsupportedCredentialType","","",24,null],[4,"CredentialType","","Enum for Credential Types. We only need this for…",null,null],[13,"Reserved","","",25,null],[13,"Basic","","",25,null],[13,"X509","","",25,null],[4,"MLSCredentialType","","This enum contains the different available credentials.",null,null],[13,"Basic","","",26,null],[13,"X509","","",26,null],[11,"verify","","Verify a signature of a given payload against the public…",21,[[["signature",3]]]],[11,"get_identity","","Get the identity of a given credential.",21,[[],["vec",3]]],[11,"ciphersuite","","Get the ciphersuite associated with the credential.",21,[[],["ciphersuite",3]]],[11,"verify","","",22,[[["signature",3]]]],[11,"new","","Create a new `CredentialBundle` of the given credential…",23,[[["ciphersuitename",4],["credentialtype",4],["vec",3]],[["result",4],["credentialerror",4]]]],[11,"credential","","",23,[[],["credential",3]]],[11,"sign","","Sign a `msg` using the private key of the credential bundle.",23,[[],[["result",4],["signatureerror",4],["signature",3]]]],[0,"errors","openmls","Errors",null,null],[4,"ConfigError","openmls::errors","",null,null],[13,"InvalidConfig","","",27,null],[13,"UnsupportedMlsVersion","","",27,null],[13,"UnsupportedCiphersuite","","",27,null],[13,"ExpiredLifetimeExtension","","",27,null],[4,"Error","","",null,null],[13,"DecodingError","","",28,null],[13,"UnsupportedCiphersuite","","",28,null],[0,"extensions","openmls","",null,null],[3,"ExtensionStruct","openmls::extensions","Extension struct",null,null],[12,"extension_type","","",29,null],[12,"extension_data","","",29,null],[4,"ExtensionError","","",null,null],[13,"UnknownExtension","","",30,null],[13,"InvalidExtensionType","","",30,null],[4,"ExtensionType","","Extension types",null,null],[13,"Reserved","","",31,null],[13,"Capabilities","","",31,null],[13,"Lifetime","","",31,null],[13,"KeyID","","",31,null],[13,"ParentHash","","",31,null],[13,"RatchetTree","","",31,null],[5,"from_bytes","","Build a new extension of the given type from a byte slice.",null,[[["extensiontype",4]],[["configerror",4],["box",3],["result",4]]]],[5,"extensions_vec_from_cursor","","Read a list of extensions from a `Cursor` into a vector of…",null,[[["cursor",3]],[["result",4],["vec",3],["codecerror",4]]]],[0,"capabilities_extension","","Capabilities Extension",null,null],[3,"CapabilitiesExtension","openmls::extensions::capabilities_extension","",null,null],[12,"versions","","",32,null],[12,"ciphersuites","","",32,null],[12,"extensions","","",32,null],[11,"new","","Create a new capabilities extension with the given…",32,[[["option",4],["option",4],["option",4]]]],[11,"versions","","Get a reference to the list of versions in this extension.",32,[[]]],[11,"ciphersuites","","Get a reference to the list of cipher suites in this…",32,[[]]],[11,"extensions","","Get a reference to the list of supported extensions.",32,[[]]],[0,"key_package_id_extension","openmls::extensions","KeyPackage Identifiers",null,null],[3,"KeyIDExtension","openmls::extensions::key_package_id_extension","",null,null],[12,"key_id","","",33,null],[11,"new","","Create a new key identifier extension from a byte slice.",33,[[]]],[11,"as_slice","","Get the value of the key id as byte slice.",33,[[]]],[0,"life_time_extension","openmls::extensions","Life time extension",null,null],[3,"LifetimeExtension","openmls::extensions::life_time_extension","The lifetime extension holds a not before and a not after…",null,null],[12,"not_before","","",34,null],[12,"not_after","","",34,null],[11,"new","","Create a new lifetime extensions with lifetime `t`. Note…",34,[[]]],[11,"is_valid","","Returns true if this lifetime is valid.",34,[[]]],[0,"parent_hash_extension","openmls::extensions","Parent hash extension",null,null],[3,"ParentHashExtension","openmls::extensions::parent_hash_extension","",null,null],[12,"parent_hash","","",35,null],[11,"new","","",35,[[]]],[11,"parent_hash","","Get a reference to the parent hash value.",35,[[]]],[0,"ratchet_tree_extension","openmls::extensions","Ratchet tree extension",null,null],[3,"RatchetTreeExtension","openmls::extensions::ratchet_tree_extension","",null,null],[12,"tree","","",36,null],[11,"new","","Build a new extension from a vector of `Node`s.",36,[[["vec",3],["option",4]]]],[11,"into_vector","","",36,[[],[["vec",3],["option",4]]]],[8,"Extension","openmls::extensions","Extension",null,null],[10,"new_from_bytes","","Build a new extension from a byte slice.",37,[[],[["configerror",4],["result",4]]]],[10,"get_type","","Each extension has an extension type. This should be an…",37,[[],["extensiontype",4]]],[10,"to_extension_struct","","Get the extension as `ExtensionStruct` for encoding.",37,[[],["extensionstruct",3]]],[10,"as_any","","Get a generic trait object for downcasting.",37,[[],["any",8]]],[11,"to_parent_hash_extension","","Get a reference to the `ParentHashExtension`. Returns an…",37,[[],[["parenthashextension",3],["extensionerror",4],["result",4]]]],[11,"to_capabilities_extension","","Get a reference to the `CapabilitiesExtension`. Returns an…",37,[[],[["result",4],["capabilitiesextension",3],["extensionerror",4]]]],[11,"to_lifetime_extension","","Get a reference to the `LifetimeExtension`. Returns an…",37,[[],[["lifetimeextension",3],["extensionerror",4],["result",4]]]],[11,"to_key_id_extension","","Get a reference to the `KeyIDExtension`. Returns an…",37,[[],[["extensionerror",4],["result",4],["keyidextension",3]]]],[11,"to_ratchet_tree_extension_ref","","Get a reference to the `RatchetTreeExtension`. Returns an…",37,[[],[["result",4],["ratchettreeextension",3],["extensionerror",4]]]],[8,"ExtensionHelper","","",null,null],[10,"clone_it","","",38,[[],[["box",3],["extension",8]]]],[11,"from","","Get the `ExtensionType` from a u16. Returns an error if…",31,[[],[["extensionerror",4],["extensiontype",4],["result",4]]]],[11,"new","","Build a new `ExtensionStruct`.",29,[[["extensiontype",4],["vec",3]]]],[11,"_get_extension_data","","Get the type of this extension struct.",29,[[]]],[0,"framing","openmls","",null,null],[3,"MLSPlaintext","openmls::framing","",null,null],[12,"group_id","","",39,null],[12,"epoch","","",39,null],[12,"sender","","",39,null],[12,"authenticated_data","","",39,null],[12,"content_type","","",39,null],[12,"content","","",39,null],[12,"signature","","",39,null],[3,"MLSCiphertext","","",null,null],[12,"group_id","","",40,null],[12,"epoch","","",40,null],[12,"content_type","","",40,null],[12,"authenticated_data","","",40,null],[12,"encrypted_sender_data","","",40,null],[12,"ciphertext","","",40,null],[3,"MLSPlaintextTBS","","",null,null],[12,"serialized_context_option","","",41,null],[12,"group_id","","",41,null],[12,"epoch","","",41,null],[12,"sender","","",41,null],[12,"authenticated_data","","",41,null],[12,"content_type","","",41,null],[12,"payload","","",41,null],[3,"MLSSenderData","","",null,null],[12,"sender","","",42,null],[12,"generation","","",42,null],[12,"reuse_guard","","",42,null],[3,"MLSCiphertextSenderDataAAD","","",null,null],[12,"group_id","","",43,null],[12,"epoch","","",43,null],[12,"content_type","","",43,null],[3,"MLSCiphertextContent","","",null,null],[12,"content","","",44,null],[12,"signature","","",44,null],[12,"padding","","",44,null],[3,"MLSCiphertextContentAAD","","",null,null],[12,"group_id","","",45,null],[12,"epoch","","",45,null],[12,"content_type","","",45,null],[12,"authenticated_data","","",45,null],[3,"MLSPlaintextCommitContent","","",null,null],[12,"group_id","","",46,null],[12,"epoch","","",46,null],[12,"sender","","",46,null],[12,"content_type","","",46,null],[12,"commit","","",46,null],[3,"MLSPlaintextCommitAuthData","","",null,null],[12,"confirmation_tag","","",47,null],[4,"MLSPlaintextError","","",null,null],[13,"InvalidContentType","","",48,null],[4,"MLSCiphertextError","","",null,null],[13,"InvalidContentType","","",49,null],[13,"GenerationOutOfBound","","",49,null],[4,"ContentType","","",null,null],[13,"Invalid","","",50,null],[13,"Application","","",50,null],[13,"Proposal","","",50,null],[13,"Commit","","",50,null],[13,"Default","","",50,null],[4,"MLSPlaintextContentType","","",null,null],[13,"Application","","",51,null],[13,"Proposal","","",51,null],[13,"Commit","","",51,null],[0,"sender","","Section  9. Message Framing",null,null],[3,"Sender","openmls::framing::sender","",null,null],[12,"sender_type","","",52,null],[12,"sender","","",52,null],[4,"SenderType","","",null,null],[13,"Invalid","","",53,null],[13,"Member","","",53,null],[13,"Preconfigured","","",53,null],[13,"NewMember","","",53,null],[13,"Default","","",53,null],[11,"member","","",52,[[["leafindex",3]]]],[11,"as_leaf_index","","",52,[[],["leafindex",3]]],[11,"as_node_index","","",52,[[],["nodeindex",3]]],[11,"new","openmls::framing","",39,[[["groupcontext",3],["credentialbundle",3],["leafindex",3],["mlsplaintextcontenttype",4]]]],[11,"sign","","",39,[[["option",4],["credentialbundle",3],["vec",3]]]],[11,"verify","","",39,[[["credential",3],["option",4],["vec",3]]]],[11,"as_application_message","","",39,[[],[["mlsplaintexterror",4],["result",4]]]],[11,"as_slice","","",40,[[],["vec",3]]],[11,"new_from_plaintext","","",40,[[["aeadnonce",3],["aeadkey",3],["mlsplaintext",3],["mlsgroup",3]],["mlsciphertext",3]]],[11,"to_plaintext","","",40,[[["groupcontext",3],["ciphersuite",3],["epochsecrets",3],["secrettree",3]],[["mlsciphertexterror",4],["result",4],["mlsplaintext",3]]]],[11,"encode_padded_ciphertext_content_detached","","",40,[[["mlsplaintext",3]],[["vec",3],["codecerror",4],["result",4]]]],[11,"new_from","","",41,[[["option",4],["mlsplaintext",3],["vec",3]]]],[11,"sign","","",41,[[["credentialbundle",3]],["signature",3]]],[11,"verify","","",41,[[["credential",3],["signature",3]]]],[11,"from_bytes","","",42,[[],[["codecerror",4],["result",4]]]],[11,"new","","",42,[[["reuseguard",3],["leafindex",3]]]],[11,"new","","",43,[[["groupepoch",3],["groupid",3],["contenttype",4]]]],[11,"from_bytes","","",44,[[],[["codecerror",4],["result",4]]]],[11,"new","","",46,[[["groupcontext",3],["leafindex",3],["commit",3]]]],[11,"serialize","","",46,[[],["vec",3]]],[11,"serialize","","",47,[[],["vec",3]]],[0,"group","openmls","Group APIs for MLS",null,null],[3,"GroupId","openmls::group","",null,null],[12,"value","","",54,null],[3,"GroupEpoch","","",null,null],[12,"0","","",55,null],[3,"GroupContext","","",null,null],[12,"group_id","","",56,null],[12,"epoch","","",56,null],[12,"tree_hash","","",56,null],[12,"confirmed_transcript_hash","","",56,null],[3,"GroupConfig","","Configuration for an MLS group.",null,null],[12,"add_ratchet_tree_extension","","Flag whether to send the ratchet tree along with the…",57,null],[12,"padding_block_size","","",57,null],[12,"additional_as_epochs","","",57,null],[4,"GroupError","","",null,null],[13,"Codec","","",58,null],[0,"errors","","",null,null],[4,"WelcomeError","openmls::group::errors","",null,null],[13,"CiphersuiteMismatch","","",59,null],[13,"JoinerSecretNotFound","","",59,null],[13,"MissingRatchetTree","","",59,null],[13,"TreeHashMismatch","","",59,null],[13,"JoinerNotInTree","","",59,null],[13,"ConfirmationTagMismatch","","",59,null],[13,"InvalidRatchetTree","","",59,null],[13,"InvalidGroupInfoSignature","","",59,null],[13,"GroupInfoDecryptionFailure","","",59,null],[13,"DuplicateRatchetTreeExtension","","",59,null],[13,"UnsupportedMlsVersion","","",59,null],[13,"UnknownError","","",59,null],[4,"ApplyCommitError","","",null,null],[13,"EpochMismatch","","",60,null],[13,"WrongPlaintextContentType","","",60,null],[13,"SelfRemoved","","",60,null],[13,"PathKeyPackageVerificationFailure","","",60,null],[13,"NoParentHashExtension","","",60,null],[13,"ParentHashMismatch","","",60,null],[13,"PlaintextSignatureFailure","","",60,null],[13,"RequiredPathNotFound","","",60,null],[13,"ConfirmationTagMismatch","","",60,null],[13,"MissingOwnKeyPackage","","",60,null],[13,"MissingProposal","","",60,null],[13,"OwnKeyNotFound","","",60,null],[4,"DecryptionError","","",null,null],[13,"CiphertextError","","",61,null],[4,"CreateCommitError","","",null,null],[13,"CannotRemoveSelf","","",62,null],[13,"OwnKeyNotFound","","",62,null],[0,"managed_group","openmls::group","",null,null],[3,"ManagedGroup","openmls::group::managed_group","",null,null],[12,"group","","",63,null],[12,"generation","","",63,null],[12,"plaintext_queue","","",63,null],[12,"public_queue","","",63,null],[12,"own_queue","","",63,null],[12,"pending_kpbs","","",63,null],[4,"GroupError","","",null,null],[13,"Codec","","",64,null],[11,"new","","",63,[[["keypackagebundle",3],["groupid",3],["ciphersuitename",4]],[["configerror",4],["result",4]]]],[11,"new_from_welcome","","",63,[[["vec",3],["welcome",3],["keypackagebundle",3],["option",4]],[["result",4],["welcomeerror",4]]]],[11,"new_with_members","","",63,[[]]],[11,"propose_add_member","","",63,[[]]],[11,"propose_remove_member","","",63,[[]]],[11,"propose_self_update","","",63,[[]]],[11,"commit_pending_proposals","","",63,[[]]],[11,"get_pending_proposals","","",63,[[]]],[11,"send_application_message","","",63,[[]]],[11,"get_members","","",63,[[],[["credential",3],["vec",3]]]],[0,"mls_group","openmls::group","",null,null],[3,"MlsGroup","openmls::group::mls_group","",null,null],[12,"ciphersuite","","",65,null],[12,"group_context","","",65,null],[12,"generation","","",65,null],[12,"epoch_secrets","","",65,null],[12,"secret_tree","","",65,null],[12,"tree","","",65,null],[12,"interim_transcript_hash","","",65,null],[12,"add_ratchet_tree_extension","","",65,null],[5,"update_confirmed_transcript_hash","","",null,[[["mlsplaintextcommitcontent",3],["ciphersuite",3]],["vec",3]]],[5,"update_interim_transcript_hash","","",null,[[["ciphersuite",3],["mlsplaintextcommitauthdata",3]],["vec",3]]],[5,"compute_welcome_key_nonce","","",null,[[["ciphersuite",3]]]],[0,"api","","",null,null],[6,"CreateCommitResult","openmls::group::mls_group::api","",null,null],[8,"Api","","",null,null],[10,"new","","Create a new group.",66,[[["groupconfig",3],["keypackagebundle",3],["ciphersuitename",4]],[["configerror",4],["result",4]]]],[10,"new_from_welcome","","Join a group from a Welcome message",66,[[["vec",3],["welcome",3],["keypackagebundle",3],["option",4]],[["result",4],["welcomeerror",4]]]],[10,"create_add_proposal","","Create an `AddProposal`",66,[[["keypackage",3],["credentialbundle",3]],["mlsplaintext",3]]],[10,"create_update_proposal","","Create an `UpdateProposal`",66,[[["keypackage",3],["credentialbundle",3]],["mlsplaintext",3]]],[10,"create_remove_proposal","","Create a `RemoveProposal`",66,[[["credentialbundle",3],["leafindex",3]],["mlsplaintext",3]]],[10,"create_commit","","Create a `Commit` and an optional `Welcome`",66,[[["mlsplaintext",3],["credentialbundle",3],["vec",3]],[["result",4],["createcommiterror",4]]]],[10,"apply_commit","","Apply a `Commit` message",66,[[["vec",3],["keypackagebundle",3],["vec",3],["mlsplaintext",3]],[["applycommiterror",4],["result",4]]]],[10,"create_application_message","","Create application message",66,[[["credentialbundle",3]],["mlsciphertext",3]]],[10,"encrypt","","Encrypt an MLS message",66,[[["mlsplaintext",3]],["mlsciphertext",3]]],[10,"decrypt","","Decrypt an MLS message",66,[[["mlsciphertext",3]],[["result",4],["decryptionerror",4],["mlsplaintext",3]]]],[10,"export_secret","","Export a secret through the exporter",66,[[],["vec",3]]],[0,"apply_commit","openmls::group::mls_group","",null,null],[11,"apply_commit_internal","","",65,[[["vec",3],["keypackagebundle",3],["vec",3],["mlsplaintext",3]],[["applycommiterror",4],["result",4]]]],[0,"create_commit","","",null,null],[11,"create_commit_internal","","",65,[[["mlsplaintext",3],["credentialbundle",3],["vec",3]],[["result",4],["createcommiterror",4]]]],[0,"new_from_welcome","","",null,null],[11,"new_from_welcome_internal","","",65,[[["vec",3],["welcome",3],["keypackagebundle",3],["option",4]],[["result",4],["welcomeerror",4]]]],[11,"find_key_package_from_welcome_secrets","","",65,[[["keypackage",3]],[["encryptedgroupsecrets",3],["option",4]]]],[11,"decrypt_group_info","","",65,[[["ciphersuite",3],["encryptedgroupsecrets",3],["hpkeprivatekey",3]],[["result",4],["welcomeerror",4]]]],[11,"tree","","",65,[[],[["ratchettree",3],["ref",3]]]],[11,"sender_index","","",65,[[],["leafindex",3]]],[11,"ciphersuite","","Get the ciphersuite implementation used in this group.",65,[[],["ciphersuite",3]]],[11,"context","","",65,[[],["groupcontext",3]]],[11,"epoch_secrets","","",65,[[],["epochsecrets",3]]],[11,"random","openmls::group","",54,[[]]],[11,"from_slice","","",54,[[]]],[11,"as_slice","","",54,[[],["vec",3]]],[11,"increment","","",55,[[]]],[11,"serialize","","",56,[[],["vec",3]]],[11,"get_padding_block_size","","Get the padding block size used in this config.",57,[[]]],[0,"key_packages","openmls","",null,null],[3,"KeyPackage","openmls::key_packages","",null,null],[12,"protocol_version","","",67,null],[12,"cipher_suite","","",67,null],[12,"hpke_init_key","","",67,null],[12,"credential","","",67,null],[12,"extensions","","",67,null],[12,"signature","","",67,null],[3,"KeyPackageBundle","","",null,null],[12,"key_package","","",68,null],[12,"private_key","","",68,null],[12,"leaf_secret","","",68,null],[4,"KeyPackageError","","",null,null],[13,"ExtensionNotPresent","","",69,null],[13,"MandatoryExtensionsMissing","","",69,null],[13,"InvalidLifetimeExtension","","",69,null],[13,"InvalidSignature","","",69,null],[13,"LibraryError","","",69,null],[0,"codec","","",null,null],[0,"test_key_packages","","",null,null],[17,"MANDATORY_EXTENSIONS","","Mandatory extensions for key packages.",null,null],[11,"new","","Create a new key package but only with the given…",67,[[["hpkepublickey",3],["credentialbundle",3],["ciphersuitename",4],["box",3],["vec",3]],[["configerror",4],["result",4]]]],[11,"verify","","Verify that this key package is valid: * verify that the…",67,[[],[["result",4],["keypackageerror",4]]]],[11,"hash","","Compute the hash of the encoding of this key package.",67,[[],["vec",3]]],[11,"get_extension","","Get a reference to the extension of `extension_type`.…",67,[[["extensiontype",4]],[["option",4],["box",3]]]],[11,"get_id","","Get the ID of this key package as byte slice. Returns an…",67,[[],[["result",4],["keypackageerror",4]]]],[11,"update_parent_hash","","Update the parent hash extension of this key package.",67,[[]]],[11,"add_extension","","Add (or replace) an extension to the KeyPackage. Make sure…",67,[[["box",3],["extension",8]]]],[11,"remove_extension","","Remove an extension from the KeyPackage Make sure to…",67,[[["extensiontype",4]]]],[11,"credential","","Get a reference to the credential.",67,[[],["credential",3]]],[11,"hpke_init_key","","Get a reference to the HPKE init key.",67,[[],["hpkepublickey",3]]],[11,"set_hpke_init_key","","Set a new HPKE init key.",67,[[["hpkepublickey",3]]]],[11,"cipher_suite","","Get the `Ciphersuite`.",67,[[],["ciphersuite",3]]],[11,"extensions","","Get a reference to the extensions of this key package.",67,[[]]],[11,"unsigned_payload","","Compile the unsigned payload to create the signature…",67,[[],[["vec",3],["codecerror",4],["result",4]]]],[11,"sign","","Populate the `signature` field using the…",67,[[["credentialbundle",3]]]],[11,"new","","Create a new `KeyPackageBundle` with a fresh…",68,[[["vec",3],["credentialbundle",3],["box",3]],[["configerror",4],["result",4]]]],[11,"new_from_leaf_secret","","",68,[[["box",3],["credentialbundle",3],["vec",3],["vec",3]],[["configerror",4],["result",4]]]],[11,"new_with_keypair","","Create a new `KeyPackageBundle` for the given…",68,[[["box",3],["credentialbundle",3],["vec",3],["hpkekeypair",3],["vec",3]],[["configerror",4],["result",4]]]],[11,"new_from_values","","Assembles a new KeyPackageBundle from a KeyPackage, a…",68,[[["keypackage",3],["hpkeprivatekey",3],["vec",3]]]],[11,"from_rekeyed_key_package","","Replace the init key in the `KeyPackage` with a random one…",68,[[["ciphersuite",3],["keypackage",3]]]],[11,"_set_private_key","","Update the private key in the bundle.",68,[[["hpkeprivatekey",3]]]],[11,"set_key_package","","Update the key package in the bundle.",68,[[["keypackage",3]]]],[11,"get_key_package","","Get a reference to the `KeyPackage`.",68,[[],["keypackage",3]]],[11,"get_key_package_ref_mut","","Get a mutable reference to the `KeyPackage`.",68,[[],["keypackage",3]]],[11,"get_private_key_ref","","Get a reference to the `HPKEPrivateKey`.",68,[[],["hpkeprivatekey",3]]],[11,"leaf_secret","","Get a reference to the `leaf_secret`.",68,[[]]],[11,"derive_leaf_node_secret","","This function derives the leaf_node_secret from the…",68,[[["ciphersuite",3]],["vec",3]]],[0,"messages","openmls","",null,null],[3,"Commit","openmls::messages","",null,null],[12,"proposals","","",70,null],[12,"path","","",70,null],[3,"ConfirmationTag","","",null,null],[12,"0","","",71,null],[3,"CommitSecret","","",null,null],[12,"0","","",72,null],[3,"GroupInfo","","",null,null],[12,"group_id","","",73,null],[12,"epoch","","",73,null],[12,"tree_hash","","",73,null],[12,"confirmed_transcript_hash","","",73,null],[12,"extensions","","",73,null],[12,"confirmation_tag","","",73,null],[12,"signer_index","","",73,null],[12,"signature","","",73,null],[3,"PathSecret","","",null,null],[12,"path_secret","","",74,null],[3,"GroupSecrets","","",null,null],[12,"joiner_secret","","",75,null],[12,"path_secret","","",75,null],[3,"EncryptedGroupSecrets","","",null,null],[12,"key_package_hash","","",76,null],[12,"encrypted_group_secrets","","",76,null],[3,"Welcome","","",null,null],[12,"version","","",77,null],[12,"cipher_suite","","",77,null],[12,"secrets","","",77,null],[12,"encrypted_group_info","","",77,null],[0,"proposals","","",null,null],[3,"ProposalID","openmls::messages::proposals","",null,null],[12,"value","","",78,null],[3,"QueuedProposal","","Alternative representation of a Proposal, where the sender…",null,null],[12,"proposal","","",79,null],[12,"proposal_id","","",79,null],[12,"sender","","",79,null],[3,"ProposalQueue","","Proposal queue that helps filtering and sorting the…",null,null],[12,"queued_proposals","","",80,null],[3,"AddProposal","","",null,null],[12,"key_package","","",81,null],[3,"UpdateProposal","","",null,null],[12,"key_package","","",82,null],[3,"RemoveProposal","","",null,null],[12,"removed","","",83,null],[4,"ProposalType","","",null,null],[13,"Invalid","","",84,null],[13,"Add","","",84,null],[13,"Update","","",84,null],[13,"Remove","","",84,null],[13,"Default","","",84,null],[4,"Proposal","","",null,null],[13,"Add","","",85,null],[13,"Update","","",85,null],[13,"Remove","","",85,null],[11,"get_type","","",85,[[],["proposaltype",4]]],[11,"is_type","","",85,[[["proposaltype",4]]]],[11,"as_add","","",85,[[],[["addproposal",3],["option",4]]]],[11,"as_update","","",85,[[],[["updateproposal",3],["option",4]]]],[11,"as_remove","","",85,[[],[["removeproposal",3],["option",4]]]],[11,"from_proposal","","",78,[[["ciphersuite",3],["proposal",4]]]],[11,"new","","Creates a new `QueuedProposal` from an `MLSPlaintext`",79,[[["ciphersuite",3],["mlsplaintext",3]]]],[11,"get_proposal_ref","","Returns the `Proposal` as a reference",79,[[],["proposal",4]]],[11,"get_proposal_id_ref","","Returns the `ProposalID` as a reference",79,[[],["proposalid",3]]],[11,"get_sender_ref","","Returns the `Sender` as a reference",79,[[],["sender",3]]],[11,"new","","",80,[[]]],[11,"new_from_committed_proposals","","Returns a new `ProposalQueue` from proposals that were…",80,[[["ciphersuite",3],["vec",3],["mlsplaintext",3]]]],[11,"filtered_proposals","","Filters received proposals",80,[[["ciphersuite",3],["leafindex",3],["vec",3],["mlsplaintext",3]]]],[11,"contains","","Returns `true` if all `ProposalID` values from the list…",80,[[]]],[11,"add","","Add a new `QueuedProposal` to the queue",80,[[["queuedproposal",3]]]],[11,"retain","","Retains only the elements specified by the predicate",80,[[]]],[11,"get_proposal_id_list","","Gets the list of all `ProposalID`",80,[[],[["vec",3],["proposalid",3]]]],[11,"get_filtered_proposals","","Return a list of fileterd `QueuedProposal`",80,[[["proposaltype",4]],[["vec",3],["queuedproposal",3]]]],[11,"new","openmls::messages","",71,[[["ciphersuite",3]]]],[11,"new_empty","","",71,[[]]],[11,"as_slice","","",71,[[],["vec",3]]],[11,"as_slice","","",72,[[]]],[11,"new","","",73,[[["groupepoch",3],["groupid",3],["box",3],["leafindex",3],["vec",3],["vec",3]]]],[11,"tree_hash","","Get the tree hash as byte slice.",73,[[]]],[11,"signer_index","","Get the signer index.",73,[[],["leafindex",3]]],[11,"signature","","Get the signature.",73,[[],["signature",3]]],[11,"set_signature","","Set the signature.",73,[[["signature",3]]]],[11,"group_id","","Get the group ID.",73,[[],["groupid",3]]],[11,"epoch","","Get the epoch.",73,[[],["groupepoch",3]]],[11,"confirmed_transcript_hash","","Get the confirmed transcript hash.",73,[[]]],[11,"confirmation_tag","","Get the confirmed tag.",73,[[]]],[11,"extensions","","Get the extensions.",73,[[]]],[11,"extensions_mut","","Get the extensions as mutable reference.",73,[[],["vec",3]]],[11,"from_bytes","","",73,[[],[["codecerror",4],["result",4]]]],[11,"new","","Create a new welcome message from the provided data. Note…",77,[[["vec",3],["encryptedgroupsecrets",3],["ciphersuite",3],["vec",3],["protocolversion",4]]]],[11,"ciphersuite","","Get a reference to the ciphersuite in this Welcome message.",77,[[],["ciphersuite",3]]],[11,"get_secrets_ref","","Get a reference to the ciphersuite in this Welcome message.",77,[[]]],[11,"get_encrypted_group_info_ref","","Get a reference to the encrypted group info.",77,[[]]],[0,"prelude","openmls","Prelude for openmls. Include this to get access to all the…",null,null],[3,"GroupConfig","openmls::prelude","Configuration for an MLS group.",null,null],[12,"add_ratchet_tree_extension","","Flag whether to send the ratchet tree along with the…",57,null],[12,"padding_block_size","","",57,null],[12,"additional_as_epochs","","",57,null],[3,"ManagedGroup","","",null,null],[12,"group","","",63,null],[12,"generation","","",63,null],[12,"plaintext_queue","","",63,null],[12,"public_queue","","",63,null],[12,"own_queue","","",63,null],[12,"pending_kpbs","","",63,null],[3,"MlsGroup","","",null,null],[12,"ciphersuite","","",65,null],[12,"group_context","","",65,null],[12,"generation","","",65,null],[12,"epoch_secrets","","",65,null],[12,"secret_tree","","",65,null],[12,"tree","","",65,null],[12,"interim_transcript_hash","","",65,null],[12,"add_ratchet_tree_extension","","",65,null],[3,"HpkeCiphertext","","7.7. Update Paths",null,null],[12,"kem_output","","",0,null],[12,"ciphertext","","",0,null],[3,"AeadKey","","",null,null],[12,"value","","",1,null],[3,"ReuseGuard","","",null,null],[12,"value","","",2,null],[3,"AeadNonce","","",null,null],[12,"value","","",3,null],[3,"Signature","","",null,null],[12,"value","","",4,null],[3,"SignaturePrivateKey","","",null,null],[12,"ciphersuite","","",5,null],[12,"value","","",5,null],[3,"SignaturePublicKey","","",null,null],[12,"ciphersuite","","",6,null],[12,"value","","",6,null],[3,"SignatureKeypair","","",null,null],[12,"ciphersuite","","",7,null],[12,"private_key","","",7,null],[12,"public_key","","",7,null],[3,"Ciphersuite","","",null,null],[12,"name","","",8,null],[12,"signature","","",8,null],[12,"hpke","","",8,null],[12,"aead","","",8,null],[12,"hash","","",8,null],[12,"hmac","","",8,null],[3,"Cursor","","",null,null],[12,"buffer","","",13,null],[12,"position","","",13,null],[3,"Config","","MLS Configuration",null,null],[12,"protocol_versions","","",18,null],[12,"ciphersuites","","",18,null],[12,"extensions","","",18,null],[3,"Certificate","","Struct containing an X509 certificate chain, as per Spec.",null,null],[12,"cert_data","","",20,null],[3,"Credential","","Struct containing MLS credential data, where the data…",null,null],[12,"credential_type","","",21,null],[12,"credential","","",21,null],[3,"BasicCredential","","",null,null],[12,"identity","","",22,null],[12,"ciphersuite","","",22,null],[12,"public_key","","",22,null],[3,"CredentialBundle","","This struct contains a credential and the corresponding…",null,null],[12,"credential","","",23,null],[12,"signature_private_key","","",23,null],[3,"CapabilitiesExtension","","",null,null],[12,"versions","","",32,null],[12,"ciphersuites","","",32,null],[12,"extensions","","",32,null],[3,"KeyIDExtension","","",null,null],[12,"key_id","","",33,null],[3,"LifetimeExtension","","The lifetime extension holds a not before and a not after…",null,null],[12,"not_before","","",34,null],[12,"not_after","","",34,null],[3,"ExtensionStruct","","Extension struct",null,null],[12,"extension_type","","",29,null],[12,"extension_data","","",29,null],[3,"MLSPlaintext","","",null,null],[12,"group_id","","",39,null],[12,"epoch","","",39,null],[12,"sender","","",39,null],[12,"authenticated_data","","",39,null],[12,"content_type","","",39,null],[12,"content","","",39,null],[12,"signature","","",39,null],[3,"MLSCiphertext","","",null,null],[12,"group_id","","",40,null],[12,"epoch","","",40,null],[12,"content_type","","",40,null],[12,"authenticated_data","","",40,null],[12,"encrypted_sender_data","","",40,null],[12,"ciphertext","","",40,null],[3,"MLSPlaintextTBS","","",null,null],[12,"serialized_context_option","","",41,null],[12,"group_id","","",41,null],[12,"epoch","","",41,null],[12,"sender","","",41,null],[12,"authenticated_data","","",41,null],[12,"content_type","","",41,null],[12,"payload","","",41,null],[3,"MLSSenderData","","",null,null],[12,"sender","","",42,null],[12,"generation","","",42,null],[12,"reuse_guard","","",42,null],[3,"MLSCiphertextContent","","",null,null],[12,"content","","",44,null],[12,"signature","","",44,null],[12,"padding","","",44,null],[3,"MLSCiphertextContentAAD","","",null,null],[12,"group_id","","",45,null],[12,"epoch","","",45,null],[12,"content_type","","",45,null],[12,"authenticated_data","","",45,null],[3,"MLSPlaintextCommitContent","","",null,null],[12,"group_id","","",46,null],[12,"epoch","","",46,null],[12,"sender","","",46,null],[12,"content_type","","",46,null],[12,"commit","","",46,null],[3,"MLSPlaintextCommitAuthData","","",null,null],[12,"confirmation_tag","","",47,null],[3,"KeyPackage","","",null,null],[12,"protocol_version","","",67,null],[12,"cipher_suite","","",67,null],[12,"hpke_init_key","","",67,null],[12,"credential","","",67,null],[12,"extensions","","",67,null],[12,"signature","","",67,null],[3,"KeyPackageBundle","","",null,null],[12,"key_package","","",68,null],[12,"private_key","","",68,null],[12,"leaf_secret","","",68,null],[4,"CiphersuiteName","","",null,null],[13,"MLS10_128_DHKEMX25519_AES128GCM_SHA256_Ed25519","","",9,null],[13,"MLS10_128_DHKEMP256_AES128GCM_SHA256_P256","","",9,null],[13,"MLS10_128_DHKEMX25519_CHACHA20POLY1305_SHA256_Ed25519","","",9,null],[13,"MLS10_256_DHKEMX448_AES256GCM_SHA512_Ed448","","",9,null],[13,"MLS10_256_DHKEMP521_AES256GCM_SHA512_P521","","",9,null],[13,"MLS10_256_DHKEMX448_CHACHA20POLY1305_SHA512_Ed448","","",9,null],[4,"HKDFError","","",null,null],[13,"InvalidLength","","",10,null],[4,"AEADError","","",null,null],[13,"EncryptionError","","",11,null],[13,"DecryptionError","","",11,null],[13,"WrongKeyLength","","",11,null],[4,"CodecError","","",null,null],[13,"EncodingError","","",14,null],[13,"DecodingError","","",14,null],[4,"VecSize","","",null,null],[13,"VecU8","","",15,null],[13,"VecU16","","",15,null],[13,"VecU32","","",15,null],[13,"VecU64","","",15,null],[4,"ProtocolVersion","","Protocol Version",null,null],[13,"Reserved","","",19,null],[13,"Mls10","","",19,null],[4,"CredentialError","","",null,null],[13,"UnknwonConfigError","","",24,null],[13,"UnsupportedCredentialType","","",24,null],[4,"CredentialType","","Enum for Credential Types. We only need this for…",null,null],[13,"Reserved","","",25,null],[13,"Basic","","",25,null],[13,"X509","","",25,null],[4,"MLSCredentialType","","This enum contains the different available credentials.",null,null],[13,"Basic","","",26,null],[13,"X509","","",26,null],[4,"ExtensionError","","",null,null],[13,"UnknownExtension","","",30,null],[13,"InvalidExtensionType","","",30,null],[4,"ExtensionType","","Extension types",null,null],[13,"Reserved","","",31,null],[13,"Capabilities","","",31,null],[13,"Lifetime","","",31,null],[13,"KeyID","","",31,null],[13,"ParentHash","","",31,null],[13,"RatchetTree","","",31,null],[4,"MLSPlaintextError","","",null,null],[13,"InvalidContentType","","",48,null],[4,"MLSCiphertextError","","",null,null],[13,"InvalidContentType","","",49,null],[13,"GenerationOutOfBound","","",49,null],[4,"ContentType","","",null,null],[13,"Invalid","","",50,null],[13,"Application","","",50,null],[13,"Proposal","","",50,null],[13,"Commit","","",50,null],[13,"Default","","",50,null],[4,"MLSPlaintextContentType","","",null,null],[13,"Application","","",51,null],[13,"Proposal","","",51,null],[13,"Commit","","",51,null],[4,"KeyPackageError","","",null,null],[13,"ExtensionNotPresent","","",69,null],[13,"MandatoryExtensionsMissing","","",69,null],[13,"InvalidLifetimeExtension","","",69,null],[13,"InvalidSignature","","",69,null],[13,"LibraryError","","",69,null],[5,"encode_vec","","",null,[[["vec",3],["vecsize",4]],[["codecerror",4],["result",4]]]],[5,"decode_vec","","",null,[[["cursor",3],["vecsize",4]],[["result",4],["vec",3],["codecerror",4]]]],[5,"_print_tree","","",null,[[["ratchettree",3]]]],[0,"sender","","Section  9. Message Framing",null,null],[3,"Sender","openmls::prelude::sender","",null,null],[12,"sender_type","","",52,null],[12,"sender","","",52,null],[4,"SenderType","","",null,null],[13,"Invalid","","",53,null],[13,"Member","","",53,null],[13,"Preconfigured","","",53,null],[13,"NewMember","","",53,null],[13,"Default","","",53,null],[17,"NONCE_BYTES","openmls::prelude","",null,null],[17,"REUSE_GUARD_BYTES","","",null,null],[17,"CHACHA_KEY_BYTES","","",null,null],[17,"AES_128_KEY_BYTES","","",null,null],[17,"AES_256_KEY_BYTES","","",null,null],[17,"TAG_BYTES","","",null,null],[8,"Api","","",null,null],[10,"new","","Create a new group.",66,[[["groupconfig",3],["keypackagebundle",3],["ciphersuitename",4]],[["configerror",4],["result",4]]]],[10,"new_from_welcome","","Join a group from a Welcome message",66,[[["vec",3],["welcome",3],["keypackagebundle",3],["option",4]],[["result",4],["welcomeerror",4]]]],[10,"create_add_proposal","","Create an `AddProposal`",66,[[["keypackage",3],["credentialbundle",3]],["mlsplaintext",3]]],[10,"create_update_proposal","","Create an `UpdateProposal`",66,[[["keypackage",3],["credentialbundle",3]],["mlsplaintext",3]]],[10,"create_remove_proposal","","Create a `RemoveProposal`",66,[[["credentialbundle",3],["leafindex",3]],["mlsplaintext",3]]],[10,"create_commit","","Create a `Commit` and an optional `Welcome`",66,[[["mlsplaintext",3],["credentialbundle",3],["vec",3]],[["result",4],["createcommiterror",4]]]],[10,"apply_commit","","Apply a `Commit` message",66,[[["vec",3],["keypackagebundle",3],["vec",3],["mlsplaintext",3]],[["applycommiterror",4],["result",4]]]],[10,"create_application_message","","Create application message",66,[[["credentialbundle",3]],["mlsciphertext",3]]],[10,"encrypt","","Encrypt an MLS message",66,[[["mlsplaintext",3]],["mlsciphertext",3]]],[10,"decrypt","","Decrypt an MLS message",66,[[["mlsciphertext",3]],[["result",4],["decryptionerror",4],["mlsplaintext",3]]]],[10,"export_secret","","Export a secret through the exporter",66,[[],["vec",3]]],[8,"Codec","","",null,null],[11,"encode","openmls::codec","",16,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",16,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode_detached","","",16,[[],[["vec",3],["codecerror",4],["result",4]]]],[8,"Extension","openmls::prelude","Extension",null,null],[10,"new_from_bytes","","Build a new extension from a byte slice.",37,[[],[["configerror",4],["result",4]]]],[10,"get_type","","Each extension has an extension type. This should be an…",37,[[],["extensiontype",4]]],[10,"to_extension_struct","","Get the extension as `ExtensionStruct` for encoding.",37,[[],["extensionstruct",3]]],[10,"as_any","","Get a generic trait object for downcasting.",37,[[],["any",8]]],[11,"to_parent_hash_extension","openmls::extensions","Get a reference to the `ParentHashExtension`. Returns an…",37,[[],[["parenthashextension",3],["extensionerror",4],["result",4]]]],[11,"to_capabilities_extension","","Get a reference to the `CapabilitiesExtension`. Returns an…",37,[[],[["result",4],["capabilitiesextension",3],["extensionerror",4]]]],[11,"to_lifetime_extension","","Get a reference to the `LifetimeExtension`. Returns an…",37,[[],[["lifetimeextension",3],["extensionerror",4],["result",4]]]],[11,"to_key_id_extension","","Get a reference to the `KeyIDExtension`. Returns an…",37,[[],[["extensionerror",4],["result",4],["keyidextension",3]]]],[11,"to_ratchet_tree_extension_ref","","Get a reference to the `RatchetTreeExtension`. Returns an…",37,[[],[["result",4],["ratchettreeextension",3],["extensionerror",4]]]],[8,"ExtensionHelper","openmls::prelude","",null,null],[10,"clone_it","","",38,[[],[["box",3],["extension",8]]]],[0,"schedule","openmls","",null,null],[3,"HkdfLabel","openmls::schedule","",null,null],[12,"length","","",86,null],[12,"label","","",86,null],[12,"context","","",86,null],[3,"EpochSecrets","","",null,null],[12,"welcome_secret","","",87,null],[12,"sender_data_secret","","",87,null],[12,"encryption_secret","","",87,null],[12,"exporter_secret","","",87,null],[12,"confirmation_key","","",87,null],[12,"init_secret","","",87,null],[5,"derive_secret","","",null,[[["ciphersuite",3]],["vec",3]]],[5,"mls_exporter","","",null,[[["groupcontext",3],["ciphersuite",3],["epochsecrets",3]],["vec",3]]],[5,"hkdf_expand_label","","",null,[[["ciphersuite",3]],["vec",3]]],[11,"new","","",86,[[]]],[11,"serialize","","",86,[[],["vec",3]]],[11,"new","","",87,[[]]],[11,"get_new_epoch_secrets","","",87,[[["groupcontext",3],["ciphersuite",3],["commitsecret",3],["option",4]],["vec",3]]],[11,"derive_epoch_secrets","","",87,[[["ciphersuite",3],["vec",3]],["epochsecrets",3]]],[0,"tree","openmls","",null,null],[3,"RatchetTree","openmls::tree","The ratchet tree.",null,null],[12,"ciphersuite","","The ciphersuite used in this tree.",88,null],[12,"nodes","","All nodes in the tree. Note that these only hold public…",88,null],[12,"private_tree","","This holds all private values in the tree. See…",88,null],[3,"UpdatePathNode","","7.7. Update Paths",null,null],[12,"public_key","","",89,null],[12,"encrypted_path_secret","","",89,null],[3,"UpdatePath","","7.7. Update Paths",null,null],[12,"leaf_key_package","","",90,null],[12,"nodes","","",90,null],[4,"TreeError","","These are errors the RatchetTree can return.",null,null],[13,"InvalidArguments","","",91,null],[13,"DuplicateIndex","","",91,null],[13,"InvalidUpdatePath","","",91,null],[13,"UnknownError","","",91,null],[0,"codec","","",null,null],[0,"hash_input","","7.5. Tree Hashes",null,null],[3,"ParentNodeHashInput","openmls::tree::hash_input","",null,null],[12,"node_index","","",92,null],[12,"parent_node","","",92,null],[12,"left_hash","","",92,null],[12,"right_hash","","",92,null],[3,"LeafNodeHashInput","","",null,null],[12,"node_index","","",93,null],[12,"key_package","","",93,null],[11,"new","","",92,[[["option",4]]]],[11,"hash","","",92,[[["ciphersuite",3]],["vec",3]]],[11,"new","","",93,[[["nodeindex",3],["option",4]]]],[11,"hash","","",93,[[["ciphersuite",3]],["vec",3]]],[0,"index","openmls::tree","",null,null],[3,"NodeIndex","openmls::tree::index","",null,null],[12,"0","","",94,null],[3,"LeafIndex","","",null,null],[12,"0","","",95,null],[11,"as_u32","","",94,[[]]],[11,"as_usize","","",94,[[]]],[11,"as_u32","","",95,[[]]],[11,"as_usize","","",95,[[]]],[0,"node","openmls::tree","",null,null],[3,"Node","openmls::tree::node","",null,null],[12,"node_type","","",96,null],[12,"key_package","","",96,null],[12,"node","","",96,null],[3,"ParentNode","","",null,null],[12,"public_key","","",97,null],[12,"unmerged_leaves","","",97,null],[12,"parent_hash","","",97,null],[4,"NodeType","","",null,null],[13,"Leaf","","",98,null],[13,"Parent","","",98,null],[13,"Default","","",98,null],[11,"new_leaf","","",96,[[["keypackage",3],["option",4]]]],[11,"new_blank_parent_node","","",96,[[]]],[11,"get_public_hpke_key","","",96,[[],[["hpkepublickey",3],["option",4]]]],[11,"blank","","",96,[[]]],[11,"is_blank","","",96,[[]]],[11,"hash","","",96,[[["ciphersuite",3]],[["option",4],["vec",3]]]],[11,"parent_hash","","",96,[[],[["option",4],["vec",3]]]],[11,"get_key_package_ref_mut","","Get a mutable reference to the key package in this node.",96,[[],[["option",4],["keypackage",3]]]],[11,"new","","",97,[[["hpkepublickey",3]]]],[11,"get_public_key","","",97,[[],["hpkepublickey",3]]],[11,"get_parent_hash","","",97,[[]]],[11,"set_parent_hash","","",97,[[["vec",3]]]],[11,"get_unmerged_leaves","","",97,[[]]],[11,"get_unmerged_leaves_mut","","",97,[[],["vec",3]]],[0,"path_keys","openmls::tree","A data structure holding HPKE key pairs for a path in the…",null,null],[3,"PathKeys","openmls::tree::path_keys","A set of keys for a path stored as `HashMap` with entries…",null,null],[12,"keys","","",99,null],[11,"add","","Add a slice of `HPKEPrivateKey`s with the indices given in…",99,[[["vec",3],["hpkeprivatekey",3]]]],[11,"get","","Get an HPKE private key for a given node index.",99,[[["nodeindex",3]],[["option",4],["hpkeprivatekey",3]]]],[0,"private_tree","openmls::tree","A data structure holding information about the leaf node…",null,null],[3,"PrivateTree","openmls::tree::private_tree","",null,null],[12,"node_index","","",100,null],[12,"hpke_private_key","","",100,null],[12,"path_keys","","",100,null],[12,"commit_secret","","",100,null],[12,"path_secrets","","",100,null],[6,"PathSecrets","","",null,null],[11,"new","","Create a new empty placeholder `PrivateTree` with default…",100,[[["nodeindex",3]],["privatetree",3]]],[11,"from_key_package_bundle","","Create a minimal `PrivateTree` setting only the private…",100,[[["nodeindex",3],["keypackagebundle",3]]]],[11,"new_with_keys","","Creates a `PrivateTree` with a new private key, leaf…",100,[[["ciphersuite",3],["nodeindex",3],["keypackagebundle",3]]]],[11,"get_hpke_private_key","","",100,[[],["hpkeprivatekey",3]]],[11,"get_node_index","","",100,[[],["nodeindex",3]]],[11,"get_path_keys","","",100,[[],["pathkeys",3]]],[11,"get_commit_secret","","",100,[[],["commitsecret",3]]],[11,"get_path_secrets","","",100,[[]]],[11,"generate_path_secrets","","Generate `n` path secrets with the given `leaf_secret`.",100,[[["ciphersuite",3]],[["vec",3],["hpkepublickey",3]]]],[11,"continue_path_secrets","","Generate `n` path secrets with the given `start_secret`.",100,[[["ciphersuite",3],["vec",3]],[["vec",3],["hpkepublickey",3]]]],[11,"derive_path_secrets","","This function generates the path secrets internally and is…",100,[[["vec",3],["ciphersuite",3],["vec",3]],[["vec",3],["hpkepublickey",3]]]],[11,"generate_commit_secret","","Generate the commit secret for the given `path_secret`.",100,[[["ciphersuite",3]]]],[11,"generate_path_keypairs","","Generate HPKE key pairs for all path secrets in…",100,[[["ciphersuite",3]],[["vec",3],["hpkepublickey",3]]]],[0,"secret_tree","openmls::tree","",null,null],[3,"TreeContext","openmls::tree::secret_tree","",null,null],[12,"node","","",101,null],[12,"generation","","",101,null],[3,"SecretTreeNode","","",null,null],[12,"secret","","",102,null],[3,"SecretTree","","",null,null],[12,"nodes","","",103,null],[12,"handshake_sender_ratchets","","",103,null],[12,"application_sender_ratchets","","",103,null],[12,"size","","",103,null],[4,"SecretTreeError","","",null,null],[13,"TooDistantInThePast","","",104,null],[13,"TooDistantInTheFuture","","",104,null],[13,"IndexOutOfBounds","","",104,null],[4,"SecretType","","",null,null],[13,"HandshakeSecret","","",105,null],[13,"ApplicationSecret","","",105,null],[4,"SecretTypeError","","",null,null],[13,"InvalidContentType","","",106,null],[5,"derive_tree_secret","","Derives secrets for inner nodes of a SecretTree",null,[[["ciphersuite",3]],["vec",3]]],[11,"new","","Creates a new SecretTree based on an `encryption_secret`…",103,[[["leafindex",3]]]],[11,"get_generation","","Get current generation for a specific SenderRatchet",103,[[["secrettype",4],["leafindex",3]]]],[11,"initialize_sender_ratchets","","Initializes a specific SenderRatchet pair for a given…",103,[[["ciphersuite",3],["leafindex",3]],[["result",4],["secrettreeerror",4]]]],[11,"get_secret_for_decryption","","Return RatchetSecrets for a given index and generation.…",103,[[["secrettype",4],["ciphersuite",3],["leafindex",3]],[["result",4],["secrettreeerror",4]]]],[11,"get_secret_for_encryption","","Return the next RatchetSecrets that should be used for…",103,[[["secrettype",4],["ciphersuite",3],["leafindex",3]]]],[11,"get_ratchet_mut","","Returns a mutable reference to a specific SenderRatchet.…",103,[[["secrettype",4],["leafindex",3]],["senderratchet",3]]],[11,"get_ratchet_opt","","Returns an optional reference to a specific SenderRatchet",103,[[["secrettype",4],["leafindex",3]],[["option",4],["senderratchet",3]]]],[11,"derive_down","","Derives the secrets for the child leaves in a SecretTree…",103,[[["ciphersuite",3],["nodeindex",3]]]],[0,"sender_ratchet","openmls::tree","",null,null],[3,"SenderRatchet","openmls::tree::sender_ratchet","",null,null],[12,"index","","",107,null],[12,"generation","","",107,null],[12,"past_secrets","","",107,null],[6,"RatchetSecrets","","",null,null],[17,"OUT_OF_ORDER_TOLERANCE","","",null,null],[17,"MAXIMUM_FORWARD_DISTANCE","","",null,null],[11,"new","","Creates e new SenderRatchet",107,[[["leafindex",3]]]],[11,"get_secret_for_decryption","","Gets a secret from the SenderRatchet. Returns an error if…",107,[[["ciphersuite",3]],[["result",4],["secrettreeerror",4]]]],[11,"get_secret_for_encryption","","Gets a secret from the SenderRatchet and ratchets forward",107,[[["ciphersuite",3]]]],[11,"ratchet_secret","","Computes the new secret",107,[[["ciphersuite",3]],["vec",3]]],[11,"derive_key_nonce","","Derives a key & nonce from a secret",107,[[["ciphersuite",3]]]],[11,"get_generation","","Gets the current generation",107,[[]]],[0,"treemath","openmls::tree","",null,null],[4,"TreeMathError","openmls::tree::treemath","",null,null],[13,"LeafHasNoChildren","","",108,null],[13,"RootHasNoParent","","",108,null],[5,"log2","","",null,[[]]],[5,"level","","",null,[[["nodeindex",3]]]],[5,"node_width","","",null,[[]]],[5,"root","","",null,[[["leafindex",3]],["nodeindex",3]]],[5,"left","","",null,[[["nodeindex",3]],[["result",4],["nodeindex",3],["treematherror",4]]]],[5,"right","","",null,[[["nodeindex",3],["leafindex",3]],[["result",4],["nodeindex",3],["treematherror",4]]]],[5,"parent_step","","",null,[[]]],[5,"parent","","",null,[[["nodeindex",3],["leafindex",3]],[["result",4],["nodeindex",3],["treematherror",4]]]],[5,"sibling","","",null,[[["nodeindex",3],["leafindex",3]],[["result",4],["nodeindex",3],["treematherror",4]]]],[5,"dirpath","","",null,[[["nodeindex",3],["leafindex",3]],[["result",4],["vec",3],["treematherror",4]]]],[5,"dirpath_long","","",null,[[["nodeindex",3],["leafindex",3]],[["result",4],["vec",3],["treematherror",4]]]],[5,"direct_path_root","","",null,[[["nodeindex",3],["leafindex",3]],[["result",4],["vec",3],["treematherror",4]]]],[5,"copath","","",null,[[["nodeindex",3],["leafindex",3]],[["result",4],["vec",3],["treematherror",4]]]],[5,"common_ancestor_index","","",null,[[["nodeindex",3]],["nodeindex",3]]],[6,"InvitationList","openmls::tree","",null,null],[11,"new","","Create a new empty `RatchetTree`.",88,[[["keypackagebundle",3],["ciphersuite",3]],["ratchettree",3]]],[11,"new_from_public_tree","","Create a new `RatchetTree` by cloning the public tree…",88,[[["ratchettree",3]]]],[11,"new_from_nodes","","Generate a new `RatchetTree` from `Node`s with the…",88,[[["keypackagebundle",3],["ciphersuite",3]],[["result",4],["ratchettree",3],["treeerror",4]]]],[11,"private_tree_mut","","Return a mutable reference to the `PrivateTree`.",88,[[],["privatetree",3]]],[11,"tree_size","","",88,[[],["nodeindex",3]]],[11,"public_key_tree","","Get a vector with all nodes in the tree, containing `None`…",88,[[],[["vec",3],["option",4]]]],[11,"public_key_tree_copy","","Get a vector with a copy of all nodes in the tree,…",88,[[],[["vec",3],["option",4]]]],[11,"leaf_count","","",88,[[],["leafindex",3]]],[11,"resolve","","",88,[[["nodeindex",3]],[["nodeindex",3],["vec",3]]]],[11,"get_own_node_index","","Get the index of the own node.",88,[[],["nodeindex",3]]],[11,"get_own_key_package_ref","","Get a reference to the own key package.",88,[[],["keypackage",3]]],[11,"get_own_key_package_ref_mut","","Get a mutable reference to the own key package.",88,[[],["keypackage",3]]],[11,"blank_member","","",88,[[["nodeindex",3]]]],[11,"free_leaves","","",88,[[],[["nodeindex",3],["vec",3]]]],[11,"update_path","","7.7. Update Paths",88,[[["leafindex",3],["updatepath",3]],[["commitsecret",3],["result",4],["treeerror",4]]]],[11,"replace_private_tree","","Update the private tree with the new `KeyPackageBundle`.",88,[[["ciphersuite",3],["keypackagebundle",3]],[["commitsecret",3],["result",4],["treeerror",4]]]],[11,"refresh_private_tree","","Update the private tree.",88,[[["ciphersuite",3],["credentialbundle",3]]]],[11,"replace_private_tree_","","Replace the private tree with a new one based on the…",88,[[["ciphersuite",3],["keypackagebundle",3]],[["updatepath",3],["option",4]]]],[11,"encrypt_to_copath","","Encrypt the path secrets to the co path and return the…",88,[[["vec",3],["hpkepublickey",3]],[["vec",3],["result",4],["treeerror",4]]]],[11,"merge_direct_path_keys","","Merge public keys from a direct path to this tree along…",88,[[["nodeindex",3],["vec",3],["updatepath",3]],[["treeerror",4],["result",4]]]],[11,"validate_public_keys","","Validates that the `public_keys` matches the public keys…",88,[[],[["treeerror",4],["result",4]]]],[11,"merge_public_keys","","Merges `public_keys` into the tree along the `path`",88,[[],[["treeerror",4],["result",4]]]],[11,"add_nodes","","Add nodes for the provided key packages.",88,[[],["vec",3]]],[11,"apply_proposals","","Applies a list of proposals from a Commit to the tree.…",88,[[["proposalqueue",3],["vec",3]],[["result",4],["treeerror",4]]]],[11,"trim_tree","","Trims the tree from the right when there are empty leaf…",88,[[]]],[11,"compute_tree_hash","","Computes the tree hash",88,[[],["vec",3]]],[11,"compute_parent_hash","","Computes the parent hash",88,[[["nodeindex",3]],["vec",3]]],[11,"verify_integrity","","Verifies the integrity of a public tree",88,[[["ciphersuite",3]]]],[11,"new","","Create a new update path.",90,[[["vec",3],["keypackage",3],["updatepathnode",3]]]],[0,"utils","openmls","",null,null],[5,"randombytes","openmls::utils","",null,[[],["vec",3]]],[5,"random_u32","","",null,[[]]],[5,"zero","","",null,[[],["vec",3]]],[5,"_bytes_to_hex","","",null,[[],["string",3]]],[5,"_print_tree","","",null,[[["ratchettree",3]]]],[11,"from","openmls::ciphersuite","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","openmls::codec","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","openmls::config","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","openmls::creds","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","openmls::errors","",27,[[]]],[11,"into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","openmls::extensions","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","openmls::extensions::capabilities_extension","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","openmls::extensions::key_package_id_extension","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","openmls::extensions::life_time_extension","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","openmls::extensions::parent_hash_extension","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","openmls::extensions::ratchet_tree_extension","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","openmls::framing","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","openmls::framing::sender","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","openmls::group","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"from","openmls::group::errors","",59,[[]]],[11,"into","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"from","openmls::group::managed_group","",63,[[]]],[11,"into","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"from","openmls::group::mls_group","",65,[[]]],[11,"into","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"from","openmls::key_packages","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"from","openmls::messages","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"vzip","","",73,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"from","openmls::messages::proposals","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"vzip","","",85,[[]]],[11,"from","openmls::schedule","",86,[[]]],[11,"into","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"from","openmls::tree","",88,[[]]],[11,"into","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"vzip","","",91,[[]]],[11,"from","openmls::tree::hash_input","",92,[[]]],[11,"into","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"vzip","","",92,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"from","openmls::tree::index","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"vzip","","",94,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"vzip","","",95,[[]]],[11,"from","openmls::tree::node","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"vzip","","",96,[[]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"vzip","","",97,[[]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"vzip","","",98,[[]]],[11,"from","openmls::tree::path_keys","",99,[[]]],[11,"into","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"vzip","","",99,[[]]],[11,"from","openmls::tree::private_tree","",100,[[]]],[11,"into","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"vzip","","",100,[[]]],[11,"from","openmls::tree::secret_tree","",101,[[]]],[11,"into","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"vzip","","",101,[[]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"vzip","","",102,[[]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"vzip","","",103,[[]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"vzip","","",104,[[]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"vzip","","",105,[[]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"vzip","","",106,[[]]],[11,"from","openmls::tree::sender_ratchet","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"vzip","","",107,[[]]],[11,"from","openmls::tree::treemath","",108,[[]]],[11,"into","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"vzip","","",108,[[]]],[11,"unsigned_payload","openmls::messages","",73,[[],[["vec",3],["codecerror",4],["result",4]]]],[11,"encode","openmls::ciphersuite","",9,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",9,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",6,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",4,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",4,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",0,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",0,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",2,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",2,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::config","",19,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",19,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::creds","",25,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",25,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",21,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",21,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",22,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",22,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::extensions","",31,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",31,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",29,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",29,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::framing::sender","",53,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",53,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",52,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",52,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::framing","",39,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",39,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",40,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",40,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",50,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",50,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",51,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",51,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",41,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",42,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",42,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",43,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",43,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",44,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",45,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",45,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",46,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",46,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",47,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",47,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::group::mls_group","",65,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",65,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::group","",54,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",54,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",55,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",55,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",56,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",56,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",57,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",57,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::key_packages","",67,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",67,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::messages::proposals","",84,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",85,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",78,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",81,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",82,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",83,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::messages","",70,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",70,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",71,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",72,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",73,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",74,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",75,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",75,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",76,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",76,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",77,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",77,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::schedule","",87,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"decode","","",87,[[["cursor",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::tree::node","",98,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",96,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::tree","",89,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",90,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::tree::secret_tree","",102,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::tree::hash_input","",92,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"encode","","",93,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::tree::index","",95,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::tree::node","",97,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"encode","openmls::tree::secret_tree","",101,[[["vec",3]],[["codecerror",4],["result",4]]]],[11,"get_type","openmls::extensions::capabilities_extension","",32,[[],["extensiontype",4]]],[11,"new_from_bytes","","Build a new CapabilitiesExtension from a byte slice.…",32,[[],[["configerror",4],["result",4]]]],[11,"to_extension_struct","","",32,[[],["extensionstruct",3]]],[11,"as_any","","",32,[[],["any",8]]],[11,"get_type","openmls::extensions::key_package_id_extension","",33,[[],["extensiontype",4]]],[11,"new_from_bytes","","Build a new KeyIDExtension from a byte slice.",33,[[],[["configerror",4],["result",4]]]],[11,"to_extension_struct","","",33,[[],["extensionstruct",3]]],[11,"as_any","","",33,[[],["any",8]]],[11,"get_type","openmls::extensions::life_time_extension","",34,[[],["extensiontype",4]]],[11,"new_from_bytes","","Build a new LifetimeExtension from a byte slice.",34,[[],[["configerror",4],["result",4]]]],[11,"to_extension_struct","","",34,[[],["extensionstruct",3]]],[11,"as_any","","",34,[[],["any",8]]],[11,"get_type","openmls::extensions::parent_hash_extension","",35,[[],["extensiontype",4]]],[11,"new_from_bytes","","Build a new ParentHashExtension from a byte slice.",35,[[],[["configerror",4],["result",4]]]],[11,"to_extension_struct","","",35,[[],["extensionstruct",3]]],[11,"as_any","","",35,[[],["any",8]]],[11,"get_type","openmls::extensions::ratchet_tree_extension","",36,[[],["extensiontype",4]]],[11,"new_from_bytes","","Build a new RatchetTreeExtension from a byte slice.",36,[[],[["configerror",4],["result",4]]]],[11,"to_extension_struct","","",36,[[],["extensionstruct",3]]],[11,"as_any","","",36,[[],["any",8]]],[11,"new","openmls::group::mls_group","",65,[[["groupconfig",3],["keypackagebundle",3],["ciphersuitename",4]],[["configerror",4],["result",4]]]],[11,"new_from_welcome","","",65,[[["vec",3],["welcome",3],["keypackagebundle",3],["option",4]],[["result",4],["welcomeerror",4]]]],[11,"create_add_proposal","","",65,[[["keypackage",3],["credentialbundle",3]],["mlsplaintext",3]]],[11,"create_update_proposal","","",65,[[["keypackage",3],["credentialbundle",3]],["mlsplaintext",3]]],[11,"create_remove_proposal","","",65,[[["credentialbundle",3],["leafindex",3]],["mlsplaintext",3]]],[11,"create_commit","","",65,[[["mlsplaintext",3],["credentialbundle",3],["vec",3]],[["result",4],["createcommiterror",4]]]],[11,"apply_commit","","",65,[[["vec",3],["keypackagebundle",3],["vec",3],["mlsplaintext",3]],[["applycommiterror",4],["result",4]]]],[11,"create_application_message","","",65,[[["credentialbundle",3]],["mlsciphertext",3]]],[11,"encrypt","","",65,[[["mlsplaintext",3]],["mlsciphertext",3]]],[11,"decrypt","","",65,[[["mlsciphertext",3]],[["result",4],["decryptionerror",4],["mlsplaintext",3]]]],[11,"export_secret","","",65,[[],["vec",3]]],[11,"from","openmls::codec","",14,[[["configerror",4]],["codecerror",4]]],[11,"from","","",14,[[["error",4]],["codecerror",4]]],[11,"from","openmls::creds","",24,[[["configerror",4]],["credentialerror",4]]],[11,"from","","",21,[[["mlscredentialtype",4]]]],[11,"from","openmls::errors","",27,[[["extensionerror",4]]]],[11,"from","openmls::codec","",14,[[["extensionerror",4]]]],[11,"from","openmls::framing::sender","",53,[[]]],[11,"from","openmls::framing","",50,[[]]],[11,"from","","",50,[[["mlsplaintextcontenttype",4]]]],[11,"from","","",46,[[["mlsplaintext",3]]]],[11,"from","","",47,[[["mlsplaintext",3]]]],[11,"from","","",47,[[["confirmationtag",3]]]],[11,"from","openmls::group::errors","",61,[[["mlsciphertexterror",4]],["decryptionerror",4]]],[11,"from","","",59,[[["treeerror",4]],["welcomeerror",4]]],[11,"from","","",60,[[["configerror",4]],["applycommiterror",4]]],[11,"from","","",60,[[["extensionerror",4]],["applycommiterror",4]]],[11,"from","","",59,[[["configerror",4]],["welcomeerror",4]]],[11,"from","openmls::group::managed_group","",64,[[["codecerror",4]],["grouperror",4]]],[11,"from","openmls::group","",58,[[["codecerror",4]],["grouperror",4]]],[11,"from","openmls::key_packages","",69,[[["extensionerror",4]]]],[11,"from","openmls::messages::proposals","",84,[[]]],[11,"from","openmls::tree::index","",94,[[],["nodeindex",3]]],[11,"from","","",94,[[],["nodeindex",3]]],[11,"from","","",94,[[["leafindex",3]],["nodeindex",3]]],[11,"from","","",95,[[],["leafindex",3]]],[11,"from","","",95,[[],["leafindex",3]]],[11,"from","","",95,[[["nodeindex",3]],["leafindex",3]]],[11,"from","openmls::tree::node","",98,[[]]],[11,"from","openmls::tree","",91,[[["configerror",4]],["treeerror",4]]],[11,"into","openmls::tree::index","",95,[[]]],[11,"into","","",95,[[]]],[11,"clone","openmls::ciphersuite","",9,[[],["ciphersuitename",4]]],[11,"clone","","",0,[[],["hpkeciphertext",3]]],[11,"clone","","",2,[[],["reuseguard",3]]],[11,"clone","","",3,[[],["aeadnonce",3]]],[11,"clone","","",4,[[],["signature",3]]],[11,"clone","","",5,[[],["signatureprivatekey",3]]],[11,"clone","","",6,[[],["signaturepublickey",3]]],[11,"clone","","",7,[[],["signaturekeypair",3]]],[11,"clone","","",8,[[]]],[11,"clone","openmls::config","",19,[[],["protocolversion",4]]],[11,"clone","openmls::creds","",25,[[],["credentialtype",4]]],[11,"clone","","",20,[[],["certificate",3]]],[11,"clone","","",26,[[],["mlscredentialtype",4]]],[11,"clone","","",21,[[],["credential",3]]],[11,"clone","","",22,[[],["basiccredential",3]]],[11,"clone","openmls::extensions::capabilities_extension","",32,[[],["capabilitiesextension",3]]],[11,"clone","openmls::extensions::key_package_id_extension","",33,[[],["keyidextension",3]]],[11,"clone","openmls::extensions::life_time_extension","",34,[[],["lifetimeextension",3]]],[11,"clone","openmls::extensions::parent_hash_extension","",35,[[],["parenthashextension",3]]],[11,"clone","openmls::extensions::ratchet_tree_extension","",36,[[],["ratchettreeextension",3]]],[11,"clone","openmls::extensions","",30,[[],["extensionerror",4]]],[11,"clone","","",31,[[],["extensiontype",4]]],[11,"clone","","",29,[[],["extensionstruct",3]]],[11,"clone","openmls::framing::sender","",53,[[],["sendertype",4]]],[11,"clone","","",52,[[],["sender",3]]],[11,"clone","openmls::framing","",39,[[],["mlsplaintext",3]]],[11,"clone","","",40,[[],["mlsciphertext",3]]],[11,"clone","","",50,[[],["contenttype",4]]],[11,"clone","","",51,[[],["mlsplaintextcontenttype",4]]],[11,"clone","","",42,[[],["mlssenderdata",3]]],[11,"clone","","",43,[[],["mlsciphertextsenderdataaad",3]]],[11,"clone","","",44,[[],["mlsciphertextcontent",3]]],[11,"clone","","",45,[[],["mlsciphertextcontentaad",3]]],[11,"clone","openmls::group","",54,[[],["groupid",3]]],[11,"clone","","",55,[[],["groupepoch",3]]],[11,"clone","","",56,[[],["groupcontext",3]]],[11,"clone","","",57,[[],["groupconfig",3]]],[11,"clone","openmls::key_packages","",67,[[],["keypackage",3]]],[11,"clone","openmls::messages::proposals","",84,[[],["proposaltype",4]]],[11,"clone","","",85,[[],["proposal",4]]],[11,"clone","","",78,[[],["proposalid",3]]],[11,"clone","","",79,[[],["queuedproposal",3]]],[11,"clone","","",81,[[],["addproposal",3]]],[11,"clone","","",82,[[],["updateproposal",3]]],[11,"clone","","",83,[[],["removeproposal",3]]],[11,"clone","openmls::messages","",70,[[],["commit",3]]],[11,"clone","","",71,[[],["confirmationtag",3]]],[11,"clone","","",72,[[],["commitsecret",3]]],[11,"clone","","",76,[[],["encryptedgroupsecrets",3]]],[11,"clone","","",77,[[],["welcome",3]]],[11,"clone","openmls::schedule","",87,[[],["epochsecrets",3]]],[11,"clone","openmls::tree::index","",94,[[],["nodeindex",3]]],[11,"clone","","",95,[[],["leafindex",3]]],[11,"clone","openmls::tree::node","",98,[[],["nodetype",4]]],[11,"clone","","",96,[[],["node",3]]],[11,"clone","","",97,[[],["parentnode",3]]],[11,"clone","openmls::tree::secret_tree","",105,[[],["secrettype",4]]],[11,"clone","","",102,[[],["secrettreenode",3]]],[11,"clone","openmls::tree::sender_ratchet","",107,[[],["senderratchet",3]]],[11,"clone","openmls::tree","",89,[[],["updatepathnode",3]]],[11,"clone","","",90,[[],["updatepath",3]]],[11,"clone","","",91,[[],["treeerror",4]]],[11,"default","openmls::config","",19,[[]]],[11,"default","openmls::extensions::capabilities_extension","",32,[[]]],[11,"default","openmls::extensions::key_package_id_extension","",33,[[],["keyidextension",3]]],[11,"default","openmls::extensions::life_time_extension","",34,[[],["lifetimeextension",3]]],[11,"default","openmls::extensions::parent_hash_extension","",35,[[],["parenthashextension",3]]],[11,"default","openmls::extensions::ratchet_tree_extension","",36,[[],["ratchettreeextension",3]]],[11,"default","openmls::extensions","",31,[[]]],[11,"default","openmls::group","",57,[[]]],[11,"default","openmls::messages::proposals","",80,[[],["proposalqueue",3]]],[11,"default","openmls::messages","",72,[[],["commitsecret",3]]],[11,"default","openmls::schedule","",87,[[],["epochsecrets",3]]],[11,"default","openmls::tree::index","",94,[[],["nodeindex",3]]],[11,"default","openmls::tree::path_keys","",99,[[],["pathkeys",3]]],[11,"cmp","openmls::config","",19,[[["protocolversion",4]],["ordering",4]]],[11,"cmp","openmls::tree::index","",94,[[["nodeindex",3]],["ordering",4]]],[11,"cmp","","",95,[[["leafindex",3]],["ordering",4]]],[11,"eq","openmls::ciphersuite","",9,[[["ciphersuitename",4]]]],[11,"eq","","",0,[[["hpkeciphertext",3]]]],[11,"ne","","",0,[[["hpkeciphertext",3]]]],[11,"eq","","",1,[[["aeadkey",3]]]],[11,"ne","","",1,[[["aeadkey",3]]]],[11,"eq","","",2,[[["reuseguard",3]]]],[11,"ne","","",2,[[["reuseguard",3]]]],[11,"eq","","",3,[[["aeadnonce",3]]]],[11,"ne","","",3,[[["aeadnonce",3]]]],[11,"eq","","",4,[[["signature",3]]]],[11,"ne","","",4,[[["signature",3]]]],[11,"eq","","",8,[[["ciphersuite",3]]]],[11,"eq","","",6,[[]]],[11,"eq","openmls::codec","",14,[[["codecerror",4]]]],[11,"eq","openmls::config","",19,[[["protocolversion",4]]]],[11,"eq","openmls::creds","",25,[[["credentialtype",4]]]],[11,"eq","","",20,[[["certificate",3]]]],[11,"ne","","",20,[[["certificate",3]]]],[11,"eq","","",26,[[["mlscredentialtype",4]]]],[11,"ne","","",26,[[["mlscredentialtype",4]]]],[11,"eq","","",21,[[["credential",3]]]],[11,"ne","","",21,[[["credential",3]]]],[11,"eq","","",22,[[]]],[11,"eq","openmls::errors","",27,[[["configerror",4]]]],[11,"eq","","",28,[[["error",4]]]],[11,"eq","openmls::extensions::capabilities_extension","",32,[[["capabilitiesextension",3]]]],[11,"ne","","",32,[[["capabilitiesextension",3]]]],[11,"eq","openmls::extensions::key_package_id_extension","",33,[[["keyidextension",3]]]],[11,"ne","","",33,[[["keyidextension",3]]]],[11,"eq","openmls::extensions::life_time_extension","",34,[[["lifetimeextension",3]]]],[11,"ne","","",34,[[["lifetimeextension",3]]]],[11,"eq","openmls::extensions::parent_hash_extension","",35,[[["parenthashextension",3]]]],[11,"ne","","",35,[[["parenthashextension",3]]]],[11,"eq","openmls::extensions::ratchet_tree_extension","",36,[[["ratchettreeextension",3]]]],[11,"ne","","",36,[[["ratchettreeextension",3]]]],[11,"eq","openmls::extensions","",30,[[["extensionerror",4]]]],[11,"eq","","",31,[[["extensiontype",4]]]],[11,"eq","","",29,[[["extensionstruct",3]]]],[11,"ne","","",29,[[["extensionstruct",3]]]],[11,"eq","","",37,[[]]],[11,"eq","openmls::framing::sender","",53,[[["sendertype",4]]]],[11,"eq","","",52,[[["sender",3]]]],[11,"ne","","",52,[[["sender",3]]]],[11,"eq","openmls::framing","",39,[[["mlsplaintext",3]]]],[11,"ne","","",39,[[["mlsplaintext",3]]]],[11,"eq","","",50,[[["contenttype",4]]]],[11,"eq","","",51,[[["mlsplaintextcontenttype",4]]]],[11,"ne","","",51,[[["mlsplaintextcontenttype",4]]]],[11,"eq","openmls::group::errors","",60,[[["applycommiterror",4]]]],[11,"eq","openmls::group","",54,[[["groupid",3]]]],[11,"ne","","",54,[[["groupid",3]]]],[11,"eq","","",55,[[["groupepoch",3]]]],[11,"ne","","",55,[[["groupepoch",3]]]],[11,"eq","openmls::key_packages","",69,[[["keypackageerror",4]]]],[11,"eq","","",67,[[["keypackage",3]]]],[11,"ne","","",67,[[["keypackage",3]]]],[11,"eq","openmls::messages::proposals","",84,[[["proposaltype",4]]]],[11,"eq","","",85,[[["proposal",4]]]],[11,"ne","","",85,[[["proposal",4]]]],[11,"eq","","",78,[[["proposalid",3]]]],[11,"ne","","",78,[[["proposalid",3]]]],[11,"eq","","",81,[[["addproposal",3]]]],[11,"ne","","",81,[[["addproposal",3]]]],[11,"eq","","",82,[[["updateproposal",3]]]],[11,"ne","","",82,[[["updateproposal",3]]]],[11,"eq","","",83,[[["removeproposal",3]]]],[11,"ne","","",83,[[["removeproposal",3]]]],[11,"eq","openmls::messages","",70,[[["commit",3]]]],[11,"ne","","",70,[[["commit",3]]]],[11,"eq","","",71,[[["confirmationtag",3]]]],[11,"ne","","",71,[[["confirmationtag",3]]]],[11,"eq","","",72,[[["commitsecret",3]]]],[11,"ne","","",72,[[["commitsecret",3]]]],[11,"eq","openmls::schedule","",87,[[["epochsecrets",3]]]],[11,"ne","","",87,[[["epochsecrets",3]]]],[11,"eq","openmls::tree::index","",94,[[["nodeindex",3]]]],[11,"ne","","",94,[[["nodeindex",3]]]],[11,"eq","","",95,[[["leafindex",3]]]],[11,"ne","","",95,[[["leafindex",3]]]],[11,"eq","openmls::tree::node","",98,[[["nodetype",4]]]],[11,"eq","","",96,[[["node",3]]]],[11,"ne","","",96,[[["node",3]]]],[11,"eq","","",97,[[["parentnode",3]]]],[11,"ne","","",97,[[["parentnode",3]]]],[11,"eq","openmls::tree::secret_tree","",104,[[["secrettreeerror",4]]]],[11,"eq","openmls::tree","",89,[[["updatepathnode",3]]]],[11,"ne","","",89,[[["updatepathnode",3]]]],[11,"eq","","",90,[[["updatepath",3]]]],[11,"ne","","",90,[[["updatepath",3]]]],[11,"eq","","",91,[[["treeerror",4]]]],[11,"partial_cmp","openmls::config","",19,[[["protocolversion",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","openmls::tree::index","",94,[[["nodeindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",94,[[["nodeindex",3]]]],[11,"le","","",94,[[["nodeindex",3]]]],[11,"gt","","",94,[[["nodeindex",3]]]],[11,"ge","","",94,[[["nodeindex",3]]]],[11,"partial_cmp","","",95,[[["leafindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",95,[[["leafindex",3]]]],[11,"le","","",95,[[["leafindex",3]]]],[11,"gt","","",95,[[["leafindex",3]]]],[11,"ge","","",95,[[["leafindex",3]]]],[11,"deref","openmls::config","",17,[[],["config",3]]],[11,"fmt","openmls::ciphersuite","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::codec","",14,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::config","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::creds","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::errors","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::capabilities_extension","",32,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::key_package_id_extension","",33,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::life_time_extension","",34,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::parent_hash_extension","",35,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions::ratchet_tree_extension","",36,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::extensions","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::framing::sender","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::framing","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::group::errors","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::group","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::key_packages","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::messages::proposals","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::messages","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::schedule","",87,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::index","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::node","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::path_keys","",99,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::private_tree","",100,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::secret_tree","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree::treemath","",108,[[["formatter",3]],["result",6]]],[11,"fmt","openmls::tree","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"hash","openmls::ciphersuite","",9,[[]]],[11,"hash","openmls::extensions","",31,[[]]],[11,"hash","","",29,[[]]],[11,"hash","openmls::messages::proposals","",78,[[]]],[11,"hash","openmls::tree::index","",94,[[]]],[11,"try_from","openmls::ciphersuite","",9,[[],["result",4]]],[11,"try_from","openmls::creds","",25,[[],["result",4]]],[11,"try_from","openmls::tree::secret_tree","",105,[[["contenttype",4]],[["secrettype",4],["result",4],["secrettypeerror",4]]]],[11,"try_from","","",105,[[["mlsplaintext",3]],[["secrettype",4],["result",4],["secrettypeerror",4]]]],[11,"deserialize","openmls::ciphersuite","",9,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","openmls::config","",18,[[],["result",4]]],[11,"deserialize","","",19,[[],["result",4]]],[11,"deserialize","openmls::extensions","",31,[[],["result",4]]],[11,"serialize","openmls::ciphersuite","",9,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","openmls::config","",18,[[],["result",4]]],[11,"serialize","","",19,[[],["result",4]]],[11,"serialize","openmls::extensions","",31,[[],["result",4]]],[11,"initialize","openmls::config","",17,[[]]]],"p":[[3,"HpkeCiphertext"],[3,"AeadKey"],[3,"ReuseGuard"],[3,"AeadNonce"],[3,"Signature"],[3,"SignaturePrivateKey"],[3,"SignaturePublicKey"],[3,"SignatureKeypair"],[3,"Ciphersuite"],[4,"CiphersuiteName"],[4,"HKDFError"],[4,"AEADError"],[8,"Signable"],[3,"Cursor"],[4,"CodecError"],[4,"VecSize"],[8,"Codec"],[3,"CONFIG"],[3,"Config"],[4,"ProtocolVersion"],[3,"Certificate"],[3,"Credential"],[3,"BasicCredential"],[3,"CredentialBundle"],[4,"CredentialError"],[4,"CredentialType"],[4,"MLSCredentialType"],[4,"ConfigError"],[4,"Error"],[3,"ExtensionStruct"],[4,"ExtensionError"],[4,"ExtensionType"],[3,"CapabilitiesExtension"],[3,"KeyIDExtension"],[3,"LifetimeExtension"],[3,"ParentHashExtension"],[3,"RatchetTreeExtension"],[8,"Extension"],[8,"ExtensionHelper"],[3,"MLSPlaintext"],[3,"MLSCiphertext"],[3,"MLSPlaintextTBS"],[3,"MLSSenderData"],[3,"MLSCiphertextSenderDataAAD"],[3,"MLSCiphertextContent"],[3,"MLSCiphertextContentAAD"],[3,"MLSPlaintextCommitContent"],[3,"MLSPlaintextCommitAuthData"],[4,"MLSPlaintextError"],[4,"MLSCiphertextError"],[4,"ContentType"],[4,"MLSPlaintextContentType"],[3,"Sender"],[4,"SenderType"],[3,"GroupId"],[3,"GroupEpoch"],[3,"GroupContext"],[3,"GroupConfig"],[4,"GroupError"],[4,"WelcomeError"],[4,"ApplyCommitError"],[4,"DecryptionError"],[4,"CreateCommitError"],[3,"ManagedGroup"],[4,"GroupError"],[3,"MlsGroup"],[8,"Api"],[3,"KeyPackage"],[3,"KeyPackageBundle"],[4,"KeyPackageError"],[3,"Commit"],[3,"ConfirmationTag"],[3,"CommitSecret"],[3,"GroupInfo"],[3,"PathSecret"],[3,"GroupSecrets"],[3,"EncryptedGroupSecrets"],[3,"Welcome"],[3,"ProposalID"],[3,"QueuedProposal"],[3,"ProposalQueue"],[3,"AddProposal"],[3,"UpdateProposal"],[3,"RemoveProposal"],[4,"ProposalType"],[4,"Proposal"],[3,"HkdfLabel"],[3,"EpochSecrets"],[3,"RatchetTree"],[3,"UpdatePathNode"],[3,"UpdatePath"],[4,"TreeError"],[3,"ParentNodeHashInput"],[3,"LeafNodeHashInput"],[3,"NodeIndex"],[3,"LeafIndex"],[3,"Node"],[3,"ParentNode"],[4,"NodeType"],[3,"PathKeys"],[3,"PrivateTree"],[3,"TreeContext"],[3,"SecretTreeNode"],[3,"SecretTree"],[4,"SecretTreeError"],[4,"SecretType"],[4,"SecretTypeError"],[3,"SenderRatchet"],[4,"TreeMathError"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);