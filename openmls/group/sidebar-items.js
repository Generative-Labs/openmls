initSidebarItems({"enum":[["EmptyInputError",""],["InnerState","`Enum` that indicates whether the inner group state has been modified since the last time it was persisted. `InnerState::Changed` indicates that the state has changed and that [`.save()`] should be called. `InnerState::Persisted` indicates that the state has not been modified and therefore doesn’t need to be persisted."],["InvalidMessageError",""],["ManagedGroupError",""],["PendingProposalsError",""],["UseAfterEviction",""],["WireFormat",""]],"mod":[["config",""],["errors","MLS Group errors"],["errors","MLS Managed Group errors"],["mls_group","Don’t Panic!"],["processing",""]],"struct":[["GroupContext",""],["GroupEpoch",""],["GroupId",""],["ManagedGroup","A `ManagedGroup` represents an [MlsGroup] with an easier, high-level API designed to be used in production. The API exposes high level functions to manage a group by adding/removing members, get the current member list, etc."],["ManagedGroupConfig","Specifies the configuration parameters for a [`ManagedGroup`]"],["ManagedGroupConfigBuilder",""],["MlsGroupConfig","Configuration for an MLS group."],["UpdatePolicy","Specifies in which intervals the own leaf node should be updated"]]});