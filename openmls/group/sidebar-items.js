initSidebarItems({"enum":[["EmptyInputError",""],["InnerState","`Enum` that indicates whether the inner group state has been modified since the last time it was persisted. `InnerState::Changed` indicates that the state has changed and that [`.save()`] should be called. `InnerState::Persisted` indicates that the state has not been modified and therefore doesnâ€™t need to be persisted."],["InvalidMessageError",""],["MlsGroupError",""],["MlsGroupState","[`MlsGroupState`] determines the state of an [`MlsGroup`]. The different states and their transitions are as follows:"],["PendingCommitState",""],["PendingProposalsError",""],["UseAfterEviction",""]],"mod":[["config",""],["errors","MLS CoreGroup errors"],["errors","MLS MlsGroup errors"],["processing",""]],"struct":[["GroupEpoch",""],["GroupId",""],["MlsGroup","A `MlsGroup` represents an [CoreGroup] with an easier, high-level API designed to be used in production. The API exposes high level functions to manage a group by adding/removing members, get the current member list, etc."],["MlsGroupConfig","Specifies the configuration parameters for a [`MlsGroup`]"],["MlsGroupConfigBuilder",""]]});