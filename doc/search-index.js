var searchIndex = JSON.parse('{\
"openmls":{"doc":"OpenMLS","t":[0,0,0,0,0,0,0,0,0,0,0,0,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,0,0,11,11,11,11,11,11,11,11,11,3,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,16,8,4,16,8,13,8,13,8,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,10,11,11,10,11,11,11,11,11,10,10,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,3,3,3,4,3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,3,4,4,3,13,13,3,13,13,6,13,13,3,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,13,4,13,13,13,13,13,4,13,13,4,13,13,13,4,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,13,13,13,13,13,13,13,13,3,4,3,13,13,3,13,13,13,3,4,13,4,3,13,13,13,4,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,4,4,13,13,13,13,4,13,4,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,3,3,13,4,4,17,17,13,13,3,3,3,4,13,4,17,17,13,4,13,3,3,3,3,3,3,4,3,13,13,17,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,13,4,13,13,13,13,4,13,13,13,13,4,13,13,13,13,4,13,13,13,13,13,13,4,13,13,13,13,13,13,4,4,4,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,4,13,13,13,13,13,13,13,13,13,13,4,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,13,4,4,4,13,13,13,13,13,13,13,13,13,13,13,4,13,4,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,4,4,4,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,3,13,13,3,13,13,3,3,13,13,13,3,13,4,4,13,3,13,13,13,3,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,13,13,13,3,13,2,13,13,4,4,2,4,13,13,16,13,13,13,13,13,13,13,13,13,13,4,16,16,13,13,6,13,13,13,4,13,13,13,13,4,3,3,13,4,4,3,13,13,13,13,13,13,13,6,13,2,16,3,13,3,13,13,13,13,13,13,13,13,3,13,3,4,3,13,13,4,8,8,8,8,3,13,13,13,3,4,13,4,13,13,2,16,13,4,3,13,3,13,13,13,13,13,4,13,13,8,13,8,8,13,13,13,13,13,13,13,13,13,13,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,10,10,11,11,11,11,10,10,10,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,10,11,11,11,11,11,11,11,11,11,12,11,11,12,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,10,11,11,10,10,10,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,13,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,13,13,13,13,13,13,4,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,4,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ciphersuite","credentials","error","extensions","framing","group","key_packages","messages","prelude","schedule","treesync","versions","HpkePrivateKey","HpkePublicKey","borrow","borrow_mut","clone","clone_into","deref","deref","deref_mut","deserialize","drop","fmt","from","from","from","hash_ref","init","into","serialize","signable","signature","tls_deserialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","to_owned","try_from","try_into","type_id","HashReference","KeyPackageRef","ProposalRef","as_slice","borrow","borrow_mut","clone","clone_into","cmp","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","make_key_package_ref","make_proposal_ref","new","partial_cmp","serialize","tls_deserialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","to_owned","to_string","try_from","try_into","type_id","SealingType","Signable","SignatureError","SignedOutput","SignedStruct","SigningError","Verifiable","VerificationError","VerifiedStruct","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","from_payload","init","into","label","label","provide","sign","signature","to_owned","to_string","try_from","try_into","type_id","unsigned_payload","unsigned_payload","verify","verify_no_out","OpenMlsSignaturePublicKey","SignContent","Signature","SignaturePublicKey","as_slice","as_slice","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_payload","from_signature_key","hash","hash","init","init","init","init","into","into","into","into","into_signature_public_key_enriched","new","new","serialize","serialize","serialize","signature_scheme","tls_deserialize","tls_deserialize","tls_deserialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify","verify_with_label","Basic","Basic","BasicCredential","Certificate","Credential","CredentialType","CredentialWithKey","MlsCredentialType","X509","X509","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","credential","credential_type","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","errors","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","identity","init","init","init","init","init","init","into","into","into","into","into","into","new","partial_cmp","serialize","serialize","serialize","serialize","serialize","signature_key","tls_deserialize","tls_deserialize","tls_deserialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","CredentialError","InvalidSignature","LibraryError","UnsupportedCredentialType","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","from","init","into","provide","source","to_owned","to_string","try_from","try_into","type_id","ErrorString","LibraryError","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","init","init","into","into","provide","provide","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","ApplicationId","ApplicationId","ApplicationIdExtension","Extension","ExtensionType","Extensions","ExternalPub","ExternalPub","ExternalPubExtension","ExternalSenders","ExternalSenders","ExternalSendersExtension","RatchetTree","RatchetTree","RatchetTreeExtension","RequiredCapabilities","RequiredCapabilities","RequiredCapabilitiesExtension","add","add_or_replace","application_id","as_application_id_extension","as_external_pub_extension","as_external_senders_extension","as_ratchet_tree_extension","as_required_capabilities_extension","as_slice","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","contains","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","empty","eq","eq","eq","eq","eq","eq","eq","errors","extension_type","external_pub","external_pub","external_senders","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_vec","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","is_supported","iter","new","new","new","new","partial_cmp","partial_cmp","ratchet_tree","remove","required_capabilities","serialize","serialize","serialize","serialize","serialize","serialize","serialize","single","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Capabilities","CapabilitiesExtensionError","Duplicate","EmptyVersionsField","ExtensionError","Invalid","Invalid","Invalid","Invalid","InvalidExtension","InvalidExtensionError","InvalidExtensionType","KeyPackageId","KeyPackageIdError","LibraryError","NotFound","ParentHash","ParentHashError","RatchetTree","RatchetTreeError","UnsupportedCiphersuite","UnsupportedExtensionType","UnsupportedProposalType","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","into","into","into","into","into","into","provide","provide","provide","provide","provide","provide","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","ApplicationMessage","ApplicationMessage","External","ExternalJoinProposalMessage","GroupInfo","GroupInfo","KeyPackage","KeyPackage","Member","MlsMessageIn","MlsMessageInBody","MlsMessageOut","NewMemberCommit","NewMemberProposal","PrivateMessage","PrivateMessage","PrivateMessage","PrivateMessage","ProcessedMessage","ProcessedMessageContent","ProposalMessage","ProtocolMessage","PublicMessage","PublicMessage","PublicMessage","PublicMessage","Sender","StagedCommitMessage","Welcome","Welcome","WireFormat","authenticated_data","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","content","content_type","credential","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch","epoch","eq","eq","eq","eq","eq","eq","eq","eq","errors","extract","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","group_id","group_id","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_bytes","into_content","is_external","is_handshake_message","sender","serialize","serialize","serialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_bytes","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wire_format","wire_format","AeadError","CodecError","CryptoError","GenerationOutOfBound","IndexOutOfBounds","LibraryError","LibraryError","LibraryError","MalformedContent","MessageDecryptionError","MlsMessageError","NotAMember","RatchetTooLong","RatchetTypeError","SecretReuseError","SecretTreeError","SecretTreeError","SenderError","SenderError","TooDistantInTheFuture","TooDistantInThePast","UnableToDecode","UnableToEncode","UnknownSender","WrongWireFormat","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","init","init","init","init","into","into","into","into","provide","provide","provide","provide","source","source","source","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","AlwaysCiphertext","AlwaysCiphertext","AlwaysPlaintext","AlwaysPlaintext","Changed","External","GroupEpoch","GroupId","Inactive","IncomingWireFormatPolicy","InnerState","MIXED_CIPHERTEXT_WIRE_FORMAT_POLICY","MIXED_PLAINTEXT_WIRE_FORMAT_POLICY","Member","Mixed","MlsGroup","MlsGroupConfig","MlsGroupConfigBuilder","MlsGroupState","Operational","OutgoingWireFormatPolicy","PURE_CIPHERTEXT_WIRE_FORMAT_POLICY","PURE_PLAINTEXT_WIRE_FORMAT_POLICY","PendingCommit","PendingCommitState","Persisted","ProposalStore","QueuedAddProposal","QueuedProposal","QueuedPskProposal","QueuedRemoveProposal","QueuedUpdateProposal","RemoveOperation","StagedCommit","TheyLeft","TheyWereRemovedBy","WIRE_FORMAT_POLICIES","WeLeft","WeRemovedThem","WeWereRemovedBy","WireFormatPolicy","aad","add_members","add_proposal","add_proposals","as_slice","as_u64","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","ciphersuite","clear_pending_commit","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commit_to_pending_proposals","config","configuration","create_message","credential","crypto_config","crypto_config","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch","epoch_authenticator","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","errors","export_group_info","export_ratchet_tree","export_secret","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_slice","get_past_resumption_psk","group_id","hash","hash","incoming","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_active","join_by_external_commit","leave_group","lifetime","lifetime","load","max_past_epochs","max_past_epochs","member","members","merge_pending_commit","merge_staged_commit","new","new","new","new_from_welcome","new_with_group_id","number_of_resumption_psks","number_of_resumption_psks","outgoing","own_identity","own_leaf","own_leaf_index","own_leaf_node","padding_size","padding_size","partial_cmp","pending_commit","pending_proposals","process_message","proposal","propose_add_member","propose_remove_member","propose_self_update","psk_proposal","psk_proposals","random","remove_members","remove_proposal","remove_proposals","resumption_psk_secret","save","self_removed","self_update","sender","sender","sender","sender","sender","sender_ratchet_configuration","sender_ratchet_configuration","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_aad","set_configuration","state_changed","store_pending_proposal","tls_deserialize","tls_deserialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_vec","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_proposal","update_proposals","use_ratchet_tree_extension","use_ratchet_tree_extension","wire_format_policy","wire_format_policy","CryptoConfig","borrow","borrow_mut","ciphersuite","clone","clone_into","default","deref","deref_mut","deserialize","drop","eq","fmt","from","init","into","serialize","to_owned","try_from","try_into","type_id","version","with_default_version","AddMembers","AddMembersError","AttemptedSelfRemoval","CannotRemoveSelf","CiphersuiteMismatch","CommitError","CommitToPendingProposalsError","CommitterIncludedOwnUpdate","ConfirmationTagMismatch","ConfirmationTagMismatch","ConfirmationTagMissing","CreateCommitError","CreateCommitError","CreateCommitError","CreateCommitError","CreateCommitError","CreateMessageError","DuplicateIdentityAddProposal","DuplicateMemberRemoval","DuplicatePublicKeyAddProposal","DuplicateSignatureKeyAddProposal","EmptyInput","EmptyInput","EmptyInputError","EpochMismatch","ExistingIdentityAddProposal","ExistingPublicKeyAddProposal","ExistingPublicKeyUpdateProposal","ExistingSignatureKeyAddProposal","ExistingSignatureKeyUpdateProposal","ExportGroupInfoError","ExportSecretError","ExternalCommitError","ExternalCommitValidation","ExternalCommitValidationError","GroupInfoCiphersuiteMismatch","GroupInfoDecryptionFailure","GroupStateError","GroupStateError","GroupStateError","GroupStateError","GroupStateError","GroupStateError","GroupStateError","GroupStateError","GroupStateError","GroupStateError","GroupStateError","GroupStateError","IncompatibleWireFormat","InconsistentSenderIndex","InitEncryptionKeyCollision","InsufficientCapabilities","InvalidCommit","InvalidExtensionError","InvalidGroupInfoSignature","InvalidGroupInfoSignature","InvalidInlineProposals","InvalidMembershipTag","InvalidRemoveProposal","InvalidSignature","InvalidSignature","JoinerSecretNotFound","KeyLengthTooLong","KeyPackageGenerationError","KeyStoreError","KeyStoreError","KeyStoreError","KeyStoreError","KeyStoreError","KeyStoreError","LeafNodeValidation","LeafNodeValidation","LeaveGroupError","LibraryError","LibraryError","LibraryError","LibraryError","LibraryError","LibraryError","LibraryError","LibraryError","LibraryError","LibraryError","LibraryError","LibraryError","LibraryError","LibraryError","LibraryError","LibraryError","LibraryError","LibraryError","LibraryError","LibraryError","LibraryError","LibraryError","MalformedWelcomeMessage","MergeCommitError","MergeCommitError","MergePendingCommitError","MissingConfirmationTag","MissingCredential","MissingCredential","MissingDecryptionKey","MissingExternalPub","MissingMembershipTag","MissingProposal","MissingProposal","MissingRatchetTree","MissingRatchetTree","MlsGroupStateError","MlsGroupStateError","MultipleExternalInitProposals","MultipleRemoveProposals","NewGroupError","NoExternalInitProposals","NoMatchingCredentialBundle","NoMatchingCredentialBundle","NoMatchingCredentialBundle","NoMatchingCredentialBundle","NoMatchingCredentialBundle","NoMatchingCredentialBundle","NoMatchingCredentialBundle","NoMatchingCredentialBundle","NoMatchingCredentialBundle","NoMatchingCredentialBundle","NoMatchingCredentialBundle","NoMatchingEncryptionKey","NoMatchingKeyPackage","NoMatchingKeyPackage","NoPastEpochData","NoPath","NoPath","NoPendingCommit","NonMemberApplicationMessage","NotACommit","NotAnExternalAddProposal","OwnCommit","OwnKeyNotFound","OwnKeyNotFound","PathLeafNodeVerificationFailure","PendingCommit","PendingProposal","ProcessMessageError","ProposalValidationError","ProposalValidationError","ProposalValidationError","ProposeAddMemberError","ProposeRemoveMemberError","ProposeSelfUpdateError","PskError","PskError","PskNotFound","PskTooManyKeys","PublicGroupError","PublicGroupError","PublicTreeError","PublicTreeError","PublicTreeError","ReferencedProposal","RemoveMembers","RemoveMembersError","RequiredPathNotFound","SelfUpdateError","SenderTypeExternal","SenderTypeNewMemberProposal","SignatureError","StageCommitError","TooManyNewMembers","UnableToDecrypt","UnableToDecrypt","UnencryptedApplicationMessage","UnknownMember","UnknownMember","UnknownMember","UnknownMember","UnknownMemberRemoval","UnknownMemberRemoval","UnknownSender","UnknownSender","UnsupportedCapability","UnsupportedCiphersuite","UnsupportedExtensionType","UnsupportedExtensions","UnsupportedExtensions","UnsupportedMlsVersion","UnsupportedProposalType","UpdateFromNonMember","UpdatePathError","UpdateProposalIdentityMismatch","UseAfterEviction","ValidationError","ValidationError","WelcomeError","WrongEpoch","WrongGroupId","WrongPlaintextContentType","WrongProposalSenderType","WrongWireFormat","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","KeyPackage","KeyPackageBuilder","borrow","borrow","borrow_mut","borrow_mut","build","builder","check_extension_support","ciphersuite","clone","clone","clone_into","clone_into","default","delete","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","errors","extensions","fmt","fmt","from","from","hash_ref","hpke_init_key","init","init","into","into","key_package_extensions","label","leaf_node","leaf_node_capabilities","leaf_node_extensions","new","serialize","serialize","signature","tls_deserialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","type_id","type_id","unsigned_payload","verify","CiphersuiteSignatureSchemeMismatch","InvalidLifetime","InvalidSignature","KeyPackageExtensionSupportError","KeyPackageNewError","KeyPackageVerifyError","KeyStoreError","LibraryError","LibraryError","MissingLifetime","SignatureError","UnsupportedExtension","UnsupportedExtension","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","init","init","init","into","into","into","provide","provide","provide","source","source","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ConfirmationTag","EncryptedGroupSecrets","Welcome","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","eq","eq","external_proposals","fmt","fmt","fmt","from","from","from","group_info","init","init","init","into","into","into","new","new_member","proposals","secrets","serialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","JoinProposal","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","new","try_from","try_into","type_id","GroupInfo","VerifiableGroupInfo","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fmt","fmt","from","from","init","init","into","into","label","signature","tls_deserialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unsigned_payload","Add","Add","AddProposal","AppAck","AppAck","AppAckProposal","ExternalInit","ExternalInit","ExternalInitProposal","GroupContextExtensionProposal","GroupContextExtensions","GroupContextExtensions","PreSharedKey","PreSharedKeyProposal","Presharedkey","Proposal","ProposalType","ReInit","ReInitProposal","Reinit","Remove","Remove","RemoveProposal","Update","Update","UpdateProposal","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","is_path_required","is_supported","key_package","leaf_node","partial_cmp","removed","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","AeadDecryptionError","AeadType","Aes128Gcm","Aes256Gcm","AesGcm128","AesGcm256","ApplicationMessage","ApplicationMessage","ApplyUpdatePathError","ChaCha20Poly1305","ChaCha20Poly1305","Ciphersuite","CreationFromExternalError","CryptoConfig","CryptoError","CryptoError","CryptoLibraryError","CryptoProvider","DhKem25519","DhKem448","DhKemP256","DhKemP384","DhKemP521","ECDSA_SECP256R1_SHA256","ECDSA_SECP384R1_SHA384","ECDSA_SECP521R1_SHA512","ED25519","ED448","Error","Error","Error","Export","ExporterError","ExporterSecret","External","ExternalJoinProposalMessage","GroupInfo","HashType","HkdfOutputLengthInvalid","HkdfSha256","HkdfSha384","HkdfSha512","HpkeAeadType","HpkeCiphertext","HpkeConfig","HpkeDecryptionError","HpkeKdfType","HpkeKemType","HpkeKeyPair","InsufficientRandomness","InvalidGroupInfoSignature","InvalidLength","InvalidSignature","InvalidSignature","KdfLabelTooLarge","KdfSerializationError","KemOutput","KeyPackage","KeyPackageRef","KeyStoreProvider","LeafNode","LeafNode","LeafNodeIndex","LibraryError","MLS_128_DHKEMP256_AES128GCM_SHA256_P256","MLS_128_DHKEMX25519_AES128GCM_SHA256_Ed25519","MLS_128_DHKEMX25519_CHACHA20POLY1305_SHA256_Ed25519","MLS_256_DHKEMP384_AES256GCM_SHA384_P384","MLS_256_DHKEMP521_AES256GCM_SHA512_P521","MLS_256_DHKEMX448_AES256GCM_SHA512_Ed448","MLS_256_DHKEMX448_CHACHA20POLY1305_SHA512_Ed448","Member","Member","MlsMessageIn","MlsMessageInBody","MlsMessageOut","NewMemberCommit","NewMemberProposal","Node","OpenMlsCrypto","OpenMlsCryptoProvider","OpenMlsKeyStore","OpenMlsRand","ParentNode","ParentNode","PrivateMessage","PrivateMessage","ProcessedMessage","ProcessedMessageContent","ProposalMessage","ProtocolMessage","PublicMessage","PublicMessage","PublicTreeError","RandProvider","ReceiverSetupError","Sender","SenderRatchetConfiguration","SenderSetupError","SerializedMlsGroup","Sha2_256","Sha2_384","Sha2_512","SignatureDecodingError","SignatureEncodingError","SignatureScheme","SigningError","StagedCommitMessage","TlsDeserializeTrait","TlsSerializationError","TlsSerializeTrait","TlsSizeTrait","TreeHashMismatch","TreeSyncError","UnknownSender","UnsupportedAeadAlgorithm","UnsupportedCiphersuite","UnsupportedHashAlgorithm","UnsupportedKdf","UnsupportedMlsVersion","UnsupportedSignatureScheme","Welcome","aead_algorithm","aead_decrypt","aead_encrypt","aead_key_length","aead_nonce_length","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ciphertext","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","credential","crypto","default","delete","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","derive_hpke_keypair","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encryption_key","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash_algorithm","hash_length","hkdf_expand","hkdf_extract","hpke_aead_algorithm","hpke_config","hpke_kdf_algorithm","hpke_kem_algorithm","hpke_open","hpke_seal","hpke_setup_receiver_and_export","hpke_setup_sender_and_export","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_mls_group","kem_output","key_size","key_store","mac_length","maximum_forward_distance","new","new","new","nonce_size","out_of_order_tolerance","partial_cmp","partial_cmp","private","provide","provide","public","rand","random_array","random_vec","read","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sign","signature_algorithm","signature_key","signature_key_gen","size","source","store","supported_ciphersuites","supports","tag_size","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize_detached","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u32","usize","verify_signature","EpochAuthenticator","ResumptionPskSecret","as_slice","as_slice","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","errors","fmt","fmt","from","from","init","init","into","into","serialize","serialize","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","KeyNotFound","LibraryError","PskError","TooManyKeys","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","from","init","into","provide","source","to_owned","to_string","try_from","try_into","type_id","LeafNode","LeafNode","Node","ParentNode","ParentNode","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","credential","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","eq","errors","extensions","fmt","fmt","fmt","from","from","from","generate_update","init","init","init","into","into","into","parent_hash","serialize","serialize","serialize","signature","signature_key","tls_deserialize","tls_deserialize","tls_deserialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ApplyUpdatePathError","CredentialNotInCapabilities","DuplicateKeyPackage","EncryptionKeyAlreadyInUse","ExtensionsNotInCapabilities","IdentityMismatch","InconsistentSenderIndex","InvalidLeafNodeSource","InvalidParentHash","LeafNodeCredentialNotSupportedByMember","LeafNodeValidationError","LibraryError","LibraryError","LibraryError","Lifetime","LifetimeError","MalformedTree","MemberCredentialNotSupportedByLeafNode","MissingKeyPackage","MissingParentHash","MissingSender","NotCurrent","ParentHashMismatch","PathLengthMismatch","PathMismatch","PublicKeyMismatch","PublicTreeError","PublicTreeError","RangeTooBig","SignatureError","SignatureKeyAlreadyInUse","TreeFull","TreeSyncFromNodesError","UnableToDecrypt","UnsupportedCredentials","UnsupportedExtensions","UnsupportedProposals","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","into","into","into","into","into","provide","provide","provide","provide","provide","source","source","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Mls10","Mls10Draft11","ProtocolVersion","UnsupportedMlsVersion","VersionError","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","default","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","eq","fmt","fmt","fmt","fmt","from","from","init","init","into","into","partial_cmp","provide","serialize","tls_deserialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["openmls","","","","","","","","","","","","openmls::ciphersuite","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::ciphersuite::hash_ref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::ciphersuite::signable","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::ciphersuite::signature","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::credentials","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::credentials::errors","","","","","","","","","","","","","","","","","","","","","","","","","openmls::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::extensionsopenmls::extensions::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::framing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::framing::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::group","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::group::config","","","","","","","","","","","","","","","","","","","","","","","openmls::group::errorsopenmls::key_packages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::key_packages::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::messages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::messages::external_proposals","","","","","","","","","","","","","openmls::messages::group_info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::messages::proposals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::preludeopenmls::schedule","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::schedule::errors","","","","","","","","","","","","","","","","","","","","","","","","","openmls::treesync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::treesync::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::versions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Ciphersuites for MLS","Credentials","OpenMLS Errors","Extensions","Message framing","Group API for MLS","Key Packages","Messages","Single place, re-exporting the most used public functions. …","Key schedule","This module implements the ratchet tree component of MLS.","MLS versions","A simple type for HPKE private keys using <code>VLBytes</code> for …","A simple type for HPKE public keys using <code>VLBytes</code> for …","","","","","","","","","","","","Returns the argument unchanged.","","Hash References","","Calls <code>U::from(self)</code>.","","This module defines traits used for signing and verifying …","Signatures.","","","","","","","","","","A reference to an MLS object computed as a hash of the …","A reference to a key package. This value uniquely …","A reference to a proposal. This value uniquely identifies …","Get a reference to the hash reference’s value as slice.","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Compute a new <code>KeyPackageRef</code> value for a <code>value</code>.","Compute a new <code>ProposalRef</code> value for a <code>value</code>.","Compute a new <code>HashReference</code> value for a <code>value</code>.","","","","","","","","","","","","","This type is used to prevent users of the trait from …","The <code>Signable</code> trait is implemented by all struct that are …","Signature generation and verification errors. The only …","The type of the object once it’s signed.","This trait must be implemented by all structs that contain …","Signature generation failed","The verifiable trait must be implemented by any struct …","Signature verification failed","This trait must be implemented by all structs that contain …","","","","","","","","","","","Returns the argument unchanged.","Build a signed struct version from the payload struct.","","Calls <code>U::from(self)</code>.","Return the string label used for labeled signing.","Return the string label used for labeled verification.","","Sign the payload with the given <code>private_key</code>.","A reference to the signature to be verified.","","","","","","Return the unsigned, serialized payload that should be …","Return the unsigned, serialized payload that should be …","Verifies the payload against the given <code>credential</code>. The …","Verifies the payload against the given <code>credential</code>. The …","A public signature key.","Labeled signature content.","Signature.","A public signature key.","Returns the bytes of the signature public key.","Returns the bytes of the signature public key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Create a new signature public key from raw key.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert the “raw” signature into an enriched form, …","Create a new <code>SignContent</code> from a string label and the …","Create a new signature public key from raw key bytes.","","","","Get the signature scheme of the public key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify a <code>Signature</code> on the <code>payload</code> byte slice with the …","Verify a <code>Signature</code> on the <code>SignContent</code> with this public key …","A <code>BasicCredential</code>","A <code>BasicCredential</code>","Basic Credential.","X.509 Certificate.","Credential.","CredentialType.","A wrapper around a credential with a corresponding public …","MlsCredentialType.","An X.509 <code>Certificate</code>","An X.509 <code>Certificate</code>","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>Credential</code>.","Returns the credential type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Credential errors","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the identity of a given credential.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates and returns a new <code>Credential</code> of the given …","","","","","","","The corresponding public key as <code>SignaturePublicKey</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An error that occurs in methods of a <code>super::Credential</code>.","Verifying the signature with this credential failed.","A library error occured.","The type of credential is not supported.","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","A wrapper struct for an error string. This can be used …","Generic error type that indicates unrecoverable errors in …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The application id extension allows applications to add an …","An <code>ApplicationIdExtension</code>","Application Identifiers","Extension","MLS Extension Types","A list of extensions with unique extension types.","To join a group via an External Commit, a new member needs …","A <code>ExternalPubExtension</code>","","Group context extension that contains the credentials and …","A <code>ExternalPubExtension</code>","ExternalSender (extension data)","The ratchet tree extensions provides the whole public …","A <code>RatchetTreeExtension</code>","Ratchet Tree Extension.","The required capabilities extension defines the …","A <code>RequiredCapabilitiesExtension</code>","Required Capabilities Extension.","Add an extension to the extension list.","Add an extension to the extension list (or replace an …","Get a reference to the <code>ApplicationIdExtension</code> if there is …","Get a reference to this extension as <code>ApplicationIdExtension</code>…","Get a reference to this extension as <code>ExternalPubExtension</code>. …","Get a reference to this extension as …","Get a reference to this extension as <code>RatchetTreeExtension</code>. …","Get a reference to this extension as …","Get the value of the key id as byte slice.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> iff the extension list contains an extension …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an empty extension list.","","","","","","","","Extension errors.","Returns the <code>ExtensionType</code>","Get a reference to the HPKE public key.","Get a reference to the <code>ExternalPubExtension</code> if there is …","Get a reference to the <code>ExternalSendersExtension</code> if there …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create an extension list with multiple extensions.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check whether an <code>ExtensionType</code> is supported or not.","Returns an iterator over the extension list.","Create a new key identifier extension from a byte slice.","Create a new <code>external_pub</code> extension.","Build a new extension from a vector of <code>Node</code>s.","Creates a new <code>RequiredCapabilitiesExtension</code> from extension …","","","Get a reference to the <code>RatchetTreeExtension</code> if there is …","Remove an extension from the extension list.","Get a reference to the <code>RequiredCapabilitiesExtension</code> if …","","","","","","","","Create an extension list with a single extension.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the <code>ExtensionType</code> from a u16. Returns an error if the …","","","","","","","","","","","","","","","","","","","See <code>CapabilitiesExtensionError</code> for more details.","Capabilities extension error","The provided extension list contains duplicate extensions.","Capabilities extension is missing a version field.","Extension error","Invalid capabilities extensions.","Invalid key package ID extensions.","Invalid parent hash extensions.","Invalid ratchet tree extensions.","See <code>InvalidExtensionError</code> for more details.","Invalid extension error","See <code>ErrorString</code> for more details.","See <code>KeyPackageIdError</code> for more details.","KeyPackage Id error","See <code>LibraryError</code> for more details.","The specified extension could not be found.","See <code>ParentHashError</code> for more details.","Parent hash error","See <code>RatchetTreeError</code> for more details.","Ratchet tree error","Capabilities contains only unsupported ciphersuites.","Unsupported extension type in required capabilities.","Unsupported proposal type in required capabilities.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Application message received through a ProcessedMessage.","An application message.","The sender is not a member of the group and has an …","An external join proposal sent by a NewMemberProposal …","Group information","Group information","KeyPackage","KeyPackage","The sender is a member of the group","Before use with the <code>MlsGroup</code> API, the message has to be …","MLSMessage (Body)","An <code>MlsMessageOut</code> is typically returned from an <code>MlsGroup</code> …","The sender is a new member of the group that joins itself …","The sender is a new member of the group that joins itself …","<code>PrivateMessage</code> is the framing struct for an encrypted …","Ciphertext message","A <code>ProtocolMessage</code> containing a <code>PrivateMessage</code>.","Encrypted message","A message that has passed all syntax and semantics checks.","Content of a processed message.","A standalone proposal.","Enum containing a message for use with <code>process_message</code> and …","<code>PublicMessage</code> is a framing structure for MLS messages. It …","Plaintext message","A <code>ProtocolMessage</code> containing a <code>PublicMessage</code>.","Plaintext message","All possible sender types according to the MLS protocol …","A Commit message.","Welcome message","Welcome message","Wire format of MLS messages.","Returns the authenticated data of the message.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the content of the message.","Returns the content type.","Returns the credential of the message if present.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the epoch.","Returns the epoch of the message.","","","","","","","","","Framing errors.","Extract the content of an <code>MlsMessageIn</code> after …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the group ID.","Returns the group ID of the message.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the inner bytes and consumes the <code>ApplicationMessage</code>…","Returns the content of the message and consumes the …","Returns <code>true</code> if this is either an external proposal or …","Returns <code>true</code> if this is a handshake message and <code>false</code> …","Returns the sender of the message.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Serializes the message to a byte vector. Returns …","","","","","","","","","","","","","","","","","","","","Tries to deserialize from a byte slice. Returns …","","","","","","","","","","","","","","","","","","","","","","","Returns the wire format.","Returns the wire format.","An error occurred during AEAD decryption.","See <code>TlsCodecError</code> for more details.","See <code>CryptoError</code> for more details.","Couldn’t find a ratcheting secret for the given sender …","Index out of bounds","See <code>LibraryError</code> for more details.","See <code>LibraryError</code> for more details.","An unrecoverable error has occurred due to a bug in the …","The content is malformed.","Message decryption error","MlsMessage error","The requested client is not a member of the group.","Ratchet generation has reached <code>u32::MAX</code>.","Cannot create decryption secrets from own sender ratchet …","The requested secret was deleted to preserve forward …","Secret tree error","See <code>SecretTreeError</code> for more details.","Sender error","See <code>SenderError</code> for more details.","Generation is too far in the future to be processed.","Generation is too old to be processed.","The message could not be decoded.","The message (or one of its parts) is too large to be …","Unknown sender","The WireFormat was not PrivateMessage.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Handshake messages must always be PrivateMessage","Handshake messages must always be PrivateMessage","Handshake messages must always be PublicMessage","Handshake messages must always be PublicMessage","The inner group state has changed and needs to be …","Commit from an external joiner","Group epoch. Internally this is stored as a <code>u64</code>. The group …","A group ID. The group ID is chosen by the creator of the …","The group is inactive because the member has been removed.","Defines what wire format is acceptable for incoming …","<code>Enum</code> that indicates whether the inner group state has been …","Incoming wire formats can be mixed while outgoing wire …","Incoming wire formats can be mixed while outgoing wire …","Commit from a group member","Handshake messages can either be PrivateMessage or …","A <code>MlsGroup</code> represents an MLS group with a high-level API. …","Specifies the configuration parameters for a <code>MlsGroup</code>. …","Builder for an <code>MlsGroupConfig</code>.","<code>MlsGroupState</code> determines the state of an <code>MlsGroup</code>. The …","The group state is in an opertaional state, where new …","Defines what wire format should be used for outgoing …","Incoming and outgoing wire formats are always ciphertext.","Incoming and outgoing wire formats are always plaintext.","There is currently a pending Commit that hasn’t been …","Pending Commit state. Differentiates between Commits …","The inner group state hasn’t changed and doesn’t need …","A ProposalStore can store the standalone proposals that …","A queued Add proposal","Alternative representation of a Proposal, where the sender …","A queued PresharedKey proposal","A queued Remove proposal","A queued Update proposal","Helper <code>enum</code> that classifies the kind of remove operation. …","Contains the changes from a commit to the group state.","Another member (indicated by the leaf index) requested to …","Another member (indicated by the leaf index) was removed …","All valid wire format policy combinations.","We issued a remove proposal for ourselves in the previous …","We removed another member (indicated by the leaf index).","Someone else (indicated by the <code>Sender</code>) removed us from the …","Defines what wire format is desired for outgoing handshake …","Returns the AAD used in the framing.","Adds members to the group.","Returns a reference to the proposal","Returns the Add proposals that are covered by the Commit …","Returns the group ID as a byte slice.","Returns the group epoch as a <code>u64</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finalizes the builder and retursn an <code>[MlsGroupConfig</code>].","Returns a builder for <code>MlsGroupConfig</code>","Returns the group’s ciphersuite.","Sets the <code>group_state</code> to <code>MlsGroupState::Operational</code>, thus …","","","","","","","","","","","","","","","","","Creates a Commit message that covers the pending proposals …","Group Configurations","Returns the configuration.","Creates an application message. Returns …","Returns own credential. If the group is inactive, it …","Returns the <code>CryptoConfig</code>.","Sets the <code>crypto_config</code> property of the MlsGroupConfig.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the epoch.","Returns the epoch authenticator of the current epoch.","","","","","","","","","","","","","","MLS group errors","Export a group info object for this group.","Exports the Ratchet Tree.","Exports a secret from the current epoch. Returns …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Create a group ID from a byte slice.","Returns a resumption psk for a given epoch. If no …","Returns the group ID.","","","Returns a reference to the wire format policy’s incoming …","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether the own client is still a member of the …","Join an existing group through an External Commit. The …","Leave the group.","Returns the <code>MlsGroupConfig</code> lifetime configuration.","Sets the <code>lifetime</code> property of the MlsGroupConfig.","Loads the state from persisted state.","Returns the <code>MlsGroupConfig</code> max past epochs.","Sets the <code>max_past_epochs</code> property of the MlsGroupConfig. …","Returns the <code>Credential</code> of a member corresponding to the …","Returns a list of <code>Member</code>s in the group.","Merges the pending <code>StagedCommit</code> if there is one, and …","Merge a StagedCommit into the group after inspection. As …","Creates a new builder with default values.","Constructs a new <code>RemoveOperation</code> from a …","Creates a new group with the creator as the only member …","Creates a new group from a <code>Welcome</code> message. Returns an …","Creates a new group with a given group ID with the creator …","Returns the <code>MlsGroupConfig</code> number of resumption psks.","Sets the <code>number_of_resumption_psks</code> property of the …","Returns a reference to the wire format policy’s outgoing …","Get the identity of the client’s <code>Credential</code> owning this …","Returns a reference to the own <code>LeafNode</code>.","Returns the leaf index of the client in the tree owning …","Returns the leaf node of the client in the tree owning …","Returns the <code>MlsGroupConfig</code> padding size.","Sets the <code>padding_size</code> property of the MlsGroupConfig.","","Returns a reference to the <code>StagedCommit</code> of the most …","Returns an <code>Iterator</code> over pending proposals.","Parses incoming messages from the DS. Checks for syntactic …","Returns the <code>Proposal</code> as a reference","Creates proposals to add members to the group.","Creates proposals to remove members from the group. The …","Creates a proposal to update the own leaf node.","Returns a reference to the proposal","Returns the PresharedKey proposals that are covered by the …","Create a new (random) group ID.","Removes members from the group.","Returns a reference to the proposal","Returns the Remove proposals that are covered by the …","Returns the resumption PSK secret of the current epoch.","Persists the state.","Returns <code>true</code> if the member was removed through a proposal …","Updates the own leaf node.","Returns the <code>Sender</code> as a reference","Returns a reference to the sender","Returns a reference to the sender","Returns a reference to the sender","Returns a reference to the sender","Returns the <code>MlsGroupConfig</code> sender ratchet configuration.","Sets the <code>sender_ratchet_configuration</code> property of the …","","","","","","","","","","","","","Sets the AAD used in the framing.","Sets the configuration.","Returns <code>true</code> if the internal state has changed and needs …","Stores a standalone proposal in the internal ProposalStore","","","","","","","","","","","","","","","","","","","Returns the group ID as a byte vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the proposal","Returns the Update proposals that are covered by the …","Returns the <code>MlsGroupConfig</code> boolean flag that indicates …","Sets the <code>use_ratchet_tree_extension</code> property of the …","Returns the <code>MlsGroupConfig</code> wire format policy.","Sets the <code>wire_format</code> property of the MlsGroupConfig.","A config struct for commonly used values when performing …","","","The <code>Ciphersuite</code> used.","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","The MLS <code>ProtocolVersion</code> used.","Create a new crypto config with the given ciphersuite and …","An empty list of KeyPackages was provided.","Add members error","The committer can’t remove themselves.","The Commit tried to remove self from the group. This is …","Ciphersuites in Welcome and key package bundle don’t …","Error creating external commit.","Commit to pending proposals error","The Commit includes update proposals from the committer.","The computed confirmation tag does not match the expected …","The confirmation tag is invalid.","The confirmation Tag is missing.","Create commit error","See <code>CreateCommitError</code> for more details.","See <code>CreateCommitError</code> for more details.","See <code>CreateCommitError</code> for more details.","See <code>CreateCommitError</code> for more details.","Create message error","Found two add proposals with the same identity.","Duplicate remove proposals for the same member.","Found two add proposals with the same HPKE public key.","Found two add proposals with the same signature key.","See <code>EmptyInputError</code> for more details.","See <code>EmptyInputError</code> for more details.","EmptyInput error","The epoch of the group context and PublicMessage didn’t …","Identity of the add proposal already existed in tree.","HPKE public key (init or encryption) of the add proposal …","HPKE public key of the update proposal already existed in …","Signature key of the add proposal already existed in tree.","Signature key of the update proposal already existed in …","Errors that can happen when exporting a group info object.","Export secret error","External Commit error","See <code>ExternalCommitValidationError</code> for more details.","External Commit validaton error","Ciphersuites in Welcome/GroupInfo and key package bundle …","Unable to decrypt the GroupInfo.","See <code>MlsGroupStateError</code> for more details.","See <code>MlsGroupStateError</code> for more details.","See <code>MlsGroupStateError</code> for more details.","See <code>MlsGroupStateError</code> for more details.","See <code>MlsGroupStateError</code> for more details.","See <code>MlsGroupStateError</code> for more details.","See <code>MlsGroupStateError</code> for more details.","See <code>MlsGroupStateError</code> for more details.","See <code>MlsGroupStateError</code> for more details.","See <code>MlsGroupStateError</code> for more details.","See <code>MlsGroupStateError</code> for more details.","See <code>MlsGroupStateError</code> for more details.","The message’s wire format is incompatible with the group…","External Committer used the wrong index.","The HPKE init and encryption keys are the same.","The capabilities of the add proposal are insufficient for …","See <code>StageCommitError</code> for more details.","See <code>InvalidExtensionError</code> for more details.","The signature on the GroupInfo is not valid.","The signature over the given group info is invalid.","Found inline Add or Update proposals.","Membership tag is invalid.","Remove proposal targets the wrong group member.","The message’s signature is invalid.","Verifying the signature failed.","No joiner secret found in the Welcome message.","The requested key length is too long.","See <code>KeyPackageNewError</code> for more details.","Error accessing the key store.","Error accessing the key store.","Error accessing the key store.","Error accessing the key store.","Error interacting with the key store.","Error accessing the key store.","See <code>LeafNodeValidationError</code> for more details.","This error indicates the leaf node is invalid. See …","Leave group error","See <code>LibraryError</code> for more details.","See <code>LibraryError</code> for more details.","See <code>LibraryError</code> for more details.","See <code>LibraryError</code> for more details.","See <code>LibraryError</code> for more details.","See <code>LibraryError</code> for more details.","See <code>LibraryError</code> for more details.","See <code>LibraryError</code> for more details.","See <code>LibraryError</code> for more details.","See <code>LibraryError</code> for more details.","See <code>LibraryError</code> for more details.","See <code>LibraryError</code> for more details.","See <code>LibraryError</code> for more details.","See <code>LibraryError</code> for more details.","See <code>LibraryError</code> for more details.","See <code>LibraryError</code> for more details.","See <code>LibraryError</code> for more details.","See <code>LibraryError</code> for more details.","See <code>LibraryError</code> for more details.","See <code>LibraryError</code> for more details.","See <code>LibraryError</code> for more details.","See <code>LibraryError</code> for more details.","Malformed Welcome message.","Error merging a commit.","See <code>MergeCommitError</code> for more details.","Error merging pending commit","The confirmation tag is missing.","Credential is missing from external commit.","Credential is missing from external commit.","Missing decryption key.","No external_pub extension available to join group by …","Membership tag is missing.","The proposal queue is missing a proposal for the commit.","The proposal queue is missing a proposal for the commit.","No ratchet tree available to build initial tree after …","No ratchet tree available to build initial tree.","Group state error","See <code>MlsGroupStateError</code> for more details.","Multiple ExternalInit proposal found.","Found multiple inline Remove proposals.","New group error","No ExternalInit proposal found.","No matching CredentialBundle was found in the key store.","The own CredentialBundle could not be found in the key …","The own CredentialBundle could not be found in the key …","The own CredentialBundle could not be found in the key …","The own CredentialBundle could not be found in the key …","The own CredentialBundle could not be found in the key …","The own CredentialBundle could not be found in the key …","The own CredentialBundle could not be found in the key …","The own CredentialBundle could not be found in the key …","The own CredentialBundle could not be found in the key …","The own CredentialBundle could not be found in the key …","No matching encryption key was found in the key store.","No matching KeyPackage was found in the key store.","No matching key package was found in the key store.","The message is from an epoch too far in the past.","The Commit doesn’t have a path despite the sender being …","External Commit has to contain a path.","Can’t execute operation because there is no pending …","An application message was sent from an external sender.","The PublicMessage is not a Commit despite the sender begin …","The PublicMessage is not an External Add Proposal despite …","The Commit was created by this client.","Missing own key to apply proposal.","Missing own key to apply proposal.","Unable to verify the leaf node signature.","Can’t execute operation because a pending commit exists.","Can’t create message because a pending proposal exists.","Process message error","Proposal validation error","See <code>ProposalValidationError</code> for more details.","See <code>ProposalValidationError</code> for more details.","Propose add members error","Propose remove members error","Propose self update error","See <code>PskError</code> for more details.","See <code>PskError</code> for more details.","The PSK could not be found in the key store.","More than 2^16 PSKs were provided.","This error indicates the public tree is invalid. See …","This error indicates the public tree is invalid. See …","See <code>PublicTreeError</code> for more details.","This error indicates the public tree is invalid. See …","This error indicates the public tree is invalid. See …","External commit contains referenced proposal","An empty list of KeyPackage references was provided.","Remove members error","Unable to determine commit path.","Self update error","The sender is of type external, which is not valid.","The sender is of type <code>NewMemberProposal</code>, which is not …","See <code>SignatureError</code> for more details.","Stage Commit error","Too many new members: the tree is full.","Could not decrypt the Welcome message.","Could not decrypt the message","The PublicMessage contains an application message but was …","The member that should be removed can not be found.","The member that should be removed can not be found.","Sender is not part of the group.","The sender could not be matched to a member of the group.","The remove proposal referenced a non-existing member.","The remove proposal referenced a non-existing member.","Sender not found in tree.","Sender not found in tree.","We don’t support all capabilities of the group.","We don’t support the ciphersuite of the group we are …","Unsupported extension type in required capabilities.","The new member does not support all required extensions.","Unsupported extensions found in the KeyPackage of another …","We don’t support the version of the group we are trying …","Unsupported proposal type in required capabilities.","Found an update from a non-member.","See <code>ApplyUpdatePathError</code> for more details.","The identity of the update proposal did not match the …","Tried to use a group after being evicted from it.","Validation error","See <code>ValidationError</code> for more details.","Welcome error","Message epoch differs from the group’s epoch.","Message group ID differs from the group’s group ID.","stage_commit was called with an PublicMessage that is not …","A proposal has the wrong sender type.","Wrong wire formateturns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The key package struct.","Builder that helps creating (and configuring) a <code>KeyPackage</code>.","","","","","Finalize and build the key package.","Create a key package builder.","Check whether the this key package supports all the …","Get the <code>Ciphersuite</code>.","","","","","","Delete this key package and its private key from the key …","","","","","","","","","","Key Package errors","Get a reference to the extensions of this key package.","","","Returns the argument unchanged.","Returns the argument unchanged.","Compute the <code>KeyPackageRef</code> of this <code>KeyPackage</code>. The …","Get the public HPKE init key of this key package.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Set the key package extensions.","","Get the <code>LeafNode</code> reference.","Set the leaf node capabilities.","Set the leaf node extensions.","Create a key package builder.","","","","","","","","","","","","","","","","","","","Verify that this key package is valid:","The ciphersuite does not match the signature scheme.","The lifetime of the leaf node is not valid.","The key package signature is not valid.","KeyPackage extension support error","KeyPackage new error","KeyPackage verify error","Accessing the key store failed.","See <code>LibraryError</code> for more details.","See <code>LibraryError</code> for more details.","The lifetime of the leaf node is missing.","See <code>SignatureError</code> for more details.","A key package extension is not supported in the leaf’s …","The key package does not support all required extensions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Confirmation tag field of PublicMessage. For type safety …","EncryptedGroupSecrets","Welcome message","","","","","","","","","","","","","","","","","","","","","","","","","","External Proposals","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","This module contains all types related to group info …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Build a new <code>EncryptedGroupSecrets</code>.","Returns the encrypted group secrets’ new <code>KeyPackageRef</code>.","Proposals","Returns a reference to the encrypted group secrets in this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","External Add Proposal where sender is NewMemberProposal. A …","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Creates an external Add proposal. For clients requesting …","","","","GroupInfo","A type that represents a group info of which the signature …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Add Proposal.","","","AppAck Proposal.","","","ExternalInit Proposal.","GroupContextExtensions Proposal.","","","","PreSharedKey Proposal.","","Proposal.","MLS Proposal Types","","ReInit Proposal.","","","","Remove Proposal.","","","Update Proposal.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Indicates whether a Commit containing this Proposal …","Check whether a proposal type is supported or not. Returns …","Returns a reference to the key package in the proposal.","Returns a reference to the key package in the proposal.","","Returns the leaf index of the removed leaf in this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","AEAD types","AES GCM 128","AES GCM 256","AES GCM 128","AES GCM 256","Application message received through a ProcessedMessage.","An application message.","","ChaCha20 Poly1305","ChaCha20 Poly1305","MLS ciphersuites.","Public group creation from external error.","","Crypto errors.","","","","DH KEM on x25519","DH KEM on x448","DH KEM on P256","DH KEM on P384","DH KEM on P521","ECDSA_SECP256R1_SHA256","ECDSA_SECP384R1_SHA384","ECDSA_SECP521R1_SHA512","ED25519","ED448","Trait errors.","The error type returned by the <code>OpenMlsKeyStore</code>.","","Export-only","","","The sender is not a member of the group and has an …","An external join proposal sent by a NewMemberProposal …","Group information","Hash types","","HKDF SHA 256","HKDF SHA 384","HKDF SHA 512","AEAD Types for HPKE.","7.7. Update Paths","Convenience tuple struct for an HPKE configuration.","","KDF Types for HPKE","KEM Types for HPKE","Helper holding a (private, public) key pair as byte …","","The signature on the GroupInfo is not valid.","","","","","","","KeyPackage","","","This struct implements the MLS leaf node.","A leaf node.","LeafNodeIndex references a leaf node in a tree.","See <code>LibraryError</code> for more details.","DH KEM P256 | AES-GCM 128 | SHA2-256 | EcDSA P256","DH KEM x25519 | AES-GCM 128 | SHA2-256 | Ed25519","DH KEM x25519 | Chacha20Poly1305 | SHA2-256 | Ed25519","DH KEM P384 | AES-GCM 256 | SHA2-384 | EcDSA P384","DH KEM P521 | AES-GCM 256 | SHA2-512 | EcDSA P521","DH KEM x448 | AES-GCM 256 | SHA2-512 | Ed448","DH KEM x448 | Chacha20Poly1305 | SHA2-512 | Ed448","A member in the group is identified by this <code>Member</code> struct.","The sender is a member of the group","Before use with the <code>MlsGroup</code> API, the message has to be …","MLSMessage (Body)","An <code>MlsMessageOut</code> is typically returned from an <code>MlsGroup</code> …","The sender is a new member of the group that joins itself …","The sender is a new member of the group that joins itself …","Container enum for leaf and parent nodes.","","The OpenMLS Crypto Provider Trait","The Key Store trait","","This struct implements the MLS parent node. It contains …","A parent node.","Ciphertext message","A <code>ProtocolMessage</code> containing a <code>PrivateMessage</code>.","A message that has passed all syntax and semantics checks.","Content of a processed message.","A standalone proposal.","Enum containing a message for use with <code>process_message</code> and …","Plaintext message","A <code>ProtocolMessage</code> containing a <code>PublicMessage</code>.","","","","All possible sender types according to the MLS protocol …","Stores the configuration parameters for <code>DecryptionRatchet</code>s.","","Helper struct that contains the serializable values of an `…","","","","","","SignatureScheme according to IANA TLS parameters","","A Commit message.","The <code>Deserialize</code> trait defines functions to deserialize a …","","The <code>Serialize</code> trait provides functions to serialize a …","The <code>Size</code> trait needs to be implemented by any struct that …","The computed tree hash does not match the one in the …","This error indicates the public tree is invalid. See …","Sender not found in tree.","","","","","We don’t support the version of the group we are trying …","","Welcome message","Get the <code>AeadType</code> for this <code>Ciphersuite</code>.","AEAD decrypt with the given parameters.","AEAD encrypt with the given parameters.","Returns the key size of the used AEAD.","Returns the length of the nonce of the AEAD.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The member’s credential.","Get the crypto provider.","","Delete a value stored for ID <code>k</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Derive a new HPKE keypair from a given input key material.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The member’s public HPHKE encryption key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Hash the <code>data</code>.","","","","Get the <code>HashType</code> for this <code>Ciphersuite</code>","Get the length of the used hash algorithm.","HKDF expand.","HKDF extract.","Get the <code>HpkeAeadType</code> for this <code>Ciphersuite</code>.","Get the <code>HpkeConfig</code> for this <code>Ciphersuite</code>.","Get the <code>HpkeKdfType</code> for this <code>Ciphersuite</code>.","Get the <code>HpkeKemType</code> for this <code>Ciphersuite</code>.","HPKE single-shot decryption of <code>input</code> with <code>sk_r</code>, using <code>info</code> …","HPKE single-shot encryption of <code>ptxt</code> to <code>pk_r</code>, using <code>info</code> …","HPKE single-shot setup of a receiver and immediate export …","HPKE single-shot setup of a sender and immediate export a …","The member’s leaf index in the ratchet tree.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Helper method that converts the SerializedMlsGroup to …","","Get the key size of the <code>AeadType</code> in bytes.","Get the key store provider.","Get the length of the AEAD tag.","Get a reference to the sender ratchet configuration’s …","Create new member.","Create a new <code>LeafNodeIndex</code> from a <code>u32</code>.","Create a new configuration","Get the nonce size of the <code>AeadType</code> in bytes.","Get a reference to the sender ratchet configuration’s …","","","","","","","Get the randomness provider.","Fill an array with random bytes.","Fill a vector of length <code>len</code> with bytes.","Read and return a value stored for ID <code>k</code> that implements the","","","","","","","","","","","","","Sign with the given parameters.","Get the <code>SignatureScheme</code> for this <code>Ciphersuite</code>.","The member’s public signature key.","Generate a signature key.","Returns the output size of a hash by <code>HashType</code>.","","Store a value <code>v</code> that implements the <code>MlsEntity</code> trait for …","Returns the list of supported <code>Ciphersuite</code>s.","Check whether the <code>Ciphersuite</code> is supported by the backend …","Get the tag size of the <code>AeadType</code> in bytes.","This function deserializes the <code>bytes</code> from the provided a …","","","","","Serialize <code>self</code> and write it to the <code>writer</code>. The function …","","","","","","","","","Serialize <code>self</code> and return it as a byte vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the inner value as <code>u32</code>.","Return the inner value as <code>usize</code>.","Verify the signature","A secret that can be used among members to make sure …","A group secret that can be used among members to prove …","Returns the secret as a slice.","Returns the secret as a slice.","","","","","","","","","","","","","","","Key schedule errors.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","The PSK could not be found in the key store.","See <code>LibraryError</code> for more details.","PSK secret error","More than 2^16 PSKs were provided.","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","This struct implements the MLS leaf node.","A leaf node.","Container enum for leaf and parent nodes.","This struct implements the MLS parent node. It contains …","A parent node.","","","","","","","","","","","","","Returns the <code>signature_key</code> as byte slice.","","","","","","","","","","","","","","","","TreeSync errors","Return a reference to the leaf node extensions.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Generate a fresh leaf node.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the <code>parent_hash</code> as byte slice or <code>None</code>.","","","","Returns a reference to the <code>Signature</code> of this leaf.","Returns the <code>signature_key</code> as byte slice.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Apply update path error","The leaf node’s credential type is not listed in the …","Found two KeyPackages with the same public key.","The leaf node’s encryption key is already used in the …","The leaf node’s extension types are not (all) listed in …","An update failed because the provided credential has a …","External Committer used the wrong index.","The leaf node source is invalid in the given context.","A parent hash was invalid.","The leaf node credential is not supported by all members …","Errors that can happen during leaf node validation.","See <code>LibraryError</code> for more details.","See <code>LibraryError</code> for more details.","See <code>LibraryError</code> for more details.","Lifetime is not acceptable.","Errors that can happen during lifetime validation.","The tree is malformed.","The credential used by a member is not supported by this …","Couldn’t find our own key package in this tree.","The parent hash of the ney key package is missing.","Unable to find sender in tree.","Lifetime doesn’t cover current time.","The parent hash of the ney key package is invalid.","The length of the received update path and that of the …","The received update path and the derived nodes are not …","The derived public key doesn’t match the one in the tree.","Public tree error","See <code>PublicTreeError</code> for more details.","Lifetime range is too wide.","See <code>SignatureError</code> for more details.","The leaf node’s signature key is already used in the …","Tree is already at maximum size.","TreeSync from nodes error","Unable to decrypt the path node.","Credentials are not acceptable.","Extensions are not acceptable.","Proposals are not acceptable.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Protocol Version","Unsupported MLS version.","Version Error","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Convert an integer to the corresponding protocol version.","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,171,0,0,172,0,20,0,20,0,20,20,20,20,20,20,20,20,20,20,20,173,20,20,172,174,20,172,174,20,20,20,20,20,172,174,174,174,0,0,0,0,25,24,21,26,25,24,21,26,25,24,21,26,25,24,21,26,25,24,21,26,25,24,21,26,25,24,21,25,24,21,26,25,24,21,25,24,21,26,25,24,21,21,26,26,25,25,25,25,24,21,24,25,24,21,26,25,24,21,26,25,24,25,26,24,21,25,24,24,21,26,25,21,21,26,26,25,25,21,21,26,26,25,25,21,26,25,24,21,26,25,24,21,26,25,24,21,26,25,24,24,24,28,30,0,0,0,0,0,0,28,30,28,29,30,31,32,33,28,29,30,31,32,33,28,29,30,31,32,33,28,29,30,31,32,33,28,33,31,28,29,30,31,32,33,28,29,30,31,32,33,28,29,30,31,32,28,29,30,31,32,33,28,29,30,31,32,0,28,29,30,31,32,33,28,29,30,31,31,32,33,31,28,29,30,31,32,33,28,29,30,31,32,33,31,28,28,29,30,31,32,33,28,31,32,28,28,31,32,32,28,28,31,32,32,28,29,30,31,32,33,28,28,29,30,31,32,33,28,29,30,31,32,33,28,29,30,31,32,33,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,0,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,36,38,38,36,38,38,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,48,40,0,0,0,0,48,40,0,48,40,0,48,40,0,48,40,0,39,39,39,40,40,40,40,40,42,42,44,46,47,48,40,39,42,44,46,47,48,40,39,42,44,46,47,48,40,39,42,44,46,47,48,40,39,48,40,39,46,47,39,42,44,46,47,48,40,39,42,44,46,47,48,40,39,42,44,46,47,48,40,39,42,44,46,47,48,40,39,39,42,44,46,47,48,40,39,0,40,44,39,39,42,44,46,47,48,40,39,42,44,46,47,48,40,39,39,48,42,44,46,47,48,40,39,42,44,46,47,48,40,39,48,39,42,44,46,47,48,40,39,39,39,42,44,46,47,48,40,39,39,42,44,46,47,48,40,39,42,42,44,44,46,46,47,47,48,48,40,40,39,42,42,44,44,46,46,47,47,48,48,40,40,39,42,44,46,47,48,40,39,42,44,46,47,48,48,40,39,39,42,44,46,47,48,40,39,42,44,46,47,48,40,39,43,0,41,52,0,52,53,54,55,43,0,43,43,0,43,41,43,0,43,0,52,43,43,43,52,53,54,55,41,43,52,53,54,55,41,43,52,53,54,55,41,43,52,53,54,55,41,43,52,53,54,55,41,43,52,53,54,55,41,43,52,53,54,55,41,43,52,53,54,55,41,43,43,52,52,53,53,54,54,55,55,41,41,43,43,43,43,43,43,43,43,52,53,54,55,41,43,52,53,54,55,41,43,52,53,54,55,41,43,52,53,54,55,41,43,43,52,53,54,55,41,43,52,53,54,55,41,43,52,53,54,55,41,43,52,53,54,55,41,43,52,53,54,55,41,0,65,63,65,58,64,58,64,63,0,0,0,63,63,0,58,59,64,0,0,65,0,0,58,59,64,0,65,58,64,0,56,57,58,59,60,61,62,63,56,65,67,64,57,58,59,60,61,62,63,56,65,67,64,57,58,59,60,61,62,63,64,57,58,59,60,61,62,63,64,56,59,56,57,58,59,60,61,62,63,56,65,67,64,57,58,59,60,61,62,63,56,65,67,64,62,63,64,57,58,59,60,61,62,63,56,65,67,64,59,56,57,58,60,61,62,63,67,64,0,57,57,58,59,60,61,62,63,56,65,67,64,57,58,59,59,59,60,60,60,61,62,63,56,65,67,64,64,59,56,57,58,59,60,61,62,63,56,65,67,64,57,58,59,60,61,62,63,56,65,67,64,67,56,59,59,56,62,63,64,57,58,61,62,63,64,60,60,61,61,62,63,63,64,64,57,57,58,58,60,60,61,61,62,63,63,64,64,60,57,58,59,60,61,62,63,64,57,58,59,60,61,62,63,56,65,67,64,57,57,58,59,60,61,62,63,56,65,67,64,57,58,59,60,61,62,63,56,65,67,64,57,59,72,74,74,72,74,72,73,74,72,0,0,73,74,74,74,0,72,0,72,74,74,71,71,73,72,72,73,71,74,72,73,71,74,72,73,71,74,72,73,71,74,72,73,71,74,72,73,71,74,72,73,71,74,72,73,74,72,72,73,73,71,71,74,74,72,72,72,72,73,73,71,74,74,74,72,73,71,74,72,73,71,74,72,73,71,74,72,73,74,72,73,71,74,72,73,71,74,72,73,71,74,72,73,71,74,72,73,71,74,84,69,84,69,86,92,0,0,93,0,0,0,0,92,84,0,0,0,0,93,0,0,0,93,0,86,0,0,0,0,0,0,0,0,100,100,0,100,100,100,0,75,75,77,79,70,66,91,83,77,95,96,97,79,82,81,84,69,85,100,92,93,75,86,70,66,91,83,77,95,96,97,79,82,81,84,69,85,100,92,93,75,86,70,66,81,82,75,75,83,82,84,69,85,86,70,66,83,82,84,69,85,86,70,66,75,0,75,75,75,82,81,91,82,81,85,91,83,77,95,96,97,79,82,81,84,69,85,100,92,93,75,86,70,66,91,83,77,95,96,97,79,82,81,84,69,85,100,92,93,75,86,70,66,91,83,79,82,84,69,85,92,93,70,66,91,83,77,95,96,97,79,82,81,84,69,85,100,92,93,75,86,70,66,75,75,91,83,77,95,96,97,82,84,69,85,86,70,66,0,75,75,75,91,83,77,95,96,97,79,82,84,69,85,100,92,93,75,86,70,66,91,83,77,95,96,97,79,79,82,81,84,69,85,100,92,93,75,86,70,66,66,70,75,75,70,66,85,91,83,77,95,96,97,79,82,81,84,69,85,100,92,93,75,86,70,66,91,83,77,95,96,97,79,82,81,84,69,85,100,92,93,75,86,70,66,75,75,75,82,81,75,82,81,75,75,75,75,81,100,75,75,75,82,81,85,75,75,75,75,82,81,66,75,75,75,83,75,75,75,97,79,70,75,95,79,75,75,79,75,83,77,95,96,97,82,81,91,83,79,82,84,69,85,92,93,75,70,66,75,75,75,75,70,66,70,70,66,66,70,70,66,66,83,82,84,69,85,86,70,66,70,91,83,77,95,96,97,79,82,81,84,69,85,100,92,93,75,86,70,66,91,83,77,95,96,97,79,82,81,84,69,85,100,92,93,75,86,70,66,91,83,77,95,96,97,79,82,81,84,69,85,100,92,93,75,86,70,66,96,79,82,81,82,81,0,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,128,0,129,130,112,103,0,132,112,129,129,0,76,122,124,87,0,132,132,132,132,76,122,0,129,132,132,132,132,132,0,0,0,129,0,112,112,115,88,76,118,119,122,104,124,120,87,98,99,115,129,132,132,115,130,112,103,133,131,133,115,131,112,99,130,110,124,120,112,130,109,118,112,0,110,89,115,88,76,118,119,122,104,124,120,87,98,99,112,103,129,130,131,132,133,109,112,0,108,0,131,103,130,129,103,131,129,130,112,103,0,108,133,133,0,133,110,88,76,118,119,122,104,124,120,87,98,112,110,112,131,131,133,89,131,131,131,129,129,130,129,89,89,0,0,129,130,0,0,0,129,130,112,112,112,103,120,112,130,133,128,0,129,0,129,129,130,0,129,112,131,131,119,122,131,132,132,133,112,103,112,103,110,118,112,112,110,132,129,132,89,0,115,0,131,131,129,130,131,110,128,89,108,115,88,76,118,119,122,104,124,120,87,98,99,112,103,129,130,131,132,133,109,110,128,89,108,115,88,76,118,119,122,104,124,120,87,98,99,112,103,129,130,131,132,133,109,110,128,89,108,115,88,76,118,119,122,104,124,120,87,98,99,112,103,129,130,131,132,133,109,110,128,89,108,115,88,76,118,119,122,104,124,120,87,98,99,112,103,129,130,131,132,133,109,110,128,89,108,115,88,76,118,119,122,104,124,120,87,98,99,112,103,129,130,131,132,133,109,110,128,89,108,115,88,76,118,119,122,104,124,120,87,98,99,112,103,129,130,131,132,133,109,110,128,89,108,115,88,76,118,119,122,104,124,120,87,98,99,112,103,129,130,131,132,133,109,110,128,89,108,115,88,76,118,119,122,104,124,120,87,98,99,112,103,129,130,131,132,133,109,110,110,128,128,89,89,108,108,115,115,88,88,76,76,118,118,119,119,122,122,104,104,124,124,120,120,87,87,98,98,99,99,112,112,103,103,129,129,130,130,131,131,132,132,133,133,109,109,110,110,128,89,89,108,108,108,115,115,115,115,115,88,88,88,76,76,76,76,76,118,118,118,118,119,119,119,122,122,122,122,122,104,104,104,124,124,124,124,120,120,120,120,87,87,87,87,98,98,98,99,99,99,112,112,112,112,112,103,103,103,129,129,129,129,129,129,130,130,130,130,130,130,130,130,131,131,131,132,132,133,133,109,109,110,128,89,108,115,88,76,118,119,122,104,124,120,87,98,99,112,103,129,130,131,132,133,109,110,128,89,108,115,88,76,118,119,122,104,124,120,87,98,99,112,103,129,130,131,132,133,109,110,128,89,108,115,88,76,118,119,122,104,124,120,87,98,99,112,103,129,130,131,132,133,109,110,89,108,115,88,76,118,119,122,104,124,120,87,98,99,112,103,129,130,131,132,133,109,110,128,89,108,115,88,76,118,119,122,104,124,120,87,98,99,112,103,129,130,131,132,133,109,110,128,89,108,115,88,76,118,119,122,104,124,120,87,98,99,112,103,129,130,131,132,133,109,110,128,89,108,115,88,76,118,119,122,104,124,120,87,98,99,112,103,129,130,131,132,133,109,110,128,89,108,115,88,76,118,119,122,104,124,120,87,98,99,112,103,129,130,131,132,133,109,110,128,89,108,115,88,76,118,119,122,104,124,120,87,98,99,112,103,129,130,131,132,133,109,0,0,117,142,117,142,142,117,117,117,117,142,117,142,142,117,117,142,117,142,117,142,117,142,117,0,117,117,142,117,142,117,117,117,142,117,142,142,117,117,142,142,142,117,142,117,117,117,117,117,117,117,142,117,117,142,117,142,117,142,117,117,141,144,144,0,0,0,141,144,141,144,141,144,143,144,143,141,144,143,141,144,143,141,144,143,141,144,143,141,144,143,141,144,143,141,144,143,141,144,144,143,143,141,141,144,144,143,141,141,141,144,143,141,144,143,141,144,143,141,144,141,144,143,141,144,143,141,144,143,141,144,143,141,144,143,141,0,0,0,111,145,146,111,145,146,111,145,146,111,145,146,111,145,146,111,145,146,146,111,145,146,111,145,146,0,111,145,146,111,145,146,0,111,145,146,111,145,146,145,145,0,111,146,111,145,146,111,111,145,145,146,146,111,111,145,145,146,146,111,145,146,111,145,146,111,145,146,111,145,146,0,175,175,175,175,175,175,175,175,175,175,175,175,0,0,102,68,102,68,102,68,102,68,102,68,102,68,102,68,102,68,102,68,102,68,102,68,102,68,102,102,102,68,68,102,102,68,68,102,68,102,68,102,68,102,68,102,148,116,0,148,116,0,148,116,0,0,148,116,116,0,148,0,0,116,0,148,148,116,0,148,116,0,148,116,78,126,123,121,149,150,151,152,148,116,78,126,123,121,149,150,151,152,148,116,78,126,123,121,149,150,151,152,148,116,78,126,123,121,149,150,151,152,148,148,116,78,126,123,121,149,150,151,152,148,116,78,126,123,121,149,150,151,152,148,116,78,126,123,121,149,150,151,152,148,116,78,126,123,121,149,150,151,152,148,116,78,126,123,121,149,150,151,152,148,116,78,126,123,121,149,150,151,152,148,116,78,126,123,121,149,150,150,151,152,148,116,78,126,123,121,149,150,151,152,148,116,78,126,123,121,149,150,151,152,116,148,78,126,148,123,148,116,78,126,123,121,149,150,151,152,148,116,78,126,123,121,149,150,151,152,148,148,116,116,78,78,126,126,123,123,121,121,149,149,150,150,151,151,152,152,148,148,116,116,78,78,126,126,123,123,121,121,149,149,150,150,151,151,152,152,148,116,78,126,123,121,149,150,151,152,148,148,116,78,126,123,121,149,150,151,152,148,116,78,126,123,121,149,150,151,152,148,116,78,126,123,121,149,150,151,152,16,0,153,153,159,159,0,65,0,153,159,0,0,0,0,156,16,176,157,157,157,157,157,27,27,27,27,27,0,177,178,159,16,0,63,65,58,0,16,158,158,158,0,0,0,16,0,0,0,16,138,16,156,16,16,16,0,58,0,176,0,51,0,138,14,14,14,14,14,14,14,0,63,0,0,0,63,63,0,0,0,0,0,0,51,58,59,0,0,65,0,58,59,0,176,16,0,0,16,0,155,155,155,16,16,0,156,65,0,16,0,0,138,138,138,16,16,16,16,138,16,58,14,179,179,14,14,153,155,27,156,16,162,157,158,159,147,160,14,161,138,163,107,125,153,155,27,156,16,162,157,158,159,147,160,14,161,138,163,107,125,147,153,155,27,156,16,157,158,159,147,160,14,161,138,107,125,153,155,27,156,16,157,158,159,147,160,14,161,138,107,125,14,107,161,176,125,177,153,155,27,156,16,162,157,158,159,147,160,14,161,138,163,107,125,153,155,27,156,16,162,157,158,159,147,160,14,161,138,163,107,125,179,153,27,157,158,159,147,160,14,161,163,107,125,153,155,27,156,16,162,157,158,159,147,160,14,161,138,163,107,125,161,153,155,27,156,16,157,158,159,147,14,161,138,107,125,153,155,27,156,16,16,162,157,158,159,147,160,14,14,161,138,138,107,125,153,153,155,155,27,27,156,16,162,157,157,158,158,159,159,147,160,14,161,138,138,138,163,107,125,179,27,14,107,14,14,179,179,14,14,14,14,179,179,179,179,161,153,155,27,156,16,162,157,158,159,147,160,14,161,138,163,107,125,153,155,27,156,16,162,157,158,159,147,160,14,161,138,163,107,125,163,147,153,176,14,125,161,107,125,153,125,14,107,160,16,138,160,176,178,178,177,153,27,157,158,159,147,160,14,161,163,107,125,179,14,161,179,155,138,177,179,179,153,180,27,147,14,107,181,27,27,147,147,14,14,107,107,181,182,27,27,147,147,14,14,107,107,153,155,27,156,16,157,158,159,147,160,14,161,138,107,125,16,14,138,153,155,27,27,156,16,162,157,158,159,147,160,14,14,161,138,163,107,125,153,155,27,156,16,162,157,158,159,147,160,14,161,138,163,107,125,153,155,27,156,16,162,157,158,159,147,160,14,161,138,163,107,125,107,107,179,0,0,101,94,101,94,101,94,101,101,101,94,101,94,101,94,101,94,0,101,94,101,94,101,94,101,94,101,94,101,101,94,101,94,101,94,139,139,0,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,0,51,0,0,51,113,167,51,113,167,51,113,167,51,113,167,51,113,113,167,51,113,167,51,113,167,51,113,167,51,113,167,51,0,113,113,167,51,113,167,51,113,113,167,51,113,167,51,113,113,167,51,113,113,113,167,51,113,113,167,167,51,51,113,113,167,167,51,51,113,167,51,113,167,51,113,167,51,113,167,51,0,136,137,136,136,137,140,136,137,136,0,137,140,165,136,0,137,136,137,140,140,168,140,140,140,137,0,165,168,137,136,140,0,140,136,136,136,137,140,165,136,168,137,140,165,136,168,137,140,165,136,168,137,140,165,136,168,137,140,165,136,168,137,140,165,136,168,137,140,165,136,168,137,140,165,136,168,137,137,140,140,165,165,136,136,168,168,137,137,137,140,140,165,165,165,136,168,137,140,165,136,168,137,140,165,136,168,137,140,165,136,168,137,140,165,137,140,165,136,168,137,140,165,136,168,137,140,165,136,168,137,140,165,136,168,137,140,165,136,168,169,169,0,170,0,169,170,169,170,169,170,169,170,169,169,169,170,169,170,169,169,170,169,170,169,169,170,170,169,170,169,170,169,170,169,170,169,169,169,169,169,169,169,170,169,170,169,169,170,169,170,169,170],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,1],[[]],[1],[2],[2],[[],[[3,[1]]]],[2],[[1,4],5],[[[7,[6]]],1],[[]],[8,1],0,[[],2],[[]],[1,3],0,0,[[],[[3,[1,9]]]],[1,[[3,[2,9]]]],[1,[[3,[2,9]]]],[1,2],[1,2],[[]],[[],3],[[],3],[[],10],0,0,0,[11],[[]],[[]],[11,11],[[]],[[11,11],12],[2],[2],[[],[[3,[11]]]],[2],[[11,11],13],[[11,4],5],[[11,4],5],[[]],[11],[[],2],[[]],[14,[[3,[15,16]]]],[14,[[3,[17,16]]]],[14,[[3,[11,16]]]],[[11,11],[[18,[12]]]],[11,3],[[],[[3,[11,9]]]],[11,[[3,[2,9]]]],[11,[[3,[2,9]]]],[11,2],[11,2],[[]],[[],19],[[],3],[[],3],[[],10],0,0,0,0,0,0,0,0,0,[[]],[[]],[20,20],[[]],[2],[2],[2],[[20,20],13],[[20,4],5],[[20,4],5],[[]],[21],[[],2],[[]],[[],22],[[],22],[23],[[],[[3,[20]]]],[[],21],[[]],[[],19],[[],3],[[],3],[[],10],[[],[[3,[[7,[6]],9]]]],[[],[[3,[[7,[6]],9]]]],[24,[[3,[20]]]],[24,[[3,[20]]]],0,0,0,0,[25],[24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21,21],[26,26],[25,25],[24,24],[[]],[[]],[[]],[[]],[2],[2],[2],[2],[2],[2],[2],[2],[[],[[3,[21]]]],[[],[[3,[25]]]],[[],[[3,[24]]]],[2],[2],[2],[2],[[21,21],13],[[25,25],13],[[24,24],13],[[21,4],5],[[26,4],5],[[25,4],5],[[24,4],5],[[[7,[6]]],21],[[]],[[],26],[[]],[[]],[[[7,[6]]],25],[[],25],[24,25],[[]],[21,21],[[25,27],24],[25],[24],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[25,27],24],[[22,8],26],[[8,27],[[3,[24,16]]]],[21,3],[25,3],[24,3],[24,27],[[],[[3,[21,9]]]],[[],[[3,[26,9]]]],[[],[[3,[25,9]]]],[21,[[3,[2,9]]]],[21,[[3,[2,9]]]],[26,[[3,[2,9]]]],[26,[[3,[2,9]]]],[25,[[3,[2,9]]]],[25,[[3,[2,9]]]],[21,2],[21,2],[26,2],[26,2],[25,2],[25,2],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],10],[[],10],[[],10],[[],10],[[24,21],[[3,[16]]]],[[24,21,26],[[3,[16]]]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[[]],[[]],[[]],[[]],[[]],[[]],[[28,28],12],0,[31,28],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],[[3,[28]]]],[[],[[3,[29]]]],[[],[[3,[30]]]],[[],[[3,[31]]]],[[],[[3,[32]]]],[2],[2],[2],[2],[2],[2],[[28,28],13],[[29,29],13],[[30,30],13],[[31,31],13],[[32,32],13],0,[[28,4],5],[[29,4],5],[[30,4],5],[[31,4],5],[[32,4],5],[[33,4],5],[[]],[[]],[[]],[[]],[30,31],[[]],[[]],[31],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]],28],[[3,[31,34]]]],[[28,28],[[18,[12]]]],[28,3],[29,3],[30,3],[31,3],[32,3],0,[[],[[3,[28,9]]]],[[],[[3,[31,9]]]],[[],[[3,[32,9]]]],[28,[[3,[2,9]]]],[28,[[3,[2,9]]]],[31,[[3,[2,9]]]],[32,[[3,[2,9]]]],[32,[[3,[2,9]]]],[28,2],[28,2],[31,2],[32,2],[32,2],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[35,[[3,[28]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,0,[[]],[[]],[34,34],[[]],[2],[2],[2],[[34,34],13],[[34,4],5],[[34,4],5],[36,34],[[]],[[],2],[[]],[23],[34,[[18,[37]]]],[[]],[[],19],[[],3],[[],3],[[],10],0,0,[[]],[[]],[[]],[[]],[36,36],[38,38],[[]],[[]],[2],[2],[2],[2],[2],[2],[[36,36],13],[[38,38],13],[[36,4],5],[[36,4],5],[[38,4],5],[[38,4],5],[[]],[[]],[22,38],[19,38],[[],2],[[],2],[[]],[[]],[23],[23],[[]],[[]],[[],19],[[],19],[[],3],[[],3],[[],3],[[],3],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[39,40],[[3,[41]]]],[[39,40],[[18,[40]]]],[39,[[18,[42]]]],[40,[[3,[42,43]]]],[40,[[3,[44,43]]]],[40,[[3,[45,43]]]],[40,[[3,[46,43]]]],[40,[[3,[47,43]]]],[42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,42],[44,44],[46,46],[47,47],[48,48],[40,40],[39,39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[48,48],12],[[40,40],12],[[39,48],13],[[],46],[[],47],[[],39],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],[[3,[42]]]],[[],[[3,[44]]]],[[],[[3,[46]]]],[[],[[3,[47]]]],[[],[[3,[48]]]],[[],[[3,[40]]]],[[],[[3,[39]]]],[2],[2],[2],[2],[2],[2],[2],[[],39],[[42,42],13],[[44,44],13],[[46,46],13],[[47,47],13],[[48,48],13],[[40,40],13],[[39,39],13],0,[40,48],[44,49],[39,[[18,[44]]]],[39,[[18,[45]]]],[[42,4],5],[[44,4],5],[[46,4],5],[[47,4],5],[[48,4],5],[[40,4],5],[[39,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[40]]],[[3,[39,41]]]],[48],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[48,13],[39,50],[[],42],[49,44],[[[7,[[18,[51]]]]],46],[[],47],[[48,48],[[18,[12]]]],[[40,40],[[18,[12]]]],[39,[[18,[46]]]],[[39,48],[[18,[40]]]],[39,[[18,[47]]]],[42,3],[44,3],[46,3],[47,3],[48,3],[40,3],[39,3],[40,39],[[],[[3,[42,9]]]],[[],[[3,[44,9]]]],[[],[[3,[46,9]]]],[[],[[3,[47,9]]]],[[],[[3,[48,9]]]],[[],[[3,[40,9]]]],[[],[[3,[39,9]]]],[42,[[3,[2,9]]]],[42,[[3,[2,9]]]],[44,[[3,[2,9]]]],[44,[[3,[2,9]]]],[46,[[3,[2,9]]]],[46,[[3,[2,9]]]],[47,[[3,[2,9]]]],[47,[[3,[2,9]]]],[48,[[3,[2,9]]]],[48,[[3,[2,9]]]],[40,[[3,[2,9]]]],[40,[[3,[2,9]]]],[39,[[3,[2,9]]]],[42,2],[42,2],[44,2],[44,2],[46,2],[46,2],[47,2],[47,2],[48,2],[48,2],[40,2],[40,2],[39,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[35,[[3,[48]]]],[[],3],[[],3],[[[7,[40]]],[[3,[39]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,43],[52,52],[53,53],[54,54],[55,55],[41,41],[[]],[[]],[[]],[[]],[[]],[[]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[43,43],13],[[52,52],13],[[53,53],13],[[54,54],13],[[55,55],13],[[41,41],13],[[43,4],5],[[43,4],5],[[52,4],5],[[52,4],5],[[53,4],5],[[53,4],5],[[54,4],5],[[54,4],5],[[55,4],5],[[55,4],5],[[41,4],5],[[41,4],5],[[]],[41,43],[36,43],[55,43],[38,43],[52,43],[54,43],[53,43],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[23],[23],[23],[23],[23],[23],[43,[[18,[37]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[56],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[56,65],0,[56,[[18,[31]]]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],[[3,[62]]]],[[],[[3,[63]]]],[[],[[3,[64]]]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[59,66],[56,66],[[57,57],13],[[58,58],13],[[60,60],13],[[61,61],13],[[62,62],13],[[63,63],13],[[67,67],13],[[64,64],13],0,[57,58],[[57,4],5],[[58,4],5],[[59,4],5],[[60,4],5],[[61,4],5],[[62,4],5],[[63,4],5],[[56,4],5],[[65,4],5],[[67,4],5],[[64,4],5],[[]],[[]],[61,59],[[]],[62,59],[68,60],[62,60],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[69,64],[59,70],[56,70],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[67,[[7,[6]]]],[56,65],[59,13],[59,13],[56,63],[62,3],[63,3],[64,3],[[],[[3,[57,9]]]],[[],[[3,[58,9]]]],[[],[[3,[61,9]]]],[[],[[3,[62,9]]]],[[],[[3,[63,9]]]],[[],[[3,[64,9]]]],[60,[[3,[2,9]]]],[60,[[3,[2,9]]]],[61,[[3,[2,9]]]],[61,[[3,[2,9]]]],[62,[[3,[2,9]]]],[63,[[3,[2,9]]]],[63,[[3,[2,9]]]],[64,[[3,[2,9]]]],[64,[[3,[2,9]]]],[57,2],[57,2],[58,2],[58,2],[60,2],[60,2],[61,2],[61,2],[62,2],[63,2],[63,2],[64,2],[64,2],[60,[[3,[[7,[6]],71]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],[[3,[57,71]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[57,64],[59,64],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[72,72],[73,73],[71,71],[74,74],[[]],[[]],[[]],[[]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[72,72],13],[[73,73],13],[[74,74],13],[[72,4],5],[[72,4],5],[[73,4],5],[[73,4],5],[[71,4],5],[[71,4],5],[[74,4],5],[[74,4],5],[74,72],[[]],[36,72],[73,72],[[]],[36,73],[[]],[[]],[9,74],[16,74],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[23],[23],[23],[23],[72,[[18,[37]]]],[73,[[18,[37]]]],[74,[[18,[37]]]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[75],[75,[[3,[76]]]],[77,78],[79,50],[70],[66,80],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[81,82],[[],81],[75,14],[75],[83,83],[82,82],[84,84],[69,69],[85,85],[86,86],[70,70],[66,66],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[75,[[3,[87]]]],0,[75,82],[75,[[3,[60,88]]]],[75,[[3,[31,89]]]],[82,90],[[81,90],81],[[],91],[[],82],[[],81],[[],85],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],[[3,[91]]]],[[],[[3,[83]]]],[[],[[3,[79]]]],[[],[[3,[82]]]],[[],[[3,[84]]]],[[],[[3,[69]]]],[[],[[3,[85]]]],[[],[[3,[92]]]],[[],[[3,[93]]]],[[],[[3,[70]]]],[[],[[3,[66]]]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[75,66],[75,94],[[91,91],13],[[83,83],13],[[77,77],13],[[95,95],13],[[96,96],13],[[97,97],13],[[82,82],13],[[84,84],13],[[69,69],13],[[85,85],13],[[86,86],13],[[70,70],13],[[66,66],13],0,[[75,13],[[3,[60,98]]]],[75,[[7,[[18,[51]]]]]],[[75,22,2],[[3,[[7,[6]],99]]]],[[91,4],5],[[83,4],5],[[77,4],5],[[95,4],5],[[96,4],5],[[97,4],5],[[79,4],5],[[82,4],5],[[84,4],5],[[69,4],5],[[85,4],5],[[100,4],5],[[92,4],5],[[93,4],5],[[75,4],5],[[86,4],5],[[70,4],5],[[66,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[92,79],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[80,66],[[]],[[],70],[[75,66],[[18,[101]]]],[75,70],[70],[66],[85,84],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[75,13],[[18,102,82,33],[[3,[103]]]],[75,[[3,[60,104]]]],0,0,[105,[[3,[75,106]]]],[82,2],[[81,2],81],[[75,107],[[18,[31]]]],[75,50],[75,[[3,[108]]]],[[75,79],[[3,[109]]]],[[],81],[[95,75],[[3,[100,36]]]],[[82,33],[[3,[75,110]]]],[[82,111,[18,[[7,[[18,[51]]]]]]],[[3,[75,112]]]],[[82,70,33],[[3,[75,110]]]],[82,2],[[81,2],81],[85,69],[75,18],[75,[[18,[113]]]],[75,107],[75,[[18,[113]]]],[82,2],[[81,2],81],[[66,66],[[18,[12]]]],[75,[[18,[79]]]],[75,50],[[75,[114,[59]]],[[3,[56,115]]]],[83,116],[[75,117],[[3,[60,118]]]],[[75,107],[[3,[60,119]]]],[[75,[18,[113]]],[[3,[60,120]]]],[97,121],[79,50],[[],70],[75,[[3,[122]]]],[95,123],[79,50],[75,101],[75,[[3,[106]]]],[79,13],[75,[[3,[124]]]],[83,63],[77,63],[95,63],[96,63],[97,63],[82,125],[[81,125],81],[91,3],[83,3],[79,3],[82,3],[84,3],[69,3],[85,3],[92,3],[93,3],[75,3],[70,3],[66,3],[75],[[75,82]],[75,86],[[75,83]],[[],[[3,[70,9]]]],[[],[[3,[66,9]]]],[70,[[3,[2,9]]]],[70,[[3,[2,9]]]],[66,[[3,[2,9]]]],[66,[[3,[2,9]]]],[70,2],[70,2],[66,2],[66,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[70,[[7,[6]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[96,126],[79,50],[82,13],[[81,13],81],[82,85],[[81,85],81],0,[[]],[[]],0,[90,90],[[]],[[],90],[2],[2],[[],[[3,[90]]]],[2],[[90,90],13],[[90,4],5],[[]],[[],2],[[]],[90,3],[[]],[[],3],[[],3],[[],10],0,[14,90],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[110,[127]]],[[110,[127]]]],[128,128],[89,89],[[[108,[127]]],[[108,[127]]]],[115,115],[88,88],[[[76,[127]]],[[76,[127]]]],[118,118],[119,119],[[[122,[127]]],[[122,[127]]]],[104,104],[[[124,[127]]],[[124,[127]]]],[[[120,[127]]],[[120,[127]]]],[[[87,[127]]],[[87,[127]]]],[98,98],[99,99],[[[112,[127]]],[[112,[127]]]],[103,103],[129,129],[[[130,[127]]],[[130,[127]]]],[131,131],[132,132],[133,133],[[[109,[127]]],[[109,[127]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[[110,[134]],110],13],[[128,128],13],[[89,89],13],[[[108,[134]],108],13],[[115,115],13],[[88,88],13],[[[76,[134]],76],13],[[118,118],13],[[119,119],13],[[[122,[134]],122],13],[[104,104],13],[[[124,[134]],124],13],[[[120,[134]],120],13],[[[87,[134]],87],13],[[98,98],13],[[99,99],13],[[[112,[134]],112],13],[[103,103],13],[[129,129],13],[[[130,[134]],130],13],[[131,131],13],[[132,132],13],[[133,133],13],[[[109,[134]],109],13],[[[110,[135]],4],5],[[110,4],5],[[128,4],5],[[128,4],5],[[89,4],5],[[89,4],5],[[[108,[135]],4],5],[[108,4],5],[[115,4],5],[[115,4],5],[[88,4],5],[[88,4],5],[[[76,[135]],4],5],[[76,4],5],[[118,4],5],[[118,4],5],[[119,4],5],[[119,4],5],[[122,4],5],[[[122,[135]],4],5],[[104,4],5],[[104,4],5],[[[124,[135]],4],5],[[124,4],5],[[120,4],5],[[[120,[135]],4],5],[[[87,[135]],4],5],[[87,4],5],[[98,4],5],[[98,4],5],[[99,4],5],[[99,4],5],[[[112,[135]],4],5],[[112,4],5],[[103,4],5],[[103,4],5],[[129,4],5],[[129,4],5],[[130,4],5],[[[130,[135]],4],5],[[131,4],5],[[131,4],5],[[132,4],5],[[132,4],5],[[133,4],5],[[133,4],5],[[109,4],5],[[[109,[135]],4],5],[[]],[36,110],[[]],[[]],[36,89],[109,108],[89,108],[[]],[[]],[89,115],[129,115],[36,115],[131,115],[[]],[89,88],[36,88],[36,76],[[]],[128,76],[130,76],[89,76],[[]],[36,118],[89,118],[136,118],[[]],[89,119],[36,119],[[]],[89,122],[130,122],[128,122],[36,122],[89,104],[36,104],[[]],[130,124],[89,124],[36,124],[[]],[89,120],[137,120],[36,120],[[]],[130,87],[89,87],[36,87],[[]],[[]],[36,98],[89,98],[36,99],[89,99],[[]],[36,112],[[]],[136,112],[138,112],[137,112],[[]],[138,103],[36,103],[139,129],[132,129],[36,129],[133,129],[140,129],[[]],[[]],[36,130],[139,130],[132,130],[141,130],[20,130],[137,130],[41,130],[72,131],[[]],[36,131],[[]],[36,132],[36,133],[[]],[[]],[36,109],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[110,[[18,[37]]]],[89,[[18,[37]]]],[108,[[18,[37]]]],[115,[[18,[37]]]],[88,[[18,[37]]]],[76,[[18,[37]]]],[118,[[18,[37]]]],[119,[[18,[37]]]],[122,[[18,[37]]]],[104,[[18,[37]]]],[124,[[18,[37]]]],[120,[[18,[37]]]],[87,[[18,[37]]]],[98,[[18,[37]]]],[99,[[18,[37]]]],[112,[[18,[37]]]],[103,[[18,[37]]]],[129,[[18,[37]]]],[130,[[18,[37]]]],[131,[[18,[37]]]],[132,[[18,[37]]]],[133,[[18,[37]]]],[109,[[18,[37]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,[[]],[[]],[[]],[[]],[[142,90,33],[[3,[117,141]]]],[[],142],[117,[[3,[143]]]],[117,14],[117,117],[142,142],[[]],[[]],[[],142],[117,3],[2],[2],[2],[2],[[],[[3,[117]]]],[[],[[3,[142]]]],[2],[2],[[117,117],13],0,[117,39],[[117,4],5],[[142,4],5],[[]],[[]],[117,[[3,[15,36]]]],[117,49],[[],2],[[],2],[[]],[[]],[[142,39],142],[117,22],[117,113],0,[[142,39],142],[[],142],[117,3],[142,3],[117,21],[[],[[3,[117,9]]]],[117,[[3,[2,9]]]],[117,[[3,[2,9]]]],[117,2],[117,2],[[]],[[]],[[],3],[[],[[3,[117]]]],[[],3],[[],3],[[],3],[[],10],[[],10],[117,[[3,[[7,[6]],9]]]],[117,[[3,[144]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[144,144],[143,143],[[[141,[127]]],[[141,[127]]]],[[]],[[]],[[]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[144,144],13],[[143,143],13],[[[141,[134]],141],13],[[144,4],5],[[144,4],5],[[143,4],5],[[143,4],5],[[141,4],5],[[[141,[135]],4],5],[36,144],[[]],[[]],[36,141],[20,141],[[]],[[],2],[[],2],[[],2],[[]],[[]],[[]],[23],[23],[23],[144,[[18,[37]]]],[141,[[18,[37]]]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],10],[[],10],[[],10],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[111,111],[145,145],[146,146],[[]],[[]],[[]],[2],[2],[2],[2],[2],[2],[[],[[3,[146]]]],[2],[2],[2],[[111,111],13],[[145,145],13],[[146,146],13],0,[[111,4],5],[[145,4],5],[[146,4],5],[[]],[[]],[[]],0,[[],2],[[],2],[[],2],[[]],[[]],[[]],[[15,147],145],[145,15],0,[111],[146,3],[[],[[3,[111,9]]]],[[],[[3,[145,9]]]],[[],[[3,[146,9]]]],[111,[[3,[2,9]]]],[111,[[3,[2,9]]]],[145,[[3,[2,9]]]],[145,[[3,[2,9]]]],[146,[[3,[2,9]]]],[146,[[3,[2,9]]]],[111,2],[111,2],[145,2],[145,2],[146,2],[146,2],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],10],[[],10],[[],10],0,[[]],[[]],[2],[2],[2],[[]],[[],2],[[]],[[117,70,66],[[3,[60,118]]]],[[],3],[[],3],[[],10],0,0,[[]],[[]],[[]],[[]],[102,102],[68,68],[[]],[[]],[2],[2],[2],[2],[2],[2],[[102,102],13],[[68,68],13],[[102,4],5],[[68,4],5],[[]],[[]],[[],2],[[],2],[[]],[[]],[102,22],[102,21],[[],[[3,[102,9]]]],[68,[[3,[2,9]]]],[68,[[3,[2,9]]]],[102,2],[102,2],[68,2],[68,2],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],10],[[],10],[102,[[3,[[7,[6]],9]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[148,148],[116,116],[78,78],[126,126],[123,123],[121,121],[149,149],[150,150],[151,151],[152,152],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[148,148],12],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],[[3,[148]]]],[[],[[3,[116]]]],[[],[[3,[78]]]],[[],[[3,[126]]]],[[],[[3,[123]]]],[[],[[3,[121]]]],[[],[[3,[149]]]],[[],[[3,[150]]]],[[],[[3,[151]]]],[[],[[3,[152]]]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[148,148],13],[[116,116],13],[[78,78],13],[[126,126],13],[[123,123],13],[[121,121],13],[[149,149],13],[[150,150],13],[[151,151],13],[[152,152],13],[[148,4],5],[[116,4],5],[[78,4],5],[[126,4],5],[[123,4],5],[[121,4],5],[[149,4],5],[[150,4],5],[[151,4],5],[[152,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],150],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[116,13],[148,13],[78,117],[126,113],[[148,148],[[18,[12]]]],[123,107],[148,3],[116,3],[78,3],[126,3],[123,3],[121,3],[149,3],[150,3],[151,3],[152,3],[[],[[3,[148,9]]]],[[],[[3,[116,9]]]],[[],[[3,[78,9]]]],[[],[[3,[126,9]]]],[[],[[3,[123,9]]]],[[],[[3,[121,9]]]],[[],[[3,[149,9]]]],[[],[[3,[150,9]]]],[[],[[3,[151,9]]]],[[],[[3,[152,9]]]],[148,[[3,[2,9]]]],[148,[[3,[2,9]]]],[116,[[3,[2,9]]]],[116,[[3,[2,9]]]],[78,[[3,[2,9]]]],[78,[[3,[2,9]]]],[126,[[3,[2,9]]]],[126,[[3,[2,9]]]],[123,[[3,[2,9]]]],[123,[[3,[2,9]]]],[121,[[3,[2,9]]]],[121,[[3,[2,9]]]],[149,[[3,[2,9]]]],[149,[[3,[2,9]]]],[150,[[3,[2,9]]]],[150,[[3,[2,9]]]],[151,[[3,[2,9]]]],[151,[[3,[2,9]]]],[152,[[3,[2,9]]]],[152,[[3,[2,9]]]],[148,2],[148,2],[116,2],[116,2],[78,2],[78,2],[126,2],[126,2],[123,2],[123,2],[121,2],[121,2],[149,2],[149,2],[150,2],[150,2],[151,2],[151,2],[152,2],[152,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,[[3,[148]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[14,153],[153,[[3,[[7,[6,154]],16]]]],[153,[[3,[[7,[6,154]],16]]]],[14,2],[14,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[153,153],[155,155],[27,27],[156,156],[16,16],[157,157],[158,158],[159,159],[147,147],[160,160],[14,14],[161,161],[138,138],[107,107],[125,125],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[14,14],12],[[107,107],12],0,[[]],[[],125],[[],3],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[162,160],[[],[[3,[153]]]],[[],[[3,[27]]]],[[],[[3,[157]]]],[[],[[3,[158]]]],[[],[[3,[159]]]],[[],[[3,[147]]]],[[],[[3,[160]]]],[[],[[3,[14]]]],[[],[[3,[161]]]],[[],[[3,[163]]]],[[],[[3,[107]]]],[[],[[3,[125]]]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],0,[[153,153],13],[[155,155],13],[[27,27],13],[[156,156],13],[[16,16],13],[[157,157],13],[[158,158],13],[[159,159],13],[[147,147],13],[[14,14],13],[[161,161],13],[[138,138],13],[[107,107],13],[[125,125],13],[[153,4],[[3,[164]]]],[[155,4],[[3,[164]]]],[[27,4],[[3,[164]]]],[[156,4],[[3,[164]]]],[[16,4],[[3,[164]]]],[[16,4],[[3,[164]]]],[[162,4],[[3,[164]]]],[[157,4],[[3,[164]]]],[[158,4],[[3,[164]]]],[[159,4],[[3,[164]]]],[[147,4],[[3,[164]]]],[[160,4],[[3,[164]]]],[[14,4],[[3,[164]]]],[[14,4],[[3,[164]]]],[[161,4],5],[[138,4],5],[[138,4],5],[[107,4],5],[[125,4],5],[14,153],[[]],[14,155],[[]],[[]],[14,27],[[]],[[]],[[]],[[]],[14,157],[14,158],[[]],[[]],[14,159],[[]],[[]],[[]],[[]],[[]],[36,138],[165,138],[[]],[[]],[[]],[155,[[3,[[7,[6,154]],16]]]],[27],[14],[107],[14,155],[14,2],[[155,2],[[3,[[7,[6,154]],16]]]],[155,[[3,[[7,[6,154]],16]]]],[14,159],[14,162],[14,158],[14,157],[[162,147],[[3,[[7,[6,154]],16]]]],[162,147],[[162,2],[[3,[[7,[6,154]],16]]]],[[162,2],[[3,[16]]]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[163,75],0,[153,2],[[]],[14,2],[125,166],[[107,[7,[6]],[7,[6]],31],161],[166,107],[[166,166],125],[153,2],[125,166],[[14,14],[[18,[12]]]],[[107,107],[[18,[12]]]],0,[23],[23],0,[[]],[[],3],[2,[[3,[[7,[6,154]]]]]],[[],18],[153,3],[27,3],[157,3],[158,3],[159,3],[147,3],[160,3],[14,3],[161,3],[163,3],[107,3],[125,3],[27,[[3,[[7,[6,154]],16]]]],[14,27],0,[27,[[3,[16]]]],[155,2],[138,[[18,[37]]]],[[],3],[[],[[7,[14,154]]]],[14,[[3,[16]]]],[153,2],[[],[[3,[9]]]],[[],[[3,[27,9]]]],[[],[[3,[147,9]]]],[[],[[3,[14,9]]]],[[],[[3,[107,9]]]],[[],[[3,[2,9]]]],[27,[[3,[2,9]]]],[27,[[3,[2,9]]]],[147,[[3,[2,9]]]],[147,[[3,[2,9]]]],[14,[[3,[2,9]]]],[14,[[3,[2,9]]]],[107,[[3,[2,9]]]],[107,[[3,[2,9]]]],[[],[[3,[[7,[6,154]],9]]]],[[],2],[27,2],[27,2],[147,2],[147,2],[14,2],[14,2],[107,2],[107,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],3],[[],3],[35,[[3,[27]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[35,[[3,[14]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[107,166],[107,2],[27,[[3,[16]]]],0,0,[101],[94],[[]],[[]],[[]],[[]],[101,101],[[]],[2],[2],[2],[2],[[],[[3,[101]]]],[[],[[3,[94]]]],[2],[2],0,[[101,4],5],[[94,4],5],[[]],[[]],[[],2],[[],2],[[]],[[]],[101,3],[94,3],[[]],[[],3],[[],3],[[],3],[[],3],[[],10],[[],10],0,0,0,0,[[]],[[]],[139,139],[[]],[2],[2],[2],[[139,139],13],[[139,4],5],[[139,4],5],[36,139],[[]],[[],2],[[]],[23],[139,[[18,[37]]]],[[]],[[],19],[[],3],[[],3],[[],10],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[113,113],[167,167],[51,51],[[]],[[]],[[]],[113,31],[2],[2],[2],[2],[2],[2],[[],[[3,[113]]]],[[],[[3,[167]]]],[[],[[3,[51]]]],[2],[2],[2],[[113,113],13],[[167,167],13],[[51,51],13],0,[113,39],[[113,4],5],[[167,4],5],[[51,4],5],[[]],[[]],[[]],0,[[],2],[[],2],[[],2],[[]],[[]],[[]],[113,18],[113,3],[167,3],[51,3],[113,21],[113,25],[[],[[3,[113,9]]]],[[],[[3,[167,9]]]],[[],[[3,[51,9]]]],[113,[[3,[2,9]]]],[113,[[3,[2,9]]]],[167,[[3,[2,9]]]],[167,[[3,[2,9]]]],[51,[[3,[2,9]]]],[51,[[3,[2,9]]]],[113,2],[113,2],[167,2],[167,2],[51,2],[51,2],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[137,137],[140,140],[165,165],[136,136],[168,168],[[]],[[]],[[]],[[]],[[]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[137,137],13],[[140,140],13],[[165,165],13],[[136,136],13],[[168,168],13],[[137,4],5],[[137,4],5],[[140,4],5],[[140,4],5],[[165,4],5],[[165,4],5],[[136,4],5],[[136,4],5],[[168,4],5],[[168,4],5],[[]],[20,137],[36,137],[36,140],[[]],[[]],[137,165],[36,165],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[23],[23],[23],[23],[23],[137,[[18,[37]]]],[140,[[18,[37]]]],[165,[[18,[37]]]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,[[]],[[]],[[]],[[]],[169,169],[170,170],[[]],[[]],[[169,169],12],[[],169],[2],[2],[2],[2],[[],[[3,[169]]]],[2],[2],[[169,169],13],[[170,170],13],[[169,4],5],[[169,4],5],[[170,4],5],[[170,4],5],[[]],[[]],[[],2],[[],2],[[]],[[]],[[169,169],[[18,[12]]]],[23],[169,3],[[],[[3,[169,9]]]],[169,[[3,[2,9]]]],[169,[[3,[2,9]]]],[169,2],[169,2],[[]],[[]],[[],19],[[],19],[35,[[3,[169]]]],[[],3],[[],3],[[],3],[[],3],[[],10],[[],10]],"p":[[3,"HpkePrivateKey"],[15,"usize"],[4,"Result"],[3,"Formatter"],[6,"Result"],[15,"u8"],[3,"Vec"],[3,"VLBytes"],[4,"Error"],[3,"TypeId"],[3,"HashReference"],[4,"Ordering"],[15,"bool"],[4,"Ciphersuite"],[6,"KeyPackageRef"],[4,"CryptoError"],[6,"ProposalRef"],[4,"Option"],[3,"String"],[4,"SignatureError"],[3,"Signature"],[15,"str"],[3,"Demand"],[3,"OpenMlsSignaturePublicKey"],[3,"SignaturePublicKey"],[3,"SignContent"],[4,"SignatureScheme"],[4,"CredentialType"],[3,"Certificate"],[4,"MlsCredentialType"],[3,"Credential"],[3,"BasicCredential"],[3,"CredentialWithKey"],[4,"CredentialError"],[15,"u16"],[3,"LibraryError"],[8,"Error"],[3,"ErrorString"],[3,"Extensions"],[4,"Extension"],[4,"InvalidExtensionError"],[3,"ApplicationIdExtension"],[4,"ExtensionError"],[3,"ExternalPubExtension"],[6,"ExternalSendersExtension"],[3,"RatchetTreeExtension"],[3,"RequiredCapabilitiesExtension"],[4,"ExtensionType"],[6,"HpkePublicKey"],[8,"Iterator"],[4,"Node"],[4,"CapabilitiesExtensionError"],[4,"KeyPackageIdError"],[4,"ParentHashError"],[4,"RatchetTreeError"],[3,"ProcessedMessage"],[3,"MlsMessageIn"],[4,"MlsMessageInBody"],[4,"ProtocolMessage"],[3,"MlsMessageOut"],[3,"PrivateMessage"],[3,"PublicMessage"],[4,"Sender"],[4,"WireFormat"],[4,"ProcessedMessageContent"],[3,"GroupEpoch"],[3,"ApplicationMessage"],[3,"GroupInfo"],[4,"OutgoingWireFormatPolicy"],[3,"GroupId"],[4,"MlsMessageError"],[4,"MessageDecryptionError"],[4,"SenderError"],[4,"SecretTreeError"],[3,"MlsGroup"],[4,"AddMembersError"],[3,"QueuedAddProposal"],[3,"AddProposal"],[3,"StagedCommit"],[15,"u64"],[3,"MlsGroupConfigBuilder"],[3,"MlsGroupConfig"],[3,"QueuedProposal"],[4,"IncomingWireFormatPolicy"],[3,"WireFormatPolicy"],[4,"InnerState"],[4,"CommitToPendingProposalsError"],[4,"CreateMessageError"],[4,"MlsGroupStateError"],[3,"CryptoConfig"],[3,"ProposalStore"],[4,"PendingCommitState"],[4,"MlsGroupState"],[3,"EpochAuthenticator"],[3,"QueuedRemoveProposal"],[3,"QueuedUpdateProposal"],[3,"QueuedPskProposal"],[4,"ExportGroupInfoError"],[4,"ExportSecretError"],[4,"RemoveOperation"],[3,"ResumptionPskSecret"],[3,"VerifiableGroupInfo"],[4,"ExternalCommitError"],[4,"LeaveGroupError"],[8,"Read"],[3,"Error"],[3,"LeafNodeIndex"],[4,"MergePendingCommitError"],[4,"MergeCommitError"],[4,"NewGroupError"],[3,"Welcome"],[4,"WelcomeError"],[3,"LeafNode"],[8,"Into"],[4,"ProcessMessageError"],[4,"Proposal"],[3,"KeyPackage"],[4,"ProposeAddMemberError"],[4,"ProposeRemoveMemberError"],[4,"ProposeSelfUpdateError"],[3,"PreSharedKeyProposal"],[4,"RemoveMembersError"],[3,"RemoveProposal"],[4,"SelfUpdateError"],[3,"SenderRatchetConfiguration"],[3,"UpdateProposal"],[8,"Clone"],[4,"EmptyInputError"],[4,"StageCommitError"],[4,"CreateCommitError"],[4,"ValidationError"],[4,"ProposalValidationError"],[4,"ExternalCommitValidationError"],[8,"PartialEq"],[8,"Debug"],[4,"LeafNodeValidationError"],[4,"PublicTreeError"],[4,"CreationFromExternalError"],[4,"PskError"],[4,"ApplyUpdatePathError"],[4,"KeyPackageNewError"],[3,"KeyPackageBuilder"],[4,"KeyPackageExtensionSupportError"],[4,"KeyPackageVerifyError"],[3,"EncryptedGroupSecrets"],[3,"ConfirmationTag"],[3,"HpkeCiphertext"],[4,"ProposalType"],[3,"ReInitProposal"],[3,"ExternalInitProposal"],[3,"AppAckProposal"],[3,"GroupContextExtensionProposal"],[4,"AeadType"],[3,"Global"],[4,"HashType"],[4,"Error"],[4,"HpkeKemType"],[4,"HpkeKdfType"],[4,"HpkeAeadType"],[3,"HpkeKeyPair"],[3,"Member"],[3,"HpkeConfig"],[3,"SerializedMlsGroup"],[3,"Error"],[4,"TreeSyncFromNodesError"],[15,"u32"],[3,"ParentNode"],[4,"LifetimeError"],[4,"ProtocolVersion"],[4,"VersionError"],[8,"VerifiedStruct"],[8,"Signable"],[8,"SignedStruct"],[8,"Verifiable"],[3,"JoinProposal"],[8,"OpenMlsCryptoProvider"],[8,"OpenMlsKeyStore"],[8,"OpenMlsRand"],[8,"OpenMlsCrypto"],[8,"TlsDeserializeTrait"],[8,"TlsSerializeTrait"],[8,"TlsSizeTrait"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
