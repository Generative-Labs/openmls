var searchIndex = JSON.parse('{\
"openmls":{"doc":"OpenMLS","t":[0,0,0,0,0,0,0,0,0,0,0,0,0,3,11,11,0,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,0,11,11,11,11,11,11,4,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,8,16,8,8,8,10,11,10,10,10,11,11,11,3,13,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,3,3,3,3,4,4,13,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,3,4,4,13,13,3,13,13,3,13,13,3,13,13,3,13,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,13,4,13,13,13,13,13,13,13,4,13,13,13,13,13,13,4,13,13,4,13,13,4,13,4,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,3,13,3,13,13,3,3,13,13,4,13,13,4,3,3,3,3,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,3,13,3,13,4,13,4,13,13,13,4,13,13,13,13,3,3,13,13,13,13,13,3,3,3,4,4,13,13,13,13,13,4,3,3,13,13,4,4,13,13,13,3,3,3,13,3,3,3,13,3,13,13,13,4,13,13,13,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,13,13,13,13,4,3,3,13,3,3,4,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,4,13,4,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,4,13,13,13,13,4,13,13,4,13,4,13,13,13,13,13,13,4,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,4,13,4,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,4,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,3,13,3,3,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,4,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,13,3,13,13,3,13,13,3,3,13,13,3,3,13,3,13,4,13,13,4,4,4,13,3,13,13,13,13,13,3,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,13,13,13,3,4,3,13,13,3,13,13,6,13,3,3,3,3,13,4,13,4,3,4,13,13,3,3,13,8,8,8,13,4,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,3,3,3,3,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,4,4,13,13,13,13,4,13,4,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,13,13,6,13,13,13,13,13,3,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,13,13,4,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["ciphersuite","config","credentials","error","extensions","framing","group","key_packages","key_store","messages","prelude","schedule","treesync","Ciphersuite","borrow","borrow_mut","ciphersuites","clone","clone_into","deref","deref_mut","deserialize","drop","eq","erased_serialize","fmt","fmt","from","hash_ref","init","into","name","new","serialize","signable","signature_scheme","to_owned","to_string","try_from","try_into","type_id","CiphersuiteName","MLS10_128_DHKEMP256_AES128GCM_SHA256_P256","MLS10_128_DHKEMX25519_AES128GCM_SHA256_Ed25519","MLS10_128_DHKEMX25519_CHACHA20POLY1305_SHA256_Ed25519","MLS10_256_DHKEMP384_AES256GCM_SHA384_P384","MLS10_256_DHKEMP521_AES256GCM_SHA512_P521","MLS10_256_DHKEMX448_AES256GCM_SHA512_Ed448","MLS10_256_DHKEMX448_CHACHA20POLY1305_SHA512_Ed448","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","eq","erased_serialize","fmt","fmt","from","hash","init","into","serialize","tls_deserialize","tls_serialize","tls_serialized_len","to_owned","to_string","try_from","try_from","try_into","type_id","HashReference","KeyPackageRef","ProposalRef","as_slice","borrow","borrow_mut","clone","clone_into","cmp","deref","deref_mut","deserialize","drop","eq","erased_serialize","fmt","fmt","from","hash","init","into","ne","new","partial_cmp","serialize","tls_deserialize","tls_serialize","tls_serialized_len","to_owned","to_string","try_from","try_into","type_id","value","SealingType","Signable","SignedOutput","SignedStruct","Verifiable","VerifiedStruct","from_payload","sign","signature","unsigned_payload","unsigned_payload","verify","verify_no_out","verify_with_key","Config","Mls10","Mls10Draft11","ProtocolVersion","Reserved","borrow","borrow","borrow_mut","borrow_mut","ciphersuite","clone","clone","clone_into","clone_into","cmp","default","default_key_package_lifetime","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","erased_serialize","erased_serialize","errors","fmt","fmt","fmt","from","from","init","init","into","into","key_package_lifetime_margin","ne","partial_cmp","serialize","serialize","supported_ciphersuite_names","supported_ciphersuites","supported_extensions","supported_proposals","supported_versions","tls_deserialize","tls_serialize","tls_serialized_len","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","ConfigError","IncompatibleCiphersuite","IncompatibleMlsVersion","InvalidConfig","LibraryError","UnsupportedCiphersuite","UnsupportedExtensionsType","UnsupportedMlsVersion","UnsupportedProposalType","UnsupportedSignatureScheme","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","init","into","source","to_owned","to_string","try_from","try_into","type_id","Basic","Basic","BasicCredential","Certificate","Credential","CredentialBundle","CredentialError","CredentialType","InvalidSignature","LibraryError","MlsCredentialType","UnsupportedCredentialType","X509","X509","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","credential","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_key_store_value","from_parts","identity","init","init","init","init","init","init","init","into","into","into","into","into","into","into","ne","ne","ne","ne","new","serialize","serialize","serialize","serialize","serialize","serialize","signature_key","signature_scheme","source","tls_deserialize","tls_deserialize","tls_deserialize","tls_serialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","tls_serialized_len","to_key_store_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify","verify","0","0","0","ErrorString","LibraryError","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","init","init","into","into","ne","ne","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","Capabilities","Capabilities","CapabilitiesExtension","Extension","ExtensionType","ExternalKeyId","ExternalKeyId","ExternalKeyIdExtension","LifeTime","Lifetime","LifetimeExtension","ParentHash","ParentHash","ParentHashExtension","RatchetTree","RatchetTree","RatchetTreeExtension","RequiredCapabilities","RequiredCapabilities","RequiredCapabilitiesExtension","Reserved","as_capabilities_extension","as_external_key_id_extension","as_lifetime_extension","as_parent_hash_extension","as_ratchet_tree_extension","as_required_capabilities_extension","as_slice","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ciphersuites","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","errors","extension_type","extensions","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","hash","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","is_supported","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","versions","0","0","0","0","0","0","Capabilities","CapabilitiesExtensionError","CodecError","ConfigError","CryptoError","Duplicate","DuplicateRatchetTreeExtension","EmptyVersionsField","Expired","ExtensionError","Invalid","Invalid","Invalid","Invalid","Invalid","InvalidExtension","InvalidExtensionError","InvalidExtensionType","KeyPackageId","KeyPackageIdError","LibraryError","Lifetime","LifetimeExtensionError","ParentHash","ParentHashError","RatchetTree","RatchetTreeError","UnsupportedCiphersuite","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","into","into","into","into","into","into","into","ne","source","source","source","source","source","source","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","ApplicationMessage","ApplicationMessage","DecryptedMessage","Group","MlsCiphertext","MlsMessageIn","MlsMessageOut","MlsPlaintext","Preconfigured","ProcessedMessage","ProposalMessage","StagedCommitMessage","UnverifiedContextMessage","UnverifiedGroupMessage","UnverifiedMessage","UnverifiedPreconfiguredMessage","VerifiedExternalMessage","VerifiedMemberMessage","WireFormat","aad","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","content_type","content_type","content_type","credential","credential","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch","epoch","epoch","eq","eq","eq","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","group_id","group_id","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_parts","is_handshake_message","is_handshake_message","message","ne","ne","sender","sender","sender","serialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_serialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","tls_serialized_len","to_bytes","to_bytes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_bytes","try_from_bytes","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wire_format","wire_format","wire_format","0","0","0","0","0","0","ALL_VALID_WIRE_FORMAT_POLICIES","AddMembers","AlwaysCiphertext","AlwaysCiphertext","AlwaysPlaintext","AlwaysPlaintext","Changed","CommitError","CommitWithInvalidProposals","Config","CreateCommit","CredentialError","CryptoError","EmptyInput","EmptyInputError","Error","Exists","Exporter","External","ExternalCommitError","Group","GroupEpoch","GroupError","GroupId","Inactive","IncomingWireFormatPolicy","IncompatibleWireFormat","InnerState","InvalidApplicationMessage","InvalidCiphertext","InvalidMessage","InvalidMessageError","InvalidProposal","InvalidSignature","KeyStoreError","LibraryError","MIXED_CIPHERTEXT_WIRE_FORMAT_POLICY","MIXED_PLAINTEXT_WIRE_FORMAT_POLICY","Member","MembershipTagMismatch","MissingConfirmationTag","MissingMembershipTag","Mixed","MlsGroup","MlsGroupConfig","MlsGroupConfigBuilder","MlsGroupError","MlsGroupState","NoMatchingCredentialBundle","NoMatchingKeyPackageBundle","NoPendingCommit","NoSignatureKey","Operational","OutgoingWireFormatPolicy","PURE_CIPHERTEXT_WIRE_FORMAT_POLICY","PURE_PLAINTEXT_WIRE_FORMAT_POLICY","PendingCommit","PendingCommitError","PendingCommitState","PendingProposalsError","PendingProposalsExist","Persisted","PoisonedCredentialBundle","ProposalStore","QueuedAddProposal","QueuedProposal","QueuedProposalError","QueuedPskProposal","QueuedRemoveProposal","QueuedUpdateProposal","RemoveMembers","StagedCommit","TlsCodecError","TreeSyncError","UnknownSender","UseAfterEviction","UseAfterEviction","ValidationError","WelcomeError","WireFormatPolicy","WrongEpoch","WrongGroupId","aad","add_members","add_proposal","add_proposals","as_slice","as_u64","authentication_secret","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ciphersuite","clear_pending_commit","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","commit_to_pending_proposals","config","configuration","create_message","credential","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch","eq","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","errors","errors","export_public_group_state","export_ratchet_tree","export_secret","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_slice","get_resumption_secret","group_id","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","is_active","join_by_external_commit","key_package_ref","leave_group","load","members","merge_pending_commit","merge_staged_commit","ne","ne","ne","ne","new","new_from_welcome","parse_message","partial_cmp","pending_commit","pending_proposals","process_unverified_message","processing","proposal","propose_add_member","propose_remove_member","propose_self_update","psk_proposal","psk_proposals","remove_members","remove_proposal","remove_proposals","save","self_removed","self_update","sender","sender","sender","sender","sender","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_aad","set_configuration","state_changed","store_pending_proposal","tls_deserialize","tls_deserialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","to_owned","to_owned","to_owned","to_owned","to_vec","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_proposal","update_proposals","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","ALL_VALID_WIRE_FORMAT_POLICIES","AlwaysCiphertext","AlwaysCiphertext","AlwaysPlaintext","AlwaysPlaintext","IncomingWireFormatPolicy","MIXED_CIPHERTEXT_WIRE_FORMAT_POLICY","MIXED_PLAINTEXT_WIRE_FORMAT_POLICY","Mixed","MlsGroupConfig","MlsGroupConfigBuilder","OutgoingWireFormatPolicy","PURE_CIPHERTEXT_WIRE_FORMAT_POLICY","PURE_PLAINTEXT_WIRE_FORMAT_POLICY","WireFormatPolicy","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","incoming","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","max_past_epochs","max_past_epochs","ne","ne","new","new","number_of_resumption_secrets","number_of_resumtion_secrets","outgoing","padding_size","padding_size","sender_ratchet_configuration","sender_ratchet_configuration","serialize","serialize","serialize","serialize","set_incoming","set_outgoing","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","use_ratchet_tree_extension","use_ratchet_tree_extension","wire_format_policy","wire_format_policy","AddMembers","ArchitectureError","ArchitectureError","CannotRemoveSelf","CiphersuiteMismatch","CodecError","CodecError","CodecError","CodecError","CodecError","CommitError","CommitError","CommitWithInvalidProposals","Config","ConfigError","ConfigError","ConfigError","ConfirmationTagMismatch","ConfirmationTagMismatch","ConfirmationTagMissing","CoreGroupError","CreateCommit","CreateCommitError","CreateCommitError","CreationProposalQueueError","CredentialError","CredentialError","CryptoError","CryptoError","CryptoError","CryptoError","CryptoError","DuplicateIdentityAddProposal","DuplicateMemberRemoval","DuplicatePublicKeyAddProposal","DuplicateSignatureKeyAddProposal","EmptyInput","EmptyInputError","EpochMismatch","Error","ExistingIdentityAddProposal","ExistingPublicKeyAddProposal","ExistingPublicKeyUpdateProposal","ExistingSignatureKeyAddProposal","ExistingSignatureKeyUpdateProposal","Exists","Exporter","ExporterError","ExporterError","ExtensionError","ExtensionError","ExtensionError","ExternalCommitError","ExternalCommitError","ExternalCommitError","ExternalCommitValidationError","ExternalCommitValidationError","FramingValidationError","FramingValidationError","Group","GroupError","GroupInfoDecryptionFailure","IncompatibleWireFormat","InconsistentSenderIndex","InterimTranscriptHashError","InterimTranscriptHashError","InterimTranscriptHashError","InvalidApplicationMessage","InvalidCiphertext","InvalidGroupInfoSignature","InvalidInlineProposals","InvalidMessage","InvalidMessageError","InvalidProposal","InvalidPublicGroupStateSignature","InvalidRatchetTree","InvalidRemoveProposal","InvalidSignature","JoinerSecretNotFound","KeyLengthTooLong","KeyPackageError","KeyPackageError","KeyPackageError","KeyScheduleError","KeyScheduleError","KeyScheduleError","KeyScheduleError","KeyStoreError","LibraryError","LibraryError","LibraryError","LibraryError","LibraryError","LibraryError","LibraryError","LibraryError","MembershipTagMismatch","MissingConfirmationTag","MissingConfirmationTag","MissingKeyPackage","MissingKeyPackageBundle","MissingMembershipTag","MissingMembershipTag","MissingOwnKeyPackage","MissingProposal","MissingRatchetTree","MissingRatchetTree","MlsCiphertextError","MlsGroupError","MlsPlaintextError","MultipleExternalInitProposals","MultipleRemoveProposals","NoCommit","NoExternalInitProposals","NoMatchingCredentialBundle","NoMatchingKeyPackageBundle","NoParentHashExtension","NoPath","NoPendingCommit","NoSignatureKey","NoSignatureKey","NonMemberApplicationMessage","NotAProposal","NotAProposal","OwnCommitError","OwnKeyNotFound","OwnKeyNotFound","ParentHashMismatch","ParentHashMismatch","PathKeyPackageVerificationFailure","PendingCommitError","PendingProposalsError","PendingProposalsExist","PlaintextSignatureFailure","PoisonedCredentialBundle","ProposalError","ProposalError","ProposalError","ProposalNotFound","ProposalNotFound","ProposalQueueError","ProposalQueueError","ProposalValidationError","ProposalValidationError","PskSecretError","PskSecretError","QueuedProposalError","QueuedProposalError","QueuedProposalError","ReferencedExternalInitProposal","RemoveMembers","RemovedNotFound","RequiredPathNotFound","SelfRemoval","SelfRemoved","SenderError","SenderError","SenderError","StageCommitError","StageCommitError","TlsCodecError","TlsCodecError","TreeError","TreeHashMismatch","TreeHashMismatch","TreeKemError","TreeSyncDiffError","TreeSyncDiffError","TreeSyncError","TreeSyncError","TreeSyncError","TreeSyncError","UnencryptedApplicationMessage","UnknownError","UnknownMember","UnknownMember","UnknownMemberRemoval","UnknownSender","UnknownSender","UnknownSender","UnsupportedMlsVersion","UnsupportedMlsVersion","UpdateProposalIdentityMismatch","UseAfterEviction","UseAfterEviction","ValidationError","ValidationError","VerificationError","WelcomeError","WelcomeError","WelcomeError","WrongContentType","WrongEpoch","WrongEpoch","WrongGroupId","WrongGroupId","WrongPlaintextContentType","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","KeyPackage","KeyPackageBundle","KeyPackageBundlePayload","KeyPackagePayload","add_extension","add_extension","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_extension_support","ciphersuite_name","clone","clone","clone","clone_into","clone_into","clone_into","credential","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","eq","eq","erased_serialize","erased_serialize","erased_serialize","errors","extensions","extensions","fmt","fmt","fmt","from","from","from","from","from","from","from_key_package_and_leaf_secret","from_key_store_value","from_payload","from_payload","hash_ref","init","init","init","init","into","into","into","into","key_id","key_package","leaf_secret","ne","new","new_with_keypair","new_with_version","serialize","serialize","serialize","signature","tls_deserialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","to_key_store_value","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unsigned_payload","unsigned_payload","unsigned_payload","verify","CiphersuiteMismatch","CiphersuiteSignatureSchemeMismatch","CodecError","ConfigError","CredentialError","CryptoError","DuplicateExtension","ExtensionError","InvalidLifetimeExtension","InvalidSignature","KeyPackageError","LibraryError","MandatoryExtensionsMissing","NoCiphersuitesSupplied","UnknownConfigError","UnsupportedCiphersuite","UnsupportedExtension","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","from","from","from","from","from","from","init","into","ne","source","to_owned","to_string","try_from","try_into","type_id","0","0","0","0","0","0","Commit","ConfirmationTag","DecryptionError","EncryptedGroupSecrets","PathSecret","PathSecretError","Welcome","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","encrypted_group_secrets","eq","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","errors","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","has_path","init","init","init","init","init","init","into","into","into","into","into","into","ne","ne","ne","ne","ne","new_member","path","proposals","public_group_state","secrets","serialize","serialize","serialize","source","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","0","CodecError","CryptoError","ProposalError","ProposalOrRefTypeError","UnknownValue","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","init","init","into","into","ne","source","source","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","0","Add","Add","AddProposal","AppAck","AppAck","AppAckProposal","ExternalInit","ExternalInit","ExternalInitProposal","GroupContextExtensionProposal","GroupContextExtensions","GroupContextExtensions","KeyPackageId","MessageRange","PreSharedKey","PreSharedKeyProposal","Presharedkey","Proposal","Proposal","Proposal","ProposalOrRef","ProposalOrRefType","ProposalType","ReInit","ReInitProposal","Reference","Reference","Reinit","Remove","Remove","RemoveProposal","Update","Update","UpdateProposal","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_supported","key_package","key_package","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","removed","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","PublicGroupState","VerifiablePublicGroupState","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","fmt","fmt","from","from","init","init","into","into","ne","signature","tls_deserialize","tls_serialize","tls_serialize","tls_serialized_len","tls_serialized_len","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unsigned_payload","ApplicationMessage","ApplicationMessage","Branch","Branch","BranchPsk","CredentialError","DecryptedMessage","External","External","ExternalPsk","Group","InvalidSignature","LeafIndex","LibraryError","MlsMessageIn","MlsMessageOut","PreSharedKeyId","PreSharedKeys","Preconfigured","ProcessedMessage","ProposalMessage","Psk","PskBundle","PskType","Reinit","Reinit","ReinitPsk","SenderRatchetConfiguration","StagedCommitMessage","TlsDeserializeTrait","TlsSerializeTrait","TlsSizeTrait","UnsupportedCredentialType","UnverifiedContextMessage","UnverifiedGroupMessage","UnverifiedMessage","UnverifiedPreconfiguredMessage","VerifiedExternalMessage","VerifiedMemberMessage","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_key_store_value","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","maximum_forward_distance","ne","ne","ne","ne","ne","ne","new","new","new","new","out_of_order_tolerance","psk","psk_epoch","psk_epoch","psk_group_id","psk_group_id","psk_id","psk_nonce","psks","psktype","secret","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_deserialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize","tls_serialize_detached","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","tls_serialized_len","to_key_store_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","ConfirmationKey","MembershipKey","ResumptionSecret","SenderDataSecret","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","codec","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","erased_serialize","erased_serialize","erased_serialize","erased_serialize","errors","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","serialize","serialize","serialize","serialize","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","CodecError","CodecError","Context","CryptoError","CryptoError","CryptoError","CryptoError","EncodingError","EncodingError","Epoch","ErrorState","ExporterError","HpkeError","Init","InvalidState","KeyNotFound","KeyScheduleError","LibraryError","MembershipKeyError","PskSecretError","TooManyKeys","UnsupportedCiphersuite","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","into","into","into","into","into","ne","ne","ne","ne","source","source","source","source","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","BinaryTreeError","CryptoError","DerivationError","DuplicateKeyPackage","KeyPackageRefNotInTree","LeafIndex","LibraryError","MissingKeyPackage","NodeTypeError","OutOfBounds","SenderError","TreeSync","TreeSyncDiffError","TreeSyncError","TreeSyncNodeError","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","erased_serialize","export_nodes","fmt","fmt","fmt","from","from","from","from","from","init","init","into","into","ne","node","serialize","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0","0","0","0","0","AsLeafError","AsParentError","LeafNode","LibraryError","MissingParentHashExtension","Node","NodeError","ParentHashError","ParentNode","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","eq","erased_serialize","fmt","fmt","fmt","from","from","init","init","into","into","ne","ne","serialize","source","tls_deserialize","tls_serialize","tls_serialized_len","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0"],"q":["openmls","","","","","","","","","","","","","openmls::ciphersuite","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::ciphersuite::ciphersuites","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::ciphersuite::hash_ref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::ciphersuite::signable","","","","","","","","","","","","","","openmls::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::config::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::credentialsopenmls::credentials::CredentialError","openmls::credentials::MlsCredentialType","","openmls::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::extensionsopenmls::extensions::Extension","","","","","","openmls::extensions::errorsopenmls::extensions::errors::ExtensionError","","","","","","","","","","openmls::framingopenmls::framing::ProcessedMessage","","","openmls::framing::UnverifiedContextMessage","","openmls::groupopenmls::group::InvalidMessageError","","","openmls::group::MlsGroupError","","","","","","","","","","","","","","","","openmls::group::MlsGroupState","openmls::group::PendingCommitState","","openmls::group::configopenmls::group::errorsopenmls::group::errors::CoreGroupError","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::group::errors::CreationProposalQueueError","","","openmls::group::errors::ExternalCommitError","","","","","","","","","","openmls::group::errors::InterimTranscriptHashError","","openmls::group::errors::InvalidMessageError","","","openmls::group::errors::MlsGroupError","","","","","","","","","","","","","","","","openmls::group::errors::ProposalQueueError","","openmls::group::errors::QueuedProposalError","","","openmls::group::errors::StageCommitError","","","openmls::group::errors::WelcomeError","","","","","","","","","","","","openmls::key_packages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::key_packages::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::key_packages::errors::KeyPackageError","","","","","","openmls::messages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::messages::PathSecretError","openmls::messages::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::messages::errors::ProposalError","","openmls::messages::proposalsopenmls::messages::proposals::Proposal","","","","","","","","openmls::messages::proposals::ProposalOrRef","","openmls::messages::public_group_state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::preludeopenmls::prelude::CredentialError","openmls::prelude::ProcessedMessage","","","openmls::prelude::Psk","","","openmls::prelude::UnverifiedContextMessage","","openmls::schedule","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::schedule::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::schedule::errors::ExporterError","","openmls::schedule::errors::KeyScheduleError","","openmls::schedule::errors::MembershipKeyError","","openmls::schedule::errors::PskSecretError","openmls::treesync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::treesync::TreeSyncError","","","","","","","openmls::treesync::node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","openmls::treesync::node::Node","","openmls::treesync::node::NodeError"],"d":["Ciphersuites for MLS","This config contains all structs, enums and functions to …","Credentials","OpenMLS Errors","Extensions","Message framing","Group APIs for MLS","Key Packages.","Serialization for key store objects.","MLS messages and message framing.","Single place, re-exporting the most used public functions. …","This module represents the key schedule as introduced in …","This module implements the ratchet tree component of MLS.","The <code>Ciphersuite</code> object encapsulates all the necessary …","","","Ciphersuite and algorithm definitions and conversions.","","","","","","","","","","","","Hash References","","","Get the name of this ciphersuite.","Create a new ciphersuite from the given <code>name</code>.","","This module defines traits used for signing and verifying …","Get the signature scheme of this ciphersuite.","","","","","","MLS ciphersuites.","","","","","","","","","","","","The default ciphersuite is the MTI.","","","","","","","","","","","","","","","","","","","","","","","A reference to an MLS object computed as an HKDF of the …","A reference to a key package. This value uniquely …","A reference to a proposal. This value uniquely identifies …","Get a reference to the hash reference’s value as slice.","","","","","","","","","","","","","","","","","","","Compute a new <code>HashReference</code> value for a <code>value</code>.","","","","","","","","","","","Get a reference to the hash reference’s value.","This type is used to prevent users of the trait from …","The <code>Signable</code> trait is implemented by all struct that are …","The type of the object once it’s signed.","This trait must be implemented by all structs that contain …","The verifiable trait must be implemented by any struct …","This trait must be implemented by all structs that contain …","Build a signed struct version from the payload struct.","Sign the payload with the given <code>id</code>.","A reference to the signature to be verified.","Return the unsigned, serialized payload that should be …","Return the unsigned, serialized payload that should be …","Verifies the payload against the given <code>credential</code>. The …","Verifies the payload against the given <code>credential</code>. The …","Verifies the payload against the given <code>SignatureKey</code>. The …","OpenMLS Configuration","","","Protocol Version","","","","","","Get the ciphersuite of the given name.","","","","","","","Get the default <code>KeyPackage</code> lifetime (in seconds).","","","","","","","","","","","","","Config errors","","","","","","","","","","Get the margin in which <code>KeyPackage</code> lifetimes are already …","","","","","Get a list of the supported cipher suites names.","Get a list of the supported cipher suites.","Get a list of the supported extension types.","Get a list of the supported proposal types.","Get a list of the supported protocol versions.","","","","","","","","Convert an integer to the corresponding protocol version.","","","","","","See the error’s module for more information.","Operation on incompatible cipher suites.","Operation on incompatible MLS versions.","Invalid configuration.","Library error","Ciphersuite is not supported by this configuration.","Unsupported, required extension type.","MLS version is not supported by this configuration.","Unsupported, required proposal type.","Signature scheme is not supported by this configuration.","","","","","","","","","","","","","","","","","","","","A <code>BasicCredential</code>","A <code>BasicCredential</code>","A `BasicCredential as defined in the MLS protocol spec:","Struct containing an X509 certificate chain, as per Spec.","Struct containing MLS credential data, where the data …","This struct contains a credential and the corresponding …","","Enum for Credential Types. We only need this for …","","","This enum contains the different available credentials.","","An X.509 <code>Certificate</code>","An X.509 <code>Certificate</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the <code>Credential</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new CredentialBundle from an identity and a …","Get the identity of a given credential.","","","","","","","","","","","","","","","","","","","Create a new <code>CredentialBundle</code> of the given credential type …","","","","","","","Get the public key contained in the credential.","Get the signature scheme used by the credential.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify a signature of a given payload against the public …","Verifies a signature issued by a <code>BasicCredential</code>. Returns …","","","","A wrapper struct for an error string. This can be used …","Generic error type that indicates unrecoverable errors in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A <code>CapabilitiesExtension</code>","A <code>Capabilities</code> extension as defined in the MLS protocol …","An extension can be one of the following elements.","Extension types","","A [<code>KeyIdExtension</code>]","External key ID extension.","A <code>LifetimeExtension</code>","","The lifetime extension holds a not before and a not after …","","A <code>ParentHashExtension</code>","Parent Hash Extension.","","A <code>RatchetTreeExtension</code>","Ratchet Tree Extension.","","A <code>RequiredCapabilitiesExtension</code>","Required Capabilities Extension.","","Get a reference to the <code>CapabilitiesExtension</code>. Returns an …","Get a reference to the <code>KeyIDExtension</code>. Returns an …","Get a reference to the <code>LifetimeExtension</code>. Returns an …","Get a reference to the <code>ParentHashExtension</code>. Returns an …","Get a reference to the <code>RatchetTreeExtension</code>. Returns an …","Get a reference to the <code>RequiredCapabilitiesExtension</code>. …","Get the value of the key id as byte slice.","","","","","","","","","","","","","","","","","Get a reference to the list of cipher suites in this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extension errors.","Returns the <code>ExtensionType</code>","Get a reference to the list of supported extensions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check whether an extension type is supported or not.","","","","","","","","Create a new capabilities extension with the given …","Create a new key identifier extension from a byte slice.","Create a new lifetime extensions with lifetime <code>t</code> (in …","Creates a new <code>ParentHashExtension</code> from a byte slice.","Build a new extension from a vector of <code>Node</code>s.","Creates a new <code>RequiredCapabilitiesExtension</code> from extension …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the <code>ExtensionType</code> from a u16. Returns an error if the …","","","","","","","","","","","","","","","","","","Get a reference to the list of versions in this extension.","","","","","","","Capabilities extension error. See …","See the error’s module for more information.","Error decoding or encoding an extension.","Configuration error. See <code>ConfigError</code> for details.","See <code>CryptoError</code> for details.","The provided extension list contains duplicate extensions.","Found a duplicate ratchet tree extension.","Capabilities extension is missing a version field.","Lifetime extension is expired.","See the error’s module for more information.","Invalid lifetime extensions.","Invalid capabilities extensions.","Invalid key package ID extensions.","Invalid parent hash extensions.","Invalid ratchet tree extensions.","The extension is malformed. See <code>InvalidExtensionError</code> for …","See the error’s module for more information.","Invalid extension type error.","Key package ID extension error. See <code>KeyPackageIdError</code> for …","See the error’s module for more information.","An unrecoverable error has occurred due to a bug in the …","Lifetime extension error. See <code>LifetimeExtensionError</code> for …","See the error’s module for more information.","Parent hash extension error. See <code>ParentHashError</code> for …","See the error’s module for more information.","Ratchet tree extension error. See <code>RatchetTreeError</code> for …","See the error’s module for more information.","Capabilities contains only unsupported ciphersuites.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Application message received through a ProcessedMessage.","Application message","Intermediate message that can be constructed either from a …","Unverified message from a group member","Encrypted message","Unified message type for incoming MLS messages.","Unified message type for outgoing MLS messages.","Plaintext message","Unverfied message from a preconfigured sender","Message that contains messages that are syntactically and …","Standalone proposal","Staged Commit","Contains an VerifiableMlsPlaintext and a Credential if it …","Part of UnverifiedContextMessage.","Partially checked and potentially decrypted message. Use …","Part of UnverifiedContextMessage.","External message, where all semantic checks on the framing …","Member message, where all semantic checks on the framing …","Wire format of MLS messages.","Returns the AAD.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the content type","Get the content type","Get the content type","Gets the correct credential from the message depending on …","Return the credential if there is one.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the epoch","Get the epoch","Returns the epoch.","","","","","","","","","","","","","","","","","","","","","","","","","Get the group ID","Get the group ID","","","","","","","","","","","","","","","","","","","","","","","","","Get the message and the sender and consume the …","Returns <code>true</code> if this is a handshake message and <code>false</code> …","Returns <code>true</code> if this is a handshake message and <code>false</code> …","Get a reference to the message.","","","Returns the sender","Returns the sender.","Get a reference to the sender.","","","","","","","","","","","Serializes the message to a byte vector. Returns …","Serializes the message to a byte vector. Returns …","","","","","","","","","","","","","","","","Tries to deserialize from a byte slice. Returns …","Tries to deserialize from a byte slice. Returns …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the wire format","Get the wire format","Get the wire format","","","","","","","All valid wire format policy combinations","An empty list of KeyPackages was provided.","Handshake messages must always be MlsCiphertext","Handshake messages must always be MlsCiphertext","Handshake messages must always be MlsPlaintext","Handshake messages must always be MlsPlaintext","The inner group state has changed and needs to be …","See <code>StageCommitError</code> for details","A commit contained an invalid proposal.","See <code>ConfigError</code> for details","See <code>CreateCommitError</code> for details","See <code>CredentialError</code> for details","See <code>CryptoError</code> for details.","Empty input. Additional detail is provided.","See the error’s module for more information.","Tried to use a group after being evicted from it.","Can’t create message because a pending proposal exists.","See <code>ExporterError</code> for details","Commit from an external joiner","Can’t clear an external commit, as the group can’t …","See <code>CoreGroupError</code> for details","Group epoch. Internally this is stored as a <code>u64</code>. The group …","See <code>CoreGroupError</code> for details","A group ID. The group ID is chosen by the creator of the …","The group is inactive because the member has been removed.","Defines what wire format is acceptable for incoming …","The incoming message’s wire format was not compatible …","<code>Enum</code> that indicates whether the inner group state has been …","The application message is invalid.","An invalid ciphertext was provided. The error returns the …","The message could not be processed.","See the error’s module for more information.","The given proposal is invalid.","The message’s signature is invalid.","Error performing key store operation.","An internal library error occurred. Additional detail is …","Mixed ciphertext wire format policy combination.","Mixed plaintext wire format policy combination.","Commit from a group member","A message with an invalid membership tag was received.","The confirmation tag is missing in the Commit message.","A message without a membership tag received.","Handshake messages can either be MlsCiphertext or …","A <code>MlsGroup</code> represents an CoreGroup with an easier, …","Specifies the configuration parameters for a <code>MlsGroup</code>","Builder for an <code>MlsGroupConfig</code>.","See the error’s module for more information.","<code>MlsGroupState</code> determines the state of an <code>MlsGroup</code>. The …","Couldn’t find a <code>CredentialBundle</code> in the <code>KeyStore</code> that …","Couldn’t find a <code>KeyPackageBundle</code> in the <code>KeyStore</code> that …","There is no pending commit that can be merged.","No signature key was available to verify the message …","The group state is in an opertaional state, where new …","Defines what wire format should be used for outgoing …","Pure ciphertext wire format policy.","Pure plaintext wire format policy.","There is currently a pending Commit that hasn’t been …","Can’t create a new commit while another commit is still …","Pending Commit state. Differentiates between Commits …","See the error’s module for more information.","See <code>PendingProposalsError</code> for details","The inner group state hasn’t changed and doesn’t need …","Tried to access a poisoned <code>CredentialBundle</code>. See …","A ProposalStore can store the standalone proposals that …","A queued Add proposal","Alternative representation of a Proposal, where the sender …","See <code>QueuedProposalError</code> for details.","A queued PresharedKey proposal","A queued Remove proposal","A queued Update proposal","An empty list of indexes was provided.","Contains the changes from a commit to the group state.","An error occured during TLS encoding/decoding.","See <code>TreeSyncError</code> for details","Could not retrieve credential for the given sender.","See the error’s module for more information.","See <code>UseAfterEviction</code> for details","See <code>ValidationError</code> for details","See <code>WelcomeError</code> for details.","Defines what wire format is desired for outgoing handshake …","The epoch does not match the group’s epoch.","Wrong group ID.","Gets the AAD used in the framing","Adds members to the group","Returns a reference to the proposal","Returns the Add proposals that are covered by the Commit …","Returns the group ID as a byte slice.","Returns the group epoch as a <code>u64</code>.","Returns the authentication secret","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the group’s ciphersuite","Sets the <code>group_state</code> to <code>MlsGroupState::Operational</code>, thus …","","","","","","","","","Create a Commit message that covers the pending proposals …","Configuration module for <code>MlsGroup</code> configurations.","Gets the configuration","Creates an application message. Returns …","Returns own credential. If the group is inactive, it …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the epoch","","","","","","","","","","","","","","MLS MlsGroup errors","MLS CoreGroup errors","Exports the public group state.","Export the Ratchet Tree","Exports a secret from the current epoch","","","","","","","","","","","","","","","","","","","","","","","","Creates a group ID from a byte slice.","Returns a resumption secret for a given epoch. If no …","Get group ID","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether the own client is still a member of the …","Join an existing group through an External Commit. The …","Get the <code>KeyPackageRef</code> of the client owning this group.","Leave the group","Loads the state from persisted state","Gets the current list of members","Merges the pending <code>StagedCommit</code> and, if the merge was …","Merge a StagedCommit into the group after inspection. As …","","","","","Creates a new group from scratch with only the creator as …","Creates a new group from a <code>Welcome</code> message","This function is used to parse messages from the DS. It …","","Returns a reference to the <code>StagedCommit</code> of the most …","Returns an <code>Iterator</code> over staged proposals.","This processing function does most of the semantic …","Processing functions of an <code>MlsGroup</code> for incoming messages.","Returns the <code>Proposal</code> as a reference","Creates proposals to add members to the group","Creates proposals to remove members from the group","Creates a proposal to update the own leaf node","Returns a reference to the proposal","Returns the PresharedKey proposals that are covered by the …","Removes members from the group","Returns a reference to the proposal","Returns the Remove proposals that are covered by the …","Persists the state","Returns <code>true</code> if the member was removed through a proposal …","Updates the own leaf node","Returns a reference to the sender","Returns a reference to the sender","Returns a reference to the sender","Returns a reference to the sender","Returns the <code>Sender</code> as a reference","","","","","","","","","Sets the AAD used in the framing","Sets the configuration","Returns <code>true</code> if the internal state has changed and needs …","Stores a standalone proposal in the internal ProposalStore","","","","","","","","","","","Returns the group ID as a byte vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the proposal","Returns the Update proposals that are covered by the …","","","","","","","","","","","","","","","","","","","","","","","All valid wire format policy combinations","Handshake messages must always be MlsCiphertext","Handshake messages must always be MlsCiphertext","Handshake messages must always be MlsPlaintext","Handshake messages must always be MlsPlaintext","Defines what wire format is acceptable for incoming …","Mixed ciphertext wire format policy combination.","Mixed plaintext wire format policy combination.","Handshake messages can either be MlsCiphertext or …","Specifies the configuration parameters for a <code>MlsGroup</code>","Builder for an <code>MlsGroupConfig</code>.","Defines what wire format should be used for outgoing …","Pure ciphertext wire format policy.","Pure plaintext wire format policy.","Defines what wire format is desired for outgoing handshake …","","","","","","","","","","","","","","","","","","","","","Finalizes the builder and retursn an <code>[MlsGroupConfig</code>].","Returns a builder for <code>MlsGroupConfig</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a reference to the wire format policy’s incoming …","","","","","","","","","","","","","","","","","","","","","Get the <code>MlsGroupConfig</code> max past epochs.","Sets the <code>max_past_epochs</code> property of the MlsGroupConfig. …","","","Creates a new builder with default values.","Creates a new wire format policy from an …","Get the <code>MlsGroupConfig</code> number of resumption secrets.","Sets the <code>number_of_resumption_secrets</code> property of the …","Get a reference to the wire format policy’s outgoing …","Get the <code>MlsGroupConfig</code> padding size.","Sets the <code>padding_size</code> property of the MlsGroupConfig.","Get the <code>MlsGroupConfig</code> sender ratchet configuration.","Sets the <code>sender_ratchet_configuration</code> property of the …","","","","","Set the wire format policy’s incoming wire format policy.","Set the wire format policy’s outgoing wire format policy.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the <code>MlsGroupConfig</code> boolean flag that indicates whether …","Sets the <code>use_ratchet_tree_extension</code> property of the …","Get the <code>MlsGroupConfig</code> wire format policy.","Sets the <code>wire_format</code> property of the MlsGroupConfig.","An empty list of KeyPackages was provided.","Couldn’t fit a <code>u32</code> into a <code>usize</code>.","Couldn’t fit a <code>u32</code> into a <code>usize</code>.","The Commit tried to remove self from the group. This is …","Ciphersuites in the Welcome message and the corresponding …","TLS (de)serialization error occurred.","Tls (de)serialization error occurred.","Tls (de)serialization error occurred.","Tls (de)serialization error occurred.","TLS (de)serialization error occurred.","See <code>StageCommitError</code> for details","Error creating external commit.","A commit contained an invalid proposal.","See <code>ConfigError</code> for details","See <code>ConfigError</code> for details.","See <code>ConfigError</code> for details.","See <code>ConfigError</code> for details.","The computed confirmation tag does not match the expected …","Confirmation tag is invalid.","Confirmation Tag is missing.","See the error’s module for more information.","See <code>CreateCommitError</code> for details","See the error’s module for more information.","See <code>CreateCommitError</code> for details.","See the error’s module for more information.","See <code>CredentialError</code> for details","See <code>CredentialError</code> for details.","See <code>CryptoError</code> for details.","See <code>CryptoError</code> for details.","See <code>CryptoError</code> for details.","See <code>CryptoError</code> for details.","See <code>CryptoError</code> for details.","Found two add proposals with the same identity.","Duplicate remove proposals for the same member.","Found two add proposals with the same HPKE public key.","Found two add proposals with the same signature key.","Empty input. Additional detail is provided.","See the error’s module for more information.","Couldn’t stage Commit. The epoch of the group context …","Tried to use a group after being evicted from it.","Identity of the add proposal already existed in tree.","HPKE public key of the add proposal already existed in …","HPKE public key of the update proposal already existed in …","Signature key of the add proposal already existed in tree.","Signature key of the update proposal already existed in …","Can’t create message because a pending proposal exists.","See <code>ExporterError</code> for details","See the error’s module for more information.","See <code>ExporterError</code> for details.","See <code>ExtensionError</code> for details.","See <code>ExtensionError</code> for details.","See <code>ExtensionError</code> for details.","See the error’s module for more information.","Can’t clear an external commit, as the group can’t …","See <code>Externaallow(lint)</code> for details.","See the error’s module for more information.","See <code>ProposalValidationError</code> for details.","See the error’s module for more information.","See <code>FramingValidationError</code> for details.","See <code>CoreGroupError</code> for details","See <code>CoreGroupError</code> for details","Unable to decrypt the GroupInfo.","The incoming message’s wire format was not compatible …","External Committer used the wrong index.","See the error’s module for more information.","See <code>InterimTranscriptHashError</code> for details.","See <code>InterimTranscriptHashError</code> for details.","The application message is invalid.","An invalid ciphertext was provided. The error returns the …","The signature on the GroupInfo is not valid.","Found inline Add or Update proposals.","The message could not be processed.","See the error’s module for more information.","The given proposal is invalid.","The signature over the given public group state is invalid.","Invalid ratchet tree in Welcome message.","Remove proposal targets the wrong group member.","The message’s signature is invalid.","No joiner secret found in the Welcome message.","The requested key length is not supported (too large).","See <code>KeyPackageError</code> for details.","See <code>KeyPackageError</code> for details.","See <code>KeyPackageError</code> for details.","An error occurred in the key schedule.","An error occurred in the key schedule.","An error occurred in the key schedule.","An error occurred in the key schedule.","Error performing key store operation.","An internal library error occurred. Additional detail is …","A LibraryError occurred.","An unrecoverable error has occurred due to a bug in the …","An unrecoverable error has occurred due to a bug in the …","An unrecoverable error has occurred due to a bug in the …","A LibraryError occurred.","An unrecoverable error has occurred due to a bug in the …","A LibraryError occurred.","A message with an invalid membership tag was received.","The confirmation tag is missing in the Commit message.","Confirmation tag is missing.","The sender key package is missing.","Couldn’t find KeyPackageBundle corresponding to own …","A message without a membership tag received.","Membership tag is missing.","No key package provided to apply own commit.","The proposal queue is missing a proposal for the commit.","No ratchet tree available to build initial tree after …","No ratchet tree available to build initial tree.","See <code>MlsCiphertextError</code> for details.","See the error’s module for more information.","See <code>MlsPlaintextError</code> for details.","Multiple ExternalInit proposal found.","Found multiple inline Remove proposals.","A Message sent by a sender with type NewMember can only be …","No ExternalInit proposal found.","Couldn’t find a <code>CredentialBundle</code> in the <code>KeyStore</code> that …","Couldn’t find a <code>KeyPackageBundle</code> in the <code>KeyStore</code> that …","Parent hash extension is missing.","External Commit has to contain a path.","There is no pending commit that can be merged.","No signature key was available to verify the message …","No signature key was found.","An application message was sent from an external sender.","The given MLS Plaintext was not a Proposal.","The given MLS Plaintext was not a Proposal.","Can’t process a commit created by the owner of the …","Missing own key to apply proposal.","Couldn’t create the commit because there’s no key to …","The parent hash verification failed.","Parent hash values don’t match.","Unable to verify the key package signature.","Can’t create a new commit while another commit is still …","See the error’s module for more information.","See <code>PendingProposalsError</code> for details","MlsPlaintext signature is invalid.","Tried to access a poisoned <code>CredentialBundle</code>. See …","See <code>QueuedProposalError</code> for details.","See <code>QueuedProposalError</code> for details.","A ProposalError occurred.","Not all proposals in the Commit were found locally.","Not all proposals in the Commit were found locally.","See the error’s module for more information.","See <code>ProposalQueueError</code> for details.","See the error’s module for more information.","See <code>ProposalValidationError</code> for details.","A PskSecret error occurred.","A PskSecret error occured.","See the error’s module for more information.","See <code>QueuedProposalError</code> for details.","See <code>QueuedProposalError</code> for details.","Found an ExternalInit proposal among the referenced …","An empty list of indexes was provided.","Couldn’t find the member to remove.","Unable to determine commit path.","The sender of a Commit tried to remove themselves.","Tried to stage a commit to a group we are not a part of.","Sender error","Sender error","Sender error","See the error’s module for more information.","See <code>StageCommitError</code> for details.","An error occured during TLS encoding/decoding.","Error serializing","See <code>TreeError</code> for details.","The computed tree hash does not match the one in the …","The computed tree hash does not match the one in the …","See <code>TreeKemError</code> for details.","See <code>TreeSyncDiffError</code> for details.","An error occurred while adding our own leaf to the new …","See <code>TreeSyncError</code> for details","See <code>TreeSyncError</code> for details.","An error occurred while importing the new tree.","An error occurred while importing the new tree.","Application messages must always be encrypted.","An unknown error occurred.","The sender could not be matched to a member of the group.","The sender could not be matched to a member of the group.","The remove proposal referenced a non-existing member.","Could not retrieve credential for the given sender.","Sender not found in tree.","Sender not found in tree.","The Welcome message uses an unsupported MLS version.","We don’t support the version of the group we are trying …","The identity of the update proposal did not match the …","See the error’s module for more information.","See <code>UseAfterEviction</code> for details","See <code>ValidationError</code> for details","See <code>ValidationError</code> for details.","Error verifying <code>PublicGroupState</code>.","See the error’s module for more information.","See <code>WelcomeError</code> for details.","See <code>WelcomeError</code> for details.","API misuse. Only proposals can end up in the proposal queue","The epoch does not match the group’s epoch.","Message epoch differs from the group’s epoch.","Wrong group ID.","Message group ID differs from the group’s group ID.","stage_commit was called with an MlsPlaintext that is not a …ey Package.","Contains a <code>KeyPackage</code>, the correponding <code>HpkePrivateKey</code> and …","Payload of the <code>KeyPackageBundle</code>.","The unsigned payload of a key package. Any modification …","Add (or replace) an extension to the KeyPackage.","Add (or replace) an extension to the KeyPackage.","","","","","","","","","Check whether the this key package supports all the …","Get the <code>CiphersuiteName</code>.","","","","","","","Get a reference to the credential.","","","","","","","","","","","","","","","","","","","","","Key Package errors","Get extensions of the KeyPackage.","Get a reference to the extensions of this key package.","","","","","","","","","","Creates a new <code>KeyPackageBundlePayload</code> from a given …","","","","Compute the <code>KeyPackageRef</code> of this <code>KeyPackage</code>.","","","","","","","","","Get the ID of this key package as byte slice. Returns an …","Get a reference to the <code>KeyPackage</code>.","Get a reference to the <code>leaf_secret</code>.","","Create a new <code>KeyPackageBundle</code> with a fresh <code>HpkeKeyPair</code>. …","Create a new <code>KeyPackageBundle</code> for the given <code>ciphersuite</code>, …","Create a new <code>KeyPackageBundle</code> with","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify that this key package is valid:","The list of ciphersuites is not consistent with the …","The ciphersuite does not match the signature scheme.","TLS (de)serialization error occurred.","See <code>ConfigError</code> for details.","See <code>CredentialError</code> for details.","See <code>CryptoError</code> for details.","Duplicate extensions are not allowed.","See <code>ExtensionError</code> for details.","The lifetime extension of the key package is not valid.","The key package signature is not valid.","See the error’s module for more information.","A LibraryError occurred.","A mandatory extension is missing in the key package.","Creating a new key package requires at least one …","An unknown configuration error occurred.","The requested ciphersuite is not supported.","The key package does not support all required extensions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Commit.","Confirmation tag field of MlsPlaintext. For type safety …","Error decrypting PathSecret.","EncryptedGroupSecrets","PathSecret","See the error’s module for more information.","Welcome Messages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ciphertext of the encrypted group secret","","","","","","","","","Message errors","","","","","","","","","","","","","","","Returns <code>true</code> if the commit contains an update path. <code>false</code> …","","","","","","","","","","","","","","","","","","Key package refrence of the new member","Returns the update path of the Commit if it has one.","Proposal errors","This module contains the types and implementations for the …","Get a reference to the encrypted group secrets in this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","TLS (de)serialization error occurred.","See <code>CryptoError</code> for details.","See the error’s module for more information.","See the error’s module for more information.","Invalid value for ProposalOrRefType was found.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add Proposal.","","","TODO: #291 Implement AppAck","","","TODO: #556 Implement ExternalInit","Group Context Extensions Proposal","","","TODO: This is going away in …","TODO: #291 Implement AppAck","","Preshared Key proposal 11.1.4 struct { PreSharedKeyID psk; …","","Proposal","","","Type of Proposal, either by value or by reference","11.2 Commit","MLS Proposal Types","","ReInit proposal 11.1.5 struct { opaque group_id&lt;0..255&gt;; …","","","","","","Remove Proposal","","","Update Proposalheck whether a proposal type is supported or not.","Get a reference to the key package in the proposal.","Get a reference to the key package in the proposal.","","","","","","","","","","","","","Get the <code>KeyPackageRef</code> index in this proposal.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","PublicGroupState as defined in the MLS specification as …","The <code>VerifiablePublicGroupState</code> represents a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Application message received through a ProcessedMessage.","Application message","","","Branch PSK","","Intermediate message that can be constructed either from a …","","","External PSK.","Unverified message from a group member","","Index type to index the leaves in the binary tree","","Unified message type for incoming MLS messages.","Unified message type for outgoing MLS messages.","A <code>PreSharedKeyID</code> is used to uniquely identify the PSKs …","<code>PreSharedKeys</code> is a vector of <code>PreSharedKeyID</code>s. struct { …","Unverfied message from a preconfigured sender","Message that contains messages that are syntactically and …","Standalone proposal","PSK enum that can contain the different PSK types","Contains the secret part of the PSK as well as the public …","Type of PSK.","","","ReInit PSK.","Stores the configuration parameters for sender ratchets.","Staged Commit","The <code>Deserialize</code> trait defines functions to deserialize a …","The <code>Serialize</code> trait provides functions to serialize a …","The <code>Size</code> trait needs to be implemented by any struct that …","","Contains an VerifiableMlsPlaintext and a Credential if it …","Part of UnverifiedContextMessage.","Partially checked and potentially decrypted message. Use …","Part of UnverifiedContextMessage.","External message, where all semantic checks on the framing …","Member message, where all semantic checks on the framing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a reference to the sender ratchet configuration’s …","","","","","","","Create a new <code>ExternalPsk</code> from a PSK ID","Create a new bundle","Create a new <code>PreSharedKeyID</code>","Create a new configuration","Get a reference to the sender ratchet configuration’s …","Return the PSK","Return the <code>GroupEpoch</code>","Return the <code>GroupEpoch</code>","Return the <code>GroupId</code>","Return the <code>GroupId</code>","Return the PSK ID","Return the PSK nonce","Return the <code>PreSharedKeyID</code>s","Return the type of the PSK","Return the secret","","","","","","","","","This function deserializes the <code>bytes</code> from the provided a …","","","","","","","Serialize <code>self</code> and write it to the <code>writer</code>. The function …","","","","","","","Serialize <code>self</code> and return it as a byte vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The confirmation key is used to calculate the …","The membership key is used to calculate the <code>MembershipTag</code>.","A secret used in cross-group operations.","A key that can be used to derive an <code>AeadKey</code> and an …","","","","","","","","","","","TLS codec implementation for preshared keys.","","","","","","","","","","","","","","","","","","","","","Key schedule errors.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","TLS (de)serialization error occurred.","TLS (de)serialization error occurred.","Expected to be in a state where the context is added.","See <code>CryptoError</code> for details.","See <code>CryptoError</code> for details.","See <code>CryptoError</code> for more details.","See <code>CryptoError</code> for details.","Error while encoding public group state.","Error serializing the PSK label.","Expected to be in epoch state.","See the error’s module for more information.","See the error’s module for more information.","Error while setting up HPKE keypair for external commit.","Expected to be in initial state.","The requested operation is not valid on the key schedule …","The PSK could not be found in the key store.","See the error’s module for more information.","An unrecoverable error has occurred due to a bug in the …","See the error’s module for more information.","See the error’s module for more information.","More than 2^16 PSKs were provided.","The ciphersuite of the given public group state is not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An error occurred during an operation on the underlying …","See <code>CryptoError</code> for details.","Error while deriving commit secret for new tree.","Found two KeyPackages with the same public key.","The given <code>KeyPackageRef</code> is not in the tree.","Index type to index the leaves in the binary tree","An inconsistency in the internal state of the tree was …","Couldn’t find our own key package in this tree.","We found a node with an unexpected type.","The given <code>LeafIndex</code> is outside of the tree.","Sender error","The <code>TreeSync</code> struct holds an <code>MlsBinaryTree</code> instance, which …","An error while trying to apply a diff.","See the error’s module for more information.","An error occurred during an operation on the underlying …","","","","","","","","","","","","","","","","Returns the nodes in the tree ordered according to the …","","","","","","","","","","","","","","This module contains types and methods around the <code>Node</code> …","","","","","","","","","","","","","","","","","","This is not a leaf node.","This is not a parent node.","","An unrecoverable error has occurred during a <code>Node</code> …","The given key package does not have a parent hash …","Container enum for leaf and parent nodes.","See the error’s module for more information.","Error while computing parent hash.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,0,5,0,0,0,6,5,7,5,7,7,7,7,0,8,8,0,8,9,8,9,8,9,9,8,9,8,8,8,9,9,8,9,8,9,8,9,8,9,8,9,8,0,9,8,8,9,8,9,8,9,8,9,9,8,9,8,9,9,9,9,9,8,8,8,9,8,8,9,8,8,9,8,9,8,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,12,0,0,0,0,0,0,13,13,0,13,11,12,13,11,14,12,15,16,17,13,11,14,12,15,16,17,13,11,14,12,15,16,17,13,11,14,12,15,16,17,17,13,11,14,12,15,16,17,13,11,14,12,15,16,17,11,14,12,15,16,17,13,11,14,12,15,16,17,13,11,14,12,15,16,11,14,12,15,16,17,13,13,11,14,12,15,16,17,13,13,11,14,12,15,15,16,17,17,17,15,13,11,14,12,15,16,17,13,11,14,12,15,16,17,13,14,12,15,17,11,14,12,15,16,17,15,15,13,11,15,16,11,15,16,11,15,16,17,13,11,14,12,15,16,17,13,13,11,11,14,12,15,16,17,13,11,14,12,15,16,17,13,11,14,12,15,16,17,15,16,18,19,20,0,0,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,21,22,22,21,22,22,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,22,23,24,0,0,0,23,24,0,24,23,0,23,24,0,23,24,0,23,24,0,23,24,24,24,24,24,24,25,26,25,27,28,29,30,23,24,26,25,27,28,29,30,23,24,26,26,25,27,28,29,30,23,24,26,25,27,28,29,30,23,24,23,24,26,25,27,28,29,30,26,25,27,28,29,30,23,24,26,25,27,28,29,30,23,24,26,25,27,28,29,30,23,24,26,25,27,28,29,30,23,24,26,25,27,28,29,30,23,24,26,25,27,28,29,30,23,24,0,24,26,26,25,27,28,29,30,23,24,26,25,27,28,29,30,23,24,23,26,25,27,28,29,30,23,24,26,25,27,28,29,30,23,24,23,26,25,27,28,29,30,24,26,25,27,28,29,30,23,24,26,25,27,28,29,30,23,24,26,25,27,28,29,30,23,24,26,25,27,28,29,30,23,24,26,25,27,28,29,30,23,24,26,25,27,28,29,30,23,24,26,25,27,28,29,30,23,23,24,26,25,27,28,29,30,23,24,26,25,27,28,29,30,23,24,26,31,32,33,34,35,36,37,0,37,37,37,38,37,39,40,0,40,39,41,42,43,37,0,37,37,0,37,37,0,37,0,37,0,39,37,40,39,41,42,43,38,37,40,39,41,42,43,38,37,40,39,41,42,43,38,37,40,39,41,42,43,38,37,40,39,41,42,43,38,37,40,39,41,42,43,38,37,40,39,41,42,43,38,37,40,39,41,42,43,38,37,37,40,40,39,39,41,41,42,42,43,43,38,38,37,37,37,37,37,37,37,37,37,37,37,40,39,41,42,43,38,37,40,39,41,42,43,38,37,40,39,41,42,43,38,37,37,40,39,41,42,43,38,37,40,39,41,42,43,38,37,40,39,41,42,43,38,37,40,39,41,42,43,38,37,40,39,41,42,43,38,37,40,39,41,42,43,38,44,45,46,47,48,49,50,51,52,53,0,54,0,55,56,0,0,56,55,0,54,54,0,0,0,0,0,0,0,57,58,55,59,60,61,62,63,64,57,54,65,56,58,55,59,60,61,62,63,64,57,54,65,56,63,64,56,63,64,56,58,63,64,58,57,58,55,59,60,61,62,63,64,57,54,65,56,58,55,59,60,61,62,63,64,57,54,65,56,56,58,55,59,60,61,62,63,64,57,54,65,56,63,64,57,64,65,56,56,63,64,57,54,65,56,58,55,59,60,61,62,63,63,64,57,54,65,56,56,63,64,58,55,59,60,61,62,63,64,57,54,65,56,58,55,59,60,61,62,63,64,57,54,65,56,65,63,64,65,64,65,58,57,65,56,63,64,56,63,64,56,63,64,56,63,64,63,64,56,58,55,59,60,61,62,63,64,57,54,65,56,63,64,58,55,59,60,61,62,63,64,57,54,65,56,58,55,59,60,61,62,63,64,57,54,65,56,58,63,64,66,67,68,69,70,71,0,72,73,74,73,74,75,76,76,77,77,77,77,77,0,78,79,77,80,77,77,0,76,0,81,0,77,0,76,76,77,0,76,76,77,77,0,0,80,76,76,76,73,0,0,0,0,0,77,77,77,77,81,0,0,0,81,77,0,0,77,75,77,0,0,0,77,0,0,0,72,0,77,77,76,0,77,77,77,0,76,76,82,82,83,84,85,71,82,83,86,87,88,80,81,82,75,89,90,84,85,71,83,86,87,88,80,81,82,75,89,90,84,85,71,82,82,75,90,85,71,75,90,85,71,82,0,82,82,82,89,83,86,87,88,80,81,82,75,89,90,84,85,71,83,86,87,88,80,81,82,75,89,90,84,85,71,80,81,89,90,84,85,71,83,86,87,88,80,81,82,75,89,90,84,85,71,82,75,89,90,85,71,80,81,82,89,90,84,85,71,0,0,82,82,82,80,81,82,75,89,90,84,85,71,83,86,87,88,80,81,82,75,89,90,84,84,85,71,85,82,82,85,71,83,86,87,88,80,81,82,75,89,90,84,85,71,83,86,87,88,80,81,82,75,89,90,84,85,71,82,82,82,82,82,82,82,82,89,90,85,71,82,82,82,71,82,82,82,0,90,82,82,82,88,84,82,86,84,82,84,82,83,86,87,88,90,80,81,82,89,90,84,85,71,82,82,82,82,85,71,85,71,85,71,75,90,85,71,85,83,86,87,88,80,81,82,75,89,90,84,85,71,83,86,87,88,80,81,82,75,89,90,84,85,71,83,86,87,88,80,81,82,75,89,90,84,85,71,87,84,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,0,73,74,73,74,0,0,0,73,0,0,0,0,0,0,113,114,73,74,115,116,117,118,119,120,113,114,73,74,115,116,117,118,119,120,114,113,113,73,74,115,113,73,74,115,113,114,115,113,114,73,74,115,116,116,117,117,118,118,119,119,120,120,113,114,73,74,115,116,117,118,119,120,113,73,74,115,113,114,73,74,115,116,117,118,119,120,113,73,74,115,113,73,74,115,113,73,74,115,113,114,73,74,115,116,117,118,119,120,115,113,114,73,74,115,116,117,118,119,120,113,114,73,74,115,116,117,118,119,120,113,114,113,115,114,115,113,114,115,113,114,113,114,113,73,74,115,115,115,113,73,74,115,113,114,73,74,115,116,117,118,119,120,113,114,73,74,115,116,117,118,119,120,113,114,73,74,115,116,117,118,119,120,113,114,113,114,72,121,122,123,124,125,124,126,127,128,76,126,76,77,125,124,126,124,127,127,0,77,0,125,0,77,125,77,125,124,126,128,129,129,129,129,77,0,127,78,129,129,129,129,129,79,77,0,125,125,124,126,0,77,125,0,125,0,125,77,76,124,77,127,0,125,124,76,76,124,130,77,0,76,126,124,130,76,124,131,125,124,126,125,124,126,127,77,77,125,124,126,127,132,121,122,76,76,133,124,125,76,133,127,127,124,126,125,0,125,130,130,130,130,77,77,127,130,77,77,125,133,121,122,125,127,123,124,127,127,77,0,77,127,77,124,126,132,121,122,0,125,0,125,125,124,0,77,125,130,72,121,127,121,127,125,121,122,0,125,77,132,125,124,126,125,125,126,77,125,124,126,133,124,133,129,129,76,124,126,124,126,129,0,77,77,125,126,0,77,125,132,76,133,76,133,127,77,72,78,79,76,125,124,126,127,123,131,132,121,122,133,129,130,128,77,72,78,79,76,125,124,126,127,123,131,132,121,122,133,129,130,128,77,72,78,79,76,125,124,126,127,123,131,132,121,122,133,129,130,128,77,72,78,79,76,125,124,126,127,123,131,132,121,122,133,129,130,128,77,72,78,79,76,125,124,126,127,123,131,132,121,122,133,129,130,128,77,72,78,79,76,125,124,126,127,123,131,132,121,122,133,129,130,128,77,72,78,79,76,125,124,126,127,123,131,132,121,122,133,129,130,128,77,72,78,79,76,125,124,126,127,123,131,132,121,122,133,129,130,128,77,77,72,72,78,78,79,79,76,76,125,125,124,124,126,126,127,127,123,123,131,131,132,132,121,121,122,122,133,133,129,129,130,130,128,128,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,72,78,79,76,76,76,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,124,124,124,124,124,124,124,124,124,124,124,126,126,126,126,126,126,126,126,126,126,127,127,127,123,131,132,132,132,132,121,121,122,122,122,133,129,130,128,128,128,77,72,78,79,76,125,124,126,127,123,131,132,121,122,133,129,130,128,77,72,78,79,76,125,124,126,127,123,131,132,121,122,133,129,130,128,77,76,125,124,126,127,132,121,122,128,77,72,78,79,76,125,124,126,127,123,131,132,121,122,133,129,130,128,77,72,78,79,76,125,124,126,127,123,131,132,121,122,133,129,130,128,77,72,78,79,76,125,124,126,127,123,131,132,121,122,133,129,130,128,77,72,78,79,76,125,124,126,127,123,131,132,121,122,133,129,130,128,77,72,78,79,76,125,124,126,127,123,131,132,121,122,133,129,130,128,77,72,78,79,76,125,124,126,127,123,131,132,121,122,133,129,130,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,0,0,0,0,197,198,197,198,199,200,197,198,199,200,199,199,198,199,200,198,199,200,199,197,198,199,200,197,198,199,200,198,199,200,197,198,199,200,198,199,198,199,200,0,198,199,198,199,200,197,197,198,198,199,200,197,200,199,200,199,197,198,199,200,197,198,199,200,199,200,200,198,200,200,200,198,199,200,199,199,198,199,198,199,200,198,199,200,197,198,199,200,197,198,199,200,197,198,199,200,197,198,199,199,201,201,201,201,201,201,201,201,201,201,0,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,202,203,204,205,206,207,0,0,208,0,0,0,0,209,210,211,212,213,208,209,210,211,212,213,208,209,210,211,212,208,209,210,211,212,208,209,210,211,212,213,208,209,210,211,212,213,208,211,212,213,209,210,211,212,213,208,210,209,210,211,212,208,211,212,213,0,209,210,211,212,213,208,208,209,210,211,212,213,208,208,211,209,210,211,212,213,208,209,210,211,212,213,208,209,210,211,212,208,210,211,0,0,209,211,212,213,208,209,210,211,212,213,209,210,211,212,213,209,210,211,212,213,209,210,211,212,208,208,209,210,211,212,213,208,209,210,211,212,213,208,209,210,211,212,213,208,214,215,215,0,0,216,215,216,215,216,215,216,215,216,215,216,215,216,215,216,215,216,215,215,216,216,215,215,215,216,215,216,215,216,215,215,216,215,216,215,216,215,216,215,216,215,216,217,218,219,220,0,219,220,0,219,220,0,0,219,220,0,0,220,0,219,0,221,222,0,0,0,220,0,221,222,219,219,220,0,219,220,0,219,221,222,220,223,224,225,226,227,228,229,230,231,232,219,221,222,220,223,224,225,226,227,228,229,230,231,232,219,221,222,220,223,224,225,226,227,228,229,230,231,232,219,221,222,220,223,224,225,226,227,228,229,230,231,232,219,221,222,220,223,224,225,226,227,228,229,230,231,232,219,221,222,220,223,224,225,226,227,228,229,230,231,232,219,221,222,220,223,224,225,226,227,228,229,230,231,232,219,221,222,220,223,224,225,226,227,228,229,230,231,232,219,221,222,220,223,224,225,226,227,228,229,230,231,232,219,221,222,220,223,224,225,226,227,228,229,230,231,232,219,221,222,220,223,224,225,226,227,228,229,230,231,232,219,221,222,220,223,224,225,226,227,228,228,229,230,231,232,219,221,222,220,223,224,225,226,227,228,229,230,231,232,219,221,222,220,223,224,225,226,227,228,229,230,231,232,219,223,224,222,220,223,224,225,226,227,228,229,230,231,232,225,219,221,222,220,223,224,225,226,227,228,229,230,231,232,219,221,222,220,223,224,225,226,227,228,229,230,231,232,219,221,222,220,223,224,225,226,227,228,229,230,231,232,219,221,222,220,223,224,225,226,227,228,229,230,231,232,219,221,222,220,223,224,225,226,227,228,229,230,231,232,219,219,221,221,222,220,223,224,225,226,227,228,229,230,231,232,219,221,222,220,223,224,225,226,227,228,229,230,231,232,219,221,222,220,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,0,0,243,244,243,244,244,244,243,244,243,244,243,244,243,243,244,243,244,243,244,243,244,243,244,244,243,244,243,244,244,243,244,243,244,243,244,244,0,54,245,246,0,0,0,245,246,0,55,13,0,13,0,0,0,0,55,0,54,0,0,0,245,246,0,0,54,0,0,0,13,0,0,0,0,0,0,245,247,248,249,250,246,251,252,253,245,247,248,249,250,246,251,252,253,245,247,249,250,246,251,253,245,247,249,250,246,251,253,253,245,247,248,249,250,246,251,252,253,245,247,248,249,250,246,251,252,253,245,247,248,249,250,246,251,253,245,247,248,249,250,246,251,252,253,245,247,249,250,246,251,253,245,247,248,249,250,246,251,253,245,247,249,250,246,251,253,245,245,247,248,249,250,246,251,252,253,248,245,247,249,250,246,251,245,247,248,249,250,246,251,252,253,245,247,248,249,250,246,251,252,253,253,247,249,250,246,251,253,247,248,251,253,253,251,249,250,249,250,247,251,252,251,248,245,247,248,249,250,246,251,253,254,245,247,249,250,251,252,255,245,247,249,250,251,252,255,256,245,247,249,250,251,252,248,245,247,249,250,246,251,253,245,245,247,248,249,250,246,251,252,253,245,247,248,249,250,246,251,252,253,245,247,248,249,250,246,251,252,253,18,66,67,68,257,258,259,69,70,0,0,0,0,260,261,262,263,260,261,262,263,262,262,0,260,261,262,263,260,261,262,263,260,261,262,263,260,261,262,263,260,261,262,263,0,260,261,262,263,260,261,262,263,260,261,262,263,260,261,262,263,260,261,262,263,262,260,261,262,263,260,261,262,263,260,261,262,263,264,265,266,267,264,268,265,267,268,266,0,0,267,266,267,268,0,267,0,0,268,267,266,267,264,268,265,266,267,264,268,265,266,267,264,268,265,266,267,264,268,265,266,267,264,268,265,266,267,264,268,265,266,267,264,268,265,266,267,264,268,265,266,266,267,267,264,264,268,268,265,265,266,267,267,267,264,264,264,268,268,265,265,265,266,267,264,268,265,266,267,264,268,265,267,264,268,265,266,267,264,268,265,266,267,264,268,265,266,267,264,268,265,266,267,264,268,265,266,267,264,268,265,266,267,264,268,265,269,270,271,272,273,274,275,276,276,276,276,276,0,276,276,276,276,276,0,276,0,276,277,276,277,276,276,276,277,276,277,276,277,277,276,276,277,277,277,276,276,277,276,276,276,276,277,276,277,276,276,0,277,276,276,276,277,276,277,276,277,276,278,279,280,281,282,283,284,285,285,286,285,285,0,0,285,286,286,285,286,285,286,285,286,285,286,285,286,285,286,286,285,286,285,286,286,285,285,286,285,286,285,286,285,286,285,286,285,286,286,286,286,285,285,286,285,286,285,286,285,287,288,289],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[["ciphersuite",3]],["bool",15]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],null,[[],["usize",15]],[[]],[[],["ciphersuitename",4]],[[["ciphersuitename",4]],["result",4,[["configerror",4]]]],[[],["result",4]],null,[[],["signaturescheme",4]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[]],[[]],[[],["ciphersuitename",4]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[["ciphersuitename",4]],["bool",15]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[]],[[],["result",4]],[[],["result",4,[["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["usize",15]],[[]],[[],["string",3]],[[["u16",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[],["hashreference",3]],[[]],[[["hashreference",3]],["ordering",4]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[["hashreference",3]],["bool",15]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[]],[[["hashreference",3]],["bool",15]],[[["ciphersuite",3]],["result",4,[["cryptoerror",4]]]],[[["hashreference",3]],["option",4,[["ordering",4]]]],[[],["result",4]],[[],["result",4,[["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["usize",15]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,[[["signature",3]]],[[["credentialbundle",3]],["result",4,[["libraryerror",3]]]],[[],["signature",3]],[[],["result",4,[["vec",3,[["u8",15]]],["error",4]]]],[[],["result",4,[["vec",3,[["u8",15]]],["error",4]]]],[[["credential",3]],["result",4,[["credentialerror",4]]]],[[["credential",3]],["result",4,[["credentialerror",4]]]],[[["signaturepublickey",3]],["result",4,[["credentialerror",4]]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[["ciphersuitename",4]],["result",4,[["ciphersuite",3],["configerror",4]]]],[[],["config",3]],[[],["protocolversion",4]],[[]],[[]],[[["protocolversion",4]],["ordering",4]],[[]],[[],["u64",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["config",3]],["bool",15]],[[["protocolversion",4]],["bool",15]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["u64",15]],[[["config",3]],["bool",15]],[[["protocolversion",4]],["option",4,[["ordering",4]]]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["usize",15]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[["u8",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["configerror",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["configerror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[],["option",4,[["error",8]]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["credentialerror",4]],[[],["credentialtype",4]],[[],["certificate",3]],[[],["mlscredentialtype",4]],[[],["credential",3]],[[],["basiccredential",3]],[[],["credentialbundle",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["credential",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["credentialerror",4]],["bool",15]],[[["credentialtype",4]],["bool",15]],[[["certificate",3]],["bool",15]],[[["mlscredentialtype",4]],["bool",15]],[[["credential",3]],["bool",15]],[[],["bool",15]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["libraryerror",3]]],[[]],[[]],[[]],[[]],[[["mlscredentialtype",4]]],[[]],[[]],[[],["result",4]],[[["vec",3,[["u8",15]]],["signaturekeypair",3]]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["credentialerror",4]],["bool",15]],[[["certificate",3]],["bool",15]],[[["mlscredentialtype",4]],["bool",15]],[[["credential",3]],["bool",15]],[[["vec",3,[["u8",15]]],["credentialtype",4],["signaturescheme",4]],["result",4,[["credentialerror",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["signaturepublickey",3]],[[],["signaturescheme",4]],[[],["option",4,[["error",8]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["result",4,[["vec",3,[["u8",15]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[["u16",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["signature",3]],["result",4,[["credentialerror",4]]]],[[["signature",3]],["result",4,[["credentialerror",4]]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["libraryerror",3]],[[],["errorstring",3]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["libraryerror",3]],["bool",15]],[[["errorstring",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["string",3]]],[[["str",15]]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["libraryerror",3]],["bool",15]],[[["errorstring",3]],["bool",15]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4,[["capabilitiesextension",3],["extensionerror",4]]]],[[],["result",4,[["externalkeyidextension",3],["extensionerror",4]]]],[[],["result",4,[["lifetimeextension",3],["extensionerror",4]]]],[[],["result",4,[["parenthashextension",3],["extensionerror",4]]]],[[],["result",4,[["ratchettreeextension",3],["extensionerror",4]]]],[[],["result",4,[["requiredcapabilitiesextension",3],["extensionerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["capabilitiesextension",3]],[[],["externalkeyidextension",3]],[[],["lifetimeextension",3]],[[],["parenthashextension",3]],[[],["ratchettreeextension",3]],[[],["requiredcapabilitiesextension",3]],[[],["extensiontype",4]],[[],["extension",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["extensiontype",4]],["ordering",4]],[[],["ordering",4]],[[]],[[],["externalkeyidextension",3]],[[]],[[],["parenthashextension",3]],[[],["ratchettreeextension",3]],[[],["requiredcapabilitiesextension",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["capabilitiesextension",3]],["bool",15]],[[["externalkeyidextension",3]],["bool",15]],[[["lifetimeextension",3]],["bool",15]],[[["parenthashextension",3]],["bool",15]],[[["ratchettreeextension",3]],["bool",15]],[[["requiredcapabilitiesextension",3]],["bool",15]],[[["extensiontype",4]],["bool",15]],[[["extension",4]],["bool",15]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],null,[[],["extensiontype",4]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["capabilitiesextension",3]],["bool",15]],[[["externalkeyidextension",3]],["bool",15]],[[["lifetimeextension",3]],["bool",15]],[[["parenthashextension",3]],["bool",15]],[[["ratchettreeextension",3]],["bool",15]],[[["requiredcapabilitiesextension",3]],["bool",15]],[[["extension",4]],["bool",15]],[[["option",4],["option",4],["option",4],["option",4]]],[[]],[[["u64",15]]],[[]],[[["vec",3,[["option",4,[["node",4]]]]]]],[[]],[[["extensiontype",4]],["option",4,[["ordering",4]]]],[[],["option",4,[["ordering",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["u16",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["extensionerror",4]],[[],["lifetimeextensionerror",4]],[[],["capabilitiesextensionerror",4]],[[],["keypackageiderror",4]],[[],["parenthasherror",4]],[[],["ratchettreeerror",4]],[[],["invalidextensionerror",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["extensionerror",4]],["bool",15]],[[["lifetimeextensionerror",4]],["bool",15]],[[["capabilitiesextensionerror",4]],["bool",15]],[[["keypackageiderror",4]],["bool",15]],[[["parenthasherror",4]],["bool",15]],[[["ratchettreeerror",4]],["bool",15]],[[["invalidextensionerror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["invalidextensionerror",4]]],[[["keypackageiderror",4]]],[[["cryptoerror",4]]],[[["configerror",4]]],[[["errorstring",3]]],[[["capabilitiesextensionerror",4]]],[[["tlscodecerror",4]]],[[["ratchettreeerror",4]]],[[["lifetimeextensionerror",4]]],[[]],[[["parenthasherror",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["extensionerror",4]],["bool",15]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mlsmessagein",3]],[[],["mlsmessageout",3]],[[],["wireformat",4]],[[]],[[]],[[]],[[],["contenttype",4]],[[],["contenttype",4]],[[],["contenttype",4]],[[["treesync",3]],["result",4,[["credential",3],["validationerror",4]]]],[[],["option",4,[["credential",3]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["groupepoch",3]],[[],["groupepoch",3]],[[],["groupepoch",3]],[[["mlsmessageout",3]],["bool",15]],[[["applicationmessage",3]],["bool",15]],[[["wireformat",4]],["bool",15]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["mlsmessageout",3]]],[[]],[[]],[[]],[[]],[[]],[[["outgoingwireformatpolicy",4]]],[[],["groupid",3]],[[],["groupid",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[["mlsmessageout",3]],["bool",15]],[[["applicationmessage",3]],["bool",15]],[[],["sender",3]],[[],["sender",3]],[[],["sender",3]],[[],["result",4]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["result",4,[["vec",3,[["u8",15]]],["mlsmessageerror",4]]]],[[],["result",4,[["vec",3,[["u8",15]]],["mlsmessageerror",4]]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["mlsmessageerror",4]]]],[[],["result",4,[["mlsmessageerror",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["wireformat",4]],[[],["wireformat",4]],[[],["wireformat",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],["result",4,[["mlsgrouperror",4]]]],[[],["addproposal",3]],[[]],[[]],[[],["u64",15]],[[],["vec",3,[["u8",15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["ciphersuite",3]],[[],["result",4,[["mlsgrouperror",4]]]],[[],["innerstate",4]],[[],["queuedproposal",3]],[[],["groupid",3]],[[],["groupepoch",3]],[[]],[[]],[[]],[[]],[[],["result",4,[["mlsgrouperror",4]]]],null,[[],["mlsgroupconfig",3]],[[],["result",4,[["mlsmessageout",3],["mlsgrouperror",4]]]],[[],["result",4,[["credential",3],["mlsgrouperror",4]]]],[[],["proposalstore",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["groupepoch",3]],[[["innerstate",4]],["bool",15]],[[["proposalstore",3]],["bool",15]],[[["queuedproposal",3]],["bool",15]],[[["groupid",3]],["bool",15]],[[["groupepoch",3]],["bool",15]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],null,null,[[],["result",4,[["publicgroupstate",3],["mlsgrouperror",4]]]],[[],["vec",3,[["option",4,[["node",4]]]]]],[[["str",15],["usize",15]],["result",4,[["vec",3,[["u8",15]]],["mlsgrouperror",4]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["pendingcommitstate",4]]],[[]],[[]],[[]],[[["groupepoch",3]],["option",4,[["resumptionsecret",3]]]],[[],["groupid",3]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["option",4],["verifiablepublicgroupstate",3],["mlsgroupconfig",3],["credentialbundle",3],["proposalstore",3]],["result",4,[["mlsgrouperror",4]]]],[[],["option",4,[["keypackageref",6]]]],[[],["result",4,[["mlsmessageout",3],["mlsgrouperror",4]]]],[[["read",8]],["result",4,[["mlsgroup",3],["error",3]]]],[[],["result",4,[["vec",3,[["credential",3]]],["mlsgrouperror",4]]]],[[],["result",4,[["mlsgrouperror",4]]]],[[["stagedcommit",3]],["result",4,[["mlsgrouperror",4]]]],[[["proposalstore",3]],["bool",15]],[[["queuedproposal",3]],["bool",15]],[[["groupid",3]],["bool",15]],[[["groupepoch",3]],["bool",15]],[[["mlsgroupconfig",3],["groupid",3]],["result",4,[["mlsgrouperror",4]]]],[[["mlsgroupconfig",3],["welcome",3],["option",4,[["vec",3,[["option",4,[["node",4]]]]]]]],["result",4,[["mlsgrouperror",4]]]],[[["mlsmessagein",3]],["result",4,[["unverifiedmessage",3],["mlsgrouperror",4]]]],[[],["option",4,[["ordering",4]]]],[[],["option",4,[["stagedcommit",3]]]],[[]],[[["unverifiedmessage",3],["option",4,[["signaturepublickey",3]]]],["result",4,[["processedmessage",4],["mlsgrouperror",4]]]],null,[[],["proposal",4]],[[["keypackage",3]],["result",4,[["mlsmessageout",3],["mlsgrouperror",4]]]],[[["keypackageref",6]],["result",4,[["mlsmessageout",3],["mlsgrouperror",4]]]],[[["option",4,[["keypackagebundle",3]]]],["result",4,[["mlsmessageout",3],["mlsgrouperror",4]]]],[[],["presharedkeyproposal",3]],[[]],[[],["result",4,[["mlsgrouperror",4]]]],[[],["removeproposal",3]],[[]],[[],["result",4,[["error",3]]]],[[],["bool",15]],[[["option",4,[["keypackagebundle",3]]]],["result",4,[["mlsgrouperror",4]]]],[[],["sender",3]],[[],["sender",3]],[[],["sender",3]],[[],["sender",3]],[[],["sender",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[["mlsgroupconfig",3]]],[[],["innerstate",4]],[[["queuedproposal",3]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["vec",3,[["u8",15]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["updateproposal",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mlsgroupconfig",3]],[[],["mlsgroupconfigbuilder",3]],[[],["mlsgroupconfig",3]],[[],["incomingwireformatpolicy",4]],[[],["outgoingwireformatpolicy",4]],[[],["wireformatpolicy",3]],[[]],[[]],[[]],[[]],[[],["mlsgroupconfig",3]],[[],["mlsgroupconfigbuilder",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["vec",3]],[[["usize",15]]],[[],["wireformatpolicy",3]],[[["usize",15]]],[[],["wireformatpolicy",3]],[[["usize",15]]],[[],["wireformatpolicy",3]],[[["usize",15]]],[[["usize",15]]],[[],["wireformatpolicy",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["mlsgroupconfig",3]],["bool",15]],[[["incomingwireformatpolicy",4]],["bool",15]],[[["outgoingwireformatpolicy",4]],["bool",15]],[[["wireformatpolicy",3]],["bool",15]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["incomingwireformatpolicy",4]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[["usize",15]]],[[["mlsgroupconfig",3]],["bool",15]],[[["wireformatpolicy",3]],["bool",15]],[[]],[[["outgoingwireformatpolicy",4],["incomingwireformatpolicy",4]]],[[],["usize",15]],[[["usize",15]]],[[],["outgoingwireformatpolicy",4]],[[],["usize",15]],[[["usize",15]]],[[],["senderratchetconfiguration",3]],[[["senderratchetconfiguration",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["incomingwireformatpolicy",4]]],[[["outgoingwireformatpolicy",4]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["bool",15]],[[["bool",15]]],[[],["wireformatpolicy",3]],[[["wireformatpolicy",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mlsgrouperror",4]],[[],["emptyinputerror",4]],[[],["useaftereviction",4]],[[],["pendingproposalserror",4]],[[],["invalidmessageerror",4]],[[],["coregrouperror",4]],[[],["welcomeerror",4]],[[],["externalcommiterror",4]],[[],["stagecommiterror",4]],[[],["createcommiterror",4]],[[],["exportererror",4]],[[],["queuedproposalerror",4]],[[],["proposalqueueerror",4]],[[],["creationproposalqueueerror",4]],[[],["framingvalidationerror",4]],[[],["proposalvalidationerror",4]],[[],["externalcommitvalidationerror",4]],[[],["interimtranscripthasherror",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["mlsgrouperror",4]],["bool",15]],[[["emptyinputerror",4]],["bool",15]],[[["useaftereviction",4]],["bool",15]],[[["pendingproposalserror",4]],["bool",15]],[[["invalidmessageerror",4]],["bool",15]],[[["coregrouperror",4]],["bool",15]],[[["welcomeerror",4]],["bool",15]],[[["externalcommiterror",4]],["bool",15]],[[["stagecommiterror",4]],["bool",15]],[[["createcommiterror",4]],["bool",15]],[[["exportererror",4]],["bool",15]],[[["queuedproposalerror",4]],["bool",15]],[[["proposalqueueerror",4]],["bool",15]],[[["creationproposalqueueerror",4]],["bool",15]],[[["framingvalidationerror",4]],["bool",15]],[[["proposalvalidationerror",4]],["bool",15]],[[["externalcommitvalidationerror",4]],["bool",15]],[[["interimtranscripthasherror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["createcommiterror",4]]],[[["queuedproposalerror",4]]],[[["welcomeerror",4]]],[[]],[[["cryptoerror",4]]],[[["tlscodecerror",4]]],[[["treesyncerror",4]]],[[["credentialerror",4]]],[[["invalidmessageerror",4]]],[[["emptyinputerror",4]]],[[["exportererror",4]]],[[["pendingproposalserror",4]]],[[["useaftereviction",4]]],[[["coregrouperror",4]]],[[["libraryerror",3]]],[[["configerror",4]]],[[]],[[]],[[]],[[]],[[["coregrouperror",4]]],[[["stagecommiterror",4]]],[[["stagecommiterror",4]]],[[["tlscodecerror",4]]],[[["queuedproposalerror",4]]],[[]],[[["interimtranscripthasherror",4]]],[[["cryptoerror",4]]],[[["externalcommitvalidationerror",4]]],[[["proposalvalidationerror",4]]],[[["framingvalidationerror",4]]],[[["libraryerror",3]]],[[["welcomeerror",4]]],[[["externalcommiterror",4]]],[[["extensionerror",4]]],[[["createcommiterror",4]]],[[["configerror",4]]],[[["exportererror",4]]],[[["proposalqueueerror",4]]],[[["keypackageerror",4]]],[[["keyscheduleerror",4]]],[[["psksecreterror",4]]],[[["credentialerror",4]]],[[["treesyncerror",4]]],[[]],[[["cryptoerror",4]]],[[["interimtranscripthasherror",4]]],[[["keypackageerror",4]]],[[["extensionerror",4]]],[[["psksecreterror",4]]],[[["treesyncerror",4]]],[[["queuedproposalerror",4]]],[[["configerror",4]]],[[["tlscodecerror",4]]],[[["keyscheduleerror",4]]],[[["configerror",4]]],[[["queuedproposalerror",4]]],[[]],[[["credentialerror",4]]],[[["tlscodecerror",4]]],[[["keyscheduleerror",4]]],[[["treesyncerror",4]]],[[["extensionerror",4]]],[[["keypackageerror",4]]],[[["cryptoerror",4]]],[[]],[[["tlscodecerror",4]]],[[["keyscheduleerror",4]]],[[]],[[]],[[["proposalerror",4]]],[[["libraryerror",3]]],[[["tlscodecerror",4]]],[[]],[[]],[[["queuedproposalerror",4]]],[[]],[[["libraryerror",3]]],[[["queuedproposalerror",4]]],[[]],[[]],[[]],[[["cryptoerror",4]]],[[["tlscodecerror",4]]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["mlsgrouperror",4]],["bool",15]],[[["invalidmessageerror",4]],["bool",15]],[[["coregrouperror",4]],["bool",15]],[[["welcomeerror",4]],["bool",15]],[[["externalcommiterror",4]],["bool",15]],[[["stagecommiterror",4]],["bool",15]],[[["queuedproposalerror",4]],["bool",15]],[[["proposalqueueerror",4]],["bool",15]],[[["creationproposalqueueerror",4]],["bool",15]],[[["interimtranscripthasherror",4]],["bool",15]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["extension",4]]],[[["extension",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["keypackageerror",4]]]],[[],["ciphersuitename",4]],[[],["keypackagepayload",3]],[[],["keypackage",3]],[[],["keypackagebundle",3]],[[]],[[]],[[]],[[],["credential",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["keypackagepayload",3]],["bool",15]],[[],["bool",15]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],null,[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["keypackagebundle",3]]],[[]],[[["keypackage",3]]],[[]],[[]],[[["secret",3],["keypackage",3]],["result",4,[["cryptoerror",4]]]],[[],["result",4]],[[["keypackagepayload",3],["signature",3]]],[[["keypackagebundlepayload",3],["signature",3]]],[[],["result",4,[["keypackageref",6],["keypackageerror",4]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["result",4,[["keypackageerror",4]]]],[[],["keypackage",3]],[[],["secret",3]],[[["keypackagepayload",3]],["bool",15]],[[["credentialbundle",3],["vec",3,[["extension",4]]]],["result",4,[["keypackageerror",4]]]],[[["credentialbundle",3],["vec",3,[["extension",4]]],["hpkekeypair",3],["secret",3]],["result",4,[["keypackageerror",4]]]],[[["protocolversion",4],["credentialbundle",3],["vec",3,[["extension",4]]]],["result",4,[["keypackageerror",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["signature",3]],[[],["result",4,[["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["usize",15]],[[],["usize",15]],[[],["result",4,[["vec",3,[["u8",15]]]]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",4,[["vec",3,[["u8",15]]],["error",4]]]],[[],["result",4,[["vec",3,[["u8",15]]],["error",4]]]],[[],["result",4,[["vec",3,[["u8",15]]],["error",4]]]],[[],["result",4,[["keypackageerror",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["keypackageerror",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["keypackageerror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["cryptoerror",4]]],[[["tlscodecerror",4]]],[[["credentialerror",4]]],[[["configerror",4]]],[[["extensionerror",4]]],[[["libraryerror",3]]],[[]],[[],["usize",15]],[[]],[[["keypackageerror",4]],["bool",15]],[[],["option",4,[["error",8]]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["welcome",3]],[[],["encryptedgroupsecrets",3]],[[],["commit",3]],[[],["confirmationtag",3]],[[],["pathsecreterror",4]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[["welcome",3]],["bool",15]],[[["encryptedgroupsecrets",3]],["bool",15]],[[["commit",3]],["bool",15]],[[["confirmationtag",3]],["bool",15]],[[["pathsecreterror",4]],["bool",15]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["cryptotraiterror",4]]],[[],["bool",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[["welcome",3]],["bool",15]],[[["encryptedgroupsecrets",3]],["bool",15]],[[["commit",3]],["bool",15]],[[["confirmationtag",3]],["bool",15]],[[["pathsecreterror",4]],["bool",15]],null,[[],["option",4]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["option",4,[["error",8]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["proposalerror",4]],[[],["proposalorreftypeerror",4]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["proposalerror",4]],["bool",15]],[[["proposalorreftypeerror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["cryptoerror",4]]],[[["tlscodecerror",4]]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["proposalerror",4]],["bool",15]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["proposaltype",4]],[[],["proposalorreftype",4]],[[],["proposalorref",4]],[[],["proposal",4]],[[],["addproposal",3]],[[],["updateproposal",3]],[[],["removeproposal",3]],[[],["presharedkeyproposal",3]],[[],["reinitproposal",3]],[[],["externalinitproposal",3]],[[],["keypackageid",3]],[[],["messagerange",3]],[[],["appackproposal",3]],[[],["groupcontextextensionproposal",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["proposaltype",4]],["bool",15]],[[["proposalorreftype",4]],["bool",15]],[[["proposalorref",4]],["bool",15]],[[["proposal",4]],["bool",15]],[[["addproposal",3]],["bool",15]],[[["updateproposal",3]],["bool",15]],[[["removeproposal",3]],["bool",15]],[[["presharedkeyproposal",3]],["bool",15]],[[["reinitproposal",3]],["bool",15]],[[["externalinitproposal",3]],["bool",15]],[[["keypackageid",3]],["bool",15]],[[["messagerange",3]],["bool",15]],[[["appackproposal",3]],["bool",15]],[[["groupcontextextensionproposal",3]],["bool",15]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vec",3,[["u8",15]]]]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["keypackage",3]],[[],["keypackage",3]],[[["proposalorref",4]],["bool",15]],[[["proposal",4]],["bool",15]],[[["addproposal",3]],["bool",15]],[[["updateproposal",3]],["bool",15]],[[["removeproposal",3]],["bool",15]],[[["presharedkeyproposal",3]],["bool",15]],[[["reinitproposal",3]],["bool",15]],[[["externalinitproposal",3]],["bool",15]],[[["keypackageid",3]],["bool",15]],[[["messagerange",3]],["bool",15]],[[["appackproposal",3]],["bool",15]],[[["groupcontextextensionproposal",3]],["bool",15]],[[],["keypackageref",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[["u16",15]],["result",4]],[[],["result",4]],[[["u8",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["verifiablepublicgroupstate",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["publicgroupstate",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["publicgroupstate",3]],["bool",15]],[[],["signature",3]],[[],["result",4,[["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["usize",15]],[[],["usize",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",4,[["vec",3,[["u8",15]]],["error",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["psktype",4]],[[],["externalpsk",3]],[[],["reinitpsk",3]],[[],["branchpsk",3]],[[],["psk",4]],[[],["presharedkeyid",3]],[[],["senderratchetconfiguration",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["psktype",4]],["bool",15]],[[["externalpsk",3]],["bool",15]],[[["reinitpsk",3]],["bool",15]],[[["branchpsk",3]],["bool",15]],[[["psk",4]],["bool",15]],[[["presharedkeyid",3]],["bool",15]],[[["senderratchetconfiguration",3]],["bool",15]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["psk",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[["externalpsk",3]],["bool",15]],[[["reinitpsk",3]],["bool",15]],[[["branchpsk",3]],["bool",15]],[[["psk",4]],["bool",15]],[[["presharedkeyid",3]],["bool",15]],[[["senderratchetconfiguration",3]],["bool",15]],[[["vec",3,[["u8",15]]]]],[[["secret",3]],["result",4,[["cryptoerror",4]]]],[[["ciphersuite",3],["psk",4]],["result",4,[["cryptoerror",4]]]],[[["u32",15],["u32",15]]],[[],["u32",15]],[[],["psk",4]],[[],["groupepoch",3]],[[],["groupepoch",3]],[[],["groupid",3]],[[],["groupid",3]],[[]],[[]],[[]],[[],["psktype",4]],[[],["secret",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["result",4,[["vec",3,[["u8",15],["global",3]]],["error",4]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["result",4,[["vec",3,[["u8",15]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["resumptionsecret",3]],[[]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["errorstate",4]],[[],["keyscheduleerror",4]],[[],["exportererror",4]],[[],["psksecreterror",4]],[[],["membershipkeyerror",4]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["errorstate",4]],["bool",15]],[[["keyscheduleerror",4]],["bool",15]],[[["exportererror",4]],["bool",15]],[[["psksecreterror",4]],["bool",15]],[[["membershipkeyerror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["errorstate",4]]],[[["cryptoerror",4]]],[[["cryptoerror",4]]],[[["tlscodecerror",4]]],[[]],[[["cryptoerror",4]]],[[]],[[]],[[["cryptoerror",4]]],[[["tlscodecerror",4]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[["keyscheduleerror",4]],["bool",15]],[[["exportererror",4]],["bool",15]],[[["psksecreterror",4]],["bool",15]],[[["membershipkeyerror",4]],["bool",15]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["treesyncerror",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["treesyncerror",4]],["bool",15]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[],["vec",3,[["option",4,[["node",4]]]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["cryptoerror",4]]],[[["pathsecreterror",4]]],[[["nodeerror",4]]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["treesyncerror",4]],["bool",15]],null,[[],["result",4]],[[],["option",4,[["error",8]]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["node",4]],[[],["nodeerror",4]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["node",4]],["bool",15]],[[["nodeerror",4]],["bool",15]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["node",4]],["bool",15]],[[["nodeerror",4]],["bool",15]],[[],["result",4]],[[],["option",4,[["error",8]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["usize",15],["error",4]]]],[[],["usize",15]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null],"p":[[3,"Ciphersuite"],[4,"CiphersuiteName"],[3,"HashReference"],[8,"VerifiedStruct"],[8,"Signable"],[8,"SignedStruct"],[8,"Verifiable"],[4,"ProtocolVersion"],[3,"Config"],[4,"ConfigError"],[4,"CredentialType"],[4,"MlsCredentialType"],[4,"CredentialError"],[3,"Certificate"],[3,"Credential"],[3,"BasicCredential"],[3,"CredentialBundle"],[13,"LibraryError"],[13,"Basic"],[13,"X509"],[3,"LibraryError"],[3,"ErrorString"],[4,"ExtensionType"],[4,"Extension"],[3,"ExternalKeyIdExtension"],[3,"CapabilitiesExtension"],[3,"LifetimeExtension"],[3,"ParentHashExtension"],[3,"RatchetTreeExtension"],[3,"RequiredCapabilitiesExtension"],[13,"Capabilities"],[13,"ExternalKeyId"],[13,"LifeTime"],[13,"ParentHash"],[13,"RatchetTree"],[13,"RequiredCapabilities"],[4,"ExtensionError"],[4,"InvalidExtensionError"],[4,"CapabilitiesExtensionError"],[4,"LifetimeExtensionError"],[4,"KeyPackageIdError"],[4,"ParentHashError"],[4,"RatchetTreeError"],[13,"InvalidExtensionType"],[13,"Capabilities"],[13,"Lifetime"],[13,"KeyPackageId"],[13,"ParentHash"],[13,"RatchetTree"],[13,"CodecError"],[13,"ConfigError"],[13,"InvalidExtension"],[13,"CryptoError"],[4,"ProcessedMessage"],[4,"UnverifiedContextMessage"],[4,"WireFormat"],[3,"UnverifiedMessage"],[3,"DecryptedMessage"],[3,"UnverifiedGroupMessage"],[3,"UnverifiedPreconfiguredMessage"],[3,"VerifiedMemberMessage"],[3,"VerifiedExternalMessage"],[3,"MlsMessageIn"],[3,"MlsMessageOut"],[3,"ApplicationMessage"],[13,"ApplicationMessage"],[13,"ProposalMessage"],[13,"StagedCommitMessage"],[13,"Group"],[13,"Preconfigured"],[3,"GroupEpoch"],[4,"EmptyInputError"],[4,"IncomingWireFormatPolicy"],[4,"OutgoingWireFormatPolicy"],[4,"InnerState"],[4,"InvalidMessageError"],[4,"MlsGroupError"],[4,"UseAfterEviction"],[4,"PendingProposalsError"],[4,"PendingCommitState"],[4,"MlsGroupState"],[3,"MlsGroup"],[3,"QueuedAddProposal"],[3,"StagedCommit"],[3,"GroupId"],[3,"QueuedRemoveProposal"],[3,"QueuedUpdateProposal"],[3,"QueuedPskProposal"],[3,"ProposalStore"],[3,"QueuedProposal"],[13,"InvalidCiphertext"],[13,"CommitError"],[13,"GroupError"],[13,"LibraryError"],[13,"Config"],[13,"Group"],[13,"CreateCommit"],[13,"UseAfterEviction"],[13,"PendingProposalsExist"],[13,"Exporter"],[13,"EmptyInput"],[13,"InvalidMessage"],[13,"CredentialError"],[13,"TreeSyncError"],[13,"ValidationError"],[13,"TlsCodecError"],[13,"CryptoError"],[13,"QueuedProposalError"],[13,"WelcomeError"],[13,"PendingCommit"],[13,"Member"],[13,"External"],[3,"MlsGroupConfig"],[3,"MlsGroupConfigBuilder"],[3,"WireFormatPolicy"],[3,"ALL_VALID_WIRE_FORMAT_POLICIES"],[3,"PURE_PLAINTEXT_WIRE_FORMAT_POLICY"],[3,"PURE_CIPHERTEXT_WIRE_FORMAT_POLICY"],[3,"MIXED_PLAINTEXT_WIRE_FORMAT_POLICY"],[3,"MIXED_CIPHERTEXT_WIRE_FORMAT_POLICY"],[4,"ProposalQueueError"],[4,"CreationProposalQueueError"],[4,"CreateCommitError"],[4,"WelcomeError"],[4,"CoreGroupError"],[4,"ExternalCommitError"],[4,"StageCommitError"],[4,"InterimTranscriptHashError"],[4,"ProposalValidationError"],[4,"ExternalCommitValidationError"],[4,"ExporterError"],[4,"QueuedProposalError"],[4,"FramingValidationError"],[13,"LibraryError"],[13,"MlsCiphertextError"],[13,"MlsPlaintextError"],[13,"WelcomeError"],[13,"ExternalCommitError"],[13,"StageCommitError"],[13,"CreateCommitError"],[13,"ConfigError"],[13,"ExporterError"],[13,"ProposalQueueError"],[13,"CodecError"],[13,"KeyScheduleError"],[13,"PskSecretError"],[13,"CredentialError"],[13,"TreeError"],[13,"TreeSyncError"],[13,"TreeSyncDiffError"],[13,"TreeKemError"],[13,"KeyPackageError"],[13,"ExtensionError"],[13,"ValidationError"],[13,"FramingValidationError"],[13,"ProposalValidationError"],[13,"ExternalCommitValidationError"],[13,"CryptoError"],[13,"InterimTranscriptHashError"],[13,"QueuedProposalError"],[13,"SenderError"],[13,"LibraryError"],[13,"NotAProposal"],[13,"SenderError"],[13,"VerificationError"],[13,"ConfigError"],[13,"CodecError"],[13,"KeyScheduleError"],[13,"TreeSyncError"],[13,"TreeSyncDiffError"],[13,"ExtensionError"],[13,"KeyPackageError"],[13,"CryptoError"],[13,"ProposalError"],[13,"CodecError"],[13,"CryptoError"],[13,"NotAProposal"],[13,"SenderError"],[13,"LibraryError"],[13,"ProposalError"],[13,"TlsCodecError"],[13,"PlaintextSignatureFailure"],[13,"CodecError"],[13,"KeyScheduleError"],[13,"ConfigError"],[13,"InvalidRatchetTree"],[13,"ParentHashMismatch"],[13,"CodecError"],[13,"KeyScheduleError"],[13,"PskSecretError"],[13,"TreeSyncError"],[13,"ExtensionError"],[13,"KeyPackageError"],[13,"InterimTranscriptHashError"],[13,"CryptoError"],[13,"ProposalError"],[3,"KeyPackageBundlePayload"],[3,"KeyPackagePayload"],[3,"KeyPackage"],[3,"KeyPackageBundle"],[4,"KeyPackageError"],[13,"LibraryError"],[13,"ExtensionError"],[13,"ConfigError"],[13,"CredentialError"],[13,"CodecError"],[13,"CryptoError"],[4,"PathSecretError"],[3,"Welcome"],[3,"EncryptedGroupSecrets"],[3,"Commit"],[3,"ConfirmationTag"],[3,"PathSecret"],[13,"DecryptionError"],[4,"ProposalError"],[4,"ProposalOrRefTypeError"],[13,"CodecError"],[13,"CryptoError"],[4,"ProposalType"],[4,"Proposal"],[4,"ProposalOrRefType"],[4,"ProposalOrRef"],[3,"AddProposal"],[3,"UpdateProposal"],[3,"RemoveProposal"],[3,"PreSharedKeyProposal"],[3,"ReInitProposal"],[3,"ExternalInitProposal"],[3,"KeyPackageId"],[3,"MessageRange"],[3,"AppAckProposal"],[3,"GroupContextExtensionProposal"],[13,"Add"],[13,"Update"],[13,"Remove"],[13,"PreSharedKey"],[13,"ReInit"],[13,"ExternalInit"],[13,"AppAck"],[13,"GroupContextExtensions"],[13,"Proposal"],[13,"Reference"],[3,"PublicGroupState"],[3,"VerifiablePublicGroupState"],[4,"PskType"],[4,"Psk"],[3,"ExternalPsk"],[3,"PskBundle"],[3,"ReinitPsk"],[3,"BranchPsk"],[3,"PreSharedKeyId"],[3,"PreSharedKeys"],[3,"SenderRatchetConfiguration"],[8,"TlsDeserializeTrait"],[8,"TlsSerializeTrait"],[8,"TlsSizeTrait"],[13,"External"],[13,"Reinit"],[13,"Branch"],[3,"ConfirmationKey"],[3,"MembershipKey"],[3,"ResumptionSecret"],[3,"SenderDataSecret"],[4,"ExporterError"],[4,"MembershipKeyError"],[4,"ErrorState"],[4,"KeyScheduleError"],[4,"PskSecretError"],[13,"CodecError"],[13,"CryptoError"],[13,"InvalidState"],[13,"CryptoError"],[13,"CodecError"],[13,"CryptoError"],[13,"CryptoError"],[4,"TreeSyncError"],[3,"TreeSync"],[13,"BinaryTreeError"],[13,"TreeSyncNodeError"],[13,"NodeTypeError"],[13,"TreeSyncDiffError"],[13,"DerivationError"],[13,"SenderError"],[13,"CryptoError"],[4,"NodeError"],[4,"Node"],[13,"LeafNode"],[13,"ParentNode"],[13,"ParentHashError"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};